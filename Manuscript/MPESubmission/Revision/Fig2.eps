%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig2.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Thomas Guillerme
%%CreationDate: 2/8/15
%%BoundingBox: 0 0 198 296
%%HiResBoundingBox: 0 0 197.4941 295.3374
%%CropBox: 0 0 197.4941 295.3374
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 88 128 8%%BeginData: 10590 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD11FF7DFD1BFF7DA8FD1CFF7DA8FD1BFFA827A8FD19FFA85252A8%FD1AFF52A8A8FD1BFF7D277DFD1AFF527DA8FD1AFF77FD1DFF52A852FD19%FFA85252FD1BFF7D777DFD56FFA8FD0DFFA8A8FFA8A8FD04FFA8A8FD15FF%A8A8FD0AFFA8A8FD0FFFA8A8FD10FFA87DFD07FF7D27527D7DFD04FFA827%FD15FF7DFD0BFF527DFD0FFFA87DFD10FFA827FD06FFA87DA8A87DA8FD04%FF7D7DA8FD14FF7DA8FD0AFF7D7DFD0FFFA87DFD10FF7D7DA8FD06FF7DA8%7DFF7DFD04FFA87DA8FD14FF7DFD0BFF7DA8A8FD0FFF7DFD10FFA87DA8FD%06FFA827A8A8A8FD04FF7DA87DFD14FFA8A8FD09FFA8A87DA8FD0EFFA87D%FD10FF7DA87DFD06FF52A8A8FF7DFD04FFA8A8A8FD14FF7DFD0BFF7DA8A8%FD0FFF7DFD10FFA8A8A8FD05FFA85252A8A8A8FD04FF7DFF7DFD14FF7DA8%FD09FFFD04A8FD0EFFA8A8FD10FF7DA87DFD06FF27527DFF7DFFFFFFA8A8%FF7DFD14FF7DFD0AFFA8A8FF7DFD0FFF7DFD0FFFA8A8FFA8FD06FF7D27A8%A8A8FFFFFFA87DFF7DFD14FF7DA8FD09FF7DA8A87DFD0EFFA8A8FD0FFFA8%7DFF7DFD06FF7D52A8FF7DFFFFFFA8A8FFA8FD14FF7DFD0AFFA8A8FF7DFD%0EFFA87DFD0FFFA8A8FF7DA8FD04FFA8A8527DA8A8FFFFFFA8A8FF7DA8FD%13FF7DA8FD09FF7DFFFF7DA8FD0DFFA87DFD0FFFA87DFF7DA8FD05FF2727%527DA8FFFFFF7DFFFFA8A8FD13FF7DFD0AFFA8FFFF7DFD0FFF7DFD0FFF7D%FFFFA87DFD04FFA87D7D7DA8A8FFFFFF7DFFFFA8A8FD13FFA8A8FD09FF7D%FFFF7DA8FD0DFFA87DFD0FFF7DA8FFA87DFD05FF7D7DFFFF7DFFFFFF7DFF%FFFF7DFD13FF7DFD09FFA87DFFFFA8A8FD0EFF7DFD0FFF7DFFFFFF7DFD04%FFA85252A8A8A8FFFFA87DFFFFFF7DA8FD12FF7DA8FD08FFA87DFFFFA87D%FD0DFFA8A8FD0EFFA87DFFFFA87DA8FD04FF5252A8FF7DFFFFA87DFFFFFF%7DFD13FF7DFD09FF7DA8FFFFFF7DFD0EFF7DFD0EFFA87DFFFFFF7DFD04FF%A85227A8A8A8FFFF7DA8FFFFFF7DA8FD12FF7DA8FD08FF7DA8FFFFFF7DFD%0DFFA8A8FD0EFF7DA8FFFFFFA8A8FFFFFF7D7D52FFFF7DFFFFA8A8FFFFFF%A8A8FD12FF7DFD09FF7DFD04FFA8A8FD0CFFA87DFD0EFFA8A8FFFFFFA8A8%FFFFFF7D5252A8A8A8FFFF52FD05FF52FD12FF7DA8FD07FFA87DFD04FF7D%7DFD0CFFA87DFD0EFF7DFD05FF52FD08FF7DFF7DA8FD05FFA87DFD11FF7D%FD07FFA87DFD06FF7DA8A8FD0BFF7DFD0DFF7DA8FD05FFA87DFD06FFA852%527DFD07A87D52FD0CA8FD04FF7DA8FFA8FFA8FF7D7D7DFFA8FFA8A8A8FF%527DA8FFA8A8A8FD05FFA87DFD0BA87D527DFD07A87D52A8FD05FF7DA8A8%A87DA8A8A87DFD07A87DFD04A8FFA8A8A8FFFFFFA8A87DA87DA87DA8A8A8%7DA87DA87DA87DA8A8A87DA87DA87DFD05FF7DA87DA8A8A87DA8A8A87DFD%07A87DFD06A8FD1AFF52A8A8FFA8FFFFFFA8FD05FFA8FFA8FFFFA8A8FFA8%A8A8FFFFFF7DFFFFFFA8A87DA8FD34FF7D52FD097D777D525252A8A87D52%A87D7D527D527D7D52FD047D5252527D7DFD32FFFD05527D277D27527D52%527D2752A87D274CA8A82727527D525227522727527D527D27A8FD32FFFD%04A852A8FF7DFD04A87D27A8A8A87DA8A2FFA8A87DFD05A87DA87DA8A8A8%7D52FD37FFA8FD07FF7DA8FD15FFA87DFDFCFFFD9CFF7DFD0CFFA8527DA8%FD0BFFA87D7DFD38FF7DF8A8FD0BFF52527D52FD0AFF7D527D7DA8FD37FF%77527DFD0BFF7D527D52FD0AFF52A8FD39FFA8277D27FD0BFFFD0452FD09%FFA827FD3AFF77527D527DFD0AFF7D7DFF27FD0AFF527DFD39FF52A8FF7D%52FD0AFF524C527DFD0AFFA852527DA8FD1EFFA8FD1BFFA8FD0BFFA8FD0F%FFA8FD1EFFA87DFD18FFA87DA8FD0CFFA852FD0CFFA87DFD20FF7DFD18FF%A87D7DFD0CFF7DA87DFD0BFF7D7D7DFD1EFFA8A8FD18FF7DFF7DA8FD0AFF%7DA8FF7DFD0AFFA87DFF7DFD1FFF7DFD17FFA87DFFA87DFD0AFF7DA8FF7D%A8FD09FFA87DFF7DFD1EFFA8A8FD17FFA87DFFA87DFD0AFF7DFFFFA87DFD%09FF7DA8FFA87DFD1EFF7DFD17FF7DA8FFFF7DFD09FFA8A8FFFFA8A8FD09%FF7DFFFFA8A8FD1DFFA8A8FD17FFA8A8FFFFA8A8FD08FFA87DFFFFFF7DFD%09FF7DFFFFFF7DFD1EFF7DFD17FF7DFFFFFF7DA8FD08FF7DA8FFFFFF7DA8%FD07FFA8A8FFFFFF7DFD1DFFA8A8FD16FFA87DFFFFFFA87DFD08FF7DA8FF%FFFF7DA8FD07FFA87DFFFFFF7DA8FD1DFF7DFD16FFA87DFD04FFA8FD08FF%7DFD05FF7DFD07FF7DFD04FFA8A8FD1CFFA8A8FD16FF7DA8FD04FF7DFD07%FFA87DFD04FFA87DFD07FF7DA8FFFFFFA8A8FD1DFF7DFD16FFA8A8FD04FF%7DA8FD06FFA87DFD05FF7DFD07FF7DFD05FF7DFD1CFFA8A8FD16FF7DFD05%FF7DA8FD06FF7DA8FD05FFA8A8FD05FFA87DFD05FF7DA8FD1CFF7DFD16FF%A8FD05FFA87DFD06FFA8A8FD05FF7DA8FD06FF7DFD05FF7DFD1CFFA8A8FD%16FF7DFD05FFA8A8FD06FF7DFD06FFA87DFD05FF7DA8FD05FF7DA8FD1CFF%7DFD15FFA87DFD06FF7DFD06FFA8FD06FFA87DFD05FFA8A8FD05FFA8A8FD%1BFFA8A8FD15FFA87DFD06FF7DFD05FFA87DFD07FF7DFD05FF7DA8FD05FF%A87DFD1CFF7DFD15FF7DA8FD06FF7DFD05FFA8A8FD07FFA8A8FD04FF7DFD%06FFA8A8FD1BFFA8A8FD15FFA8A8FD06FFA8A8FD04FFA87DFD07FF7DA8FD%04FF7DFD07FF7DFD1CFF7DFD15FF7DFD07FFA8A8FD04FF7DFD08FFA8A8FF%FFFFA8A8FD07FF7DA8FD1AFFA8A8FD14FFA87DA8FD06FFA87DFD04FF7DA8%FD07FFA87DFFFFFFA87DFD07FF7DA8FD1BFF7DFD15FF7DFD07FFA8A8FD04%FF7DFD09FF7DFFFFFFA8A8FD07FFA8A8FD1AFFA8A8FD14FFA87DFD08FF7D%FFFFFFA87DFD09FF7DA8FFFFA87DFD07FFA8A8FD1BFF7DFD14FFA87DFD08%FF7DA8FFFFA87DFD09FF7DA8FFFF7DA8FD08FF7DFD1AFFA87DFD14FF7DA8%FD08FF7DA8FFFFA8A8FD09FFA87DFFFF7DA8FD07FFA87DA8FD16FF7DFFFF%FF7DFD14FFA8A8FD08FFA87DFFFFA8A8FD09FFA8A8FFFF7DFD09FF7DFD17%FF7D27527DA8FD14FF7DFD09FFA87DFFFF7DFD0BFF7DFFA87DFD09FF7DA8%FD16FF7DA8A8A87DFD14FF7DFD0AFF7DFFFFA8FD0BFF7DFFA87DFD09FFA8%A8FD15FFA87D7D7DA8A8FD14FF7DFD0AFF7DA8FF7DFD0BFF7DFFA8A8FD09%FFA87DFD16FF52277DFF7DFD13FFA8A8FD0AFF7DFFA8A8FD0BFFFD04A8FD%09FFA8A8FD15FFA8777DFFA8A8FD13FFA8A8FD0AFFA8A8A87DFD0BFFA8A8%7DA8FD0AFF7DFD16FF27277DFF7DFD13FF7DA8FD0AFFFD04A8FD0CFF7DA8%FD0BFFA8A8FD14FFA85227A8A8A8FD13FF7DA8FD0BFF7D7DA8FD0CFF7D52%FD0BFF7DA8FD15FF7D52A8FF7DFD13FF7DFD0CFF7D7DFD0DFF7D7DFD0CFF%7DFD15FFA8527DA8A8FD12FFA87DFD0CFF527DFD0DFF7D7DFD0BFFA87DFD%15FF7D7D7DFF7DFD13FF7DFD0CFFA87DFD0DFF7D7DFD0CFF7DFD14FFA8FD%0452A8FD12FF7DA8FD0CFF7D7DFD0DFF7D52FD0CFF7DA8FD14FF537D7DFF%7DFD12FFA8A8FD0CFF7D7DFD0DFF5252FD0CFF7DFD15FF5327A8A8A8FD12%FF7DFD0DFF5252A8FD0CFF7D52A8FD0BFFA87DFD14FF52527DFF7DFD12FF%7DFD0DFF7D52FD0DFF527DA8FD0BFFA87DFD14FFA87DFFA8A8FD12FF7DFD%0CFFA8537DA8FD0BFF7D52527DFD0CFF7DFD14FF527DA8FF7DFD11FFA8A8%FD0CFFA87D7DA8FD0BFFA8528452FD0CFFA8A8FD12FF7D7D4CFFA8A8FD11%FFA87DFD0CFF7D7DA87DFD0BFF7D7D7D52A8FD0BFF7DA8FD12FFA85252A8%FF7DFD11FF7DFD0DFF7DA8A87DFD0BFF7D7D8452A8FD0BFFA8A8FD16FFA8%A8FD11FF7DA8FD0BFFA87D7EA852FD0BFF527D7D527DFD0BFFA87DFD17FF%7DFD11FF7DFD0DFF7DFFA87DA8FD09FFA8FD057DFD0CFF7DFD16FFA8A8FD%10FFA87DFD0CFF7D7DA8A87DA8FD09FFA8527D7D7D52FD0CFF7DA8FD16FF%7DFD10FFA8A8FD0CFFA87DFFA8A87DFD09FFFD057D52A8FD0BFF7DFD16FF%A8A8FD10FF7DA8FD0CFF52FD04A87DA8FD08FF7D527D7D7D52A8FD0BFFA8%7DFD16FF7DFD10FFA8A8FD0CFF7DA8FFA8FF52FD09FF527D7DA87D7D7DFD%0BFFA8A8FD15FFA8A8FD10FF7DFD0CFFA852FD04A87D7DFD07FFA852FD05%7D52FD0CFF52FD16FF7DFD0FFFA87DFD0CFF7DFD04A8FF7D7DFD07FFA852%A87D7D7D7E52FD0CFF7DA8FD14FFA8A8FD0FFFA87DFD0CFF7D7DFD05A87D%FD07FF52FD067D527DFD0BFF7DA8FD15FF7DFD0FFF7DFD0DFF53FFA8A8A8%FFA87DA8FD06FF7D7DA87D7D7DA87D7DFD0CFF7DFD14FFA8A8FD0EFFA87D%FD0CFF7D7DFD05A8A97DA8FD05FFA852FD077D52FD0BFFA87DFD15FF7DFD%0EFFA87DFD0CFF7DFD08A87DFD05FFFD0A7DA8FD0BFF7DFD14FFA8A8FD0E%FF7DA8FD0CFF52FD07A87D7DFD05FF5952FD077D527DFD0BFFA87DFD14FF%7DFD0EFF7DFD0CFF7D7DA8A8A8FFA8A8A8FF7DFD05FF52A87D7D7DA8FD04%7D52FD0BFFA87DFD13FFA8A8FD0DFFA87DFD0CFF7D7DFD08A87D7DFFFFFF%7D52FD097D52A8FD0BFF7DFD14FF7DFD0DFF7DFD0CFFA87DFFFD09A87DFF%FFFFFD0B7D527DFD0BFFA87DFD12FFA8A8FD0CFFA87DFD0CFF52FD0BA852%A8FF7D52FD0B7D27A8FD0AFFA87DFD13FF7DFD0CFF7DA8FD0BFF7D7DA8A8%A8FFA8A8A8FFFD04A87DFF52FD047DA87D7D7DA8FD047D52FD0BFF7DA8FD%11FFA8A8FD0BFFA87DFD0BFFA852FD0DA88427FD0E7D527DFD0BFF52FD12%FF7DFD0BFF52FD0CFF7D7DFFFD0BA8FF7D2752A8FD0D7D527DFD0BFF7DFD%10FFA8A8FD0AFF52A8FD0AFFA87D7DFD0CA8FF7D27272752FD0E7D5252FD%0AFFA852A8FD0FFF7DFD08FFA87DFD0BFF7D7D7DFFA8A8A8AFA8FFA8FFA8%FFA8A87D2727525227277D7DA87DA87D847D7E7D7D7DA87D7D527DA8FD09%FF7DA8A8FD0CFFA8A8FFA8A8A87DA87D7D7DFD05FFA8A87DA87D7D527DFD%08A8FD047D5252272727522752275227272752527D52FD097D5252527D7D%FD04A8FFFFFFA8FD047DA8A8A8FD07FF7DFFFD05A8FD07FFFD05A8FF52FD%09FFA8A87DA87DFD04A8FFA87DA8FFA8FFFD04A87DA8A8FFA8FFFFFFA8FF%A8A8FFFFA8A87DA87DFD07FFA8A87DA8A8FD06FFA8A8FD12FF7DA8FD14FF%7DFD13FF7DA8FD19FF7DA87DA87DA87DA87DA87DA87DA87DA87DA8527DA8%A87DA87DA87DA87DA87DA87DA87DA87DA87DA8A87D7DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA8527D7DA87DA87DA87DA87DA87DA87DA87DA87D%A8A8FD06FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF527DA87D527DA8FFFD%04A87DA8A8FFA8A87DFFFD04A87DA87DFD05A87DA8A8FFA87D7DFD04A8FF%A8FF7D52A8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FD16FF7DA8FFFFA852%7D7D52FD057D527E7D7D52527DA87D7D527D527D527D527D5252FD047D52%52527DA8FD05FFA87DFD25FF7D7DFD04FF4C7DA8277D7D277D2727A85252%7D27527D7D2752527D5252527D5252275227277D7D527D27FD07FFA87DA8%FD22FFA87DFD05FFA8A8A87D52A8A87DFFA8A8A87D27A8A8A87DA8A8A87D%A8A2FFFD04A87DA87DFFA8A87D7DFD09FF7DA8FD20FFA87DFD09FFA8A8FD%07FF7DA8FD06FF7DFD0EFFA8A8FD0AFF7D7DFD1EFFA87DFD1BFFA8A8FD1A%FF7D7DFD1CFFA87DA8FD1BFF7DFD1CFFA27DFD1BFF52A8FD1CFF52A8FD1C%FFA827FD14FFA8FFFFFFA8FFA8FD06FFA8FD0EFFA8FFFFFFA8FFFFFFA8FD%05FFA8FFA8FD0FFFA8FFFFFFA8FFFFA8A8FD05FFA8FD0CFF527DA8A8527D%7DA8FF527DFFFF7D527DA87DFD0AFF7D5352FFFD047DA8FF27FFFFFFA87D%52A87DFD0CFFA8527DA8A8527D7DA852537DFFFF7D527D7DA8FD09FF7D7D%7D5252FFFF7DA8A8527DFFFF527D52FF52A8FD09FF7D7D7D527DFFFF52FF%7D527DFFA852A8FFFF7DA2FD0BFFFD047D52FFFF7DA8527D77FFA852FFFF%FF52FD09FFA8527D52A8FFFF7DFF7D5252FFFF7D527DFFA2A8FD09FF5252%7D7DA8FFA87DFF52527DFFFF52FFFFFF7DA8FD0BFF7D527D7DA8FFFF77FF%52527DFF7DA8FFFFFF7DA8FD08FF527D527D52A8A87DA852A87D7DFF527D%52A87DA8FD08FFA8527D7D7D77A8A87DA852FF52A8A87D7DA8FF7D7DFD0B%FF52A8527D52A8A87DFF527D52A8A852A8A8FF52FD09FFA87DA8FFA87DFF%7D7DA8FFFF527DFF52A8A87DFD0AFF7D7DA8FF7D7DA87D7DFFFFFF7D7DFF%A27DFF53FD0CFFA87DA8FFA87DA87DA8A87DA87DA8FF7DA8A87DFD11FFA8%FFFFFFA8FD05FFA8FD11FFA8FD04FFA8A8FFFFFFA8A8FD14FFA8FFFFFF7D%FD05FFA8FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Bhattacharyya_Coefficients1</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2015-02-08T18:04:47Z</xap:CreateDate>
         <xap:ModifyDate>2015-02-08T18:04:48Z</xap:ModifyDate>
         <xap:MetadataDate>2015-02-08T18:04:48Z</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>172</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqsnnht4JJ5nE&#xA;cMKtJLI2wVVFWJ+QxV5h+T/mPzLd6lqcHmFLyI64g8w6Kl68b8bW4kKNDAI5JSkUKGD4H4sGY1UV&#xA;3VepYq7FXYq7FXYq7FXjv/OPGuarqljcNeahNfoNP06Rne9m1JPrMnr+uzTTnlDOQqepbL8KfCQT&#xA;zwlXsWBXYq7FXYq7FXYq8+8ralpt15u1BNb1iWLzVDqN5DYaE99LAhsU5C3ePT1kSKZXtv3vqNG3&#xA;xVNfh2Veg4q7FXYqwDW/Pfm+w83XGl6X5f8A05psLQxzTIxsGgeWNHCevdUtrhmLiixspHIDqDir&#xA;IPJ+vXOtW1/czwy24ivGihtriP0pokEMT8JF3+JWc13PttiqE8/ebL/y7HozWUUMv1zUYYb/ANYM&#xA;fTsQGa5lTiV+NFApXbfpirKsVdirsVdirsVSny5qVzfw3z3BBNvf3VtHxFP3cMpRK+9BiqbYq7FW&#xA;LeRPNd/5gOti9ihh+o6jNBYejy/eWINLeZ+Rb434tWlBirKcVdirsVSm21G6k82alprEfVbawsbm&#xA;JabiS4mvEkJP+rbpiqbYq7FXYqxn8xvMmq+XvKlzqGjww3GrBo0sre4DGN2LAuGCsjbRK52PbwxV&#xA;kdvPFcQRzxNyilVXjbxVhUH7sVX4q8b1zU9Pl/NyTShf2dnEuo6dJf6Td6l6DXt2sdvJBcxWi2sx&#xA;d4wsSoDOnJkFRShwq9E8p/70+Yf+2rL/AMmIcCpH+Y9pLqFzPZQjlKPLmttHStUnf6qkDCgO/wBu&#xA;n+1irNrO6iu7OC7iNYriNJYz/kuoYdPY4qrYq7FXYq7FWP8Ak3/ebVf+2rf/APJ9sVZBiq2aWOGJ&#xA;5ZDxjjUu7bmgUVJ2xVgX5bRSWk9lFMOMl35a0eVl/mniNx9YY79azx9P6Yqz/FXYq7FWP2X/ACn+&#xA;s/8AbK0r/qJ1HFWQYq7FXYqxvzUkdzrPliycckkv55Zoydmjj0+6U9+0kiHFVT8vpXl8jaAZG5TR&#xA;2FvDOTufVhjEcnc/tqcVZBirxfzlo7W35u2Wty290mn3FzYWdxcobF/UkkubN7dUY3K3ccKT2sfJ&#xA;PQPWQjZycKvSPKf+9PmH/tqy/wDJiHAqnbww3H5gaq0iBxb6TYwgkAj/AEi4u2lRvoijNPfFV/5e&#xA;Mf8AA+hxMxaS0s4rOZj1Mlov1eQmv+XGcVZDirsVdirsVY/5N/3m1X/tq3//ACfbFWQYqkPn6aSH&#xA;yN5hkjAMw0279FT+1IYGCLtXq1BiqHntYtP84+XViqlt+jr7T0UdCytayxA7U+GOCSnzOKsmxV2K&#xA;uxVj9l/yn+s/9srSv+onUcVZBirsVdirHb9Fl/MDRgV5fVtM1GUn+V3ms0Q/SvqDFXeRh6WlXtma&#xA;87TVNSjKmvwpJeyzxAV3oIZUp/TFWRYq8H84eUPKWofnFcTXM8Meo3M9jPc36Tanb3UEa/U7P6nG&#xA;bYLbM1x9YiUsZQ6CUGlKYUvU/JFrDaLrVrDy9G31J4o/Ud5X4pbwKOUkhZ3NBuzEk98CFTy2fW1/&#xA;zTcmp430NpG29DHDY277V8JZpB88Vd5L/c2+r6eRR7HVr7l/0dzG/X/hLtcVZDirsVdirsVY/wCT&#xA;f95tV/7at/8A8n2xVkGKse8+VfQY7UCv1y/062dfGOW+hWYdCP7nmd9sVa830huvLl+dks9WiDn2&#xA;vIJrFQf+el0v04qyLFXYq7FWP2X/ACn+s/8AbK0r/qJ1HFWQYq7FXYqx2xPreftXfqtppthAjeEk&#xA;s11JKv8AwIiOKu8vH0PM3mizNKyXNtfou20c9nHb9PeSzkPzxVkWKvCX/wByX5zW2pXUclvIt7cw&#xA;GKbSNTmWI2l1Ba26rcxvFauL2KH6wszIyw8RUnY4UvVfKzok3mJ3YKi6pKWYmgAEEJJJOBCz8vkL&#xA;+WY9RIZW1ie51UB68xFfTvPArA9CkDotPbFXaUVsvO+u2R+EalDa6rETX45FT6lPx7fu0toK/wCs&#xA;MVZJirsVdirsVY/5N/3m1X/tq3//ACfbFWQYqxvzD/pnmny1pq7m3muNWuBWg9K2ga2UN85rxGH+&#xA;qfDFVTz9bzS+UdQlt4zLc2Kx6jbRL9p5tPlS8iQe7PABiqeW1zBdW8VzbyLLbzoskMqmqsjjkrA+&#xA;BBxVUxV2Ksfsv+U/1n/tlaV/1E6jirIMVdirsVY55NP1mTXNXBrFqWpym3Na/urOOOxHE/yu9q8i&#xA;02+KvfFWpiLL8woJGIVNa01rfke8unTGWNK+LR3szAeCnwxVkmKuxV55q/kbzfeX+qxpfxHQNTuD&#xA;NNpfreik0bxojxzMts84D8aMI5gCu3c1VZEjefERUS10lUUAKomuAABsAAIcVSvXdA856ubecrYW&#xA;Wo2RY2OpWlxMtxD6lBIF9S3kjZH4jkkiMpoKioFFUdYRfmLbWkcEzaffSpXldTzSLI9ST8QhtoY9&#xA;q0+FBiqv6nn/AP5Z9K/5H3P/AFRxVKpvOOqw6wuizaj5bi1liqrpj6g63RZwGUCEp6lWU1G2Ksus&#xA;Dfm0jN+sSXe/qrAzPH1NOLOqN0p2xVi1kfNWk395p1ra6VdNeXN1qFqk2pTW9w0MkoLMYFs5tkaR&#xA;VYhiKkeOKojUtQ89pp9y8ljpVhGkTs98NVlHoqFJMtZtNeMcBv8AGpHjiqX6DpnnbT5rjUDaWWq3&#xA;9+sYl1G61eRnaGPkYo0WDS4YUjX1GI4IKkkmpxVM7bWfOl0jvbaZo06RyPC7RavO4WSJikiErp5o&#xA;yOpVh2O2KpD5b0vzfYiK50IWTaA4L2mlR6x69gquCKQyHSXnWMHdUWbgvRQF2xVOLXzJ5pu7ma1t&#xA;LPQri5t/96IItZmeSOjtH8arp5K/HGy791I7YqncerwwRwx6vNaWOougd7VbkOoBkWIFGkWBmUvI&#xA;i14D4mA8MVSy+03zPD5nutV0pbKS3u7K0tXS6klR1e1luZCR6aOKMLod+2Kr/U8//wDLPpX/ACPu&#xA;f+qOKu9Tz/8A8s+lf8j7n/qjiqV65pH5j6qiRJfW+mwUKzxWVwUMqtSoaSS0llTbasTo3vXFUbYW&#xA;vnPT7KCxsrHSILS1jWG3gSa5CpGg4qoHpdABiqG1zR/OOs2i291b6bG8Lia0uobm5jngmVSqywyC&#xA;H4WCuw8CCVIKkgqu/Q/5i/4f+p/pkfpb6xz/AEhyt+XocKcKfUPS+1/xTX/KxVmGKuxV2KuxV2Ku&#xA;xVgfn/yFq/mHWbe/sp4FhgsXtZrW4Z1W45X9ndmCUoj/ALmaK0eOQjf4uhFcVYIPyj82XOtXmnpN&#xA;HYyW9lY/VvMamUSWtbi/la108mOjoscqQvVlITjsa4VTGP8AJnzMssk6y6fbxPE6nSIpJzalTcab&#xA;K9sWMQb0bkadKZiEryl6MK4qxzVfys82yah/h2FEu7m6W6ZNWeO7SCwtp9MuoEsY7gwek9sk08dA&#xA;r+pXrHQVxSyjXvyl82Xfl3UNKsl0gX91dzXP6dmZzeSpKJ2gRme2nMRtGmRY2VmPBfhMTUYKE0vP&#xA;y08wyeVF01JbObVF1y71iKed2a1UXNzNMjS28kEyXBVZd42C0bdJFYBsCsUh/wCcfNdGj+jNPp8m&#xA;piL0luuUpIEegiwho5i5Ujv0SddtuIb7QAwpVdX/ACR883MerfVr/Tml1IylZJi5dC95qN1HIjvB&#xA;N6bob+I8lXls3FkPF8VReofkfrN0txLKdNu7meW+uJlnL8Z3uNatdRiSVjC+xtrZ4XPE8eVAGFcU&#xA;Mk/J7y7c6dFrd9MztbT3j2ei+orow0u0lla3Xi4U0D3EoU8RyWh74FeiYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8V/NzzprN&#xA;l5yjl0rU3tbHyXbW2p61YxymMXv1y6RGt3So58LSOSQCh64VezwTQzwxzwuJIZVDxyKaqysKgg+B&#xA;GBV+Ksf/ADEvLqy/L/zNeWkrwXdtpN9Nbzxkq6SR2zsjqw3BVhUHFXmX5Y69dv5y0XT7TUNbFrd6&#xA;RJdatb+Y3nIuJwIvTfTvrf71uJZy5Q8ONMKvbcCuxV5xaW+p+evMnmL61rF/peh6BfHSrOw0ydrO&#xA;SWaOGOWaeeeOkrVMwEaqwUAdzirPNJ05dN06CxW4nuxAvEXF3IZp33rWSRt2O+KovFXYq7FXYq7F&#xA;XYq7FUHp2qQX8l6kSspsbhrWQtTd1RHJWhO37zFUZirsVdirsVdirzm6/Lf8vLOfV7zzmdN1C/8A&#xA;M+oyfV73UIYI5UE6LDb2ds8xkblGiUUoQSd6DFWW+TNAufL3lbTNDub39IyabAtst4Y/SLxx/DHV&#xA;OUlCsfFftb0riqc4qlnmfRRrvlrVtEM31capZXFl9Y48/T+sRNFz41Xlx5VpUYqwryh5TWbXrCfU&#xA;fNlv5huvJqPZ2ljZQRWy2sk0Rt2a4VZbiRn9NWQAsBUHaoxV6RirsVYB5j8t/ofzDJruj+aofK9z&#xA;5glht7u0vYYrm0u7pV9OJo43kgZZ2Ucfgf4tqgnFWa6Xb31vp8EN/dC+vEWk92IxCJG/m9NSwX5V&#xA;xVFYq7FXYq7FXYq7FXYqx/yn/vT5h/7asv8AyYhxVkGKuxV2KuxV2KsQvdIsvMvmfWrS+T1bCy01&#xA;dLXsVl1Cs13T/K9FLYqe2+Kpt5O1O61Lyxp11e0+v+l6OoAdBdQEw3AHymjYYqnOKpV5s1abSPLW&#xA;p6lboJLq2t5GtIj+3OVpDH/s5Cq4qx86JB5XvvKctsaxxqdD1CcjeVJ4zLFNJT7Tm7hAqe8rHucV&#xA;ZrirsVYff6RaeZvM+t2l4OdjZaYNLUjYpNqNZbrif5hElsVPUYqnHk7U7nUvLGnXd2Q18YRFf06C&#xA;7gJhuQPlMjDFU4xV2KuxV2KuxV2KuxVj/lP/AHp8w/8AbVl/5MQ4qyDFXYq7FXYq7FWO+SgJodY1&#xA;LbnqGrXjOR3FnJ+j0P0x2S4q7ylS3vPMWmDZLTVJJYQdvgvoor12+Xr3Eo+jFWRYqxzzmPXOhaZW&#xA;gv8AVrbkfaxD6j+JsuP04qv/ADAST/B2p3MSGSfT411K3jG5aXT3W7iUfN4AMVT6ORJI1kjPJHAZ&#xA;WHQgioOKrsVY75L/AH0es6iftX+rXhP/AEZuNOX/AIWyGKu8oj6vc+YNNAolnqkskNe630Ud8zfL&#xA;1rmQfRirIsVdirsVdirsVdirsVY/5T/3p8w/9tWX/kxDirIMVdirsVdiqyeeKCCSeZuEUSl5HPQK&#xA;oqT92KpJ5Bhli8k6GJgRcy2UM9yDufWnQSy/8lHbFVO3/wBH/MC+U7LqWl20kQ8Xs55kmanjxuoh&#xA;92KsixVjt/S48+6RBWqWVhe3TrX7MsklvDCxHuhmGKsglijlieKRQ0cilXU9CpFCDiqReQJJG8m6&#xA;TDKS1xZQCwuWbqZrIm1lJ+ckLYqnssqRRPLIeMcalnbwAFScVSLyBHKnknQ2mXjcT2cNzcr1pNcI&#xA;Jpev+W5xVZaUt/P+pRnZb/TbSeNR3ktpp45mP+wmhGKsixV2KuxV2KuxV2KuxVj/AJT/AN6fMP8A&#xA;21Zf+TEOKsgxV2KuxV2KpB5/kkTyTrixHjPPZzW1uRXaa4QwxdN/tuMVT2ONI41jjHFEAVVHQACg&#xA;GKsf1utv5v8ALV5/y0fXdM/5HwC8/wC7firIsVY7pX+kedtfuhulrb2GnjoaSIJrqSh7VS7jqPYY&#xA;qyLFWO+Uf3Fz5g00bJZ6rM8QPUrfRx37N8vVupB9BxVU8/SyReSdd9I8Z5LGeG3O399NGYohv4u4&#xA;xVO4YY4YY4Yl4xRKERfBVFAN8VSDWf8AR/OXlu7J+G4S/wBMA/yp447wf8Lp7YqyLFXYq7FXYq7F&#xA;XYq7FWP+U/8AenzD/wBtWX/kxDirIMVdirsVdirHvO372z0yxH273VtPC9DUW1wt44ofGO2bFWQ4&#xA;qx3zvWKx06/X7djqlhIDStEnuFtJT7AQ3DknwxVkWKsd8mj1hrmo1qb/AFe78NvqRXTu3/MFirIs&#xA;VY7aH6t5/wBRiOyajptrcRLTrJbTTRTsT/qSwDFW/O9JNP0+yH2rzVdOQA9CsN1HcyKfEGKBwcVZ&#xA;DirHfO1IbXStRrRrDVrFlNaUF1MLGQk+Aju2JxVkWKuxV2KuxV2KuxV2Ksf8p/70+Yf+2rL/AMmI&#xA;cVZBirsVdirsVY5rzGfzf5XsgD+5e91NiDSiwWxtN/auoDFWR4qknnezlvPJ2t20ABuXsbj6sTXa&#xA;ZYy0TbeDgHFUztL+2utOh1CNqW08K3Cudh6bqHBP0HFUn/L5JB5K0aaVSk95bJe3CEUImvP9JlB9&#xA;+cprirIMVY7rh+rebfLV7X/eg3ulkf8AMRALyp+nTqfTirtfLTeavK9oq1MM13qLkdkhtHtTX25X&#xA;y4qyLFUi8920tz5M1uOBedytnNLaqOvrwoZIf+SiLiqc2tzDdW0VzC3OGdFkiYdCrjkp+44qqYq7&#xA;FXYq7FXYq8p8x3fmg+eL6XS/M66HZW95ZadJZSKdRa4nu4oBGUs5hEIY+U68nhk/ZcnflRVl3kL9&#xA;I+jrP6S9H6/+kn+tfVuXomT6vDyMfP4gpPQHp74qyjFXYq7FXYqx5f8ASPzBkr/0rNJTj4f7kbl+&#xA;VP8AuHCuKshxV2KvPoJZbX8mrqygqlxYWV3odqT8R9a0eTTYT71kjXFWfW8EVvBHBEvGKJVSNfBV&#xA;FAPuxVfirHPPyqmiQ6gdjpV9ZXxkpXhFFcoLlh/0bNIMVXf70fmEP+1XpJr0/wCllcj/ALx2Kshx&#xA;VplVlKsAysKMp3BB7HFWPfl5RPJmlWf7WmxHTJP9fT3azfr/AJUBxVkWKuxV2KuxV2KvBvMVxar+&#xA;ffO+0iO+mhuLAadqj6hdW0tujNYwSQRWsICS8ZL5ZjzBVlLAt8JVSl6z5T/3p8w/9tWX/kxDgQyD&#xA;FXYq7FXYqx3y5++8x+abwg1S7t7GJuxjgs4Ztj7S3Ug+YxVkWKuxV53d0GoXnl7ZfrPmeyuLZO5i&#xA;EUWrSN/sprScfQcVeiYq7FUDr2lpq2h6jpUhpHqFrNaufATRmM/8SxVjH5capJrr6lr8wpPPFp1q&#xA;6/y8LCK8ZdunGW/dSOxBxVmuKuxVjvlImC+8x6bU8LTVHkhB/kvYIrxiB4evPKPmDirIsVdirsVd&#xA;irsVeHefvMOiWP5s2s02pfUr/Triy9S5vLjRFtYbNhHJcxojo2pp6kTN3FWNR8OFL0zyRd2t4utX&#xA;lpKs9rc6k81vPGQyPG9vAyOpHUMDUYEMlxV2KuxV2Ksd8hj1NDmvSN7+/wBQugxABaOS8l9A7f8A&#xA;FATFWRYq7FWC39iW/OXTHL/upNHmuxHsf31hKbZWI7Vj1dxX2pirOsVdirsVYH+T11YT6LriWdSt&#xA;vr+qxs3YqbkyQcf8n6tJEBirPMVdirHYB9V/MC7Uii6ppcEkQ7c7CeRJj8yt5CPoxVkWKuxV2Kux&#xA;V2KvHPMOn+aJPzfWO1tLqXQrm5srueKBHa0e5tHsqXF3cKSInS39XhFVamJCeQkphV6H5T/3p8w/&#xA;9tWX/kxDgVkGKuxV2KoLXNTj0rRdQ1SX+7sLaa5evTjDGXP/ABHFVDyppkmleV9I0yT+8srK3t5D&#xA;4tFEqMfpIxVNMVdirzDVrwr+c1lqCtS3tRb6LOa7K1zb3Vyw2/mkktRvir0/FXYqhdV1CDTdMvNR&#xA;n2gsoJLiU9PgiQu34DFXk/5BSy2Ut/o07HnLY2N9xO5acK1vdPX5JDXFXsWKuxVjvmGlt5l8s342&#xA;Mk9zpsrdhFdWzT7/ADms4h8zirIsVdirsVdirsVeUQeR/Of/ACsNNcvLCOe0+uXMlxdRa1eW/qxt&#xA;dRtYTPZRRLCWtLOL0TESVlrV2xVm/lP/AHp8w/8AbVl/5MQ4qyDFXYq7FWO+f6yeWZrEV/3KT2um&#xA;uF6+ne3MdvMR8opGY+wxVkWKuxV2KvF9Xuj+jfMHmIgs8GryaoAOrJo1yiR09nhsF+YOKvaMVdir&#xA;EfzZuzb/AJe6wg630cendK7ahMloT9Anrirz7yXeGy/MDRJf2L1brTZK9hLF9ZU/8HZqv04Sr2/A&#xA;rsVY7+YH7ryzLf8A/VqntdSdh1EdlcxzzffCjqfY4qyLFXYq7FXYq7FXYqx/yn/vT5h/7asv/JiH&#xA;FWQYq7FXYqx3zFS58yeWtPG/C4uNSmXsYrS3aHce095E3zGKsixV2KoHXtVi0jQ9R1aYVi061mu5&#xA;AOpWCMyH8FxV5xpGjiDyxa6RefvCLRLe7PXmxj4ymv8AlMScKGa/l/fy33krRZ5253S2scF2f+Xi&#xA;3Hoz/dLG2BLIMVecfnRdg2mg6YGIa5vzcyoP2obWCRqn5TyQ4q86v7v6gkGqf9Wq4t9QenUx2syz&#xA;Sgf60aMv04UPozAl2KoXVdPg1LS7zTp/7i9gkt5e/wAEqFG/BsVQPk7UZ9R8qaRe3JrdzWkJu+9J&#xA;wgEymvdZAwxVOMVdirsVdirsVY/5T/3p8w/9tWX/AJMQ4qyDFXYq7FWN2TfXfP8AqU1CYtIsLezi&#xA;fagmu3a4uF/5FxWx+nFWSYq7FWIfmhct+gbXSkr6ms39tZ7Up6SMbq5Br2a3tpF+nFUuwoRv5ZzN&#xA;HBrelMRSw1KWSBaUPpXyreFvf9/NKv0YEszxV47+Z999b8+xWooY9J05aMO0t/MWkQ+4S0ib/ZYQ&#xA;rHJoY5oZIZV5RyqUdT3VhQjFD1/8tNUl1PyJotxOxe6jtxaXbnq1xZsbadvpliY4EsmxV2Ksb8lc&#xA;rf8ATmlMQf0dq1zwIBH7u946glKnov1zhtt8NO2KskxV2KuxV2KuxVj/AJT/AN6fMP8A21Zf+TEO&#xA;KsgxV2KuxVjnkPlc6RPrT/a127m1FG/mt3Iis2+mzhhxVkeKuxV595puRqHniG2XeDQ7Mu5rVTdX&#xA;7UAp2eKGD7pcVbwoW+W7kWPn0RttHrenmOp6evp8hkjUe7x3Up+SYEvQsVfPcuofpbV9X1qvJNSv&#xA;ZZIGHQ28NLa3YezwwI/04ULsVZt+TWohJNd0Nyawzx6jbAnYRXaFHVR7TW7u3+uMCXpmKuxVjikW&#xA;X5gOp2j1rTQyjoPW06Uh/wDZPHer9Ce2KsjxV2KuxV2KuxVj/lP/AHp8w/8AbVl/5MQ4qyDFXYqx&#xA;7zzc3H6FGlWbsmoa7KumWroaPGJwTPMta7w26ySj3WnfFU9t7eC2t4reBBFBCixxRqKKqIKKoHgA&#xA;MVVMVQ+oX9pp1hc395IIbS0iee4lbokcalmY/IDFXmuhJdvbz6lfxmLUdXne+u4m+1GZAFihb3hg&#xA;SOL/AGOFCZYqlfmCWaztrfWYFZ59EuI9QVEFWaKOqXKKO7PaySovucVZN+Y/mcab5JnudOuB9d1Z&#xA;UstHmRhvLdghZkO9fSi5T+6ocCXk1tbw21tFbQKEhgRY4kHQKg4qPuGFCriqvoespoHmrS9albhZ&#xA;8m0/UW7Lb3jKFc7gARzpEzN+ynLEq97wJdirGvPavbafaa/GCX8vXSX8oUVJteLQ3gp3pbTSOB3Z&#xA;VxVkiOjorowZGAKsDUEHcEEYq3irsVdirsVY/wCU/wDenzD/ANtWX/kxDirIMVWTzwW8Ek88ixQR&#xA;KXllchURFFWZmOwAG5JxVjHlz1Nf1d/NU8bR2CRta+XYZVKsYHYGa8KndTclFEYO4jUHYuyhVlWK&#xA;uxV5z5r1pPMupLoli3qaHp0yy6tdqax3FzC3KOzjYfbWORQ85G1QI9/jAVVsKHYqtkkSNGkkYJGg&#xA;LO7GgAG5JJxV4lB57sb7zDFpUtyf8OaT6kHlOaQcYyJm/eKWr+yAI7YkD91sN23UstxQ7FVO4ghu&#xA;IJLedBJDMrRyxsKqysKMpHgRirOvy6/MKOGK38teZLkpfRUh0vVJ2+C9j6RxvIaAXSj4Srf3n2lq&#xA;eSqEvTMVadEdGR1DIwIZSKgg7EEHFWJaFdjytPF5Y1N/T04t6XlrUHJ4PCfsWMjnZZoB8EfI/vEo&#xA;RyYPRVl2KuxV2KuxVi2iHUgvmM6csL3f6Wk4LcMyR09GCtSiu3T2xVEMv5gyjir6TZn/AH4Uubvr&#xA;34crTp4ct/bFVL/BsuoSpN5n1J9ZWNg6acsa22nB1IKsbdTI8tCKgTSyAdQK74qnuonUxasdNSF7&#xA;uo4rcs6R0rvUort09sVSSaT8wPTZ2fR7JEUs8z/WbhQAPtFf9GoF6/a+7FUg07SPNXm+zkutX1qW&#xA;PRpXpZ2tlC2nx3cAA/fSKXlulR2rxT16Om7LRqYqntt5LitbeO2tpI4LeFQkUMcfFFUbBVUGgAxV&#xA;ZfeVtSFpIbCaGS7AHpJPzSMmu/JkDsNvBcVSN/K/5lSCiSaNbH+djdXH/CBbf/iWKse8wfkx5+8x&#xA;RmDVvNNubJqc9PtbZ4LZqfzrzeRx/kvIy+2Ksai/5x3v7rUb3TG1eA/VI4WkLQMVYT86CnLtwwqn&#xA;Gm/kH5z0tVjsfNMJt1+za3VvJPEBSlFJkSRR4APT2xVMD+Vn5hKKC50iU9n5XMX/AAvCX/iWNqn3&#xA;/KqLj/q5J/yKP/NWNqpz/lAbiF4Z72KaGQcZIpIeSsPAqWocbVC+UdD82Ws0+n6V5lksrqwI+s6D&#xA;qsP12NEb7DxEyrN6LU+AxzBOq8QwIAVl6f8AKx4vhf8AQ934SD61a/8ACH6z1/1tvfFU3exTUdIF&#xA;nrdrb3H1iJVv7Qj1rZmIHNQJFHJOXTkuKpMPK2t6cwHl7XHtrUE/7j9SjOo26g9onMkF0nsDOyL0&#xA;VQMVREbefFlRZI9Kli5r6kivcRtwqOfFCsg5AVp8WKp9irsVSK48laHNeXF3yvoJruT1bgW2o39t&#xA;G0nEJy9KCeOMGiitFxVZ/gfRf+WnVf8AuMar/wBlOKu/wPov/LTqv/cY1X/spxV3+B9F/wCWnVf+&#xA;4xqv/ZTirGIvJ2kearxxHcak/lOAvFL6mqajKmpSiqsF53LD6tE3cCsjjY8B8arHtd/S2kfmCvl+&#xA;O4lvbO5jtWsLc6lrltIXvTdqkc12NQuERY/qJYuLc8q8QoO+KpW35i6NHpmsaxLpOrDSdDu1sL5k&#xA;8x6o90ZniDAwwGRVePmSOZkHw/GAdwCqvJ5sVfN9l5bGn3v1+6NxaekPMervB9cjS0uIj9cWU0hM&#xA;F2eX7gnnRR7hUv138yNNt9Fvb7TtP1LlZyzWMr3Gv6seN7DazXdFiWZDLAUtyBIJFrUUGFU613zZ&#xA;o+k6dcas9pqMmmw3N3bxp/iHWzfSR6dM0F3L9Vj9UIEcAjnIFoRyZKioVLNL1pFvJ7ye1v2jvLuS&#xA;wkvl1fWY4Lc299c2dsJWjlnkeSfgoQOypyqOaVAJVStPzBjbQINWl0fUJYDEPWkTzJq8RaWLR01m&#xA;54wl5OKiBmVKyGrUBoCWCqHT8x7W0fUn1K3vZYrBGlaCDWtcS59KK/vbWaRUSa7DBEtIySxRFLbu&#xA;KqMVR+o+a7v9I6bDp1jciDUrqa1t1uPMGtcm+r6zb6SXZ0lpHzad/h4PTZqn7BVZh5Ak0XzfDeyr&#xA;Bq9kNOaO2uw2uapJxveHK5t9p1/uKoOXevQUwKnmr/lhod9GJYL3VLPVIUdbLUl1PUZZYC9OXESX&#xA;DAq3Ec17jwNCFUJomj6XPdNpGrvqdlrsKlzEus6sYbmJaA3FqzXNWSrDkp+JDs37LMqnf+B9F/5a&#xA;dV/7jGq/9lOKu/wPov8Ay06r/wBxjVf+ynFXf4H0X/lp1X/uMar/ANlOKov/AAzp36N/R3rX31f1&#xA;PV5/pC+9fl4fWPW9fj/k8+Ptiqa4q7FXYq4kAVOwHU4qxW+uZPNV3LpGnyldAt2Mes6hEw/fuPtW&#xA;MDDtv+/kH2fsL8XIoqyeGGGCGOCCNYoYlCRRIAqqqiiqqjYADoMVQl/oOh6iJhqGnWt4LmNYbj6x&#xA;DHL6kUbMyRvzB5KrOxAOwJPjiqV2H5feUbLWb7WI9Nt5L69aMiSSGFjAkdtHaiK3PANHGY4Vqtet&#xA;e22Kor/Bnk/6oLP9Baf9UCPELf6rB6YjlZXkThw48XZFZh3IB7Yqld/+WHlXUPMFrrF7brOtlEYL&#xA;bTXgtfqqoYWg4mkPrMnpyMPTaQx7141xVM73yV5Nvria4vdB066uLhg8801pBI8jBSgZ2ZCWIVyN&#xA;+xOKpVp/lvy7J5v1MyaXZubNbaezLQREwyzmd5ZI6r8DSMxLMu5PXFU6HlbywLb6qNIshaitIBbR&#xA;en8UH1Vvh403t/3J/wAj4fs7Yqo3PknyZdEm60DTpySWJltIHqWaR2PxIerTyE+7N4nFVefyv5Zu&#xA;ITBcaRZTQkSKYpLeJl4zSieUcSpFJJlEjeLDkd8VWeWPLltoGny20UjXE91cTXt9dOFVprm5cySy&#xA;FVAVdzQAdABiqbYql2uaFZaxaCG45RTRN6tneQnhPbzAELLC9DxYVp4MKqwKkjFUv0zX7y0vV0bz&#xA;Fwiv25Gxv0HC2vUXf4Kk+nOq7vET4stVrxVZDirsVdirsVdirz2f820tNZmjvtOjg0CO+vNOGqLd&#xA;c5g+n273FxM9p6Q4wIInUuJGoeo3xVV1Pzfrlx5cvdQv/Lht/L13autvyvvT1CU3I9K3jMEcRELT&#xA;NIqgiYlK7jbFVtp5l0Xyfr3l38vtP0v0NPaBInnjneWKykmWZrWAmQNJJ67W0oVmYdBtviqYeefP&#xA;V/5c1DTrGx0yLUJLy1v72V57v6mscOnLE0lD6M4ZmE/wg8RtucVR2g+cYtXvra3Fq9tHf6Zb6vp7&#xA;yH43hm2kR0oPTeEunIVP2h74qyHFXYqwEfmoY/MDWl1pscWinUbrSo9TW6DzerZQNPPK9r6S8YE9&#xA;JlLiQ0PUb4qvb8xNe/Q58wp5dC+XZIvUspprv072cyjjaAWghdVFxKyKOUtVDVK9sVQsus+XdA/N&#xA;aK3j0dV1jzPBbR67rEcvJIJVjn+oxMCgLet9XkUN8P2VqOlFWTeY/NE+m39jpGmWP6T1zUVllt7Q&#xA;yiCJILfiJZp5isnBA0iKKIxLMKDqQqttfMerRalpWna3psVjcaqlyI2t7lrqNZ7Y8xFyaGAn1IeU&#xA;gNP2SCMVZDirsVSfzh5iHlzy5e6z9X+tPbBBFbc/T9SWWRYo050bjydwK0OKsatvzRncz6bLo/Pz&#xA;LHfnTLfTbS5We3mlW3S6d1u2SELHFFJ+9LR1U/DQmmKpf531g6p5a1zQ/OPluGWC20q61jULO21C&#xA;V1+r2lJLYLOsFu6yTSxuOlFCEktXjiqe+Q/N8+qR3mmahZCwu9Gt7OSVxc/XInhuoS8TGcx259QL&#xA;GfUVkFNjuDiq/QfNvmTXlt9R03QoV8u3itJZ391emG4ki4kxTfVVt5aRykDjWTlxNSvbFUR/je3/&#xA;AMD/AOKPqr8/Sp+juQ5/W/U+r/VedKcvrH7rlT3xVkuKuxV4ta/kZqt8t0urfo7TJ7qPVVvtU0xp&#xA;Zru/bVGkZRc+pFbARwtIGCVepVRUCuFWWa7p35g6j5TvLXU7TTpL2zNpeWS6fPMzXU+n3UV2FKTR&#xA;RLF6pg4hebUJ+1gVLdW/KzUNZGt68928Pma8vYb7Q/8ASrqK0hSxEZsUubdeKFlMbFyY2Kl2oTiq&#xA;j5l8p+YfPaeXNdu9A0x/qsOpxT6LrUk8YRbx4ltpaLbyP6ixwcmUhCpagPfFU+8r+W9asfMOljUJ&#xA;5b1dA0Iaa2qzChu7m7likmYVJb92tmm5/m6kg4qzfFXYq8d0j8ldVlnuH1ddO06W6i1eLUdS0x5Z&#xA;bvUBq/qgrcGSK3CpD6wZV+P4lXcDCqfalon5hTeTJdKvrbT7mXS0s7iwksppvVu59NuYblFaGWJE&#xA;h9X6vxp6rbnrTAqE1b8rNQ1ka3rz3bw+Zry9hvtD/wBKuorSFLERmxS5t14oWUxsXJjYqXahOKpn&#xA;LYebNW1eHzVp1tBp+q6ZLfaVHZX5lWK809pY/jZwnqQkzW4eNhGwK9vixVGz2XmTUvMXlh9TtIYD&#xA;pT3mo3ktrI8turtBJZwQpJIkLuzJdO5+AU4+4xVl+KuxViv5k+WtT8x+X4dNsYbS6UXtpc3lnfyP&#xA;FBPBbSiZoWZIrg/GyKD8BFK4qxnSPyx8xaF+jdT0iTT01Gwu9Qnj0QmWLTYrbUliElrBKqPInB7d&#xA;ZA/pfaZvhAOKovX/ACz5p1SfWIri3giufM/lqfSJZoJHltba6ha4MAd2jSThIt83xen1Tp0qqgfK&#xA;/k/X/KtwIhpVlFaa69pptzo+ktM9lCkUUrXWozSNDCFllQLHQIoJCglicKsh8q6V508tWNlokwsb&#xA;/wAv6VF6FvfI8yX7W0KFYYzbCJomkVVVSwlFevHAqX/4Y1v/AJVV9U+rH9N/Wf07+j6ry+s/pP8A&#xA;S/1XlXjXn+6rWlcVf//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:11338C154FB1E4119C26CC5864D72DF9</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:12338C154FB1E4119C26CC5864D72DF9</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:f807cef8-568d-fb43-a9ef-7e2a44ef13c8</stRef:instanceID>
            <stRef:documentID>uuid:9D8B2E12FBA6E4119CDED63FD7009D97</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>80.000016</stDim:w>
            <stDim:h>109.999993</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-It</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-It.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Groupe de nuances par défaut</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blanc</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Noir</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>26</xapG:red>
                           <xapG:green>23</xapG:green>
                           <xapG:blue>27</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Rouge CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>226</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>26</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Jaune CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>237</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Vert CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>144</xapG:green>
                           <xapG:blue>54</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Cyan CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>158</xapG:green>
                           <xapG:blue>224</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Bleu CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>23</xapG:red>
                           <xapG:green>41</xapG:green>
                           <xapG:blue>131</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Magenta CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>226</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>122</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=15 M=100 J=90 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>190</xapG:red>
                           <xapG:green>9</xapG:green>
                           <xapG:blue>38</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 J=85 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>229</xapG:red>
                           <xapG:green>53</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=80 J=95 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>231</xapG:red>
                           <xapG:green>81</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>242</xapG:red>
                           <xapG:green>148</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=35 J=85 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>248</xapG:red>
                           <xapG:green>179</xapG:green>
                           <xapG:blue>52</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=5 M=0 J=90 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>234</xapG:green>
                           <xapG:blue>16</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>223</xapG:red>
                           <xapG:green>219</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>151</xapG:red>
                           <xapG:green>190</xapG:green>
                           <xapG:blue>13</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>166</xapG:green>
                           <xapG:blue>42</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=10 J=100 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>138</xapG:green>
                           <xapG:blue>46</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=90 M=30 J=95 N=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>47</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=75 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>98</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=80 M=10 J=45 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>160</xapG:green>
                           <xapG:blue>150</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=70 M=15 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>58</xapG:red>
                           <xapG:green>170</xapG:green>
                           <xapG:blue>220</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=50 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>10</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>180</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=95 J=5 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>12</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>131</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 J=25 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>19</xapG:red>
                           <xapG:green>35</xapG:green>
                           <xapG:blue>91</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>99</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>129</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>17</xapG:green>
                           <xapG:blue>126</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=100 J=35 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>161</xapG:red>
                           <xapG:green>13</xapG:green>
                           <xapG:blue>89</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=10 M=100 J=50 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>213</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>80</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=95 J=20 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>228</xapG:red>
                           <xapG:green>19</xapG:green>
                           <xapG:blue>112</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 J=40 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>203</xapG:red>
                           <xapG:green>187</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=45 J=50 N=5</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>163</xapG:red>
                           <xapG:green>138</xapG:green>
                           <xapG:blue>118</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 J=60 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>120</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>84</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=55 M=60 J=65 N=40</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=40 J=65 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>201</xapG:red>
                           <xapG:green>158</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=30 M=50 J=75 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>177</xapG:red>
                           <xapG:green>127</xapG:green>
                           <xapG:blue>72</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=60 J=80 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>145</xapG:red>
                           <xapG:green>94</xapG:green>
                           <xapG:blue>54</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=65 J=90 N=35</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>124</xapG:red>
                           <xapG:green>77</xapG:green>
                           <xapG:blue>38</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 J=100 N=50</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>103</xapG:red>
                           <xapG:green>59</xapG:green>
                           <xapG:blue>21</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=70 J=80 N=70</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>65</xapG:red>
                           <xapG:green>41</xapG:green>
                           <xapG:blue>27</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Niveaux de gris</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>203</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>152</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -295.337 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 295.337 li
197.494 295.337 li
197.494 0 li
cp
clp
[1 0 0 1 0 0 ]ct
166.806 253.996 mo
166.93 253.998 li
81.3413 254.01 li
81.4541 254.01 li
81.5645 254.01 li
81.6758 254.01 li
81.7861 254.008 li
81.8965 254.008 li
82.0103 254.008 li
82.1191 254.008 li
82.2314 254.006 li
82.3408 254.006 li
82.4536 254.003 li
82.564 254.003 li
82.6743 254.003 li
82.7866 254.003 li
82.896 254.003 li
83.0107 254.003 li
83.1191 254.001 li
83.2324 254 li
83.3418 254 li
83.4531 253.998 li
83.5649 253.998 li
83.6738 253.997 li
83.7871 253.996 li
83.8965 253.993 li
84.0078 253.991 li
84.1196 253.991 li
84.231 253.989 li
84.3413 253.989 li
84.4526 253.987 li
84.5654 253.985 li
84.6758 253.983 li
84.7871 253.98 li
84.8975 253.979 li
85.0078 253.976 li
85.1206 253.976 li
85.2305 253.972 li
85.3428 253.97 li
85.4531 253.967 li
85.5645 253.965 li
85.6763 253.961 li
85.7856 253.959 li
85.8979 253.958 li
86.0073 253.953 li
86.1211 253.949 li
86.2314 253.947 li
86.3438 253.943 li
86.4541 253.938 li
86.5635 253.934 li
86.6758 253.931 li
86.7847 253.927 li
86.8984 253.922 li
87.0088 253.919 li
87.1191 253.913 li
87.2305 253.909 li
87.3423 253.902 li
87.4546 253.898 li
87.563 253.892 li
87.6753 253.885 li
87.7881 253.881 li
87.8984 253.873 li
88.0088 253.868 li
88.1201 253.861 li
88.2314 253.851 li
88.3433 253.846 li
88.4531 253.837 li
88.5635 253.83 li
88.6748 253.822 li
88.7861 253.814 li
88.8965 253.805 li
89.0093 253.795 li
89.1187 253.787 li
89.231 253.779 li
89.3423 253.768 li
89.4551 253.758 li
89.5645 253.748 li
89.6758 253.738 li
89.7871 253.725 li
89.8975 253.714 li
90.0103 253.703 li
90.1201 253.69 li
90.2324 253.676 li
90.3428 253.664 li
90.4531 253.651 li
90.5659 253.638 li
90.6763 253.623 li
90.7876 253.608 li
90.8979 253.594 li
91.0107 253.577 li
91.1211 253.562 li
91.2314 253.545 li
91.3438 253.528 li
91.4546 253.512 li
91.5669 253.495 li
91.6768 253.478 li
91.7861 253.458 li
91.8984 253.44 li
92.0088 253.418 li
92.1216 253.401 li
92.2319 253.378 li
92.3442 253.357 li
92.4536 253.337 li
92.5654 253.315 li
92.6777 253.292 li
92.7871 253.269 li
92.9004 253.246 li
93.0098 253.222 li
93.1206 253.197 li
93.2329 253.172 li
93.3428 253.146 li
93.4551 253.119 li
93.5654 253.092 li
93.6763 253.067 li
93.7876 253.036 li
93.8989 253.008 li
94.0093 252.98 li
94.1206 252.949 li
94.2324 252.918 li
94.3428 252.886 li
94.4541 252.856 li
94.5654 252.824 li
94.6772 252.791 li
94.7886 252.757 li
94.8975 252.722 li
95.0098 252.686 li
95.1201 252.652 li
95.2329 252.614 li
95.3433 252.578 li
95.4556 252.54 li
95.5659 252.501 li
95.6763 252.461 li
95.7881 252.421 li
95.8994 252.381 li
96.0107 252.337 li
96.1221 252.294 li
96.2339 252.252 li
96.3442 252.208 li
96.4541 252.164 li
96.5645 252.117 li
96.6758 252.071 li
96.7861 252.022 li
96.8999 251.973 li
97.0112 251.924 li
97.1216 251.875 li
97.2319 251.823 li
97.3423 251.771 li
97.4551 251.718 li
97.5674 251.665 li
97.6758 251.61 li
97.7881 251.552 li
97.8999 251.497 li
98.0098 251.439 li
98.1211 251.379 li
98.2314 251.318 li
98.3452 251.257 li
98.4546 251.196 li
98.5659 251.133 li
98.6772 251.066 li
98.7866 251.001 li
98.8994 250.934 li
99.0107 250.866 li
99.1221 250.795 li
99.2324 250.724 li
99.3438 250.653 li
99.4565 250.58 li
99.5654 250.504 li
99.6782 250.428 li
99.7871 250.35 li
99.8994 250.272 li
100.01 250.192 li
100.123 250.11 li
100.233 250.025 li
100.343 249.941 li
100.455 249.854 li
100.566 249.767 li
100.678 249.678 li
100.789 249.586 li
100.898 249.493 li
101.012 249.398 li
101.121 249.302 li
101.234 249.206 li
101.344 249.106 li
101.455 249.002 li
101.566 248.901 li
101.678 248.796 li
101.789 248.689 li
101.898 248.58 li
102.012 248.47 li
102.122 248.358 li
102.234 248.242 li
102.345 248.126 li
102.455 248.008 li
102.568 247.888 li
102.678 247.765 li
102.789 247.642 li
102.899 247.515 li
103.012 247.387 li
103.123 247.257 li
103.232 247.125 li
103.344 246.989 li
103.455 246.851 li
103.568 246.712 li
103.678 246.571 li
103.789 246.429 li
103.899 246.282 li
104.012 246.133 li
104.122 245.983 li
104.234 245.832 li
104.346 245.674 li
104.455 245.518 li
104.566 245.36 li
104.677 245.197 li
104.789 245.035 li
104.9 244.867 li
105.012 244.697 li
105.123 244.525 li
105.232 244.352 li
105.345 244.176 li
105.456 243.998 li
105.566 243.816 li
105.679 243.632 li
105.789 243.446 li
105.902 243.257 li
106.011 243.065 li
106.123 242.873 li
106.234 242.676 li
106.344 242.478 li
106.457 242.277 li
106.566 242.073 li
106.678 241.866 li
106.79 241.656 li
106.9 241.445 li
107.013 241.229 li
107.123 241.011 li
107.234 240.793 li
107.344 240.571 li
107.457 240.348 li
107.568 240.119 li
107.678 239.887 li
107.79 239.653 li
107.9 239.418 li
108.012 239.179 li
108.121 238.937 li
108.235 238.693 li
108.345 238.444 li
108.455 238.195 li
108.568 237.94 li
108.677 237.684 li
108.789 237.427 li
108.901 237.164 li
109.012 236.898 li
109.123 236.629 li
109.235 236.358 li
109.346 236.082 li
109.455 235.806 li
109.567 235.524 li
109.679 235.239 li
109.79 234.952 li
109.9 234.66 li
110.012 234.367 li
110.122 234.069 li
110.234 233.768 li
110.347 233.459 li
110.456 233.154 li
110.568 232.842 li
110.679 232.527 li
110.789 232.207 li
110.902 231.886 li
111.012 231.558 li
111.124 231.229 li
111.234 230.895 li
111.346 230.554 li
111.457 230.214 li
111.565 229.87 li
111.68 229.517 li
111.789 229.167 li
111.902 228.809 li
112.014 228.445 li
112.124 228.079 li
112.235 227.708 li
112.345 227.334 li
112.457 226.956 li
112.567 226.572 li
112.68 226.185 li
112.789 225.794 li
112.902 225.397 li
113.013 224.996 li
113.124 224.59 li
113.234 224.18 li
113.345 223.767 li
113.459 223.347 li
113.568 222.924 li
113.679 222.496 li
113.791 222.063 li
113.902 221.625 li
114.015 221.184 li
114.122 220.736 li
114.234 220.286 li
114.345 219.828 li
114.458 219.367 li
114.568 218.9 li
114.678 218.431 li
114.79 217.957 li
114.901 217.472 li
115.014 216.99 li
115.124 216.5 li
115.235 216.003 li
115.346 215.503 li
115.457 215 li
115.569 214.492 li
115.68 213.976 li
115.79 213.455 li
115.901 212.933 li
116.013 212.405 li
116.125 211.872 li
116.235 211.333 li
116.347 210.792 li
116.457 210.246 li
116.568 209.694 li
116.68 209.138 li
116.791 208.577 li
116.902 208.012 li
117.013 207.44 li
117.126 206.868 li
117.236 206.291 li
117.347 205.707 li
117.457 205.12 li
117.568 204.528 li
117.681 203.933 li
117.79 203.334 li
117.901 202.73 li
118.012 202.122 li
118.124 201.508 li
118.233 200.896 li
118.347 200.273 li
118.46 199.649 li
118.568 199.025 li
118.68 198.395 li
118.791 197.758 li
118.901 197.12 li
119.012 196.48 li
119.124 195.835 li
119.235 195.187 li
119.345 194.534 li
119.457 193.881 li
119.569 193.223 li
119.679 192.563 li
119.791 191.899 li
119.903 191.231 li
120.014 190.562 li
120.125 189.89 li
120.235 189.213 li
120.347 188.536 li
120.459 187.855 li
120.568 187.171 li
120.679 186.484 li
120.791 185.795 li
120.902 185.106 li
121.015 184.411 li
121.124 183.716 li
121.236 183.016 li
121.346 182.317 li
121.458 181.614 li
121.57 180.909 li
121.681 180.204 li
121.807 179.536 li
121.932 180.134 li
122.053 180.73 li
122.178 181.329 li
122.301 181.922 li
122.422 182.518 li
122.546 183.115 li
122.671 183.708 li
122.793 184.301 li
122.916 184.895 li
123.04 185.488 li
123.164 186.08 li
123.286 186.67 li
123.409 187.264 li
123.532 187.855 li
123.655 188.445 li
123.78 189.037 li
123.902 189.625 li
124.026 190.215 li
124.15 190.804 li
124.272 191.392 li
124.396 191.979 li
124.519 192.569 li
124.643 193.155 li
124.767 193.742 li
124.889 194.328 li
125.013 194.915 li
125.135 195.499 li
125.259 196.081 li
125.381 196.664 li
125.504 197.247 li
125.629 197.828 li
125.753 198.408 li
125.875 198.988 li
125.999 199.567 li
126.121 200.141 li
126.244 200.718 li
126.367 201.293 li
126.491 201.868 li
126.615 202.44 li
126.738 203.008 li
126.86 203.58 li
126.983 204.148 li
127.108 204.714 li
127.23 205.278 li
127.354 205.84 li
127.478 206.4 li
127.602 206.959 li
127.725 207.517 li
127.848 208.069 li
127.97 208.623 li
128.095 209.172 li
128.219 209.718 li
128.342 210.262 li
128.465 210.805 li
128.588 211.346 li
128.711 211.884 li
128.832 212.417 li
128.957 212.95 li
129.079 213.476 li
129.204 214.002 li
129.326 214.525 li
129.451 215.046 li
129.572 215.559 li
129.696 216.073 li
129.821 216.581 li
129.943 217.087 li
130.067 217.588 li
130.19 218.086 li
130.315 218.581 li
130.436 219.073 li
130.56 219.559 li
130.686 220.041 li
130.808 220.52 li
130.931 220.996 li
131.054 221.467 li
131.178 221.934 li
131.3 222.396 li
131.422 222.856 li
131.545 223.309 li
131.67 223.759 li
131.792 224.204 li
131.915 224.645 li
132.039 225.083 li
132.162 225.513 li
132.284 225.941 li
132.409 226.365 li
132.534 226.783 li
132.656 227.197 li
132.779 227.607 li
132.901 228.012 li
133.026 228.413 li
133.148 228.806 li
133.272 229.198 li
133.395 229.583 li
133.519 229.965 li
133.644 230.342 li
133.767 230.714 li
133.889 231.081 li
134.013 231.444 li
134.134 231.801 li
134.258 232.155 li
134.381 232.502 li
134.505 232.847 li
134.628 233.185 li
134.75 233.519 li
134.873 233.849 li
134.998 234.175 li
135.12 234.493 li
135.245 234.81 li
135.367 235.121 li
135.492 235.429 li
135.614 235.729 li
135.737 236.027 li
135.861 236.32 li
135.983 236.61 li
136.106 236.893 li
136.231 237.172 li
136.356 237.449 li
136.478 237.721 li
136.601 237.986 li
136.724 238.25 li
136.847 238.506 li
136.969 238.761 li
137.09 239.01 li
137.216 239.255 li
137.339 239.499 li
137.462 239.738 li
137.587 239.97 li
137.711 240.2 li
137.833 240.426 li
137.958 240.648 li
138.08 240.867 li
138.205 241.082 li
138.326 241.292 li
138.449 241.5 li
138.572 241.703 li
138.695 241.903 li
138.821 242.099 li
138.944 242.292 li
139.064 242.481 li
139.189 242.667 li
139.313 242.85 li
139.436 243.032 li
139.56 243.207 li
139.684 243.38 li
139.807 243.549 li
139.929 243.716 li
140.052 243.88 li
140.174 244.042 li
140.298 244.2 li
140.422 244.355 li
140.546 244.508 li
140.669 244.656 li
140.793 244.804 li
140.916 244.948 li
141.038 245.089 li
141.162 245.229 li
141.287 245.365 li
141.41 245.5 li
141.535 245.63 li
141.656 245.759 li
141.779 245.886 li
141.9 246.01 li
142.023 246.132 li
142.147 246.252 li
142.271 246.37 li
142.396 246.486 li
142.518 246.6 li
142.642 246.711 li
142.763 246.822 li
142.887 246.929 li
143.012 247.036 li
143.137 247.14 li
143.259 247.243 li
143.384 247.342 li
143.504 247.443 li
143.627 247.539 li
143.751 247.635 li
143.874 247.73 li
143.997 247.824 li
144.121 247.913 li
144.243 248.003 li
144.367 248.091 li
144.492 248.178 li
144.611 248.265 li
144.736 248.349 li
144.86 248.434 li
144.985 248.517 li
145.107 248.597 li
145.23 248.677 li
145.353 248.755 li
145.476 248.834 li
145.598 248.911 li
145.725 248.986 li
145.848 249.06 li
145.972 249.134 li
146.095 249.206 li
146.216 249.279 li
146.341 249.351 li
146.464 249.42 li
146.587 249.493 li
146.711 249.56 li
146.834 249.628 li
146.957 249.698 li
147.079 249.763 li
147.202 249.829 li
147.325 249.894 li
147.449 249.959 li
147.571 250.023 li
147.696 250.086 li
147.82 250.15 li
147.941 250.212 li
148.063 250.273 li
148.188 250.335 li
148.313 250.396 li
148.436 250.458 li
148.56 250.516 li
148.684 250.575 li
148.806 250.633 li
148.93 250.693 li
149.053 250.75 li
149.175 250.807 li
149.298 250.865 li
149.422 250.921 li
149.546 250.977 li
149.665 251.031 li
149.792 251.087 li
149.915 251.143 li
150.038 251.197 li
150.162 251.25 li
150.282 251.303 li
150.407 251.355 li
150.531 251.409 li
150.654 251.459 li
150.779 251.511 li
150.901 251.563 li
151.025 251.613 li
151.148 251.663 li
151.273 251.711 li
151.394 251.763 li
151.519 251.81 li
151.641 251.859 li
151.766 251.906 li
151.888 251.952 li
152.012 252 li
152.136 252.044 li
152.255 252.091 li
152.379 252.136 li
152.503 252.181 li
152.628 252.226 li
152.75 252.268 li
152.875 252.311 li
152.995 252.353 li
153.12 252.396 li
153.244 252.436 li
153.367 252.476 li
153.489 252.516 li
153.614 252.555 li
153.737 252.594 li
153.861 252.632 li
153.984 252.67 li
154.106 252.707 li
154.229 252.744 li
154.354 252.778 li
154.477 252.814 li
154.6 252.848 li
154.724 252.884 li
154.846 252.916 li
154.969 252.949 li
155.094 252.981 li
155.217 253.013 li
155.339 253.042 li
155.461 253.072 li
155.586 253.102 li
155.71 253.132 li
155.833 253.162 li
155.954 253.188 li
156.078 253.213 li
156.203 253.243 li
156.325 253.266 li
156.449 253.292 li
156.573 253.317 li
156.695 253.342 li
156.819 253.365 li
156.942 253.389 li
157.065 253.41 li
157.191 253.432 li
157.312 253.453 li
157.436 253.473 li
157.562 253.495 li
157.682 253.513 li
157.805 253.533 li
157.928 253.549 li
158.053 253.569 li
158.174 253.583 li
158.299 253.601 li
158.421 253.617 li
158.544 253.633 li
158.668 253.649 li
158.791 253.664 li
158.916 253.678 li
159.04 253.691 li
159.163 253.704 li
159.283 253.718 li
159.407 253.731 li
159.53 253.742 li
159.657 253.752 li
159.78 253.765 li
159.901 253.776 li
160.025 253.786 li
160.147 253.795 li
160.269 253.806 li
160.393 253.816 li
160.515 253.824 li
160.642 253.831 li
160.765 253.841 li
160.887 253.849 li
161.01 253.856 li
161.132 253.864 li
161.257 253.87 li
161.382 253.876 li
161.506 253.885 li
161.628 253.888 li
161.751 253.894 li
161.871 253.9 li
161.996 253.907 li
162.12 253.912 li
162.241 253.917 li
162.368 253.922 li
162.489 253.926 li
162.614 253.93 li
162.738 253.934 li
162.858 253.938 li
162.981 253.941 li
163.106 253.946 li
163.23 253.949 li
163.353 253.951 li
163.476 253.955 li
163.6 253.958 li
163.723 253.959 li
163.847 253.961 li
163.969 253.965 li
164.095 253.967 li
164.217 253.97 li
164.34 253.973 li
164.461 253.974 li
164.587 253.976 li
164.709 253.978 li
164.833 253.978 li
164.956 253.98 li
165.079 253.983 li
165.204 253.985 li
165.323 253.985 li
165.447 253.987 li
165.571 253.987 li
165.693 253.989 li
165.819 253.989 li
165.942 253.991 li
166.063 253.991 li
166.188 253.993 li
166.311 253.993 li
166.436 253.993 li
166.558 253.995 li
166.682 253.995 li
166.806 253.996 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.454902 0.356863 0.321569 0.00392157 cmyk
f
117.387 252.785 mo
117.498 252.818 li
117.61 252.852 li
117.724 252.886 li
117.837 252.917 li
117.948 252.952 li
118.061 252.983 li
118.174 253.013 li
118.287 253.043 li
118.398 253.072 li
118.511 253.102 li
118.624 253.13 li
118.734 253.159 li
118.847 253.185 li
118.961 253.212 li
119.072 253.237 li
119.185 253.263 li
119.298 253.288 li
119.411 253.312 li
119.521 253.336 li
119.635 253.359 li
119.749 253.38 li
119.86 253.403 li
119.974 253.421 li
120.085 253.444 li
120.195 253.465 li
120.309 253.483 li
120.421 253.502 li
120.537 253.52 li
120.647 253.537 li
120.761 253.553 li
120.87 253.573 li
120.982 253.587 li
121.096 253.603 li
121.209 253.618 li
121.32 253.634 li
121.435 253.649 li
121.548 253.662 li
121.659 253.675 li
121.771 253.689 li
121.883 253.702 li
121.996 253.712 li
122.108 253.722 li
122.222 253.735 li
122.335 253.746 li
122.447 253.756 li
122.558 253.767 li
122.671 253.777 li
122.782 253.786 li
122.895 253.794 li
123.009 253.801 li
123.121 253.811 li
123.234 253.819 li
123.345 253.828 li
123.457 253.834 li
123.571 253.838 li
123.683 253.847 li
123.795 253.855 li
123.908 253.859 li
124.019 253.864 li
124.132 253.871 li
124.245 253.876 li
124.357 253.883 li
124.469 253.887 li
124.582 253.894 li
124.693 253.896 li
124.806 253.9 li
124.919 253.905 li
125.031 253.909 li
125.143 253.912 li
125.256 253.917 li
125.369 253.919 li
125.481 253.921 li
125.593 253.925 li
125.706 253.927 li
125.819 253.93 li
125.931 253.932 li
126.041 253.936 li
126.155 253.938 li
126.27 253.94 li
126.381 253.943 li
126.493 253.945 li
126.605 253.946 li
126.717 253.949 li
126.83 253.949 li
126.943 253.951 li
127.055 253.953 li
127.167 253.955 li
127.279 253.955 li
127.392 253.958 li
127.504 253.958 li
127.617 253.959 li
127.731 253.959 li
127.844 253.96 li
127.956 253.961 li
128.069 253.963 li
128.18 253.963 li
128.293 253.963 li
128.405 253.965 li
128.516 253.965 li
128.632 253.967 li
43.8535 253.951 li
43.9771 253.951 li
44.1001 253.951 li
44.2236 253.951 li
44.3457 253.949 li
44.4702 253.949 li
44.5933 253.949 li
44.7168 253.949 li
44.8398 253.948 li
44.9624 253.948 li
45.0854 253.946 li
45.2104 253.946 li
45.3335 253.945 li
45.4556 253.945 li
45.5791 253.945 li
45.7021 253.944 li
45.8247 253.941 li
45.9487 253.94 li
46.0732 253.94 li
46.1943 253.938 li
46.3188 253.938 li
46.4419 253.938 li
46.5659 253.936 li
46.689 253.934 li
46.8125 253.932 li
46.9355 253.932 li
47.0591 253.93 li
47.1821 253.928 li
47.3057 253.927 li
47.4287 253.925 li
47.5518 253.923 li
47.6758 253.921 li
47.7988 253.919 li
47.9224 253.917 li
48.043 253.917 li
48.168 253.912 li
48.291 253.911 li
48.4146 253.909 li
48.5376 253.907 li
48.6611 253.902 li
48.7832 253.9 li
48.9077 253.898 li
49.0308 253.894 li
49.1548 253.888 li
49.2778 253.887 li
49.4009 253.883 li
49.5244 253.879 li
49.6475 253.875 li
49.771 253.871 li
49.8931 253.869 li
50.0176 253.864 li
50.1396 253.859 li
50.2642 253.855 li
50.3887 253.849 li
50.5122 253.843 li
50.6343 253.838 li
50.7568 253.833 li
50.8789 253.828 li
51.0034 253.821 li
51.1274 253.814 li
51.2495 253.807 li
51.373 253.803 li
51.4961 253.792 li
51.6196 253.787 li
51.7427 253.779 li
51.8667 253.771 li
51.9897 253.763 li
52.1133 253.753 li
52.2373 253.746 li
52.3599 253.737 li
52.4829 253.728 li
52.6064 253.718 li
52.7295 253.71 li
52.853 253.7 li
52.9775 253.689 li
53.1011 253.678 li
53.2217 253.667 li
53.3467 253.655 li
53.4697 253.642 li
53.5918 253.63 li
53.7163 253.617 li
53.8384 253.604 li
53.9629 253.591 li
54.085 253.579 li
54.2095 253.564 li
54.3315 253.549 li
54.4565 253.535 li
54.5786 253.518 li
54.7031 253.502 li
54.8262 253.486 li
54.9487 253.469 li
55.0728 253.453 li
55.1953 253.435 li
55.3184 253.418 li
55.4429 253.398 li
55.5649 253.379 li
55.6899 253.36 li
55.813 253.341 li
55.936 253.319 li
56.3052 253.255 li
56.4272 253.233 li
56.5518 253.209 li
56.6748 253.186 li
56.7974 253.163 li
56.9204 253.136 li
57.0454 253.114 li
57.167 253.086 li
57.292 253.059 li
57.4141 253.034 li
57.5371 253.007 li
57.6616 252.977 li
57.7837 252.95 li
57.9082 252.919 li
58.0313 252.889 li
58.1538 252.861 li
58.2769 252.827 li
58.4019 252.797 li
58.5239 252.764 li
58.6465 252.732 li
58.7705 252.698 li
58.8931 252.662 li
59.0171 252.626 li
59.1406 252.592 li
59.2627 252.555 li
59.3862 252.518 li
59.5093 252.48 li
59.6323 252.441 li
59.7573 252.401 li
59.8789 252.362 li
60.0029 252.321 li
60.127 252.278 li
60.2495 252.235 li
60.3735 252.193 li
60.4961 252.149 li
60.6191 252.104 li
60.7427 252.058 li
60.8657 252.011 li
60.9893 251.963 li
61.1138 251.916 li
61.2363 251.867 li
61.3594 251.815 li
61.4829 251.764 li
61.605 251.712 li
61.729 251.659 li
61.8516 251.606 li
61.9756 251.549 li
62.0991 251.494 li
62.2236 251.439 li
62.3462 251.378 li
62.4678 251.319 li
62.5918 251.259 li
62.7158 251.198 li
62.8394 251.136 li
62.9624 251.073 li
63.0869 251.005 li
63.209 250.942 li
63.3315 250.875 li
63.4556 250.807 li
63.5796 250.735 li
63.7012 250.666 li
63.8242 250.593 li
63.9482 250.521 li
64.0713 250.446 li
64.1948 250.37 li
64.3179 250.292 li
64.4414 250.213 li
64.5645 250.133 li
64.689 250.049 li
64.812 249.966 li
64.936 249.882 li
65.0591 249.794 li
65.1816 249.708 li
65.3047 249.62 li
65.4282 249.527 li
65.5513 249.433 li
65.6748 249.338 li
65.7979 249.244 li
65.9209 249.146 li
66.0444 249.046 li
66.1675 248.944 li
66.2915 248.842 li
66.4155 248.737 li
66.5381 248.629 li
66.6611 248.521 li
66.7837 248.412 li
66.9067 248.297 li
67.0303 248.183 li
67.1533 248.068 li
67.2778 247.949 li
67.4009 247.828 li
67.5249 247.707 li
67.6465 247.583 li
67.7705 247.456 li
67.8936 247.328 li
68.0166 247.198 li
68.1401 247.065 li
68.2632 246.929 li
68.3867 246.792 li
68.6333 246.511 li
68.7563 246.37 li
68.8813 246.223 li
69.0034 246.074 li
69.1255 245.924 li
69.25 245.772 li
69.3726 245.617 li
69.4966 245.459 li
69.6191 245.3 li
69.7422 245.138 li
69.8643 244.975 li
69.9888 244.806 li
70.1108 244.637 li
70.2354 244.467 li
70.3584 244.292 li
70.481 244.118 li
70.6055 243.939 li
70.729 243.757 li
70.8511 243.574 li
70.9766 243.385 li
71.0986 243.199 li
71.2222 243.006 li
71.3452 242.814 li
71.4702 242.616 li
71.5898 242.417 li
71.7158 242.218 li
71.8374 242.013 li
71.9624 241.808 li
72.0854 241.597 li
72.2075 241.385 li
72.332 241.171 li
72.4531 240.952 li
72.5786 240.734 li
72.7007 240.51 li
72.8252 240.289 li
72.9487 240.059 li
73.0713 239.829 li
73.1943 239.595 li
73.3179 239.359 li
73.4409 239.121 li
73.5654 238.877 li
73.6875 238.632 li
73.811 238.386 li
73.9341 238.134 li
74.0601 237.881 li
74.1797 237.625 li
74.3027 237.367 li
74.4263 237.104 li
74.5508 236.838 li
74.6743 236.57 li
74.7974 236.298 li
74.9219 236.023 li
75.043 235.746 li
75.1665 235.464 li
75.2905 235.18 li
75.4141 234.891 li
75.5361 234.602 li
75.6621 234.307 li
75.7832 234.009 li
75.9077 233.709 li
76.0317 233.403 li
76.1528 233.094 li
76.2773 232.783 li
76.3994 232.468 li
76.5239 232.148 li
76.646 231.827 li
76.7705 231.5 li
76.8926 231.169 li
77.0166 230.835 li
77.1382 230.495 li
77.2632 230.156 li
77.3872 229.811 li
77.5098 229.457 li
77.6328 229.107 li
77.7563 228.75 li
77.8794 228.384 li
78.0039 228.02 li
78.125 227.65 li
78.251 227.276 li
78.373 226.896 li
78.4961 226.512 li
78.6187 226.126 li
78.7427 225.735 li
78.8652 225.338 li
78.9883 224.936 li
79.1138 224.531 li
79.2349 224.122 li
79.3594 223.708 li
79.4814 223.289 li
79.605 222.864 li
79.7285 222.436 li
79.853 222.004 li
79.9751 221.566 li
80.0996 221.125 li
80.2217 220.677 li
80.3447 220.227 li
80.4683 219.768 li
80.5903 219.309 li
80.7139 218.841 li
80.8369 218.373 li
80.9619 217.895 li
81.0859 217.413 li
81.2085 216.929 li
81.3315 216.441 li
81.4541 215.943 li
81.5781 215.445 li
81.7026 214.94 li
81.8237 214.432 li
81.9492 213.917 li
82.0693 213.397 li
82.1938 212.874 li
82.3169 212.345 li
82.4404 211.811 li
82.5649 211.275 li
82.687 210.734 li
82.8105 210.186 li
82.9346 209.635 li
83.0571 209.078 li
83.1802 208.517 li
83.3027 207.952 li
83.4268 207.38 li
83.5503 206.807 li
83.6724 206.231 li
83.7974 205.648 li
83.9214 205.06 li
84.0449 204.469 li
84.168 203.873 li
84.2915 203.274 li
84.4136 202.669 li
84.5366 202.062 li
84.6602 201.45 li
84.7813 200.834 li
84.9058 200.213 li
85.0278 199.59 li
85.1528 198.964 li
85.2769 198.335 li
85.3994 197.699 li
85.5215 197.061 li
85.646 196.419 li
85.77 195.776 li
85.8936 195.127 li
86.0146 194.475 li
86.1377 193.822 li
86.2622 193.164 li
86.3862 192.503 li
86.5103 191.839 li
86.6333 191.172 li
86.7559 190.502 li
86.8789 189.831 li
87.0024 189.155 li
87.1265 188.476 li
87.25 187.795 li
87.3711 187.111 li
87.4937 186.424 li
87.6177 185.735 li
87.7427 185.046 li
87.8647 184.352 li
87.9883 183.657 li
88.1123 182.958 li
88.1543 182.491 li
88.2671 183.084 li
88.3784 183.679 li
88.4912 184.272 li
88.6035 184.863 li
88.7158 185.458 li
88.8286 186.049 li
88.9409 186.642 li
89.0537 187.234 li
89.166 187.826 li
89.2788 188.415 li
89.3911 189.006 li
89.5034 189.598 li
89.6162 190.186 li
89.7275 190.775 li
89.8413 191.363 li
89.9536 191.951 li
90.0649 192.54 li
90.1787 193.125 li
90.29 193.712 li
90.4028 194.298 li
90.5151 194.884 li
90.6279 195.47 li
90.7393 196.051 li
90.8516 196.634 li
90.9644 197.217 li
91.0767 197.798 li
91.189 198.378 li
91.3018 198.958 li
91.415 199.538 li
91.5259 200.112 li
91.6382 200.689 li
91.7529 201.263 li
91.8643 201.839 li
91.9756 202.411 li
92.0879 202.98 li
92.2007 203.549 li
92.3125 204.118 li
92.4243 204.684 li
92.5396 205.249 li
92.6504 205.81 li
92.7617 206.373 li
92.8755 206.93 li
92.9878 207.487 li
93.0991 208.04 li
93.2119 208.594 li
93.3252 209.142 li
93.437 209.69 li
93.5493 210.234 li
93.6616 210.777 li
93.7744 211.317 li
93.8867 211.854 li
93.9995 212.388 li
94.1128 212.92 li
94.2231 213.447 li
94.3359 213.972 li
94.4507 214.495 li
94.563 215.016 li
94.6743 215.529 li
94.7856 216.043 li
94.8994 216.55 li
95.0117 217.057 li
95.1235 217.56 li
95.2358 218.057 li
95.3496 218.551 li
95.4609 219.043 li
95.5732 219.529 li
95.688 220.011 li
95.7983 220.491 li
95.9111 220.966 li
96.0225 221.437 li
96.1348 221.905 li
96.2485 222.365 li
96.3599 222.826 li
96.4727 223.28 li
96.585 223.73 li
96.6978 224.173 li
96.8101 224.616 li
96.9224 225.051 li
97.0352 225.484 li
97.1484 225.912 li
97.2612 226.335 li
97.3735 226.752 li
97.4863 227.167 li
97.5986 227.578 li
97.71 227.982 li
97.8237 228.382 li
97.936 228.778 li
98.0464 229.168 li
98.1582 229.554 li
98.2739 229.936 li
98.3862 230.312 li
98.4976 230.685 li
98.6104 231.051 li
98.7236 231.415 li
98.8354 231.772 li
98.9478 232.125 li
99.0591 232.473 li
99.1729 232.818 li
99.2842 233.156 li
99.397 233.489 li
99.5083 233.819 li
99.6216 234.146 li
99.7344 234.463 li
99.8457 234.781 li
99.9595 235.091 li
100.073 235.4 li
100.183 235.7 li
100.296 235.998 li
100.408 236.29 li
100.521 236.58 li
100.633 236.864 li
100.747 237.144 li
100.859 237.419 li
100.97 237.691 li
101.084 237.957 li
101.195 238.22 li
101.307 238.478 li
101.421 238.733 li
101.533 238.981 li
101.645 239.226 li
101.758 239.469 li
101.87 239.708 li
101.982 239.94 li
102.094 240.17 li
102.206 240.397 li
102.32 240.619 li
102.434 240.837 li
102.545 241.051 li
102.656 241.262 li
102.77 241.47 li
102.88 241.672 li
102.994 241.874 li
103.107 242.07 li
103.221 242.263 li
103.331 242.451 li
103.443 242.638 li
103.555 242.82 li
103.668 243.001 li
103.783 243.177 li
103.896 243.349 li
104.008 243.52 li
104.119 243.686 li
104.23 243.851 li
104.344 244.012 li
104.455 244.17 li
104.566 244.326 li
104.682 244.479 li
104.793 244.626 li
104.906 244.775 li
105.019 244.918 li
105.131 245.06 li
105.242 245.199 li
105.356 245.334 li
105.469 245.468 li
105.581 245.601 li
105.693 245.73 li
105.807 245.856 li
105.919 245.981 li
106.028 246.101 li
106.142 246.223 li
106.48 246.57 li
106.593 246.682 li
106.704 246.792 li
106.816 246.9 li
106.93 247.005 li
107.043 247.11 li
107.155 247.212 li
107.268 247.313 li
107.379 247.414 li
107.492 247.508 li
107.604 247.606 li
107.717 247.701 li
107.83 247.793 li
107.941 247.882 li
108.054 247.973 li
108.167 248.062 li
108.277 248.149 li
108.391 248.236 li
108.504 248.32 li
108.616 248.405 li
108.729 248.487 li
108.841 248.567 li
108.954 248.647 li
109.066 248.726 li
109.178 248.805 li
109.291 248.879 li
109.404 248.956 li
109.516 249.032 li
109.628 249.104 li
109.741 249.178 li
109.854 249.25 li
109.965 249.322 li
110.078 249.392 li
110.19 249.463 li
110.304 249.531 li
110.415 249.599 li
110.528 249.667 li
110.64 249.734 li
110.752 249.799 li
110.864 249.865 li
110.979 249.93 li
111.09 249.994 li
111.202 250.057 li
111.315 250.121 li
111.426 250.182 li
111.539 250.244 li
111.652 250.306 li
111.764 250.366 li
111.875 250.426 li
111.988 250.487 li
112.102 250.546 li
112.212 250.605 li
112.325 250.664 li
112.44 250.72 li
112.552 250.779 li
112.662 250.836 li
112.777 250.891 li
112.891 250.947 li
113.001 251.002 li
113.114 251.058 li
113.227 251.112 li
113.338 251.167 li
113.451 251.221 li
113.563 251.273 li
113.677 251.327 li
113.79 251.378 li
113.9 251.43 li
114.015 251.481 li
114.126 251.534 li
114.238 251.583 li
114.352 251.633 li
114.465 251.681 li
114.576 251.732 li
114.688 251.781 li
114.801 251.83 li
114.912 251.875 li
115.024 251.923 li
115.137 251.971 li
115.25 252.015 li
115.362 252.062 li
115.475 252.106 li
115.589 252.152 li
115.699 252.195 li
115.813 252.239 li
115.925 252.282 li
116.036 252.324 li
116.149 252.366 li
116.261 252.407 li
116.373 252.447 li
116.486 252.487 li
116.599 252.526 li
116.71 252.565 li
116.823 252.603 li
116.937 252.641 li
117.049 252.677 li
117.16 252.713 li
117.273 252.749 li
117.387 252.785 li
cp
0.231373 0.164706 0.156863 0 cmyk
f
81.4805 253.972 mo
81.5928 253.972 li
81.7031 253.972 li
81.8159 253.972 li
81.9263 253.97 li
82.0366 253.97 li
82.1489 253.97 li
82.2583 253.97 li
82.3721 253.969 li
82.481 253.969 li
82.5933 253.967 li
82.7036 253.967 li
82.814 253.965 li
82.9258 253.965 li
83.0361 253.965 li
83.1494 253.965 li
83.2588 253.963 li
83.3726 253.961 li
83.4819 253.961 li
83.5933 253.96 li
83.7036 253.96 li
83.814 253.959 li
83.9277 253.958 li
84.0366 253.955 li
84.1479 253.955 li
84.2583 253.953 li
84.3711 253.951 li
84.4814 253.95 li
84.5918 253.948 li
84.7041 253.947 li
84.8145 253.945 li
84.9272 253.943 li
85.0376 253.94 li
85.1479 253.938 li
85.2603 253.938 li
85.3706 253.932 li
85.4824 253.932 li
85.5938 253.93 li
85.7046 253.927 li
85.8149 253.923 li
85.9253 253.921 li
86.0371 253.919 li
86.1475 253.913 li
86.2598 253.911 li
86.3711 253.909 li
86.4829 253.905 li
86.5942 253.898 li
86.7036 253.896 li
86.8159 253.892 li
86.9253 253.888 li
87.0391 253.885 li
87.1484 253.88 li
87.2593 253.875 li
87.3706 253.87 li
87.481 253.864 li
87.5938 253.86 li
87.7031 253.854 li
87.8145 253.847 li
87.9268 253.841 li
88.0371 253.834 li
88.1475 253.829 li
88.2603 253.822 li
88.3716 253.815 li
88.4829 253.807 li
88.5933 253.798 li
88.7041 253.791 li
88.8164 253.784 li
88.9263 253.775 li
89.0366 253.766 li
89.1479 253.757 li
89.2583 253.748 li
89.3711 253.74 li
89.4814 253.729 li
89.5938 253.718 li
89.7041 253.708 li
89.8149 253.699 li
89.9272 253.687 li
90.0376 253.674 li
90.1489 253.663 li
90.2607 253.651 li
90.3721 253.638 li
90.4819 253.624 li
90.5933 253.611 li
90.7046 253.598 li
90.8154 253.583 li
90.9277 253.569 li
91.0381 253.552 li
91.1494 253.537 li
91.2612 253.522 li
91.3716 253.505 li
91.4829 253.488 li
91.5942 253.471 li
91.7056 253.455 li
91.8164 253.436 li
91.9268 253.417 li
92.0391 253.397 li
92.1489 253.378 li
92.2617 253.359 li
92.3706 253.337 li
92.5938 253.293 li
92.7041 253.274 li
92.8164 253.25 li
92.9272 253.228 li
93.0405 253.203 li
93.1499 253.179 li
93.2603 253.152 li
93.3716 253.129 li
93.4834 253.104 li
93.5947 253.076 li
93.7046 253.049 li
93.8159 253.023 li
93.9277 252.994 li
94.0381 252.964 li
94.1484 252.936 li
94.2607 252.905 li
94.3721 252.875 li
94.4829 252.842 li
94.5942 252.812 li
94.7046 252.778 li
94.8169 252.746 li
94.9272 252.711 li
95.0381 252.677 li
95.1504 252.641 li
95.2603 252.605 li
95.3716 252.569 li
95.4819 252.532 li
95.5947 252.493 li
95.7051 252.455 li
95.8154 252.415 li
95.9277 252.375 li
96.0396 252.333 li
96.1509 252.291 li
96.2622 252.248 li
96.3735 252.206 li
96.4839 252.159 li
96.5947 252.116 li
96.7051 252.068 li
96.8164 252.022 li
96.9263 251.973 li
97.04 251.924 li
97.1504 251.875 li
97.2617 251.826 li
97.3711 251.775 li
97.4824 251.72 li
97.5938 251.667 li
97.7075 251.614 li
97.8159 251.557 li
97.9282 251.5 li
98.0396 251.445 li
98.1504 251.386 li
98.2607 251.327 li
98.3721 251.266 li
98.4854 251.203 li
98.5942 251.143 li
98.7046 251.078 li
98.8174 251.012 li
98.9268 250.947 li
99.0391 250.878 li
99.1494 250.811 li
99.2622 250.739 li
99.3726 250.667 li
99.4839 250.595 li
99.5962 250.524 li
99.7056 250.448 li
99.8174 250.371 li
99.9277 250.292 li
100.04 250.213 li
100.15 250.133 li
100.261 250.049 li
100.373 249.966 li
100.483 249.88 li
100.595 249.792 li
100.705 249.706 li
100.818 249.615 li
100.93 249.524 li
101.039 249.429 li
101.15 249.334 li
101.262 249.238 li
101.374 249.141 li
101.484 249.041 li
101.596 248.937 li
101.707 248.833 li
101.816 248.73 li
101.929 248.623 li
102.039 248.511 li
102.151 248.403 li
102.262 248.289 li
102.373 248.172 li
102.484 248.056 li
102.596 247.936 li
102.707 247.816 li
102.818 247.693 li
102.93 247.57 li
103.04 247.442 li
103.152 247.312 li
103.263 247.181 li
103.373 247.048 li
103.482 246.911 li
103.595 246.773 li
103.707 246.634 li
103.816 246.492 li
103.929 246.347 li
104.039 246.201 li
104.152 246.051 li
104.262 245.901 li
104.373 245.749 li
104.484 245.592 li
104.596 245.433 li
104.707 245.273 li
104.816 245.111 li
104.928 244.946 li
104.95 244.878 li
105.063 245.021 li
105.173 245.16 li
105.287 245.298 li
105.4 245.433 li
105.513 245.566 li
105.625 245.694 li
105.738 245.823 li
105.85 245.947 li
105.961 246.069 li
106.074 246.19 li
106.187 246.308 li
106.299 246.425 li
106.412 246.539 li
106.523 246.651 li
106.636 246.763 li
106.748 246.871 li
106.861 246.976 li
106.975 247.082 li
107.087 247.189 li
107.199 247.287 li
107.31 247.388 li
107.422 247.483 li
107.535 247.582 li
107.647 247.675 li
107.76 247.77 li
107.872 247.859 li
107.984 247.952 li
108.097 248.039 li
108.21 248.127 li
108.322 248.213 li
108.437 248.298 li
108.548 248.383 li
108.66 248.465 li
108.773 248.548 li
108.884 248.628 li
108.998 248.707 li
109.11 248.787 li
109.223 248.863 li
109.334 248.939 li
109.447 249.014 li
109.561 249.089 li
109.672 249.161 li
109.784 249.235 li
109.897 249.307 li
110.011 249.376 li
110.122 249.449 li
110.234 249.516 li
110.348 249.585 li
110.46 249.653 li
110.572 249.721 li
110.685 249.788 li
110.795 249.852 li
110.91 249.917 li
111.021 249.983 li
111.135 250.046 li
111.246 250.11 li
111.358 250.172 li
111.471 250.234 li
111.585 250.295 li
111.696 250.357 li
111.809 250.418 li
111.921 250.477 li
112.032 250.537 li
112.146 250.595 li
112.257 250.655 li
112.371 250.714 li
112.484 250.771 li
112.595 250.828 li
112.709 250.885 li
112.821 250.941 li
112.935 250.995 li
113.046 251.052 li
113.158 251.107 li
113.271 251.162 li
113.385 251.216 li
113.494 251.268 li
113.608 251.323 li
113.721 251.375 li
113.832 251.427 li
113.945 251.479 li
114.059 251.53 li
114.171 251.582 li
114.282 251.631 li
114.396 251.679 li
114.507 251.73 li
114.621 251.779 li
114.731 251.828 li
114.845 251.875 li
114.956 251.922 li
115.068 251.971 li
115.183 252.014 li
115.295 252.062 li
115.405 252.106 li
115.519 252.153 li
115.631 252.197 li
115.743 252.24 li
115.855 252.282 li
115.967 252.327 li
116.08 252.368 li
116.192 252.409 li
116.305 252.451 li
116.419 252.489 li
116.531 252.529 li
116.643 252.569 li
116.756 252.607 li
116.869 252.644 li
116.979 252.681 li
117.093 252.717 li
117.316 252.789 li
117.43 252.823 li
117.543 252.859 li
117.655 252.89 li
117.767 252.924 li
117.88 252.956 li
117.993 252.988 li
118.104 253.018 li
118.217 253.048 li
118.33 253.079 li
118.443 253.108 li
118.555 253.136 li
118.667 253.165 li
118.779 253.19 li
118.893 253.22 li
119.005 253.243 li
119.117 253.269 li
119.23 253.293 li
119.343 253.319 li
119.453 253.342 li
119.564 253.366 li
119.68 253.389 li
119.793 253.41 li
119.905 253.431 li
120.018 253.453 li
120.128 253.473 li
120.241 253.492 li
120.352 253.51 li
120.47 253.528 li
120.579 253.546 li
120.691 253.562 li
120.802 253.58 li
120.915 253.596 li
121.027 253.613 li
121.142 253.627 li
121.252 253.642 li
121.367 253.657 li
121.479 253.669 li
121.591 253.683 li
121.702 253.698 li
121.815 253.71 li
121.928 253.72 li
122.041 253.733 li
122.153 253.745 li
122.266 253.755 li
122.378 253.765 li
122.489 253.776 li
122.603 253.786 li
122.715 253.794 li
122.826 253.804 li
122.941 253.811 li
123.054 253.822 li
123.165 253.829 li
123.276 253.836 li
123.389 253.843 li
123.501 253.849 li
123.615 253.858 li
123.729 253.864 li
123.842 253.869 li
123.951 253.875 li
124.063 253.881 li
124.178 253.887 li
124.288 253.892 li
124.401 253.898 li
124.514 253.905 li
124.625 253.907 li
124.738 253.911 li
124.852 253.915 li
124.964 253.919 li
125.075 253.921 li
125.188 253.927 li
125.3 253.93 li
125.413 253.932 li
125.525 253.935 li
125.639 253.938 li
125.749 253.94 li
125.862 253.944 li
125.974 253.946 li
126.088 253.95 li
126.199 253.951 li
126.313 253.953 li
126.426 253.955 li
126.537 253.958 li
126.649 253.959 li
126.762 253.959 li
126.876 253.961 li
126.987 253.963 li
127.1 253.965 li
127.211 253.965 li
127.323 253.967 li
127.436 253.967 li
127.548 253.97 li
127.663 253.97 li
127.775 253.971 li
127.887 253.973 li
128 253.974 li
128.11 253.974 li
128.224 253.974 li
128.337 253.976 li
128.447 253.976 li
128.562 253.977 li
81.4805 253.972 li
cp
0.666667 0.576471 0.517647 0.317647 cmyk
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 70 /F putdup 99 /c putdup 101 /e putdup 110 /n putdup 113 /q putdup 114 /r putdup 117 /u putdup 121 /y putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapH [67] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E8BCF65E1A153B8F64C14E4D433BE34E80499C2222430927749B4F85A3CF0F> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC469D5F7161571A32A96A021C1AB03ECA050447FC0A> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909FC3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F25F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D7F57E818435DFAAB95E4B5> |-/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D57099036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18B95062C1F81D8B> |-/q <1C60D8A8C9B7E897EED043C74253B54ADC1CD15CC5D2369EED179E418749FCECA224FAD8A34EB9BD7877CC97BC141452C1C22D35DEC4354AEA53EC7F1B702A353EE3D0B6B3B48164FE3D7F142CEB2DFE49B221F1E445CD43E52605D76F9AD0357E0FCE05AB18BD03B9B30164C19713955B60B364B411D31A9471BA6FA77C647175A8A5ADCE0BBC58F86560C14B95155E265ED4AAA17097630979807FC1CE9546F9CDC26D3E> |-/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC355A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C630D7D24526AEEFC04035142C31FA6B3B108962236> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94FF3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817E1CD6A7C5BE0B48DC194> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FF6A82283623EEB25A9349C2751A0E315AAE13B4796C423913828FA716B5ABEF10D096130AD2A2329DF2C9C65ECC79B77A9BB791B3C887ED4EDF5DA91A1776E19A8D0D9ECECC26B8983788DC541C6EA7A67E7E> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/VADSCJ+MyriadPro-Regular*1 [70{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 55.6519 mo(F)sh8.11523 51.1724 mo(r)sh8.11523 48.0991 mo(equen)[-4.85742 -5.4585 -5.34229 -4.85742 0 ]ysh8.11523 22.2026 mo(c)sh8.11523 17.6938 mo(y)sh0.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
11.7539 60.1567 mo
11.7539 12.376 li
0.858823 0.85098 0.788235 1 cmyk
@
11.7539 60.251 mo
66.438 60.251 li
@
91.2524 58.4634 mo
91.2773 58.4634 li
91.3032 58.4634 li
91.3281 58.4634 li
91.3545 58.4634 li
91.3804 58.4634 li
91.4063 58.4634 li
91.4312 58.4634 li
91.4561 58.4624 li
91.4819 58.4624 li
91.5078 58.4624 li
91.5342 58.4624 li
91.5591 58.4614 li
91.585 58.4614 li
91.6108 58.4614 li
91.6357 58.4614 li
91.6616 58.4604 li
91.686 58.4604 li
91.7109 58.4604 li
91.7388 58.4595 li
91.7646 58.4595 li
91.7891 58.4595 li
91.8149 58.4595 li
91.8398 58.458 li
91.8657 58.458 li
91.8916 58.457 li
91.917 58.457 li
91.9429 58.457 li
91.9678 58.457 li
91.9937 58.457 li
92.0186 58.4551 li
92.0444 58.4551 li
92.0703 58.4551 li
92.0952 58.4526 li
92.1216 58.4526 li
92.1475 58.4512 li
92.1724 58.4502 li
92.1982 58.4502 li
92.2241 58.4502 li
92.2476 58.4482 li
92.2749 58.4482 li
92.2998 58.4473 li
92.3262 58.4448 li
92.3521 58.4438 li
92.3765 58.4438 li
92.4023 58.4429 li
92.4282 58.4419 li
92.4531 58.4409 li
92.479 58.4409 li
92.5044 58.4399 li
92.5303 58.4385 li
92.5562 58.4365 li
92.582 58.4355 li
92.6069 58.4346 li
92.6328 58.4316 li
92.6577 58.4297 li
92.6826 58.4287 li
92.71 58.4263 li
92.7349 58.4243 li
92.7607 58.4233 li
92.7856 58.4214 li
92.8115 58.4189 li
92.8374 58.417 li
92.8638 58.415 li
92.8887 58.4126 li
92.9131 58.4106 li
92.939 58.4082 li
92.9648 58.4058 li
92.9912 58.4019 li
93.0156 58.3994 li
93.0405 58.3975 li
93.0669 58.3955 li
93.0928 58.3921 li
93.1187 58.3901 li
93.1436 58.3872 li
93.1685 58.3833 li
93.1943 58.3789 li
93.2202 58.3745 li
93.2466 58.3726 li
93.2715 58.3687 li
93.2974 58.3638 li
93.3223 58.3604 li
93.3481 58.3564 li
93.373 58.353 li
93.3989 58.3501 li
93.4248 58.3457 li
93.4502 58.3408 li
93.4771 58.3345 li
93.502 58.3315 li
93.5278 58.3262 li
93.5522 58.3208 li
93.5771 58.3149 li
93.603 58.311 li
93.6289 58.3057 li
93.6553 58.3003 li
93.6802 58.2944 li
93.7061 58.2891 li
93.7319 58.2837 li
93.7568 58.2764 li
93.7827 58.2695 li
@
93.7832 58.27 mo
93.8081 58.2637 li
93.834 58.2578 li
93.8599 58.2495 li
93.8848 58.2451 li
93.9111 58.2373 li
93.937 58.231 li
93.9629 58.2227 li
93.9868 58.2153 li
94.0127 58.2075 li
94.0386 58.1997 li
94.0635 58.1919 li
94.0908 58.1846 li
94.1143 58.1763 li
94.1406 58.166 li
94.1665 58.1587 li
94.1909 58.1504 li
94.2168 58.1401 li
94.2427 58.1318 li
94.2676 58.1206 li
94.2939 58.1123 li
94.3198 58.1021 li
94.3447 58.0928 li
94.3706 58.082 li
94.3955 58.0723 li
94.4214 58.0615 li
94.4463 58.0493 li
94.4736 58.0386 li
94.4985 58.0278 li
94.5244 58.0171 li
94.5493 58.0049 li
94.5752 57.9932 li
94.6011 57.98 li
94.627 57.9697 li
94.6519 57.9565 li
94.6782 57.9434 li
94.7031 57.9307 li
94.729 57.9185 li
94.7549 57.9038 li
94.7793 57.8892 li
94.8042 57.875 li
94.8311 57.8613 li
94.8564 57.8462 li
94.8823 57.8315 li
94.9082 57.8169 li
94.9331 57.8008 li
94.958 57.7852 li
94.9839 57.7705 li
95.0098 57.7529 li
95.0361 57.7368 li
95.061 57.7197 li
95.0869 57.7036 li
95.1118 57.686 li
95.1377 57.6665 li
95.1626 57.6489 li
95.1885 57.6309 li
95.2144 57.6123 li
95.2397 57.5928 li
95.2656 57.5723 li
95.2915 57.5527 li
95.3164 57.5332 li
95.3408 57.5127 li
95.3667 57.4912 li
95.3926 57.4702 li
95.4185 57.4492 li
95.4453 57.4263 li
95.4697 57.4038 li
95.4956 57.3818 li
95.5205 57.3584 li
95.5464 57.334 li
95.5723 57.3091 li
95.5972 57.2847 li
95.6235 57.2598 li
95.6494 57.2339 li
95.6743 57.209 li
95.6992 57.1821 li
95.7251 57.1558 li
95.751 57.1265 li
95.7769 57.1006 li
95.8032 57.0718 li
95.8281 57.042 li
95.854 57.0132 li
95.8789 56.9829 li
95.9048 56.9512 li
95.9297 56.9209 li
95.9565 56.8901 li
95.9814 56.856 li
96.0068 56.8237 li
96.0327 56.791 li
96.0586 56.7578 li
96.083 56.7222 li
96.1089 56.6885 li
96.1338 56.6528 li
96.1597 56.6172 li
96.186 56.5791 li
96.2109 56.5425 li
96.2368 56.5049 li
96.2617 56.4658 li
96.2876 56.4268 li
96.3125 56.3867 li
96.3394 56.3457 li
@
96.3394 56.3452 mo
96.3643 56.3042 li
96.3901 56.2617 li
96.415 56.2197 li
96.4409 56.1772 li
96.4673 56.1328 li
96.4922 56.0894 li
96.5181 56.0449 li
96.5439 55.9976 li
96.5688 55.9512 li
96.5947 55.9048 li
96.6206 55.856 li
96.647 55.8076 li
96.6719 55.7588 li
96.6978 55.7085 li
96.7222 55.6572 li
96.748 55.6064 li
96.7739 55.5547 li
96.7988 55.501 li
96.8247 55.4482 li
96.8511 55.3936 li
96.876 55.3379 li
96.9019 55.2832 li
96.9268 55.2256 li
96.9526 55.1694 li
96.9775 55.1099 li
97.0034 55.0513 li
97.0298 54.9922 li
97.0557 54.9321 li
97.0806 54.8721 li
97.1055 54.8081 li
97.1313 54.7466 li
97.1572 54.6836 li
97.1831 54.6177 li
97.208 54.5527 li
97.2329 54.4868 li
97.2588 54.4219 li
97.2852 54.354 li
97.3105 54.2866 li
97.3354 54.2163 li
97.3613 54.147 li
97.3862 54.0767 li
97.4126 54.0044 li
97.4385 53.9316 li
97.4634 53.8594 li
97.4893 53.7847 li
97.5151 53.709 li
97.54 53.6333 li
97.5659 53.5571 li
97.5908 53.4795 li
97.6182 53.4004 li
97.6431 53.3208 li
97.6689 53.2417 li
97.6938 53.1606 li
97.7197 53.0771 li
97.7446 52.9946 li
97.7705 52.9106 li
97.7969 52.8262 li
97.8228 52.7397 li
97.8477 52.6528 li
97.8721 52.563 li
97.8979 52.4756 li
97.9238 52.3848 li
97.9487 52.2939 li
97.9766 52.2007 li
98.001 52.1079 li
98.0259 52.0127 li
98.0518 51.9175 li
98.0767 51.8213 li
98.1025 51.7236 li
98.1284 51.625 li
98.1533 51.5249 li
98.1797 51.4233 li
98.2056 51.3213 li
98.2305 51.2183 li
98.2563 51.1138 li
98.2813 51.0088 li
98.3071 50.9014 li
98.333 50.7915 li
98.3594 50.6841 li
98.3853 50.5718 li
98.4102 50.4604 li
98.4351 50.3457 li
98.4609 50.2334 li
98.4868 50.1152 li
98.5127 49.999 li
98.5371 49.8794 li
98.5625 49.7603 li
98.5898 49.6392 li
98.6143 49.5161 li
98.6392 49.3921 li
98.665 49.2681 li
98.6909 49.1416 li
98.7158 49.0132 li
98.7422 48.8843 li
98.7681 48.752 li
98.7939 48.6191 li
98.8188 48.4858 li
98.8438 48.3506 li
98.8696 48.2153 li
98.8955 48.0762 li
@
98.8955 48.0767 mo
98.9204 47.939 li
98.9463 47.7974 li
98.9712 47.6543 li
98.9971 47.5127 li
99.0234 47.3667 li
99.0493 47.2197 li
99.0752 47.0723 li
99.0986 46.9233 li
99.1245 46.7729 li
99.1504 46.6201 li
99.1763 46.4668 li
99.2017 46.312 li
99.2275 46.1563 li
99.2534 45.9976 li
99.2783 45.8394 li
99.3042 45.6782 li
99.3291 45.5176 li
99.355 45.3525 li
99.3813 45.188 li
99.4063 45.0239 li
99.4321 44.856 li
99.458 44.6875 li
99.4829 44.5171 li
99.5078 44.3462 li
99.5347 44.1743 li
99.5596 44 li
99.5859 43.8247 li
99.6118 43.6499 li
99.6367 43.4727 li
99.6616 43.2939 li
99.6875 43.1133 li
99.7134 42.9326 li
99.7393 42.75 li
99.7637 42.5669 li
99.79 42.3818 li
99.8164 42.1958 li
99.8423 42.0107 li
99.8667 41.8223 li
99.8916 41.6343 li
99.9175 41.4438 li
99.9434 41.2534 li
99.9697 41.062 li
99.9946 40.8691 li
100.021 40.6748 li
100.045 40.481 li
100.071 40.2861 li
100.096 40.0898 li
100.122 39.8916 li
100.148 39.6948 li
100.173 39.4932 li
100.199 39.2954 li
100.225 39.0942 li
100.25 38.8945 li
100.275 38.6909 li
100.301 38.4888 li
100.325 38.2827 li
100.353 38.0791 li
100.377 37.874 li
100.405 37.6685 li
100.428 37.4609 li
100.453 37.2544 li
100.48 37.0479 li
100.506 36.8374 li
100.531 36.6299 li
100.557 36.4199 li
100.583 36.2075 li
100.608 35.998 li
100.634 35.7861 li
100.658 35.5728 li
100.685 35.3608 li
100.711 35.1475 li
100.736 34.9336 li
100.762 34.7183 li
100.787 34.5044 li
100.813 34.2876 li
100.838 34.0728 li
100.863 33.855 li
100.889 33.6387 li
100.916 33.4194 li
100.941 33.2017 li
100.967 32.9829 li
100.99 32.7646 li
101.017 32.5449 li
101.043 32.3223 li
101.067 32.1001 li
101.094 31.8804 li
101.119 31.6567 li
101.145 31.4351 li
101.17 31.2134 li
101.195 30.9893 li
101.221 30.7656 li
101.246 30.5396 li
101.271 30.3154 li
101.299 30.0894 li
101.324 29.8633 li
101.35 29.6372 li
101.375 29.4102 li
101.4 29.1831 li
101.425 28.9546 li
101.451 28.7261 li
@
101.451 28.7266 mo
101.477 28.4961 li
101.502 28.2681 li
101.527 28.0376 li
101.555 27.8071 li
101.58 27.5767 li
101.605 27.3472 li
101.631 27.1172 li
101.656 26.8843 li
101.681 26.6519 li
101.707 26.4214 li
101.734 26.1885 li
101.759 25.9561 li
101.783 25.7246 li
101.81 25.4922 li
101.834 25.2583 li
101.86 25.0259 li
101.887 24.7935 li
101.911 24.5596 li
101.938 24.3281 li
101.963 24.0957 li
101.988 23.8628 li
102.014 23.6313 li
102.039 23.3999 li
102.064 23.1694 li
102.091 22.939 li
102.115 22.7085 li
102.143 22.479 li
102.168 22.251 li
102.193 22.0229 li
102.219 21.7939 li
102.243 21.5679 li
102.271 21.3428 li
102.295 21.1182 li
102.32 20.8965 li
102.346 20.6748 li
102.371 20.4531 li
102.398 20.2319 li
102.423 20.0151 li
102.447 19.7993 li
102.474 19.585 li
102.498 19.373 li
102.525 19.1616 li
102.552 18.9531 li
102.576 18.7466 li
102.602 18.5425 li
102.627 18.3389 li
102.652 18.1411 li
102.68 17.9443 li
102.705 17.7485 li
102.73 17.5566 li
102.756 17.3677 li
102.781 17.1816 li
102.807 16.9976 li
102.832 16.8169 li
102.856 16.6406 li
102.883 16.4673 li
102.908 16.2979 li
102.934 16.1299 li
102.961 15.9678 li
102.984 15.8086 li
103.01 15.6538 li
103.036 15.5015 li
103.063 15.3545 li
103.088 15.2104 li
103.113 15.0708 li
103.139 14.9355 li
103.164 14.8047 li
103.189 14.6782 li
103.215 14.5557 li
103.24 14.439 li
103.268 14.3242 li
103.292 14.2183 li
103.318 14.1147 li
103.344 14.0151 li
103.369 13.9209 li
103.394 13.833 li
103.42 13.7505 li
103.445 13.6699 li
103.471 13.5967 li
103.498 13.5283 li
103.521 13.4634 li
103.547 13.4048 li
103.572 13.3511 li
103.599 13.3022 li
103.623 13.2603 li
103.649 13.2222 li
103.676 13.1899 li
103.701 13.1631 li
103.728 13.1406 li
103.752 13.1226 li
103.777 13.1094 li
103.803 13.1055 li
103.828 13.104 li
103.854 13.1074 li
103.881 13.1157 li
103.906 13.1304 li
103.932 13.1509 li
103.956 13.1733 li
103.982 13.2026 li
104.008 13.2393 li
@
104.008 13.2388 mo
104.033 13.2778 li
104.059 13.3232 li
104.084 13.3711 li
104.111 13.4258 li
104.135 13.4844 li
104.161 13.5474 li
104.188 13.6157 li
104.211 13.689 li
104.238 13.7671 li
104.263 13.8481 li
104.289 13.9346 li
104.314 14.0264 li
104.34 14.1216 li
104.365 14.2202 li
104.391 14.3228 li
104.416 14.4312 li
104.442 14.5425 li
104.467 14.6592 li
104.494 14.7773 li
104.52 14.8999 li
104.545 15.0259 li
104.57 15.1567 li
104.596 15.29 li
104.621 15.4272 li
104.646 15.5679 li
104.674 15.7134 li
104.699 15.8589 li
104.725 16.0093 li
104.748 16.1611 li
104.774 16.3179 li
104.799 16.4761 li
104.826 16.6382 li
104.852 16.8013 li
104.877 16.9683 li
104.902 17.1377 li
104.928 17.3091 li
104.954 17.4814 li
104.979 17.6572 li
105.005 17.8345 li
105.029 18.0161 li
105.056 18.1978 li
105.082 18.3818 li
105.107 18.5679 li
105.133 18.7544 li
105.158 18.9434 li
105.183 19.1338 li
105.209 19.3242 li
105.234 19.519 li
105.261 19.7124 li
105.287 19.9092 li
105.312 20.1064 li
105.338 20.3047 li
105.363 20.5029 li
105.388 20.7021 li
105.412 20.9048 li
105.438 21.106 li
105.465 21.3081 li
105.49 21.5112 li
105.516 21.7148 li
105.541 21.9194 li
105.566 22.1235 li
105.592 22.3291 li
105.619 22.5361 li
105.645 22.7407 li
105.67 22.9482 li
105.695 23.1538 li
105.721 23.3594 li
105.746 23.5669 li
105.771 23.7725 li
105.797 23.9795 li
105.823 24.186 li
105.85 24.3936 li
105.874 24.6001 li
105.9 24.8042 li
105.925 25.0122 li
105.951 25.2168 li
105.977 25.4224 li
106.001 25.6279 li
106.027 25.8345 li
106.053 26.0366 li
106.078 26.2422 li
106.104 26.4448 li
106.129 26.6489 li
106.154 26.8501 li
106.181 27.0537 li
106.206 27.2549 li
106.232 27.457 li
106.258 27.6553 li
106.283 27.8564 li
106.309 28.0542 li
106.334 28.2544 li
106.359 28.4521 li
106.385 28.6494 li
106.41 28.8477 li
106.438 29.043 li
106.463 29.2388 li
106.487 29.4351 li
106.514 29.6284 li
106.538 29.8208 li
106.563 30.0151 li
@
106.564 30.0151 mo
106.59 30.208 li
106.615 30.3994 li
106.641 30.5903 li
106.668 30.7803 li
106.691 30.9702 li
106.718 31.1611 li
106.742 31.3481 li
106.769 31.5366 li
106.795 31.7246 li
106.82 31.9106 li
106.846 32.0967 li
106.871 32.2832 li
106.896 32.4692 li
106.922 32.6528 li
106.947 32.8379 li
106.973 33.0205 li
106.999 33.2036 li
107.023 33.3867 li
107.049 33.5693 li
107.075 33.751 li
107.102 33.9316 li
107.126 34.1123 li
107.152 34.2939 li
107.178 34.4736 li
107.202 34.6533 li
107.229 34.833 li
107.255 35.0122 li
107.279 35.1909 li
107.305 35.3696 li
107.331 35.5469 li
107.355 35.7251 li
107.382 35.9033 li
107.408 36.0811 li
107.434 36.2573 li
107.459 36.4351 li
107.484 36.6123 li
107.51 36.79 li
107.535 36.9658 li
107.561 37.1421 li
107.586 37.3174 li
107.613 37.4932 li
107.639 37.6704 li
107.664 37.8457 li
107.689 38.0195 li
107.714 38.1958 li
107.74 38.3716 li
107.766 38.5469 li
107.792 38.7207 li
107.817 38.896 li
107.843 39.0713 li
107.868 39.2456 li
107.894 39.4194 li
107.919 39.5947 li
107.944 39.769 li
107.97 39.9434 li
107.996 40.1172 li
108.021 40.2905 li
108.047 40.4639 li
108.073 40.6362 li
108.097 40.8105 li
108.124 40.9849 li
108.147 41.1577 li
108.174 41.3301 li
108.199 41.502 li
108.226 41.6738 li
108.25 41.8472 li
108.276 42.0195 li
108.301 42.1899 li
108.327 42.3608 li
108.354 42.5308 li
108.379 42.7017 li
108.404 42.873 li
108.43 43.0415 li
108.455 43.2104 li
108.48 43.3799 li
108.506 43.5488 li
108.531 43.7153 li
108.558 43.8828 li
108.584 44.0508 li
108.609 44.2163 li
108.635 44.3823 li
108.66 44.5483 li
108.686 44.7129 li
108.711 44.876 li
108.736 45.0405 li
108.763 45.2017 li
108.789 45.3643 li
108.813 45.5249 li
108.84 45.686 li
108.864 45.8452 li
108.891 46.0049 li
108.916 46.1621 li
108.941 46.3179 li
108.967 46.4761 li
108.993 46.6309 li
109.02 46.7856 li
109.044 46.9404 li
109.068 47.0918 li
109.095 47.2441 li
109.121 47.3936 li
@
109.121 47.394 mo
109.146 47.5444 li
109.172 47.6924 li
109.197 47.8398 li
109.224 47.9858 li
109.248 48.1318 li
109.274 48.2744 li
109.301 48.4185 li
109.325 48.5605 li
109.349 48.6997 li
109.377 48.8394 li
109.402 48.9785 li
109.427 49.1138 li
109.452 49.2515 li
109.478 49.3843 li
109.504 49.5176 li
109.528 49.6484 li
109.554 49.7793 li
109.581 49.9082 li
109.606 50.0366 li
109.632 50.1646 li
109.657 50.2886 li
109.684 50.4121 li
109.708 50.5332 li
109.733 50.6567 li
109.759 50.7769 li
109.784 50.8926 li
109.812 51.0112 li
109.837 51.1274 li
109.862 51.2422 li
109.888 51.3535 li
109.913 51.4663 li
109.938 51.5747 li
109.964 51.6841 li
109.989 51.7905 li
110.015 51.8965 li
110.041 52.0024 li
110.065 52.104 li
110.092 52.2056 li
110.116 52.3066 li
110.143 52.4048 li
110.169 52.5034 li
110.194 52.5996 li
110.22 52.6929 li
110.245 52.7856 li
110.271 52.8784 li
110.296 52.9692 li
110.321 53.0581 li
110.347 53.147 li
110.374 53.2334 li
110.399 53.3193 li
110.425 53.4038 li
110.45 53.4854 li
110.476 53.5669 li
110.501 53.6475 li
110.526 53.7271 li
110.554 53.8047 li
110.578 53.8804 li
110.604 53.9551 li
110.629 54.0298 li
110.655 54.1025 li
110.679 54.1748 li
110.705 54.2441 li
110.73 54.313 li
110.757 54.3813 li
110.781 54.4482 li
110.807 54.5146 li
110.832 54.5786 li
110.858 54.6411 li
110.885 54.7046 li
110.909 54.7651 li
110.935 54.8252 li
110.961 54.8843 li
110.986 54.9438 li
111.012 55 li
111.037 55.0552 li
111.063 55.1113 li
111.088 55.1655 li
111.114 55.2188 li
111.141 55.2705 li
111.165 55.3218 li
111.191 55.3726 li
111.217 55.4209 li
111.24 55.4697 li
111.268 55.5181 li
111.293 55.5645 li
111.318 55.6099 li
111.345 55.6553 li
111.369 55.6997 li
111.396 55.7432 li
111.422 55.7852 li
111.446 55.8286 li
111.473 55.8687 li
111.498 55.9092 li
111.524 55.9492 li
111.551 55.9868 li
111.575 56.0259 li
111.6 56.064 li
111.626 56.1001 li
111.65 56.1353 li
111.676 56.1704 li
@
111.676 56.1709 mo
111.702 56.207 li
111.729 56.2402 li
111.754 56.2749 li
111.779 56.3081 li
111.805 56.3398 li
111.831 56.3721 li
111.854 56.4033 li
111.882 56.4341 li
111.905 56.4644 li
111.932 56.4941 li
111.958 56.5239 li
111.983 56.5542 li
112.009 56.5811 li
112.034 56.6079 li
112.06 56.6362 li
112.085 56.6631 li
112.111 56.6904 li
112.136 56.7163 li
112.161 56.7407 li
112.188 56.7666 li
112.212 56.792 li
112.239 56.8179 li
112.265 56.8408 li
112.289 56.8667 li
112.315 56.8882 li
112.341 56.9121 li
112.367 56.936 li
112.392 56.9575 li
112.418 56.9805 li
112.442 57.0029 li
112.469 57.0244 li
112.495 57.0464 li
112.521 57.0669 li
112.546 57.0884 li
112.571 57.1089 li
112.598 57.1309 li
112.622 57.1499 li
112.648 57.1704 li
112.673 57.1909 li
112.699 57.2104 li
112.726 57.23 li
112.751 57.2485 li
112.776 57.2681 li
112.802 57.2876 li
112.827 57.3057 li
112.853 57.3242 li
112.878 57.3438 li
112.904 57.3608 li
112.931 57.3794 li
112.955 57.3975 li
112.981 57.415 li
113.006 57.4326 li
113.032 57.4521 li
113.058 57.4683 li
113.083 57.4854 li
113.107 57.5015 li
113.133 57.519 li
113.158 57.5366 li
113.187 57.5522 li
113.209 57.5698 li
113.234 57.585 li
113.262 57.6011 li
113.286 57.6182 li
113.313 57.6357 li
113.338 57.6499 li
113.363 57.665 li
113.389 57.6812 li
113.415 57.6963 li
113.439 57.7124 li
113.466 57.7275 li
113.492 57.7432 li
113.518 57.7578 li
113.543 57.772 li
113.568 57.7876 li
113.594 57.8022 li
113.619 57.8164 li
113.645 57.8306 li
113.671 57.8442 li
113.697 57.8589 li
113.722 57.8716 li
113.748 57.8848 li
113.772 57.8999 li
113.799 57.9116 li
113.824 57.9258 li
113.85 57.9395 li
113.875 57.9517 li
113.9 57.9639 li
113.926 57.9766 li
113.952 57.9888 li
113.977 58.0005 li
114.003 58.0137 li
114.027 58.0239 li
114.055 58.0371 li
114.079 58.0469 li
114.105 58.0601 li
114.131 58.0703 li
114.156 58.0815 li
114.182 58.0913 li
114.207 58.1021 li
114.233 58.1128 li
@
114.233 58.1128 mo
114.258 58.1235 li
114.284 58.1343 li
114.311 58.1416 li
114.336 58.1528 li
114.361 58.1626 li
114.386 58.1724 li
114.411 58.1807 li
114.437 58.1885 li
114.462 58.1982 li
114.487 58.208 li
114.515 58.2144 li
114.539 58.2231 li
114.565 58.2305 li
114.591 58.2397 li
114.616 58.2461 li
114.642 58.2544 li
114.667 58.2622 li
114.692 58.2695 li
114.719 58.2749 li
114.745 58.2827 li
114.77 58.2891 li
114.796 58.2954 li
114.82 58.3018 li
114.847 58.3086 li
114.871 58.314 li
114.898 58.3193 li
114.923 58.3257 li
114.949 58.3306 li
114.974 58.3354 li
114.999 58.3408 li
115.024 58.3452 li
115.051 58.3521 li
115.077 58.355 li
115.103 58.3604 li
115.127 58.3638 li
115.153 58.3677 li
115.179 58.3721 li
115.204 58.377 li
115.229 58.3809 li
115.255 58.3853 li
115.28 58.3872 li
115.307 58.3906 li
115.333 58.3936 li
115.357 58.3975 li
115.384 58.4009 li
115.408 58.4038 li
115.435 58.4058 li
115.462 58.4082 li
115.485 58.4102 li
115.511 58.4131 li
115.537 58.4165 li
115.563 58.4189 li
115.588 58.4214 li
115.614 58.4233 li
115.64 58.4243 li
115.664 58.4277 li
115.689 58.4297 li
115.716 58.4297 li
115.743 58.4316 li
115.766 58.4341 li
115.791 58.436 li
115.817 58.438 li
115.844 58.439 li
115.869 58.4414 li
115.894 58.4429 li
115.92 58.4429 li
115.945 58.4448 li
115.971 58.4448 li
115.996 58.4463 li
116.021 58.4482 li
116.047 58.4492 li
116.073 58.4492 li
116.1 58.4512 li
116.125 58.4512 li
116.15 58.4512 li
116.175 58.4526 li
116.201 58.4526 li
116.227 58.4546 li
116.252 58.4546 li
116.277 58.4546 li
116.304 58.4565 li
116.328 58.4565 li
116.354 58.4565 li
116.381 58.4565 li
116.406 58.4565 li
116.432 58.4575 li
116.457 58.4585 li
116.483 58.4585 li
116.508 58.4585 li
116.533 58.4585 li
116.559 58.46 li
116.585 58.46 li
116.611 58.46 li
116.637 58.4609 li
116.662 58.4609 li
116.688 58.4609 li
116.713 58.4609 li
116.738 58.4619 li
116.765 58.4619 li
116.79 58.4619 li
@
116.789 58.4624 mo
116.815 58.4634 li
@
76.0181 60.1836 mo
76.0181 12.4023 li
@
76.0181 60.2783 mo
130.703 60.2783 li
@
142.435 60.1421 mo
142.435 12.3608 li
@
142.435 60.2363 mo
197.119 60.2363 li
@
43.7476 253.949 mo
43.8696 253.949 li
43.9941 253.949 li
44.1172 253.949 li
44.2397 253.947 li
44.3628 253.947 li
44.4878 253.947 li
44.6099 253.947 li
44.7344 253.946 li
44.8564 253.946 li
44.98 253.945 li
45.104 253.945 li
45.2275 253.943 li
45.3496 253.943 li
45.4722 253.943 li
45.5967 253.941 li
45.7183 253.94 li
45.8433 253.938 li
45.9663 253.938 li
46.0889 253.937 li
46.2119 253.937 li
46.3364 253.936 li
46.4595 253.934 li
46.583 253.932 li
46.7061 253.932 li
46.8301 253.93 li
46.9517 253.927 li
47.0767 253.927 li
47.1987 253.925 li
47.3232 253.923 li
47.4453 253.921 li
47.5688 253.919 li
47.6919 253.918 li
47.8164 253.915 li
47.9375 253.915 li
48.0605 253.911 li
48.1851 253.909 li
48.3071 253.907 li
48.4321 253.905 li
48.5542 253.9 li
48.6777 253.898 li
48.8008 253.896 li
48.9253 253.892 li
49.0483 253.888 li
49.1709 253.885 li
49.2939 253.88 li
49.4185 253.876 li
49.542 253.875 li
49.6641 253.87 li
49.7876 253.867 li
49.9106 253.862 li
50.0342 253.858 li
50.1582 253.853 li
50.2817 253.847 li
50.4048 253.841 li
50.5283 253.836 li
50.6494 253.831 li
50.7729 253.825 li
50.896 253.819 li
51.022 253.811 li
51.1426 253.806 li
51.2676 253.801 li
51.3906 253.791 li
51.5142 253.786 li
51.6362 253.777 li
51.7607 253.769 li
51.8838 253.76 li
52.0073 253.752 li
52.1318 253.744 li
52.2524 253.735 li
52.3774 253.726 li
52.4995 253.717 li
52.623 253.708 li
52.7471 253.698 li
52.8706 253.687 li
52.9937 253.676 li
53.1162 253.666 li
53.2402 253.653 li
53.3638 253.64 li
53.4858 253.629 li
53.6099 253.617 li
53.7314 253.602 li
53.8574 253.589 li
53.9795 253.577 li
54.103 253.562 li
54.2261 253.547 li
54.3491 253.533 li
54.4727 253.515 li
54.5957 253.5 li
54.7207 253.485 li
54.8413 253.467 li
54.9673 253.453 li
55.0894 253.433 li
55.2129 253.417 li
55.3359 253.397 li
55.4595 253.378 li
55.5825 253.358 li
55.7061 253.339 li
55.8301 253.317 li
55.9517 253.295 li
@
55.9512 253.295 mo
56.0742 253.277 li
56.1992 253.253 li
56.3208 253.23 li
56.4458 253.209 li
56.5688 253.185 li
56.6914 253.161 li
56.8145 253.134 li
56.939 253.112 li
57.061 253.084 li
57.1855 253.057 li
57.3076 253.032 li
57.4312 253.006 li
57.5557 252.977 li
57.6782 252.947 li
57.8013 252.917 li
57.9253 252.887 li
58.0479 252.859 li
58.1709 252.826 li
58.2944 252.795 li
58.4175 252.762 li
58.54 252.73 li
58.6641 252.696 li
58.7866 252.662 li
58.9111 252.626 li
59.0347 252.59 li
59.1567 252.553 li
59.2803 252.516 li
59.4033 252.478 li
59.5269 252.44 li
59.6509 252.4 li
59.7729 252.36 li
59.8955 252.32 li
60.0205 252.278 li
60.1431 252.233 li
60.2676 252.192 li
60.3901 252.146 li
60.5132 252.102 li
60.6367 252.056 li
60.7598 252.009 li
60.8833 251.961 li
61.0063 251.914 li
61.1299 251.866 li
61.2529 251.814 li
61.3755 251.762 li
61.4985 251.71 li
61.6235 251.656 li
61.7451 251.603 li
61.8701 251.548 li
61.9932 251.492 li
62.1172 251.436 li
62.2397 251.377 li
62.3618 251.318 li
62.4854 251.258 li
62.6094 251.196 li
62.7319 251.134 li
62.8564 251.071 li
62.981 251.004 li
63.103 250.94 li
63.2256 250.873 li
63.3496 250.805 li
63.4731 250.735 li
63.5952 250.664 li
63.7188 250.591 li
63.8418 250.519 li
63.9648 250.444 li
64.0874 250.368 li
64.2114 250.29 li
64.3354 250.211 li
64.4585 250.13 li
64.583 250.048 li
64.7051 249.963 li
64.8286 249.88 li
64.9526 249.792 li
65.0752 249.706 li
65.1982 249.618 li
65.3218 249.525 li
65.4438 249.431 li
65.5688 249.336 li
65.6919 249.241 li
65.8154 249.144 li
65.9385 249.044 li
66.062 248.943 li
66.1851 248.839 li
66.3091 248.735 li
66.4316 248.628 li
66.5547 248.519 li
66.6772 248.411 li
66.8003 248.296 li
66.9243 248.181 li
67.0474 248.065 li
67.1719 247.948 li
67.2939 247.828 li
67.4175 247.704 li
67.5405 247.582 li
67.6641 247.455 li
67.7871 247.327 li
67.9106 247.196 li
68.0337 247.063 li
68.1567 246.927 li
68.2808 246.791 li
@
68.2808 246.791 mo
68.4038 246.651 li
68.5273 246.509 li
68.6504 246.368 li
68.7749 246.221 li
68.897 246.072 li
69.0195 245.921 li
69.1436 245.771 li
69.2661 245.615 li
69.3901 245.457 li
69.5127 245.298 li
69.6362 245.136 li
69.7588 244.973 li
69.8828 244.804 li
70.0049 244.635 li
70.1294 244.465 li
70.2524 244.292 li
70.375 244.116 li
70.499 243.937 li
70.6226 243.756 li
70.7446 243.571 li
70.8696 243.384 li
70.9927 243.196 li
71.1162 243.005 li
71.2383 242.812 li
71.3638 242.615 li
71.4839 242.416 li
71.6084 242.215 li
71.7305 242.011 li
71.856 241.806 li
71.978 241.594 li
72.1016 241.385 li
72.2261 241.169 li
72.3467 240.952 li
72.4727 240.733 li
72.5947 240.51 li
72.7192 240.287 li
72.8423 240.057 li
72.9648 239.825 li
73.0879 239.592 li
73.2114 239.357 li
73.3345 239.12 li
73.458 238.876 li
73.5801 238.632 li
73.7051 238.385 li
73.8291 238.132 li
73.9526 237.88 li
74.0728 237.623 li
74.1968 237.367 li
74.3203 237.103 li
74.4434 236.836 li
74.5679 236.568 li
74.6909 236.297 li
74.8159 236.022 li
74.9365 235.744 li
75.0605 235.463 li
75.1836 235.177 li
75.3081 234.89 li
75.4302 234.6 li
75.5547 234.305 li
75.6768 234.007 li
75.8013 233.708 li
75.9243 233.401 li
76.0469 233.092 li
76.1714 232.781 li
76.2939 232.465 li
76.418 232.146 li
76.54 231.825 li
76.6646 231.497 li
76.7856 231.167 li
76.9111 230.833 li
77.0332 230.495 li
77.1567 230.153 li
77.2813 229.809 li
77.4023 229.457 li
77.5269 229.105 li
77.6504 228.749 li
77.7734 228.384 li
77.8979 228.018 li
78.02 227.647 li
78.1445 227.274 li
78.2656 226.895 li
78.3911 226.51 li
78.5122 226.124 li
78.6362 225.733 li
78.7588 225.335 li
78.8833 224.935 li
79.0078 224.529 li
79.1289 224.12 li
79.2534 223.706 li
79.3755 223.287 li
79.499 222.864 li
79.6211 222.434 li
79.7466 222.003 li
79.8677 221.564 li
79.9922 221.123 li
80.1143 220.674 li
80.2393 220.225 li
80.3623 219.768 li
80.4858 219.306 li
80.6079 218.839 li
@
80.6074 218.839 mo
80.7314 218.371 li
80.855 217.894 li
80.979 217.413 li
81.1016 216.928 li
81.2256 216.438 li
81.3481 215.942 li
81.4727 215.443 li
81.5962 214.938 li
81.7183 214.431 li
81.8428 213.915 li
81.9629 213.396 li
82.0874 212.874 li
82.2104 212.343 li
82.334 211.811 li
82.457 211.272 li
82.5815 210.731 li
82.7036 210.184 li
82.8281 209.632 li
82.9507 209.077 li
83.0737 208.515 li
83.1963 207.951 li
83.3203 207.379 li
83.4448 206.805 li
83.5669 206.229 li
83.6914 205.646 li
83.8145 205.058 li
83.9395 204.466 li
84.0615 203.872 li
84.1851 203.273 li
84.3071 202.668 li
84.4316 202.06 li
84.5547 201.448 li
84.6758 200.833 li
84.8003 200.212 li
84.9224 199.589 li
85.0469 198.962 li
85.1699 198.333 li
85.2925 197.697 li
85.4155 197.059 li
85.5391 196.418 li
85.6636 195.774 li
85.7881 195.125 li
85.9092 194.472 li
86.0327 193.82 li
86.1558 193.162 li
86.2803 192.501 li
86.4033 191.837 li
86.5269 191.17 li
86.6479 190.5 li
86.772 189.829 li
86.896 189.152 li
87.021 188.474 li
87.1436 187.793 li
87.2656 187.109 li
87.3882 186.423 li
87.5112 185.735 li
87.6357 185.044 li
87.7588 184.35 li
87.8823 183.655 li
88.0054 182.956 li
88.1279 182.257 li
88.2524 181.552 li
88.377 180.847 li
88.499 180.141 li
88.6211 179.432 li
88.7446 178.719 li
88.8687 178.006 li
88.9912 177.292 li
89.1152 176.573 li
89.2402 175.854 li
89.3618 175.132 li
89.4858 174.409 li
89.6079 173.684 li
89.7324 172.957 li
89.8545 172.228 li
89.98 171.498 li
90.1011 170.766 li
90.2246 170.031 li
90.3467 169.293 li
90.4712 168.556 li
90.5933 167.815 li
90.7178 167.073 li
90.8413 166.33 li
90.9629 165.585 li
91.0879 164.837 li
91.21 164.088 li
91.3345 163.336 li
91.4565 162.584 li
91.5811 161.833 li
91.7021 161.074 li
91.8267 160.319 li
91.9507 159.558 li
92.0747 158.796 li
92.1978 158.036 li
92.3203 157.27 li
92.4434 156.504 li
92.5654 155.737 li
92.6899 154.967 li
92.813 154.197 li
92.9375 153.425 li
@
92.9375 153.425 mo
93.0586 152.652 li
93.1831 151.875 li
93.3076 151.1 li
93.4312 150.322 li
93.5532 149.542 li
93.6777 148.761 li
93.7988 147.982 li
93.9233 147.199 li
94.0474 146.416 li
94.1699 145.633 li
94.2939 144.848 li
94.4165 144.064 li
94.5396 143.277 li
94.6646 142.492 li
94.7866 141.703 li
94.9082 140.918 li
95.0332 140.131 li
95.1553 139.344 li
95.2798 138.559 li
95.4038 137.772 li
95.5264 136.99 li
95.6475 136.205 li
95.772 135.421 li
95.896 134.642 li
96.02 133.862 li
96.1431 133.084 li
96.2666 132.309 li
96.3887 131.535 li
96.5132 130.764 li
96.6362 129.993 li
96.7588 129.229 li
96.8828 128.468 li
97.0049 127.711 li
97.1294 126.956 li
97.2505 126.205 li
97.375 125.458 li
97.4985 124.717 li
97.6221 123.981 li
97.7441 123.252 li
97.8687 122.526 li
97.9897 121.807 li
98.1152 121.093 li
98.2383 120.39 li
98.3618 119.692 li
98.4849 119.001 li
98.6074 118.317 li
98.7319 117.643 li
98.8545 116.976 li
98.9775 116.317 li
99.1016 115.668 li
99.2241 115.03 li
99.3472 114.4 li
99.4717 113.781 li
99.5938 113.171 li
99.7197 112.573 li
99.8403 111.986 li
99.9639 111.412 li
100.086 110.849 li
100.211 110.298 li
100.334 109.761 li
100.458 109.234 li
100.581 108.722 li
100.704 108.222 li
100.826 107.738 li
100.951 107.266 li
101.072 106.81 li
101.195 106.367 li
101.32 105.938 li
101.442 105.528 li
101.566 105.129 li
101.689 104.748 li
101.814 104.384 li
101.938 104.033 li
102.062 103.698 li
102.183 103.381 li
102.305 103.082 li
102.43 102.799 li
102.553 102.532 li
102.676 102.281 li
102.8 102.048 li
102.923 101.835 li
103.045 101.634 li
103.17 101.452 li
103.291 101.292 li
103.415 101.147 li
103.537 101.018 li
103.662 100.905 li
103.785 100.815 li
103.909 100.74 li
104.032 100.683 li
104.154 100.639 li
104.278 100.621 li
104.402 100.617 li
104.525 100.629 li
104.649 100.658 li
104.771 100.709 li
104.896 100.774 li
105.02 100.854 li
105.143 100.952 li
105.266 101.071 li
@
105.266 101.072 mo
105.389 101.205 li
105.512 101.355 li
105.635 101.519 li
105.758 101.705 li
105.883 101.905 li
106.005 102.118 li
106.128 102.349 li
106.252 102.596 li
106.375 102.859 li
106.5 103.135 li
106.621 103.425 li
106.742 103.734 li
106.867 104.057 li
106.992 104.391 li
107.115 104.738 li
107.238 105.104 li
107.361 105.481 li
107.484 105.872 li
107.607 106.274 li
107.732 106.689 li
107.855 107.119 li
107.977 107.559 li
108.102 108.007 li
108.223 108.472 li
108.348 108.949 li
108.471 109.433 li
108.594 109.929 li
108.715 110.436 li
108.842 110.954 li
108.964 111.48 li
109.087 112.016 li
109.21 112.562 li
109.332 113.116 li
109.457 113.678 li
109.579 114.25 li
109.704 114.829 li
109.826 115.417 li
109.951 116.011 li
110.074 116.611 li
110.198 117.221 li
110.321 117.834 li
110.443 118.456 li
110.568 119.083 li
110.69 119.715 li
110.813 120.355 li
110.936 121 li
111.059 121.648 li
111.183 122.302 li
111.307 122.959 li
111.428 123.622 li
111.553 124.286 li
111.676 124.956 li
111.8 125.63 li
111.923 126.306 li
112.045 126.984 li
112.17 127.669 li
112.292 128.352 li
112.415 129.039 li
112.539 129.727 li
112.662 130.418 li
112.787 131.109 li
112.909 131.804 li
113.032 132.499 li
113.154 133.194 li
113.278 133.892 li
113.401 134.588 li
113.525 135.287 li
113.648 135.984 li
113.77 136.683 li
113.894 137.381 li
114.018 138.082 li
114.143 138.778 li
114.264 139.476 li
114.389 140.172 li
114.511 140.871 li
114.636 141.566 li
114.758 142.259 li
114.881 142.953 li
115.003 143.646 li
115.128 144.335 li
115.25 145.024 li
115.375 145.714 li
115.498 146.401 li
115.622 147.085 li
115.745 147.769 li
115.866 148.452 li
115.991 149.132 li
116.112 149.811 li
116.237 150.484 li
116.36 151.158 li
116.483 151.832 li
116.606 152.501 li
116.729 153.167 li
116.854 153.832 li
116.979 154.497 li
117.1 155.159 li
117.224 155.816 li
117.347 156.476 li
117.47 157.128 li
117.594 157.782 li
@
117.594 157.782 mo
117.716 158.434 li
117.841 159.082 li
117.963 159.727 li
118.087 160.374 li
118.208 161.013 li
118.333 161.654 li
118.457 162.291 li
118.579 162.927 li
118.703 163.561 li
118.825 164.191 li
118.948 164.821 li
119.075 165.45 li
119.195 166.076 li
119.32 166.699 li
119.442 167.322 li
119.566 167.943 li
119.689 168.561 li
119.813 169.179 li
119.935 169.795 li
120.06 170.411 li
120.184 171.024 li
120.306 171.634 li
120.43 172.245 li
120.552 172.853 li
120.679 173.462 li
120.8 174.07 li
120.923 174.673 li
121.044 175.277 li
121.169 175.883 li
121.291 176.486 li
121.416 177.086 li
121.538 177.688 li
121.661 178.287 li
121.784 178.886 li
121.908 179.486 li
122.033 180.083 li
122.154 180.679 li
122.279 181.278 li
122.402 181.874 li
122.523 182.469 li
122.648 183.063 li
122.772 183.659 li
122.895 184.25 li
123.018 184.844 li
123.142 185.437 li
123.267 186.03 li
123.387 186.621 li
123.512 187.212 li
123.634 187.804 li
123.758 188.394 li
123.882 188.986 li
124.004 189.577 li
124.128 190.166 li
124.251 190.755 li
124.374 191.343 li
124.496 191.93 li
124.621 192.518 li
124.744 193.105 li
124.868 193.691 li
124.99 194.278 li
125.114 194.864 li
125.238 195.447 li
125.36 196.03 li
125.482 196.614 li
125.606 197.196 li
125.73 197.778 li
125.855 198.358 li
125.978 198.937 li
126.103 199.516 li
126.223 200.091 li
126.346 200.67 li
126.47 201.244 li
126.593 201.819 li
126.717 202.39 li
126.84 202.96 li
126.962 203.529 li
127.087 204.098 li
127.209 204.664 li
127.332 205.227 li
127.455 205.79 li
127.579 206.351 li
127.704 206.91 li
127.826 207.467 li
127.949 208.021 li
128.071 208.573 li
128.196 209.122 li
128.32 209.668 li
128.443 210.211 li
128.565 210.756 li
128.69 211.295 li
128.813 211.834 li
128.934 212.367 li
129.059 212.899 li
129.181 213.426 li
129.306 213.952 li
129.43 214.474 li
129.553 214.996 li
129.675 215.508 li
129.798 216.022 li
129.923 216.531 li
@
129.923 216.531 mo
130.045 217.037 li
130.169 217.54 li
130.292 218.036 li
130.417 218.533 li
130.538 219.022 li
130.661 219.508 li
130.786 219.992 li
130.909 220.472 li
131.031 220.946 li
131.155 221.417 li
131.279 221.883 li
131.401 222.345 li
131.522 222.807 li
131.646 223.259 li
131.77 223.708 li
131.896 224.154 li
132.017 224.596 li
132.142 225.032 li
132.264 225.462 li
132.386 225.89 li
132.511 226.314 li
132.636 226.733 li
132.758 227.145 li
132.881 227.556 li
133.003 227.961 li
133.128 228.362 li
133.25 228.756 li
133.373 229.148 li
133.496 229.534 li
133.62 229.915 li
133.744 230.292 li
133.867 230.665 li
133.991 231.031 li
134.114 231.393 li
134.234 231.75 li
134.359 232.103 li
134.484 232.452 li
134.606 232.796 li
134.73 233.134 li
134.853 233.468 li
134.977 233.798 li
135.099 234.125 li
135.222 234.443 li
135.347 234.759 li
135.469 235.071 li
135.594 235.378 li
135.716 235.678 li
135.84 235.976 li
135.963 236.269 li
136.086 236.559 li
136.208 236.843 li
136.334 237.124 li
136.458 237.398 li
136.579 237.671 li
136.703 237.935 li
136.825 238.199 li
136.95 238.457 li
137.07 238.711 li
137.194 238.959 li
137.319 239.205 li
137.44 239.45 li
137.564 239.687 li
137.688 239.919 li
137.812 240.149 li
137.935 240.375 li
138.06 240.597 li
138.183 240.816 li
138.307 241.031 li
138.428 241.242 li
138.551 241.449 li
138.674 241.652 li
138.797 241.852 li
138.922 242.05 li
139.047 242.243 li
139.166 242.43 li
139.291 242.618 li
139.413 242.8 li
139.538 242.981 li
139.661 243.156 li
139.785 243.33 li
139.908 243.499 li
140.03 243.666 li
140.153 243.83 li
140.276 243.991 li
140.399 244.151 li
140.522 244.305 li
140.649 244.458 li
140.771 244.606 li
140.895 244.753 li
141.018 244.898 li
141.14 245.039 li
141.264 245.178 li
141.388 245.314 li
141.512 245.449 li
141.637 245.58 li
141.758 245.708 li
141.88 245.835 li
142.002 245.96 li
142.125 246.082 li
142.249 246.203 li
@
142.249 246.203 mo
142.374 246.319 li
142.496 246.436 li
142.619 246.549 li
142.743 246.662 li
142.866 246.771 li
142.988 246.879 li
143.113 246.985 li
143.238 247.09 li
143.36 247.193 li
143.485 247.293 li
143.606 247.392 li
143.729 247.49 li
143.853 247.584 li
143.976 247.68 li
144.099 247.773 li
144.224 247.864 li
144.345 247.955 li
144.469 248.042 li
144.594 248.128 li
144.715 248.214 li
144.84 248.298 li
144.962 248.383 li
145.087 248.465 li
145.209 248.546 li
145.332 248.626 li
145.455 248.705 li
145.578 248.785 li
145.701 248.861 li
145.826 248.936 li
145.949 249.011 li
146.073 249.084 li
146.196 249.156 li
146.317 249.231 li
146.442 249.3 li
146.566 249.372 li
146.688 249.442 li
146.812 249.509 li
146.936 249.58 li
147.058 249.646 li
147.181 249.712 li
147.303 249.778 li
147.428 249.843 li
147.553 249.909 li
147.675 249.973 li
147.798 250.036 li
147.922 250.099 li
148.043 250.163 li
148.167 250.222 li
148.29 250.285 li
148.414 250.346 li
148.537 250.407 li
148.661 250.466 li
148.785 250.526 li
148.907 250.583 li
149.031 250.642 li
149.155 250.702 li
149.277 250.758 li
149.399 250.815 li
149.523 250.872 li
149.647 250.927 li
149.769 250.981 li
149.894 251.038 li
150.016 251.092 li
150.141 251.146 li
150.264 251.2 li
150.386 251.252 li
150.509 251.305 li
150.633 251.358 li
150.756 251.409 li
150.88 251.46 li
151.003 251.512 li
151.126 251.563 li
151.25 251.612 li
151.375 251.661 li
151.496 251.711 li
151.621 251.759 li
151.742 251.808 li
151.867 251.855 li
151.988 251.904 li
152.113 251.95 li
152.236 251.995 li
152.357 252.04 li
152.481 252.085 li
152.604 252.13 li
152.729 252.175 li
152.853 252.218 li
152.977 252.26 li
153.099 252.303 li
153.222 252.345 li
153.346 252.385 li
153.469 252.427 li
153.593 252.465 li
153.716 252.505 li
153.838 252.543 li
153.964 252.582 li
154.086 252.62 li
154.208 252.656 li
154.332 252.694 li
154.456 252.729 li
154.578 252.764 li
@
154.578 252.764 mo
154.701 252.798 li
154.825 252.833 li
154.947 252.865 li
155.07 252.898 li
155.194 252.93 li
155.319 252.962 li
155.439 252.992 li
155.564 253.023 li
155.688 253.053 li
155.813 253.083 li
155.935 253.11 li
156.057 253.137 li
156.18 253.163 li
156.305 253.194 li
156.429 253.215 li
156.552 253.243 li
156.675 253.267 li
156.797 253.292 li
156.921 253.315 li
157.043 253.338 li
157.167 253.36 li
157.293 253.382 li
157.413 253.402 li
157.538 253.422 li
157.663 253.444 li
157.783 253.463 li
157.905 253.482 li
158.029 253.5 li
158.155 253.518 li
158.277 253.534 li
158.402 253.552 li
158.522 253.569 li
158.646 253.583 li
158.77 253.599 li
158.894 253.613 li
159.017 253.627 li
159.142 253.64 li
159.265 253.654 li
159.386 253.667 li
159.508 253.68 li
159.632 253.691 li
159.759 253.703 li
159.881 253.714 li
160.003 253.725 li
160.126 253.735 li
160.249 253.746 li
160.371 253.756 li
160.494 253.765 li
160.618 253.773 li
160.743 253.781 li
160.866 253.792 li
160.99 253.798 li
161.113 253.806 li
161.234 253.814 li
161.359 253.819 li
161.482 253.828 li
161.607 253.834 li
161.729 253.837 li
161.854 253.843 li
161.976 253.849 li
162.098 253.856 li
162.222 253.862 li
162.344 253.867 li
162.47 253.873 li
162.592 253.875 li
162.716 253.879 li
162.841 253.883 li
162.962 253.887 li
163.083 253.892 li
163.209 253.896 li
163.332 253.898 li
163.456 253.9 li
163.578 253.905 li
163.701 253.908 li
163.824 253.909 li
163.948 253.913 li
164.07 253.915 li
164.195 253.918 li
164.318 253.919 li
164.443 253.921 li
164.563 253.923 li
164.688 253.925 li
164.811 253.927 li
164.936 253.927 li
165.059 253.93 li
165.181 253.932 li
165.305 253.934 li
165.427 253.934 li
165.55 253.936 li
165.673 253.937 li
165.797 253.938 li
165.921 253.938 li
166.045 253.94 li
166.167 253.941 li
166.292 253.943 li
166.412 253.943 li
166.537 253.943 li
166.659 253.945 li
166.784 253.945 li
166.906 253.946 li
@
166.906 253.946 mo
167.031 253.947 li
@
11.749 259.764 mo
11.749 98.2466 li
@
11.749 260.083 mo
196.604 260.083 li
@
81.4429 253.959 mo
81.5552 253.959 li
81.666 253.959 li
81.7783 253.959 li
81.8877 253.958 li
81.999 253.958 li
82.1104 253.958 li
82.2222 253.958 li
82.333 253.958 li
82.4434 253.958 li
82.5557 253.955 li
82.665 253.955 li
82.7769 253.953 li
82.8882 253.953 li
82.9985 253.953 li
83.1108 253.953 li
83.2212 253.951 li
83.334 253.949 li
83.4443 253.949 li
83.5547 253.948 li
83.6675 253.948 li
83.7749 253.947 li
83.8892 253.945 li
83.998 253.943 li
84.1104 253.941 li
84.2207 253.94 li
84.3325 253.938 li
84.4438 253.938 li
84.5542 253.937 li
84.6655 253.934 li
84.7769 253.932 li
84.8896 253.93 li
84.999 253.928 li
85.1094 253.925 li
85.2217 253.925 li
85.3335 253.921 li
85.4448 253.919 li
85.5547 253.917 li
85.666 253.915 li
85.7773 253.911 li
85.8867 253.909 li
86.0005 253.907 li
86.1099 253.902 li
86.2222 253.898 li
86.3325 253.896 li
86.4453 253.892 li
86.5557 253.887 li
86.666 253.885 li
86.7783 253.88 li
86.8877 253.876 li
87.0005 253.873 li
87.1118 253.869 li
87.2207 253.864 li
87.333 253.858 li
87.4434 253.851 li
87.5562 253.847 li
87.6646 253.841 li
87.7769 253.836 li
87.8882 253.83 li
87.9985 253.822 li
88.1104 253.816 li
88.2227 253.811 li
88.333 253.803 li
88.4443 253.795 li
88.5547 253.787 li
88.666 253.78 li
88.7773 253.771 li
88.8877 253.763 li
88.999 253.755 li
89.1108 253.746 li
89.2222 253.737 li
89.3325 253.728 li
89.4438 253.718 li
89.5566 253.708 li
89.667 253.698 li
89.7773 253.687 li
89.8896 253.676 li
90 253.664 li
90.1118 253.652 li
90.2231 253.64 li
90.333 253.627 li
90.4443 253.613 li
90.5547 253.6 li
90.6675 253.587 li
90.7778 253.573 li
90.8901 253.558 li
90.9995 253.543 li
91.1123 253.526 li
91.2227 253.512 li
91.333 253.495 li
91.4453 253.478 li
91.5566 253.461 li
91.6685 253.444 li
91.7788 253.427 li
91.8887 253.408 li
92.001 253.389 li
92.1113 253.37 li
92.2241 253.35 li
92.3335 253.328 li
92.4458 253.306 li
@
92.4458 253.306 mo
92.5562 253.288 li
92.6665 253.264 li
92.7793 253.241 li
92.8896 253.22 li
93.002 253.197 li
93.1123 253.171 li
93.2222 253.146 li
93.334 253.123 li
93.4443 253.095 li
93.5566 253.07 li
93.667 253.042 li
93.7773 253.017 li
93.8901 252.988 li
94.0005 252.958 li
94.1118 252.928 li
94.2231 252.898 li
94.3335 252.869 li
94.4443 252.835 li
94.5566 252.805 li
94.667 252.773 li
94.7793 252.74 li
94.8896 252.707 li
95 252.672 li
95.1113 252.636 li
95.2227 252.601 li
95.334 252.565 li
95.4443 252.527 li
95.5571 252.489 li
95.6675 252.451 li
95.7778 252.411 li
95.8906 252.371 li
96.001 252.331 li
96.1133 252.288 li
96.2236 252.244 li
96.335 252.202 li
96.4463 252.157 li
96.5557 252.113 li
96.666 252.066 li
96.7773 252.021 li
96.8887 251.973 li
97.0015 251.924 li
97.1138 251.875 li
97.2241 251.826 li
97.3345 251.774 li
97.4448 251.72 li
97.5576 251.667 li
97.6689 251.614 li
97.7783 251.559 li
97.8896 251.502 li
98.0005 251.447 li
98.1123 251.388 li
98.2227 251.329 li
98.333 251.268 li
98.4463 251.207 li
98.5557 251.145 li
98.6675 251.082 li
98.7798 251.016 li
98.8892 250.951 li
99.0015 250.883 li
99.1118 250.815 li
99.2236 250.746 li
99.335 250.673 li
99.4463 250.602 li
99.5581 250.53 li
99.6665 250.457 li
99.7793 250.377 li
99.8896 250.299 li
100.001 250.221 li
100.112 250.141 li
100.224 250.059 li
100.334 249.975 li
100.446 249.891 li
100.557 249.803 li
100.668 249.717 li
100.78 249.627 li
100.891 249.536 li
101.001 249.442 li
101.113 249.347 li
101.223 249.251 li
101.335 249.155 li
101.446 249.055 li
101.558 248.954 li
101.668 248.85 li
101.778 248.747 li
101.891 248.639 li
102.002 248.529 li
102.113 248.42 li
102.226 248.307 li
102.337 248.19 li
102.447 248.076 li
102.557 247.958 li
102.669 247.837 li
102.779 247.715 li
102.892 247.592 li
103.002 247.465 li
103.114 247.337 li
103.224 247.207 li
103.334 247.074 li
103.445 246.938 li
103.557 246.8 li
@
103.557 246.8 mo
103.67 246.662 li
103.779 246.52 li
103.892 246.378 li
104.001 246.231 li
104.113 246.083 li
104.224 245.932 li
104.335 245.782 li
104.446 245.625 li
104.557 245.467 li
104.669 245.309 li
104.779 245.146 li
104.89 244.984 li
105.002 244.816 li
105.113 244.646 li
105.225 244.475 li
105.336 244.302 li
105.447 244.125 li
105.559 243.948 li
105.669 243.767 li
105.78 243.582 li
105.891 243.395 li
106.004 243.207 li
106.113 243.015 li
106.226 242.822 li
106.335 242.625 li
106.445 242.427 li
106.559 242.226 li
106.668 242.021 li
106.781 241.817 li
106.893 241.605 li
107.002 241.395 li
107.114 241.179 li
107.225 240.962 li
107.337 240.743 li
107.445 240.521 li
107.561 240.297 li
107.67 240.068 li
107.78 239.836 li
107.892 239.603 li
108.002 239.368 li
108.113 239.13 li
108.224 238.887 li
108.337 238.643 li
108.448 238.396 li
108.559 238.143 li
108.67 237.889 li
108.78 237.634 li
108.892 237.376 li
109.003 237.113 li
109.113 236.847 li
109.225 236.579 li
109.336 236.308 li
109.447 236.032 li
109.556 235.754 li
109.669 235.473 li
109.78 235.189 li
109.892 234.901 li
110.002 234.611 li
110.115 234.317 li
110.226 234.018 li
110.336 233.717 li
110.448 233.412 li
110.559 233.103 li
110.67 232.792 li
110.779 232.476 li
110.892 232.156 li
111.004 231.835 li
111.113 231.507 li
111.226 231.178 li
111.336 230.844 li
111.447 230.506 li
111.56 230.164 li
111.669 229.82 li
111.782 229.468 li
111.891 229.116 li
112.004 228.758 li
112.115 228.395 li
112.227 228.029 li
112.337 227.66 li
112.446 227.285 li
112.559 226.905 li
112.671 226.521 li
112.781 226.135 li
112.893 225.744 li
113.004 225.346 li
113.114 224.945 li
113.226 224.54 li
113.338 224.13 li
113.447 223.716 li
113.561 223.296 li
113.669 222.875 li
113.782 222.446 li
113.893 222.013 li
114.003 221.575 li
114.116 221.133 li
114.225 220.686 li
114.336 220.235 li
114.446 219.779 li
114.56 219.317 li
114.669 218.85 li
@
114.669 218.85 mo
114.781 218.38 li
114.893 217.905 li
115.003 217.423 li
115.115 216.939 li
115.225 216.449 li
115.337 215.953 li
115.449 215.454 li
115.559 214.949 li
115.67 214.441 li
115.78 213.925 li
115.893 213.407 li
116.003 212.883 li
116.115 212.355 li
116.227 211.821 li
116.338 211.283 li
116.448 210.742 li
116.56 210.196 li
116.673 209.643 li
116.781 209.087 li
116.893 208.526 li
117.004 207.961 li
117.114 207.389 li
117.227 206.816 li
117.337 206.24 li
117.448 205.656 li
117.56 205.069 li
117.67 204.477 li
117.782 203.883 li
117.892 203.284 li
118.004 202.678 li
118.115 202.071 li
118.226 201.458 li
118.337 200.845 li
118.448 200.222 li
118.562 199.598 li
118.671 198.974 li
118.781 198.343 li
118.893 197.708 li
119.004 197.07 li
119.115 196.429 li
119.226 195.785 li
119.337 195.136 li
119.447 194.487 li
119.559 193.831 li
119.671 193.173 li
119.782 192.512 li
119.893 191.848 li
120.005 191.181 li
120.115 190.511 li
120.227 189.839 li
120.338 189.163 li
120.448 188.485 li
120.561 187.804 li
120.67 187.12 li
120.782 186.435 li
120.893 185.747 li
121.004 185.055 li
121.116 184.36 li
121.228 183.667 li
121.339 182.965 li
121.449 182.267 li
121.561 181.563 li
121.672 180.859 li
121.782 180.154 li
121.894 179.443 li
122.005 178.729 li
122.116 178.017 li
122.228 177.302 li
122.337 176.584 li
122.449 175.865 li
122.559 175.143 li
122.673 174.421 li
122.783 173.695 li
122.893 172.969 li
123.006 172.239 li
123.117 171.509 li
123.228 170.777 li
123.339 170.042 li
123.448 169.304 li
123.561 168.566 li
123.67 167.825 li
123.783 167.084 li
123.893 166.34 li
124.005 165.595 li
124.116 164.847 li
124.226 164.098 li
124.338 163.348 li
124.449 162.595 li
124.56 161.843 li
124.671 161.086 li
124.781 160.33 li
124.894 159.568 li
125.006 158.807 li
125.115 158.046 li
125.228 157.282 li
125.337 156.515 li
125.448 155.747 li
125.56 154.978 li
125.671 154.207 li
125.783 153.437 li
@
125.783 153.437 mo
125.894 152.663 li
126.006 151.886 li
126.117 151.111 li
126.227 150.332 li
126.339 149.554 li
126.45 148.771 li
126.561 147.994 li
126.673 147.209 li
126.781 146.428 li
126.895 145.644 li
127.005 144.859 li
127.116 144.075 li
127.228 143.288 li
127.341 142.502 li
127.45 141.713 li
127.561 140.929 li
127.673 140.142 li
127.784 139.355 li
127.896 138.569 li
128.004 137.784 li
128.118 137 li
128.226 136.216 li
128.338 135.432 li
128.451 134.653 li
128.56 133.873 li
128.674 133.093 li
128.781 132.319 li
128.894 131.547 li
129.006 130.775 li
129.117 130.004 li
129.229 129.242 li
129.338 128.479 li
129.451 127.721 li
129.56 126.966 li
129.673 126.215 li
129.783 125.469 li
129.894 124.728 li
130.005 123.992 li
130.115 123.262 li
130.227 122.537 li
130.339 121.818 li
130.45 121.104 li
130.563 120.4 li
130.673 119.703 li
130.783 119.012 li
130.895 118.327 li
131.006 117.654 li
131.116 116.987 li
131.229 116.329 li
131.339 115.679 li
131.45 115.04 li
131.561 114.411 li
131.672 113.792 li
131.784 113.182 li
131.894 112.583 li
132.007 111.997 li
132.118 111.423 li
132.228 110.859 li
132.34 110.31 li
132.45 109.771 li
132.562 109.246 li
132.674 108.732 li
132.783 108.232 li
132.896 107.749 li
133.005 107.277 li
133.117 106.82 li
133.228 106.377 li
133.341 105.95 li
133.451 105.539 li
133.561 105.14 li
133.672 104.759 li
133.785 104.395 li
133.895 104.043 li
134.007 103.709 li
134.116 103.392 li
134.229 103.092 li
134.34 102.811 li
134.45 102.542 li
134.561 102.292 li
134.672 102.06 li
134.782 101.846 li
134.896 101.645 li
135.006 101.464 li
135.117 101.303 li
135.228 101.157 li
135.339 101.028 li
135.452 100.916 li
135.561 100.827 li
135.674 100.75 li
135.784 100.693 li
135.896 100.649 li
136.007 100.632 li
136.116 100.628 li
136.228 100.641 li
136.339 100.669 li
136.451 100.719 li
136.563 100.784 li
136.671 100.866 li
136.784 100.963 li
136.895 101.082 li
@
136.895 101.083 mo
137.007 101.215 li
137.118 101.365 li
137.229 101.53 li
137.341 101.715 li
137.45 101.917 li
137.563 102.128 li
137.675 102.359 li
137.785 102.608 li
137.895 102.869 li
138.009 103.146 li
138.118 103.436 li
138.229 103.745 li
138.34 104.068 li
138.45 104.401 li
138.563 104.749 li
138.674 105.114 li
138.784 105.492 li
138.896 105.882 li
139.007 106.285 li
139.118 106.7 li
139.229 107.129 li
139.34 107.569 li
139.451 108.018 li
139.563 108.483 li
139.674 108.958 li
139.784 109.444 li
139.896 109.94 li
140.006 110.446 li
140.119 110.964 li
140.229 111.491 li
140.341 112.025 li
140.451 112.572 li
140.563 113.126 li
140.674 113.688 li
140.785 114.261 li
140.896 114.839 li
141.007 115.427 li
141.119 116.021 li
141.229 116.621 li
141.341 117.231 li
141.451 117.844 li
141.563 118.467 li
141.675 119.093 li
141.786 119.727 li
141.897 120.367 li
142.008 121.011 li
142.118 121.658 li
142.23 122.313 li
142.341 122.969 li
142.454 123.631 li
142.562 124.297 li
142.673 124.967 li
142.786 125.641 li
142.896 126.317 li
143.008 126.995 li
143.118 127.68 li
143.229 128.362 li
143.342 129.049 li
143.451 129.737 li
143.563 130.428 li
143.673 131.12 li
143.786 131.814 li
143.895 132.51 li
144.009 133.203 li
144.117 133.902 li
144.229 134.599 li
144.34 135.297 li
144.451 135.994 li
144.563 136.693 li
144.673 137.392 li
144.784 138.091 li
144.896 138.789 li
145.008 139.486 li
145.118 140.183 li
145.229 140.881 li
145.343 141.575 li
145.451 142.268 li
145.564 142.964 li
145.674 143.656 li
145.785 144.346 li
145.896 145.036 li
146.007 145.725 li
146.118 146.412 li
146.229 147.096 li
146.342 147.78 li
146.451 148.462 li
146.563 149.142 li
146.675 149.82 li
146.785 150.495 li
146.897 151.168 li
147.007 151.843 li
147.119 152.513 li
147.231 153.177 li
147.341 153.842 li
147.453 154.507 li
147.563 155.17 li
147.675 155.827 li
147.787 156.487 li
147.897 157.139 li
148.009 157.792 li
@
148.009 157.792 mo
148.119 158.445 li
148.231 159.092 li
148.343 159.738 li
148.453 160.383 li
148.564 161.023 li
148.675 161.664 li
148.786 162.301 li
148.896 162.938 li
149.008 163.571 li
149.118 164.201 li
149.23 164.833 li
149.342 165.46 li
149.452 166.085 li
149.563 166.71 li
149.675 167.333 li
149.786 167.954 li
149.897 168.572 li
150.01 169.19 li
150.118 169.804 li
150.231 170.421 li
150.342 171.035 li
150.452 171.646 li
150.565 172.255 li
150.674 172.864 li
150.785 173.472 li
150.898 174.08 li
151.009 174.685 li
151.119 175.289 li
151.231 175.894 li
151.342 176.496 li
151.455 177.098 li
151.564 177.699 li
151.675 178.297 li
151.787 178.896 li
151.897 179.496 li
152.009 180.094 li
152.119 180.69 li
152.23 181.289 li
152.343 181.883 li
152.452 182.48 li
152.563 183.074 li
152.676 183.668 li
152.787 184.261 li
152.898 184.855 li
153.009 185.449 li
153.12 186.041 li
153.231 186.631 li
153.342 187.224 li
153.454 187.815 li
153.563 188.406 li
153.676 188.996 li
153.785 189.587 li
153.897 190.175 li
154.01 190.764 li
154.119 191.352 li
154.232 191.941 li
154.341 192.529 li
154.453 193.116 li
154.565 193.703 li
154.676 194.289 li
154.787 194.875 li
154.898 195.459 li
155.008 196.04 li
155.119 196.625 li
155.23 197.207 li
155.343 197.789 li
155.454 198.369 li
155.564 198.948 li
155.676 199.527 li
155.786 200.102 li
155.897 200.679 li
156.011 201.253 li
156.12 201.83 li
156.232 202.4 li
156.342 202.971 li
156.454 203.54 li
156.565 204.108 li
156.675 204.674 li
156.788 205.238 li
156.897 205.8 li
157.01 206.361 li
157.117 206.92 li
157.231 207.478 li
157.343 208.029 li
157.453 208.584 li
157.565 209.132 li
157.678 209.679 li
157.788 210.224 li
157.899 210.767 li
158.008 211.307 li
158.121 211.845 li
158.229 212.377 li
158.343 212.91 li
158.453 213.436 li
158.563 213.962 li
158.677 214.485 li
158.787 215.005 li
158.898 215.519 li
159.009 216.034 li
159.12 216.541 li
@
159.122 216.541 mo
159.232 217.048 li
159.344 217.549 li
159.452 218.046 li
159.565 218.542 li
159.679 219.033 li
159.786 219.519 li
159.899 220.001 li
160.01 220.481 li
160.12 220.957 li
160.232 221.427 li
160.343 221.894 li
160.454 222.356 li
160.564 222.816 li
160.678 223.269 li
160.789 223.719 li
160.899 224.164 li
161.01 224.606 li
161.121 225.042 li
161.232 225.474 li
161.344 225.902 li
161.455 226.325 li
161.565 226.743 li
161.677 227.157 li
161.789 227.567 li
161.899 227.973 li
162.01 228.372 li
162.121 228.767 li
162.232 229.158 li
162.343 229.545 li
162.455 229.925 li
162.566 230.303 li
162.677 230.674 li
162.789 231.041 li
162.899 231.405 li
163.01 231.761 li
163.118 232.115 li
163.231 232.462 li
163.345 232.807 li
163.454 233.145 li
163.566 233.479 li
163.675 233.808 li
163.788 234.135 li
163.898 234.453 li
164.01 234.77 li
164.121 235.082 li
164.233 235.389 li
164.345 235.689 li
164.456 235.987 li
164.565 236.281 li
164.677 236.57 li
164.787 236.853 li
164.9 237.134 li
165.009 237.409 li
165.122 237.681 li
165.231 237.946 li
165.344 238.209 li
165.455 238.467 li
165.566 238.722 li
165.675 238.97 li
165.789 239.215 li
165.898 239.459 li
166.011 239.697 li
166.123 239.929 li
166.233 240.16 li
166.343 240.386 li
166.457 240.608 li
166.566 240.828 li
166.677 241.042 li
166.788 241.252 li
166.9 241.459 li
167.01 241.663 li
167.12 241.863 li
167.235 242.059 li
167.344 242.253 li
167.456 242.442 li
167.565 242.627 li
167.679 242.812 li
167.787 242.992 li
167.9 243.167 li
168.012 243.339 li
168.121 243.511 li
168.233 243.676 li
168.344 243.841 li
168.454 244.001 li
168.565 244.161 li
168.678 244.316 li
168.791 244.468 li
168.9 244.616 li
169.011 244.764 li
169.123 244.909 li
169.233 245.051 li
169.344 245.189 li
169.457 245.325 li
169.567 245.459 li
169.678 245.59 li
169.791 245.719 li
169.9 245.846 li
170.011 245.971 li
170.121 246.091 li
170.232 246.213 li
@
170.232 246.213 mo
170.347 246.33 li
170.456 246.446 li
170.566 246.56 li
170.678 246.672 li
170.79 246.782 li
170.9 246.889 li
171.012 246.996 li
171.124 247.101 li
171.233 247.204 li
171.344 247.303 li
171.455 247.403 li
171.567 247.5 li
171.678 247.595 li
171.787 247.69 li
171.9 247.784 li
172.012 247.874 li
172.123 247.965 li
172.233 248.051 li
172.344 248.139 li
172.455 248.225 li
172.567 248.31 li
172.679 248.394 li
172.791 248.476 li
172.901 248.556 li
173.011 248.637 li
173.122 248.716 li
173.232 248.795 li
173.345 248.872 li
173.457 248.947 li
173.567 249.021 li
173.681 249.095 li
173.789 249.167 li
173.9 249.24 li
174.012 249.311 li
174.122 249.38 li
174.235 249.453 li
174.344 249.52 li
174.456 249.588 li
174.568 249.658 li
174.678 249.723 li
174.789 249.789 li
174.899 249.854 li
175.011 249.919 li
175.122 249.984 li
175.233 250.046 li
175.346 250.11 li
175.456 250.173 li
175.567 250.234 li
175.68 250.295 li
175.789 250.356 li
175.899 250.416 li
176.011 250.477 li
176.123 250.537 li
176.233 250.595 li
176.345 250.653 li
176.457 250.71 li
176.566 250.769 li
176.679 250.826 li
176.791 250.88 li
176.9 250.938 li
177.013 250.993 li
177.125 251.047 li
177.234 251.103 li
177.346 251.157 li
177.456 251.211 li
177.566 251.263 li
177.68 251.316 li
177.788 251.369 li
177.901 251.42 li
178.012 251.471 li
178.124 251.523 li
178.234 251.574 li
178.346 251.623 li
178.458 251.671 li
178.567 251.722 li
178.68 251.77 li
178.791 251.819 li
178.903 251.867 li
179.014 251.914 li
179.122 251.961 li
179.235 252.004 li
179.346 252.051 li
179.457 252.097 li
179.568 252.142 li
179.679 252.187 li
179.789 252.229 li
179.901 252.271 li
180.014 252.313 li
180.123 252.356 li
180.234 252.396 li
180.347 252.438 li
180.458 252.476 li
180.566 252.516 li
180.68 252.555 li
180.793 252.593 li
180.9 252.63 li
181.013 252.667 li
181.122 252.705 li
181.234 252.739 li
181.344 252.775 li
@
181.345 252.775 mo
181.458 252.808 li
181.569 252.842 li
181.678 252.875 li
181.791 252.908 li
181.902 252.941 li
182.013 252.972 li
182.124 253.002 li
182.234 253.034 li
182.346 253.063 li
182.455 253.092 li
182.568 253.121 li
182.68 253.148 li
182.789 253.175 li
182.901 253.203 li
183.014 253.226 li
183.125 253.252 li
183.235 253.278 li
183.347 253.301 li
183.456 253.326 li
183.569 253.349 li
183.681 253.371 li
183.791 253.392 li
183.902 253.412 li
184.013 253.433 li
184.123 253.455 li
184.233 253.473 li
184.347 253.493 li
184.459 253.51 li
184.568 253.528 li
184.681 253.544 li
184.79 253.562 li
184.902 253.579 li
185.012 253.594 li
185.124 253.609 li
185.234 253.624 li
185.347 253.638 li
185.458 253.652 li
185.57 253.666 li
185.679 253.678 li
185.79 253.691 li
185.901 253.702 li
186.014 253.713 li
186.125 253.725 li
186.237 253.735 li
186.347 253.746 li
186.459 253.756 li
186.568 253.767 li
186.682 253.776 li
186.79 253.784 li
186.903 253.792 li
187.014 253.803 li
187.124 253.809 li
187.234 253.816 li
187.346 253.824 li
187.457 253.83 li
187.569 253.837 li
187.681 253.845 li
187.793 253.849 li
187.902 253.855 li
188.015 253.861 li
188.124 253.867 li
188.235 253.873 li
188.347 253.876 li
188.459 253.883 li
188.57 253.885 li
188.68 253.889 li
188.792 253.894 li
188.902 253.898 li
189.014 253.902 li
189.126 253.907 li
189.235 253.909 li
189.348 253.911 li
189.459 253.915 li
189.569 253.918 li
189.68 253.919 li
189.791 253.922 li
189.902 253.924 li
190.014 253.928 li
190.126 253.93 li
190.235 253.932 li
190.348 253.934 li
190.457 253.936 li
190.569 253.938 li
190.68 253.938 li
190.791 253.94 li
190.905 253.943 li
191.015 253.945 li
191.126 253.945 li
191.236 253.947 li
191.348 253.948 li
191.456 253.949 li
191.57 253.949 li
191.683 253.951 li
191.792 253.953 li
191.904 253.953 li
192.015 253.953 li
192.125 253.953 li
192.236 253.955 li
192.347 253.955 li
192.458 253.958 li
@
192.459 253.958 mo
192.57 253.958 li
@
16.2012 253.967 mo
16.3135 253.967 li
16.4263 253.967 li
16.5386 253.967 li
16.6523 253.965 li
16.7637 253.965 li
16.8765 253.965 li
16.9888 253.965 li
17.1025 253.965 li
17.2129 253.965 li
17.3262 253.963 li
17.439 253.963 li
17.5513 253.961 li
17.6641 253.961 li
17.7754 253.961 li
17.8877 253.96 li
18.0005 253.959 li
18.1128 253.958 li
18.2266 253.958 li
18.3379 253.957 li
18.4502 253.957 li
18.563 253.955 li
18.6753 253.953 li
18.7881 253.951 li
18.9004 253.95 li
19.0117 253.949 li
19.1245 253.947 li
19.2378 253.946 li
19.3496 253.946 li
19.4619 253.943 li
19.5742 253.94 li
19.687 253.938 li
19.7993 253.937 li
19.9121 253.934 li
20.0234 253.934 li
20.1372 253.93 li
20.2485 253.927 li
20.3618 253.925 li
20.4736 253.923 li
20.5869 253.919 li
20.6987 253.917 li
20.812 253.915 li
20.9233 253.911 li
21.0361 253.908 li
21.1479 253.905 li
21.2607 253.9 li
21.373 253.896 li
21.4854 253.892 li
21.5981 253.888 li
21.7104 253.885 li
21.8223 253.881 li
21.9355 253.876 li
22.0469 253.873 li
22.1606 253.867 li
22.2729 253.86 li
22.3848 253.856 li
22.4971 253.849 li
22.6099 253.843 li
22.7222 253.837 li
22.8345 253.831 li
22.9463 253.825 li
23.0596 253.819 li
23.1724 253.81 li
23.2847 253.805 li
23.396 253.794 li
23.5098 253.789 li
23.6221 253.781 li
23.7349 253.771 li
23.8472 253.763 li
23.9585 253.754 li
24.0723 253.746 li
24.1836 253.737 li
24.2964 253.726 li
24.4087 253.716 li
24.5215 253.706 li
24.6338 253.695 li
24.7461 253.683 li
24.8589 253.672 li
24.9712 253.66 li
25.084 253.649 li
25.1953 253.635 li
25.3091 253.622 li
25.4204 253.609 li
25.5327 253.596 li
25.6465 253.582 li
25.7578 253.566 li
25.8706 253.551 li
25.9829 253.535 li
26.0952 253.52 li
26.208 253.502 li
26.3203 253.486 li
26.4331 253.469 li
26.5464 253.453 li
26.6582 253.435 li
26.7705 253.417 li
26.8828 253.397 li
26.9956 253.376 li
27.1079 253.359 li
27.2207 253.336 li
27.332 253.315 li
@
27.332 253.315 mo
27.4443 253.293 li
27.5571 253.273 li
27.6694 253.25 li
27.7832 253.227 li
27.8945 253.203 li
28.0068 253.179 li
28.1196 253.153 li
28.2329 253.13 li
28.3457 253.104 li
28.457 253.079 li
28.5698 253.05 li
28.6821 253.024 li
28.7944 252.995 li
28.9063 252.966 li
29.0195 252.938 li
29.1313 252.905 li
29.2446 252.877 li
29.356 252.845 li
29.4688 252.814 li
29.582 252.781 li
29.6938 252.749 li
29.8062 252.714 li
29.9189 252.681 li
30.0313 252.645 li
30.1436 252.609 li
30.2563 252.572 li
30.3677 252.536 li
30.4814 252.498 li
30.5938 252.459 li
30.7051 252.419 li
30.8179 252.38 li
30.9302 252.337 li
31.0415 252.295 li
31.1563 252.252 li
31.2676 252.21 li
31.3804 252.166 li
31.4927 252.124 li
31.6055 252.076 li
31.7178 252.03 li
31.8291 251.981 li
31.9429 251.932 li
32.0552 251.883 li
32.168 251.833 li
32.2793 251.782 li
32.3921 251.728 li
32.5044 251.675 li
32.6167 251.624 li
32.7295 251.568 li
32.8418 251.51 li
32.9556 251.456 li
33.0669 251.396 li
33.1792 251.337 li
33.292 251.276 li
33.4038 251.214 li
33.5156 251.154 li
33.6279 251.09 li
33.7402 251.025 li
33.854 250.958 li
33.9653 250.891 li
34.0781 250.824 li
34.1914 250.754 li
34.3027 250.682 li
34.4155 250.61 li
34.5293 250.538 li
34.6406 250.463 li
34.7529 250.386 li
34.8657 250.308 li
34.978 250.23 li
35.0903 250.15 li
35.2021 250.067 li
35.3145 249.983 li
35.4282 249.899 li
35.5405 249.812 li
35.6519 249.725 li
35.7646 249.636 li
35.877 249.543 li
35.9897 249.451 li
36.1021 249.356 li
36.2148 249.26 li
36.3281 249.163 li
36.4385 249.064 li
36.5522 248.962 li
36.6646 248.859 li
36.7773 248.755 li
36.8896 248.649 li
37.0024 248.538 li
37.1138 248.429 li
37.2261 248.316 li
37.3398 248.201 li
37.4521 248.085 li
37.5635 247.967 li
37.6772 247.845 li
37.7886 247.724 li
37.9023 247.6 li
38.0146 247.473 li
38.1265 247.346 li
38.2388 247.215 li
38.3511 247.082 li
38.4639 246.947 li
38.5762 246.81 li
@
38.5762 246.81 mo
38.689 246.669 li
38.8013 246.528 li
38.915 246.385 li
39.0254 246.24 li
39.1387 246.091 li
39.2515 245.941 li
39.3638 245.789 li
39.4756 245.632 li
39.5879 245.476 li
39.7017 245.318 li
39.813 245.155 li
39.9253 244.992 li
40.0381 244.824 li
40.1504 244.654 li
40.2632 244.484 li
40.3755 244.31 li
40.4868 244.134 li
40.6006 243.956 li
40.7129 243.775 li
40.8242 243.591 li
40.937 243.403 li
41.0493 243.215 li
41.1621 243.024 li
41.2744 242.831 li
41.3872 242.634 li
41.4985 242.435 li
41.6118 242.236 li
41.7236 242.03 li
41.8369 241.824 li
41.9497 241.614 li
42.061 241.404 li
42.1733 241.189 li
42.2861 240.97 li
42.3984 240.751 li
42.5112 240.529 li
42.6235 240.304 li
42.7363 240.078 li
42.8486 239.846 li
42.9609 239.613 li
43.0737 239.376 li
43.1846 239.137 li
43.2969 238.894 li
43.4106 238.651 li
43.5229 238.403 li
43.6348 238.152 li
43.748 237.898 li
43.8599 237.641 li
43.9731 237.384 li
44.0845 237.122 li
44.1973 236.855 li
44.3096 236.587 li
44.4224 236.317 li
44.5347 236.04 li
44.6475 235.763 li
44.7598 235.482 li
44.8711 235.198 li
44.9839 234.91 li
45.0972 234.619 li
45.21 234.324 li
45.3223 234.026 li
45.4336 233.726 li
45.5474 233.419 li
45.6587 233.111 li
45.7715 232.799 li
45.8838 232.485 li
45.9961 232.165 li
46.1089 231.843 li
46.2222 231.516 li
46.334 231.186 li
46.4463 230.853 li
46.5591 230.514 li
46.6714 230.172 li
46.7837 229.828 li
46.8965 229.475 li
47.0088 229.125 li
47.1206 228.767 li
47.2339 228.404 li
47.3452 228.038 li
47.458 227.667 li
47.5713 227.293 li
47.6831 226.915 li
47.7954 226.53 li
47.9077 226.144 li
48.0215 225.752 li
48.1328 225.355 li
48.2456 224.954 li
48.3579 224.547 li
48.4707 224.139 li
48.583 223.726 li
48.6953 223.305 li
48.8081 222.881 li
48.9204 222.454 li
49.0332 222.023 li
49.1445 221.583 li
49.2583 221.142 li
49.3696 220.694 li
49.4819 220.244 li
49.5947 219.788 li
49.707 219.327 li
49.8198 218.86 li
@
49.8198 218.86 mo
49.9321 218.389 li
50.0435 217.914 li
50.1572 217.431 li
50.2686 216.946 li
50.3813 216.457 li
50.4946 215.96 li
50.6074 215.462 li
50.7197 214.958 li
50.832 214.448 li
50.9448 213.935 li
51.0552 213.414 li
51.1685 212.892 li
51.2813 212.363 li
51.3936 211.829 li
51.5063 211.292 li
51.6187 210.75 li
51.7314 210.204 li
51.8428 209.652 li
51.9561 209.096 li
52.0688 208.534 li
52.1802 207.97 li
52.293 207.397 li
52.4053 206.825 li
52.5176 206.247 li
52.6313 205.665 li
52.7427 205.078 li
52.8564 204.486 li
52.9688 203.891 li
53.0806 203.292 li
53.1938 202.687 li
53.3052 202.079 li
53.417 201.466 li
53.5303 200.853 li
53.6431 200.231 li
53.7544 199.607 li
53.8682 198.983 li
53.9795 198.352 li
54.0918 197.716 li
54.2046 197.078 li
54.3169 196.438 li
54.4307 195.793 li
54.542 195.144 li
54.6543 194.492 li
54.7671 193.838 li
54.8794 193.182 li
54.9922 192.52 li
55.1045 191.856 li
55.2183 191.189 li
55.3281 190.52 li
55.4404 189.847 li
55.5518 189.171 li
55.6655 188.493 li
55.7788 187.813 li
55.8896 187.128 li
56.0029 186.443 li
56.1157 185.752 li
56.228 185.063 li
56.3403 184.369 li
56.4521 183.673 li
56.5654 182.974 li
56.6772 182.275 li
56.7896 181.571 li
56.9043 180.868 li
57.0146 180.16 li
57.127 179.45 li
57.2397 178.738 li
57.3521 178.026 li
57.4648 177.311 li
57.5771 176.592 li
57.6895 175.873 li
57.8022 175.151 li
57.9146 174.429 li
58.0264 173.703 li
58.1396 172.977 li
58.251 172.247 li
58.3647 171.517 li
58.4761 170.785 li
58.5889 170.049 li
58.7021 169.312 li
58.8149 168.575 li
58.9263 167.833 li
59.0396 167.091 li
59.1514 166.35 li
59.2637 165.603 li
59.3765 164.856 li
59.4888 164.107 li
59.6011 163.357 li
59.7139 162.604 li
59.8262 161.85 li
59.939 161.093 li
60.0513 160.337 li
60.1626 159.577 li
60.2764 158.815 li
60.3877 158.054 li
60.5015 157.29 li
60.6138 156.523 li
60.7266 155.754 li
60.8389 154.987 li
60.9517 154.215 li
61.063 153.443 li
@
61.063 153.444 mo
61.1753 152.671 li
61.2881 151.894 li
61.4014 151.119 li
61.5117 150.34 li
61.6265 149.56 li
61.7378 148.781 li
61.8516 148.002 li
61.9619 147.218 li
62.0767 146.435 li
62.188 145.652 li
62.3003 144.868 li
62.4131 144.081 li
62.5234 143.296 li
62.6357 142.511 li
62.7495 141.722 li
62.8618 140.937 li
62.9746 140.15 li
63.0869 139.363 li
63.1987 138.578 li
63.311 137.792 li
63.4233 137.008 li
63.5361 136.224 li
63.6484 135.44 li
63.7612 134.661 li
63.8735 133.881 li
63.9863 133.102 li
64.0986 132.328 li
64.2124 131.555 li
64.3237 130.784 li
64.4351 130.012 li
64.5488 129.249 li
64.6611 128.487 li
64.7734 127.729 li
64.8862 126.974 li
64.9985 126.224 li
65.1099 125.478 li
65.2222 124.736 li
65.3345 124 li
65.4473 123.271 li
65.5596 122.544 li
65.6724 121.826 li
65.7856 121.112 li
65.897 120.409 li
66.0098 119.711 li
66.1221 119.021 li
66.2349 118.335 li
66.3472 117.662 li
66.46 116.995 li
66.5723 116.337 li
66.6846 115.686 li
66.7974 115.047 li
66.9087 114.419 li
67.0225 113.799 li
67.1348 113.189 li
67.2476 112.591 li
67.3599 112.005 li
67.4712 111.43 li
67.585 110.868 li
67.6973 110.317 li
67.8091 109.78 li
67.9214 109.252 li
68.0337 108.739 li
68.1465 108.241 li
68.2588 107.757 li
68.3716 107.285 li
68.4839 106.827 li
68.5967 106.386 li
68.709 105.958 li
68.8213 105.547 li
68.9341 105.148 li
69.0444 104.766 li
69.1592 104.402 li
69.2715 104.052 li
69.3828 103.717 li
69.4946 103.4 li
69.6079 103.1 li
69.7207 102.818 li
69.834 102.551 li
69.9453 102.299 li
70.0571 102.067 li
70.1704 101.854 li
70.2832 101.653 li
70.3936 101.471 li
70.5068 101.311 li
70.6206 101.166 li
70.7319 101.036 li
70.8457 100.924 li
70.957 100.835 li
71.0698 100.759 li
71.1821 100.702 li
71.2944 100.658 li
71.4063 100.64 li
71.5186 100.637 li
71.6323 100.649 li
71.7446 100.677 li
71.8574 100.728 li
71.9697 100.793 li
72.0811 100.874 li
72.1938 100.971 li
72.3062 101.09 li
@
72.3062 101.091 mo
72.4185 101.224 li
72.5313 101.375 li
72.6436 101.537 li
72.7563 101.723 li
72.8687 101.924 li
72.9814 102.137 li
73.0938 102.368 li
73.2061 102.616 li
73.3188 102.878 li
73.4312 103.155 li
73.5439 103.445 li
73.6563 103.753 li
73.769 104.077 li
73.8813 104.41 li
73.9927 104.757 li
74.1055 105.123 li
74.2168 105.5 li
74.3306 105.892 li
74.4429 106.293 li
74.5542 106.708 li
74.668 107.137 li
74.7803 107.578 li
74.8931 108.025 li
75.0063 108.492 li
75.1182 108.968 li
75.2305 109.452 li
75.3428 109.949 li
75.4531 110.455 li
75.5679 110.973 li
75.6807 111.499 li
75.793 112.034 li
75.9053 112.581 li
76.0161 113.134 li
76.1294 113.698 li
76.2432 114.27 li
76.3535 114.848 li
76.4668 115.436 li
76.5796 116.029 li
76.6919 116.629 li
76.8047 117.24 li
76.917 117.853 li
77.0298 118.475 li
77.1421 119.103 li
77.2544 119.734 li
77.3672 120.375 li
77.4795 121.02 li
77.5923 121.668 li
77.7031 122.321 li
77.8174 122.978 li
77.9292 123.641 li
78.0415 124.306 li
78.1519 124.975 li
78.2656 125.649 li
78.3779 126.325 li
78.4907 127.003 li
78.6021 127.687 li
78.7148 128.371 li
78.8281 129.058 li
78.9409 129.746 li
79.0522 130.437 li
79.1636 131.128 li
79.2773 131.823 li
79.3887 132.517 li
79.501 133.213 li
79.6147 133.911 li
79.7261 134.607 li
79.8389 135.305 li
79.9512 136.002 li
80.0635 136.702 li
80.1772 137.399 li
80.2886 138.099 li
80.4014 138.797 li
80.5137 139.495 li
80.6265 140.191 li
80.7388 140.889 li
80.8511 141.583 li
80.9639 142.276 li
81.0762 142.971 li
81.189 143.665 li
81.3013 144.354 li
81.4141 145.043 li
81.5264 145.733 li
81.6387 146.42 li
81.7515 147.104 li
81.8628 147.788 li
81.9756 148.471 li
82.0879 149.152 li
82.2002 149.828 li
82.313 150.504 li
82.4253 151.177 li
82.5366 151.851 li
82.6514 152.521 li
82.7617 153.186 li
82.8745 153.851 li
82.9893 154.516 li
83.1016 155.179 li
83.2119 155.835 li
83.3267 156.495 li
83.438 157.147 li
83.5493 157.801 li
@
83.5488 157.801 mo
83.6616 158.453 li
83.7739 159.1 li
83.8862 159.745 li
84 160.39 li
84.1113 161.032 li
84.2251 161.672 li
84.3354 162.31 li
84.4502 162.946 li
84.5625 163.579 li
84.6738 164.209 li
84.7866 164.841 li
84.8999 165.469 li
85.0117 166.094 li
85.124 166.717 li
85.2368 167.341 li
85.3491 167.962 li
85.4604 168.58 li
85.5742 169.198 li
85.6865 169.813 li
85.8003 170.43 li
85.9116 171.042 li
86.0229 171.653 li
86.1377 172.265 li
86.249 172.873 li
86.3628 173.481 li
86.4741 174.087 li
86.5869 174.694 li
86.7002 175.296 li
86.812 175.902 li
86.9224 176.504 li
87.0366 177.106 li
87.1494 177.707 li
87.2617 178.304 li
87.3721 178.905 li
87.4868 179.502 li
87.5981 180.103 li
87.7109 180.699 li
87.8232 181.296 li
87.936 181.89 li
88.0474 182.487 li
88.1597 183.082 li
88.2725 183.677 li
88.3848 184.269 li
88.4976 184.863 li
88.6099 185.457 li
88.7222 186.048 li
88.835 186.64 li
88.9458 187.233 li
89.0601 187.824 li
89.1724 188.413 li
89.2832 189.004 li
89.3975 189.596 li
89.5098 190.183 li
89.6211 190.773 li
89.7349 191.363 li
89.8457 191.949 li
89.9585 192.538 li
90.0708 193.124 li
90.1836 193.709 li
90.2959 194.297 li
90.4087 194.882 li
90.521 195.468 li
90.6323 196.047 li
90.7451 196.632 li
90.8574 197.215 li
90.9697 197.796 li
91.0815 198.377 li
91.1938 198.957 li
91.3086 199.535 li
91.4189 200.11 li
91.5313 200.687 li
91.646 201.261 li
91.7588 201.838 li
91.8691 202.409 li
91.9814 202.978 li
92.0942 203.547 li
92.2065 204.116 li
92.3188 204.682 li
92.4326 205.247 li
92.5439 205.808 li
92.6567 206.37 li
92.769 206.928 li
92.8818 207.486 li
92.9941 208.038 li
93.1064 208.593 li
93.2192 209.14 li
93.3315 209.688 li
93.4434 210.232 li
93.5557 210.776 li
93.668 211.316 li
93.7808 211.853 li
93.8931 212.386 li
94.0068 212.918 li
94.1182 213.445 li
94.2305 213.97 li
94.3442 214.495 li
94.457 215.014 li
94.5684 215.528 li
94.6807 216.042 li
94.7944 216.55 li
@
94.7939 216.55 mo
94.9063 217.055 li
95.0176 217.558 li
95.1304 218.055 li
95.2451 218.549 li
95.3555 219.042 li
95.4688 219.528 li
95.5825 220.009 li
95.6929 220.49 li
95.8052 220.965 li
95.918 221.435 li
96.0293 221.902 li
96.1431 222.363 li
96.2554 222.824 li
96.3677 223.278 li
96.4795 223.728 li
96.5918 224.171 li
96.7046 224.616 li
96.8169 225.05 li
96.9292 225.483 li
97.042 225.911 li
97.1543 226.333 li
97.2671 226.751 li
97.3794 227.167 li
97.4922 227.576 li
97.6045 227.981 li
97.7168 228.38 li
97.8296 228.776 li
97.9399 229.167 li
98.0522 229.553 li
98.167 229.933 li
98.2798 230.31 li
98.3921 230.683 li
98.5044 231.049 li
98.6172 231.414 li
98.7285 231.77 li
98.8408 232.123 li
98.9521 232.471 li
99.0659 232.816 li
99.1772 233.154 li
99.2896 233.488 li
99.4019 233.817 li
99.5146 234.143 li
99.627 234.461 li
99.7397 234.779 li
99.8521 235.09 li
99.9658 235.397 li
100.076 235.698 li
100.188 235.996 li
100.301 236.29 li
100.414 236.579 li
100.526 236.862 li
100.641 237.143 li
100.754 237.417 li
100.863 237.69 li
100.977 237.954 li
101.089 238.218 li
101.2 238.476 li
101.313 238.731 li
101.426 238.979 li
101.539 239.224 li
101.651 239.467 li
101.764 239.706 li
101.877 239.938 li
101.988 240.168 li
102.1 240.394 li
102.215 240.617 li
102.327 240.836 li
102.438 241.049 li
102.551 241.261 li
102.662 241.468 li
102.774 241.67 li
102.887 241.872 li
103.002 242.068 li
103.113 242.262 li
103.225 242.45 li
103.338 242.636 li
103.449 242.819 li
103.563 243 li
103.676 243.175 li
103.789 243.348 li
103.901 243.519 li
104.012 243.684 li
104.125 243.849 li
104.236 244.01 li
104.35 244.169 li
104.461 244.325 li
104.576 244.477 li
104.688 244.625 li
104.801 244.772 li
104.913 244.917 li
105.025 245.06 li
105.136 245.197 li
105.25 245.333 li
105.363 245.466 li
105.475 245.598 li
105.588 245.727 li
105.701 245.854 li
105.813 245.979 li
105.924 246.1 li
106.036 246.221 li
@
106.035 246.221 mo
106.148 246.338 li
106.262 246.455 li
106.374 246.568 li
106.486 246.68 li
106.6 246.791 li
106.711 246.898 li
106.824 247.003 li
106.937 247.108 li
107.049 247.21 li
107.162 247.312 li
107.273 247.412 li
107.386 247.506 li
107.498 247.605 li
107.611 247.699 li
107.724 247.792 li
107.834 247.881 li
107.947 247.972 li
108.061 248.06 li
108.172 248.148 li
108.284 248.233 li
108.397 248.317 li
108.51 248.403 li
108.624 248.485 li
108.734 248.565 li
108.846 248.645 li
108.96 248.722 li
109.072 248.804 li
109.185 248.878 li
109.297 248.954 li
109.41 249.03 li
109.522 249.102 li
109.635 249.175 li
109.747 249.249 li
109.86 249.32 li
109.973 249.39 li
110.084 249.46 li
110.197 249.529 li
110.311 249.597 li
110.421 249.666 li
110.534 249.731 li
110.646 249.798 li
110.757 249.863 li
110.871 249.928 li
110.983 249.992 li
111.097 250.054 li
111.208 250.118 li
111.32 250.18 li
111.433 250.243 li
111.544 250.304 li
111.658 250.364 li
111.769 250.424 li
111.882 250.486 li
111.994 250.543 li
112.106 250.603 li
112.219 250.66 li
112.334 250.719 li
112.446 250.777 li
112.556 250.834 li
112.671 250.889 li
112.782 250.944 li
112.895 251 li
113.008 251.056 li
113.12 251.111 li
113.232 251.167 li
113.345 251.22 li
113.455 251.272 li
113.57 251.325 li
113.683 251.377 li
113.793 251.427 li
113.907 251.48 li
114.021 251.532 li
114.132 251.583 li
114.245 251.631 li
114.356 251.679 li
114.469 251.73 li
114.582 251.779 li
114.694 251.828 li
114.807 251.875 li
114.917 251.921 li
115.03 251.968 li
115.145 252.012 li
115.257 252.059 li
115.369 252.103 li
115.481 252.149 li
115.593 252.194 li
115.706 252.237 li
115.816 252.28 li
115.93 252.322 li
116.043 252.364 li
116.154 252.404 li
116.267 252.447 li
116.381 252.485 li
116.493 252.524 li
116.605 252.563 li
116.719 252.603 li
116.83 252.639 li
116.942 252.674 li
117.056 252.711 li
117.167 252.747 li
117.281 252.783 li
@
117.281 252.783 mo
117.393 252.816 li
117.505 252.852 li
117.618 252.884 li
117.73 252.917 li
117.843 252.95 li
117.955 252.981 li
118.066 253.01 li
118.181 253.042 li
118.292 253.071 li
118.405 253.1 li
118.517 253.129 li
118.629 253.157 li
118.741 253.183 li
118.855 253.211 li
118.967 253.235 li
119.079 253.261 li
119.192 253.286 li
119.303 253.31 li
119.416 253.333 li
119.527 253.357 li
119.642 253.378 li
119.755 253.401 li
119.867 253.42 li
119.979 253.442 li
120.09 253.462 li
120.203 253.482 li
120.315 253.5 li
120.429 253.518 li
120.541 253.537 li
120.653 253.552 li
120.765 253.572 li
120.877 253.586 li
120.989 253.601 li
121.104 253.617 li
121.215 253.631 li
121.329 253.647 li
121.441 253.66 li
121.553 253.673 li
121.665 253.687 li
121.777 253.7 li
121.889 253.71 li
122.003 253.722 li
122.115 253.733 li
122.229 253.744 li
122.34 253.754 li
122.451 253.765 li
122.564 253.775 li
122.675 253.784 li
122.787 253.792 li
122.903 253.799 li
123.016 253.81 li
123.127 253.818 li
123.239 253.825 li
123.352 253.833 li
123.463 253.837 li
123.577 253.845 li
123.69 253.853 li
123.803 253.857 li
123.913 253.862 li
124.026 253.869 li
124.138 253.875 li
124.25 253.881 li
124.363 253.886 li
124.476 253.892 li
124.587 253.894 li
124.7 253.898 li
124.813 253.902 li
124.926 253.907 li
125.037 253.911 li
125.15 253.915 li
125.264 253.917 li
125.374 253.919 li
125.487 253.923 li
125.601 253.925 li
125.711 253.927 li
125.825 253.933 li
125.936 253.934 li
126.05 253.937 li
126.163 253.938 li
126.274 253.94 li
126.388 253.943 li
126.499 253.945 li
126.611 253.947 li
126.725 253.947 li
126.838 253.949 li
126.949 253.951 li
127.062 253.953 li
127.174 253.953 li
127.285 253.955 li
127.398 253.957 li
127.512 253.958 li
127.625 253.958 li
127.737 253.959 li
127.85 253.96 li
127.962 253.961 li
128.072 253.961 li
128.188 253.961 li
128.3 253.963 li
128.409 253.963 li
128.524 253.965 li
@
128.523 253.965 mo
128.637 253.965 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2FCE13DD0FF> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 65 /A putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [65{/.notdef}rp /A 4{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [10.9074 0 0 -10.9074 0 0 ]msf36.0479 9.28271 mo(A)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043FB4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B51535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E91518EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B9A242BB0987762DC5FABDB70310B695148> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [65{/.notdef}rp /A /B 3{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [10.9074 0 0 -10.9074 0 0 ]msf100.838 9.22803 mo(B)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C063970DBF718CAF90EB4032F79AFF3BD0DCAB8819135C4DEC30C4AD93CDA5718D518C03D131C0ECA750D3497F02641B81219A155BBD4DFC26D705BADFBB56DDF384391247F88C168EFD4243293DABFBBBE3A19FF63D> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [65{/.notdef}rp /A /B /C 2{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [10.9074 0 0 -10.9074 0 0 ]msf167.111 9.12939 mo(C)shVADSCJ+MyriadPro-Regular*1 [18.3907 0 0 -18.3907 0 0 ]msf64.998 96.6968 mo(A)shVADSCJ+MyriadPro-Regular*1 [18.3907 0 0 -18.3907 0 0 ]msf99.2051 96.6968 mo(B)shVADSCJ+MyriadPro-Regular*1 [18.3907 0 0 -18.3907 0 0 ]msf130.487 96.6226 mo(C)sh1 lw
0 lj
4 ml
148.199 254.609 mo
174.796 278.519 li
0.760784 0.756863 0.623529 0.811765 cmyk
@
175.097 276.692 mo
176.039 279.626 li
173.103 278.684 li
0.858823 0.85098 0.788235 1 cmyk
f
105.145 254.507 mo
105.145 277.856 li
0.760784 0.756863 0.623529 0.811765 cmyk
@
106.582 276.971 mo
105.172 279.712 li
103.764 276.971 li
0.858823 0.85098 0.788235 1 cmyk
f
58.8696 254.123 mo
37.0098 278.439 li
0.760784 0.756863 0.623529 0.811765 cmyk
@
38.9761 278.41 mo
36.0415 279.352 li
36.9819 276.416 li
0.858823 0.85098 0.788235 1 cmyk
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-It Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-It def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle -11 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 67 /C putdef/FontBBox {-185 -250 1090 953} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 246 253] def/OtherBlues [400 407 259 266 -209 -198 -151 -144 -116 -111] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [65] def/StdVW [88] def/StemSnapH [65] def/StemSnapV [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/B <1C60D8A8C9B7B4A14E8B9E16C123C242340B58A0585AC5E18537FB197123920BE7EC0F418314675F08A6B1675F001C8CEC53958F83591508DDF3C4710E7AF095C494537AB98456CD548E7D8A3635A53F27A15F6A77C854F6142D6B0F5ED5FC6BEFB3046EDE32359787C280FDF0077664D5A0EA9835C6F27AA931810D900EF14C33A6085E23E4544B0401C086ABB90604B38F34E641EA5B66CA9589CC09D68934971C9AC9D7FF520008> |-/C <1C60D8A8C9B790A8364A8739C0A6FB0B1DA1E133A5F80CB11B02DF27239898E57FB65A28A6839C537CA29C7DB953774127D0E71CED496D1FF658DCC741C03989CDDA7D3054474FE176A0D1FFEE103988F997E71F48B8968931E7DA8F89EA2F3F4AB6613E5081EEF2B5169F0A86C9B61886CB28697AB3E37A798BD770> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VADSCK+MyriadPro-It /MyriadPro-It findfont ct_VMDictPut/VADSCK+MyriadPro-It*1 [66{/.notdef}rp /B /C 188{/.notdef}rp]VADSCK+MyriadPro-It nfVADSCK+MyriadPro-It*1 [14.5431 0 0 -14.5431 0 0 ]msf18.0518 291.659 mo(BC)[7.54785 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CE3F6788F74B615B747D0C4950E0757D67CC4B6F86A79106B4F6AF8262CBC77CA155FEEB> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 40 /parenleft putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft 24{/.notdef}rp /A /B /C 2{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf33.6709 291.659 mo(\()sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenright <1C60D8A8C9B84E0A47D7FED609B36B98A489D0C883687FC8C4BD7FF8A57C9949E56F26DF53030280BC0E024A6F3F65DFBA65966BEA7D55AEB539EB378E> |-/comma <1C60D8A8C9B89DB7C9B475614983351570CC54B5F96756F115811851C31221DFA6DE8F8A57F629> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 41 /parenright putdup 44 /comma putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 28{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf37.6558 291.659 mo(A,B\))[8.90039 3.01025 7.88232 0 ]xshVADSCK+MyriadPro-It*1 [14.5431 0 0 -14.5431 0 0 ]msf83.1035 291.702 mo(BC)[7.54785 0 ]xshVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf98.7227 291.702 mo(\()shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf102.708 291.702 mo(A,)[8.90088 0 ]xshVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf114.618 291.702 mo(C)shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf123.3 291.702 mo(\))shVADSCK+MyriadPro-It*1 [14.5431 0 0 -14.5431 0 0 ]msf153.317 291.702 mo(BC)[7.54785 0 ]xshVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf168.937 291.702 mo(\()shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf173.066 291.702 mo(B)shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf180.773 291.702 mo(,)shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf183.783 291.702 mo(C)shVADSCJ+MyriadPro-Regular*1 [14.5431 0 0 -14.5431 0 0 ]msf192.465 291.702 mo(\))sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 84 /T putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 13{/.notdef}rp /T 14{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n 2{/.notdef}rp /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf57.3477 269.316 mo(T)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D64C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB9425A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4EDA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E729DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC6337027CFBBA> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 108 /l putdup 111 /o putdup 112 /p putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 13{/.notdef}rp /T 14{/.notdef}rp /c /.notdef /e 6{/.notdef}rp /l /.notdef /n /o /p /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf61.4873 269.316 mo(opolo)[5.32275 5.5166 5.32275 2.28809 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AFADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8DE47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB3949583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD800440564510FEC150DF1BF6> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 103 /g putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 13{/.notdef}rp /T 14{/.notdef}rp /c /.notdef /e /.notdef /g 4{/.notdef}rp /l /.notdef /n /o /p /q /r 2{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf85.2603 269.316 mo(g)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B896187A> |-/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E703DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094DC5B241D2351AD29DD00EC> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEBB38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A809> |-/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672FE0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C99CE7F0B78BC22FE4480BA1B895> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 32 /space putdup 97 /a putdup 105 /i putdup 109 /m putdup 115 /s putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 13{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf90.6313 269.316 mo(ical simila)[2.26855 4.34375 4.67334 2.28809 2.05518 3.83838 2.26855 8.08594 2.26855 2.28809 0 ]xshVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf129.683 269.316 mo(r)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf132.892 269.316 mo(i)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginVADSCJ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B96A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367AB24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-systemdict /gcheck known {setglobal} if end {end} ifendVADSCJ+MyriadPro-Regular /Encoding getdup 116 /t putpop%ADOEndSubsetFont
/VADSCJ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B /C 2{/.notdef}rp /F 13{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]VADSCJ+MyriadPro-Regular nfVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf135.16 269.316 mo(t)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf138.447 269.316 mo(y)shVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 200.253 mo(F)shVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 195.774 mo(r)shVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 192.701 mo(equen)[-4.85742 -5.45801 -5.3418 -4.85742 0 ]yshVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 166.805 mo(c)shVADSCJ+MyriadPro-Regular*1 [0 -9.69547 -9.69547 0 0 0 ]msf8.11523 162.297 mo(y)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf57.7085 70.624 mo(T)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf61.8481 70.624 mo(opolo)[5.32275 5.5166 5.32275 2.28809 0 ]xshVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf85.6211 70.624 mo(g)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf90.9922 70.624 mo(ical simila)[2.26855 4.34375 4.67334 2.28809 2.05518 3.83887 2.26855 8.08594 2.26855 2.28809 0 ]xshVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf130.044 70.624 mo(r)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf133.253 70.624 mo(i)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf135.521 70.624 mo(t)shVADSCJ+MyriadPro-Regular*1 [9.69547 0 0 -9.69547 0 0 ]msf138.809 70.624 mo(y)sh0.75 lw
1 lj
10 ml
170.788 58.3418 mo
170.813 58.3418 li
170.839 58.3418 li
170.866 58.3418 li
170.892 58.3418 li
170.917 58.3418 li
170.942 58.3418 li
170.968 58.3418 li
170.993 58.3408 li
171.019 58.3408 li
171.044 58.3408 li
171.069 58.3408 li
171.097 58.3408 li
171.122 58.3408 li
171.147 58.3408 li
171.173 58.3408 li
171.198 58.3389 li
171.224 58.3389 li
171.249 58.3389 li
171.275 58.3389 li
171.3 58.3389 li
171.327 58.3389 li
171.353 58.3379 li
171.377 58.3369 li
171.403 58.3369 li
171.427 58.3369 li
171.453 58.3354 li
171.479 58.3354 li
171.504 58.3354 li
171.532 58.3345 li
171.555 58.3345 li
171.58 58.3345 li
171.606 58.3325 li
171.632 58.3325 li
171.658 58.3325 li
171.684 58.3301 li
171.709 58.3301 li
171.734 58.3286 li
171.76 58.3276 li
171.785 58.3276 li
171.811 58.3276 li
171.838 58.3267 li
171.862 58.3257 li
171.889 58.3237 li
171.914 58.3237 li
171.938 58.3213 li
171.964 58.3203 li
171.988 58.3193 li
172.016 58.3193 li
172.041 58.3184 li
172.066 58.3159 li
172.093 58.3159 li
172.117 58.3149 li
172.144 58.313 li
172.17 58.312 li
172.194 58.3091 li
172.22 58.3071 li
172.246 58.3052 li
172.271 58.3052 li
172.297 58.3027 li
172.323 58.3008 li
172.348 58.2988 li
172.374 58.2954 li
172.399 58.2944 li
172.424 58.2925 li
172.451 58.29 li
172.477 58.2856 li
172.502 58.2847 li
172.527 58.2813 li
172.554 58.2793 li
172.579 58.2769 li
172.605 58.2739 li
172.63 58.272 li
172.656 58.2686 li
172.68 58.2646 li
172.707 58.2617 li
172.731 58.2583 li
172.757 58.2544 li
172.782 58.25 li
172.809 58.248 li
172.833 58.2437 li
172.859 58.2402 li
172.884 58.2349 li
172.91 58.2324 li
172.935 58.2285 li
172.961 58.2231 li
172.987 58.2212 li
173.013 58.2144 li
173.038 58.21 li
173.063 58.2046 li
173.089 58.1992 li
173.114 58.1948 li
173.14 58.1895 li
173.166 58.1841 li
173.192 58.1787 li
173.217 58.1729 li
173.243 58.1675 li
173.269 58.1626 li
173.294 58.1548 li
173.319 58.1494 li
0.858823 0.85098 0.788235 1 cmyk
@
173.319 58.1499 mo
173.345 58.1421 li
173.371 58.1367 li
173.396 58.1289 li
173.423 58.124 li
173.448 58.1177 li
173.474 58.1094 li
173.499 58.1021 li
173.524 58.0938 li
173.55 58.0859 li
173.575 58.0796 li
173.601 58.0703 li
173.627 58.063 li
173.651 58.0557 li
173.678 58.0459 li
173.702 58.0371 li
173.729 58.0288 li
173.755 58.02 li
173.779 58.0112 li
173.806 58.0005 li
173.831 57.9917 li
173.856 57.9824 li
173.881 57.9712 li
173.906 57.9604 li
173.932 57.9497 li
173.957 57.9419 li
173.982 57.9287 li
174.01 57.9185 li
174.034 57.9072 li
174.061 57.8955 li
174.086 57.8848 li
174.111 57.8721 li
174.137 57.8599 li
174.162 57.8491 li
174.189 57.835 li
174.214 57.8218 li
174.24 57.8091 li
174.265 57.7959 li
174.291 57.7832 li
174.316 57.7681 li
174.342 57.7544 li
174.367 57.7397 li
174.393 57.7256 li
174.42 57.7119 li
174.444 57.6963 li
174.469 57.6792 li
174.495 57.6636 li
174.521 57.6489 li
174.546 57.6313 li
174.572 57.6162 li
174.598 57.5991 li
174.624 57.583 li
174.648 57.5645 li
174.674 57.5459 li
174.699 57.5273 li
174.725 57.5107 li
174.752 57.4922 li
174.777 57.4702 li
174.803 57.4507 li
174.828 57.4326 li
174.853 57.4116 li
174.879 57.3921 li
174.904 57.3706 li
174.93 57.3491 li
174.955 57.3276 li
174.982 57.3062 li
175.008 57.2822 li
175.033 57.2593 li
175.056 57.2368 li
175.082 57.2124 li
175.109 57.188 li
175.135 57.1641 li
175.161 57.1382 li
175.185 57.1133 li
175.211 57.0884 li
175.235 57.0605 li
175.262 57.0332 li
175.288 57.0049 li
175.313 56.978 li
175.339 56.9502 li
175.364 56.9209 li
175.39 56.8916 li
175.415 56.8623 li
175.44 56.8296 li
175.466 56.7998 li
175.492 56.7695 li
175.519 56.7344 li
175.544 56.7046 li
175.569 56.6694 li
175.595 56.6362 li
175.619 56.6016 li
175.646 56.5659 li
175.671 56.5313 li
175.696 56.4946 li
175.724 56.459 li
175.747 56.4199 li
175.774 56.3833 li
175.799 56.3442 li
175.825 56.3052 li
175.85 56.2651 li
175.874 56.2241 li
@
175.875 56.2236 mo
175.901 56.1836 li
175.926 56.1416 li
175.952 56.0991 li
175.979 56.0576 li
176.004 56.0132 li
176.03 55.9688 li
176.055 55.9233 li
176.081 55.8779 li
176.105 55.8306 li
176.13 55.7842 li
176.157 55.7358 li
176.184 55.687 li
176.21 55.6377 li
176.234 55.5879 li
176.259 55.5366 li
176.283 55.4849 li
176.309 55.4341 li
176.336 55.3813 li
176.362 55.3281 li
176.388 55.2729 li
176.412 55.2178 li
176.438 55.1616 li
176.463 55.105 li
176.491 55.0469 li
176.515 54.9893 li
176.539 54.9312 li
176.566 54.8716 li
176.591 54.8096 li
176.617 54.7505 li
176.642 54.6875 li
176.668 54.625 li
176.693 54.562 li
176.719 54.4971 li
176.744 54.4321 li
176.771 54.3667 li
176.797 54.3018 li
176.821 54.2334 li
176.846 54.1655 li
176.873 54.0952 li
176.898 54.0264 li
176.924 53.9551 li
176.949 53.8828 li
176.975 53.8115 li
177.001 53.7378 li
177.025 53.6631 li
177.052 53.5884 li
177.076 53.5132 li
177.103 53.437 li
177.128 53.3594 li
177.154 53.2788 li
177.18 53.2002 li
177.205 53.1201 li
177.23 53.04 li
177.256 52.9565 li
177.281 52.873 li
177.308 52.7905 li
177.334 52.7036 li
177.358 52.6191 li
177.385 52.5317 li
177.41 52.4438 li
177.436 52.354 li
177.461 52.2642 li
177.486 52.1733 li
177.514 52.0806 li
177.538 51.9873 li
177.564 51.8926 li
177.589 51.7974 li
177.612 51.6997 li
177.641 51.6035 li
177.666 51.5034 li
177.69 51.4043 li
177.716 51.3027 li
177.741 51.2007 li
177.767 51.0981 li
177.792 50.9922 li
177.818 50.8862 li
177.845 50.7798 li
177.869 50.6709 li
177.896 50.562 li
177.921 50.4512 li
177.946 50.3398 li
177.972 50.2251 li
177.997 50.1118 li
178.022 49.9951 li
178.048 49.8789 li
178.074 49.7578 li
178.101 49.6392 li
178.126 49.5176 li
178.149 49.3955 li
178.176 49.2725 li
178.202 49.1455 li
178.228 49.019 li
178.253 48.8926 li
178.278 48.7627 li
178.305 48.6318 li
178.329 48.4985 li
178.355 48.3652 li
178.38 48.23 li
178.406 48.0938 li
178.433 47.9556 li
@
178.433 47.9561 mo
178.457 47.8179 li
178.483 47.6763 li
178.509 47.5327 li
178.535 47.3911 li
178.56 47.2451 li
178.586 47.0991 li
178.612 46.9497 li
178.637 46.8027 li
178.661 46.6523 li
178.688 46.4995 li
178.714 46.3467 li
178.739 46.1909 li
178.765 46.0361 li
178.79 45.877 li
178.815 45.7192 li
178.84 45.5581 li
178.865 45.395 li
178.891 45.2319 li
178.919 45.0679 li
178.943 44.9023 li
178.969 44.7344 li
178.994 44.5669 li
179.02 44.396 li
179.044 44.2246 li
179.07 44.0542 li
179.098 43.8799 li
179.121 43.7046 li
179.148 43.5273 li
179.174 43.3521 li
179.197 43.1724 li
179.224 42.9927 li
179.248 42.811 li
179.274 42.6294 li
179.302 42.4458 li
179.326 42.2603 li
179.353 42.0752 li
179.377 41.8906 li
179.403 41.7026 li
179.43 41.5127 li
179.454 41.3237 li
179.48 41.1328 li
179.506 40.9419 li
179.531 40.749 li
179.557 40.5547 li
179.582 40.3608 li
179.607 40.1646 li
179.633 39.9692 li
179.658 39.771 li
179.686 39.5732 li
179.711 39.373 li
179.736 39.1738 li
179.761 38.9731 li
179.787 38.772 li
179.812 38.5684 li
179.838 38.3672 li
179.863 38.1626 li
179.89 37.958 li
179.916 37.7524 li
179.941 37.5479 li
179.965 37.3403 li
179.991 37.1338 li
180.018 36.9272 li
180.041 36.7168 li
180.069 36.5083 li
180.096 36.2998 li
180.12 36.0874 li
180.144 35.8765 li
180.169 35.666 li
180.194 35.4512 li
180.221 35.2397 li
180.247 35.0259 li
180.272 34.812 li
180.298 34.5977 li
180.323 34.3828 li
180.349 34.1675 li
180.374 33.9521 li
180.4 33.7349 li
180.425 33.5161 li
180.452 33.2988 li
180.477 33.0811 li
180.503 32.8613 li
180.528 32.6431 li
180.554 32.4224 li
180.579 32.2017 li
180.604 31.98 li
180.632 31.7593 li
180.656 31.5376 li
180.683 31.3149 li
180.707 31.0918 li
180.731 30.8682 li
180.758 30.644 li
180.784 30.4189 li
180.81 30.1938 li
180.834 29.9688 li
180.86 29.7427 li
180.886 29.5166 li
180.911 29.2886 li
180.938 29.0615 li
180.962 28.833 li
180.988 28.6035 li
@
180.988 28.604 mo
181.013 28.376 li
181.039 28.1455 li
181.065 27.9175 li
181.091 27.6865 li
181.117 27.4561 li
181.142 27.2261 li
181.168 26.9946 li
181.192 26.7637 li
181.218 26.5313 li
181.242 26.3008 li
181.27 26.0684 li
181.296 25.8345 li
181.321 25.6021 li
181.348 25.3701 li
181.371 25.1367 li
181.396 24.9043 li
181.422 24.6719 li
181.447 24.439 li
181.474 24.2075 li
181.5 23.9751 li
181.525 23.7422 li
181.551 23.5107 li
181.575 23.2793 li
181.602 23.0483 li
181.627 22.8164 li
181.652 22.5869 li
181.678 22.3589 li
181.704 22.1304 li
181.729 21.9023 li
181.755 21.6738 li
181.779 21.4478 li
181.806 21.2217 li
181.83 20.9976 li
181.857 20.7749 li
181.883 20.5532 li
181.908 20.3325 li
181.934 20.1118 li
181.959 19.8945 li
181.984 19.6792 li
182.012 19.4634 li
182.037 19.252 li
182.062 19.041 li
182.088 18.8315 li
182.112 18.6265 li
182.139 18.4219 li
182.165 18.2188 li
182.189 18.0195 li
182.215 17.8218 li
182.242 17.6279 li
182.268 17.4351 li
182.293 17.2451 li
182.318 17.0601 li
182.343 16.8774 li
182.369 16.6958 li
182.395 16.52 li
182.421 16.3472 li
182.445 16.1763 li
182.472 16.0083 li
182.498 15.8462 li
182.522 15.6885 li
182.546 15.5327 li
182.572 15.3799 li
182.6 15.2329 li
182.625 15.0898 li
182.649 14.9502 li
182.675 14.814 li
182.7 14.6841 li
182.726 14.5581 li
182.751 14.4341 li
182.776 14.3174 li
182.804 14.2041 li
182.829 14.0967 li
182.854 13.9932 li
182.88 13.8936 li
182.905 13.8003 li
182.93 13.7119 li
182.956 13.6289 li
182.981 13.5493 li
183.007 13.4751 li
183.032 13.4067 li
183.059 13.3428 li
183.085 13.2832 li
183.11 13.2295 li
183.134 13.1821 li
183.161 13.1396 li
183.187 13.1016 li
183.212 13.0684 li
183.238 13.0415 li
183.263 13.019 li
183.289 13.0024 li
183.315 12.9893 li
183.34 12.9839 li
183.366 12.9839 li
183.392 12.9858 li
183.417 12.9941 li
183.442 13.0098 li
183.468 13.0303 li
183.493 13.0532 li
183.519 13.082 li
183.544 13.1167 li
@
183.544 13.1162 mo
183.57 13.1567 li
183.597 13.2007 li
183.621 13.2495 li
183.647 13.3042 li
183.673 13.3643 li
183.698 13.4268 li
183.724 13.4951 li
183.749 13.5684 li
183.774 13.647 li
183.801 13.7285 li
183.824 13.814 li
183.853 13.9048 li
183.876 13.999 li
183.902 14.0991 li
183.927 14.2026 li
183.951 14.3105 li
183.979 14.4224 li
184.004 14.5366 li
184.029 14.6567 li
184.056 14.7793 li
184.08 14.9053 li
184.106 15.0366 li
184.133 15.1675 li
184.157 15.3071 li
184.184 15.4463 li
184.209 15.5908 li
184.234 15.7373 li
184.26 15.8892 li
184.286 16.0405 li
184.311 16.1978 li
184.337 16.3555 li
184.361 16.5166 li
184.388 16.6807 li
184.413 16.8457 li
184.439 17.0161 li
184.465 17.1875 li
184.49 17.3613 li
184.516 17.5366 li
184.541 17.7139 li
184.567 17.8945 li
184.593 18.0752 li
184.617 18.2603 li
184.644 18.4453 li
184.67 18.6338 li
184.695 18.8218 li
184.721 19.0122 li
184.746 19.2036 li
184.771 19.3984 li
184.799 19.5918 li
184.823 19.7891 li
184.848 19.9858 li
184.874 20.1841 li
184.9 20.3828 li
184.925 20.583 li
184.951 20.7832 li
184.977 20.9844 li
185.002 21.1875 li
185.027 21.3901 li
185.053 21.5942 li
185.077 21.7979 li
185.104 22.0034 li
185.128 22.2075 li
185.154 22.4136 li
185.181 22.6201 li
185.206 22.8267 li
185.232 23.0322 li
185.257 23.2388 li
185.282 23.4453 li
185.308 23.6514 li
185.333 23.8589 li
185.359 24.0654 li
185.386 24.272 li
185.411 24.4785 li
185.437 24.6841 li
185.462 24.8906 li
185.487 25.0967 li
185.513 25.3022 li
185.538 25.5063 li
185.563 25.7119 li
185.59 25.9165 li
185.614 26.1206 li
185.641 26.3242 li
185.665 26.5264 li
185.691 26.73 li
185.718 26.9312 li
185.743 27.1333 li
185.77 27.3345 li
185.794 27.5347 li
185.819 27.7358 li
185.845 27.9341 li
185.87 28.1328 li
185.897 28.3311 li
185.923 28.5298 li
185.947 28.7261 li
185.974 28.9214 li
185.999 29.1187 li
186.024 29.3125 li
186.05 29.5068 li
186.075 29.7007 li
186.101 29.894 li
@
186.101 29.894 mo
186.127 30.0879 li
186.151 30.2778 li
186.178 30.4688 li
186.204 30.6597 li
186.229 30.8491 li
186.255 31.0396 li
186.28 31.2275 li
186.307 31.415 li
186.33 31.6021 li
186.355 31.79 li
186.382 31.9761 li
186.406 32.1626 li
186.433 32.3486 li
186.459 32.5313 li
186.483 32.7153 li
186.508 32.8989 li
186.534 33.0835 li
186.561 33.2651 li
186.586 33.4478 li
186.611 33.6294 li
186.637 33.811 li
186.663 33.9917 li
186.688 34.1724 li
186.714 34.353 li
186.738 34.5317 li
186.766 34.7124 li
186.791 34.8896 li
186.816 35.0693 li
186.842 35.249 li
186.867 35.4268 li
186.893 35.6035 li
186.918 35.7808 li
186.945 35.9595 li
186.97 36.1372 li
186.996 36.3145 li
187.021 36.4922 li
187.047 36.6675 li
187.072 36.8442 li
187.098 37.0195 li
187.124 37.1963 li
187.148 37.3726 li
187.176 37.5488 li
187.201 37.7241 li
187.227 37.8979 li
187.252 38.0757 li
187.277 38.251 li
187.302 38.4253 li
187.328 38.6001 li
187.354 38.7754 li
187.38 38.9497 li
187.406 39.124 li
187.431 39.2988 li
187.455 39.4722 li
187.481 39.6484 li
187.508 39.8218 li
187.533 39.9956 li
187.559 40.1699 li
187.584 40.3433 li
187.608 40.5161 li
187.634 40.6895 li
187.659 40.8638 li
187.685 41.0361 li
187.71 41.2085 li
187.736 41.3809 li
187.763 41.5532 li
187.788 41.7256 li
187.813 41.8979 li
187.838 42.0693 li
187.864 42.2397 li
187.89 42.4092 li
187.916 42.5815 li
187.942 42.7515 li
187.967 42.9209 li
187.993 43.0898 li
188.019 43.2583 li
188.044 43.4277 li
188.069 43.5952 li
188.095 43.7612 li
188.12 43.9292 li
188.146 44.0957 li
188.171 44.2617 li
188.197 44.4282 li
188.222 44.5913 li
188.247 44.7544 li
188.272 44.9194 li
188.3 45.0815 li
188.325 45.2427 li
188.351 45.4038 li
188.376 45.564 li
188.401 45.7246 li
188.427 45.8833 li
188.452 46.0425 li
188.479 46.1992 li
188.504 46.3545 li
188.53 46.5093 li
188.556 46.665 li
188.581 46.8198 li
188.605 46.9712 li
188.632 47.124 li
188.657 47.2729 li
@
188.657 47.2734 mo
188.683 47.4243 li
188.708 47.5708 li
188.734 47.7192 li
188.761 47.8652 li
188.785 48.0093 li
188.812 48.1528 li
188.837 48.2959 li
188.861 48.4399 li
188.887 48.5796 li
188.912 48.7188 li
188.938 48.856 li
188.964 48.9937 li
188.99 49.1299 li
189.015 49.2642 li
189.041 49.397 li
189.065 49.5278 li
189.09 49.6592 li
189.117 49.7881 li
189.143 49.9141 li
189.168 50.042 li
189.194 50.1685 li
189.219 50.291 li
189.244 50.4126 li
189.27 50.5352 li
189.296 50.6543 li
189.321 50.7729 li
189.348 50.8896 li
189.373 51.0049 li
189.398 51.1196 li
189.424 51.2329 li
189.449 51.3447 li
189.475 51.4541 li
189.5 51.563 li
189.525 51.6699 li
189.552 51.7764 li
189.576 51.8799 li
189.604 51.9839 li
189.627 52.084 li
189.654 52.186 li
189.68 52.2832 li
189.705 52.3818 li
189.731 52.478 li
189.756 52.5713 li
189.782 52.665 li
189.807 52.7583 li
189.833 52.8491 li
189.859 52.9375 li
189.885 53.0254 li
189.91 53.1108 li
189.936 53.1987 li
189.962 53.2832 li
189.986 53.3652 li
190.013 53.4463 li
190.036 53.5278 li
190.063 53.6064 li
190.09 53.6821 li
190.115 53.7603 li
190.14 53.8335 li
190.165 53.9082 li
190.191 53.9819 li
190.216 54.0542 li
190.241 54.1235 li
190.268 54.1929 li
190.292 54.2598 li
190.317 54.3271 li
190.345 54.394 li
190.369 54.458 li
190.396 54.521 li
190.42 54.583 li
190.446 54.644 li
190.472 54.7046 li
190.498 54.7637 li
190.522 54.8223 li
190.549 54.8799 li
190.573 54.9351 li
190.6 54.9897 li
190.626 55.0454 li
190.651 55.0972 li
190.677 55.1489 li
190.702 55.2012 li
190.728 55.252 li
190.753 55.3003 li
190.778 55.3491 li
190.804 55.3965 li
190.831 55.4448 li
190.855 55.4902 li
190.882 55.5356 li
190.907 55.5781 li
190.933 55.6216 li
190.958 55.665 li
190.983 55.7061 li
191.009 55.7476 li
191.035 55.7886 li
191.062 55.8286 li
191.086 55.8662 li
191.112 55.9053 li
191.137 55.9434 li
191.163 55.98 li
191.188 56.0156 li
191.211 56.0498 li
@
191.213 56.0508 mo
191.239 56.0864 li
191.265 56.1196 li
191.291 56.1538 li
191.314 56.1855 li
191.341 56.2197 li
191.368 56.252 li
191.393 56.2832 li
191.418 56.3125 li
191.443 56.3438 li
191.467 56.374 li
191.494 56.4033 li
191.52 56.4316 li
191.545 56.4604 li
191.571 56.4873 li
191.596 56.5161 li
191.621 56.5405 li
191.646 56.5688 li
191.674 56.5947 li
191.699 56.6206 li
191.725 56.6465 li
191.75 56.6719 li
191.775 56.6968 li
191.801 56.7202 li
191.826 56.7441 li
191.853 56.7666 li
191.878 56.7905 li
191.904 56.8135 li
191.929 56.8369 li
191.955 56.8599 li
191.98 56.8813 li
192.006 56.9043 li
192.031 56.9258 li
192.058 56.9463 li
192.084 56.9683 li
192.108 56.9888 li
192.133 57.0103 li
192.159 57.0283 li
192.184 57.0498 li
192.211 57.0684 li
192.236 57.0903 li
192.262 57.1099 li
192.288 57.1279 li
192.313 57.1475 li
192.339 57.166 li
192.363 57.1851 li
192.39 57.2036 li
192.416 57.2222 li
192.438 57.2407 li
192.467 57.2593 li
192.492 57.2759 li
192.518 57.2944 li
192.543 57.312 li
192.567 57.3306 li
192.593 57.3467 li
192.618 57.3647 li
192.645 57.3813 li
192.669 57.3984 li
192.695 57.416 li
192.722 57.4316 li
192.747 57.4482 li
192.772 57.4648 li
192.798 57.481 li
192.823 57.498 li
192.849 57.5132 li
192.875 57.5298 li
192.899 57.5444 li
192.926 57.5605 li
192.952 57.5762 li
192.977 57.5908 li
193.003 57.606 li
193.028 57.6216 li
193.054 57.6372 li
193.079 57.6519 li
193.105 57.665 li
193.13 57.6797 li
193.156 57.6948 li
193.183 57.709 li
193.208 57.7231 li
193.233 57.7373 li
193.259 57.7515 li
193.284 57.7642 li
193.31 57.7783 li
193.335 57.791 li
193.36 57.8042 li
193.386 57.8169 li
193.412 57.8301 li
193.438 57.8423 li
193.463 57.856 li
193.489 57.8682 li
193.514 57.8799 li
193.54 57.8921 li
193.565 57.9038 li
193.591 57.9155 li
193.616 57.9272 li
193.642 57.9375 li
193.667 57.9492 li
193.691 57.9609 li
193.717 57.9707 li
193.744 57.9819 li
193.771 57.9922 li
@
193.771 57.9922 mo
193.794 58.001 li
193.82 58.0142 li
193.846 58.0215 li
193.871 58.0322 li
193.896 58.041 li
193.923 58.0508 li
193.947 58.0605 li
193.974 58.0679 li
194 58.0767 li
194.024 58.0854 li
194.051 58.0938 li
194.076 58.1025 li
194.102 58.1099 li
194.127 58.1191 li
194.152 58.1255 li
194.178 58.1328 li
194.204 58.1406 li
194.229 58.1494 li
194.256 58.1533 li
194.281 58.1611 li
194.307 58.1675 li
194.332 58.1753 li
194.357 58.1802 li
194.384 58.187 li
194.408 58.1934 li
194.434 58.1987 li
194.46 58.2031 li
194.486 58.21 li
194.512 58.2144 li
194.535 58.2207 li
194.562 58.2246 li
194.588 58.229 li
194.612 58.2358 li
194.639 58.2388 li
194.664 58.2432 li
194.69 58.2466 li
194.715 58.2495 li
194.74 58.2563 li
194.766 58.2583 li
194.792 58.2627 li
194.816 58.2661 li
194.844 58.269 li
194.869 58.2734 li
194.895 58.2759 li
194.921 58.2803 li
194.945 58.2822 li
194.97 58.2856 li
194.998 58.2876 li
195.023 58.2896 li
195.047 58.292 li
195.074 58.2949 li
195.098 58.2988 li
195.124 58.3008 li
195.149 58.3027 li
195.175 58.3052 li
195.201 58.3062 li
195.227 58.3081 li
195.253 58.3091 li
195.278 58.3115 li
195.302 58.3135 li
195.329 58.3145 li
195.353 58.3154 li
195.379 58.3179 li
195.406 58.3203 li
195.431 58.3213 li
195.457 58.3223 li
195.481 58.3247 li
195.507 58.3247 li
195.532 58.3267 li
195.559 58.3276 li
195.585 58.3286 li
195.61 58.3286 li
195.636 58.3286 li
195.661 58.3311 li
195.687 58.3311 li
195.712 58.3311 li
195.737 58.332 li
195.763 58.332 li
195.788 58.334 li
195.814 58.334 li
195.841 58.334 li
195.866 58.335 li
195.89 58.335 li
195.917 58.335 li
195.942 58.3364 li
195.968 58.3364 li
195.994 58.3374 li
196.019 58.3374 li
196.045 58.3384 li
196.069 58.3384 li
196.096 58.3384 li
196.122 58.3384 li
196.147 58.3384 li
196.173 58.3403 li
196.198 58.3403 li
196.225 58.3403 li
196.248 58.3403 li
196.275 58.3403 li
196.299 58.3403 li
196.325 58.3403 li
@
196.325 58.3408 mo
196.352 58.3418 li
@
12.853 58.4443 mo
12.8774 58.4443 li
12.9033 58.4443 li
12.9282 58.4443 li
12.9546 58.4434 li
12.9805 58.4434 li
13.0063 58.4434 li
13.0313 58.4434 li
13.0562 58.4424 li
13.082 58.4424 li
13.1069 58.4424 li
13.1328 58.4424 li
13.1602 58.4424 li
13.1841 58.4424 li
13.2109 58.4424 li
13.2358 58.4424 li
13.2617 58.4404 li
13.2866 58.4404 li
13.3115 58.4404 li
13.3389 58.4404 li
13.3638 58.4404 li
13.3896 58.4404 li
13.4155 58.438 li
13.4399 58.438 li
13.4658 58.438 li
13.4907 58.438 li
13.5166 58.437 li
13.543 58.436 li
13.5688 58.436 li
13.5938 58.436 li
13.6187 58.436 li
13.6445 58.4351 li
13.6704 58.4341 li
13.6963 58.4341 li
13.7207 58.4341 li
13.7466 58.4316 li
13.7725 58.4316 li
13.7983 58.4302 li
13.8242 58.4292 li
13.8491 58.4292 li
13.874 58.4292 li
13.8999 58.4272 li
13.9263 58.4248 li
13.9521 58.4248 li
13.978 58.4229 li
14.0029 58.4229 li
14.0273 58.4219 li
14.0532 58.4219 li
14.0781 58.4209 li
14.1045 58.4194 li
14.1304 58.4175 li
14.1553 58.4175 li
14.1821 58.4155 li
14.207 58.4146 li
14.2329 58.4121 li
14.2578 58.4111 li
14.2827 58.4087 li
14.3101 58.4063 li
14.335 58.4043 li
14.3608 58.4023 li
14.3857 58.4014 li
14.4106 58.3989 li
14.4375 58.397 li
14.4624 58.396 li
14.4888 58.3926 li
14.5146 58.3906 li
14.5396 58.3872 li
14.5654 58.3872 li
14.5913 58.3828 li
14.6162 58.3804 li
14.6421 58.3774 li
14.6675 58.3755 li
14.6934 58.373 li
14.7192 58.3691 li
14.7437 58.3667 li
14.7686 58.3623 li
14.7944 58.3599 li
14.8203 58.356 li
14.8452 58.3516 li
14.8716 58.3496 li
14.8984 58.3452 li
14.9224 58.3403 li
14.9482 58.3374 li
14.9731 58.332 li
14.999 58.3286 li
15.0249 58.3257 li
15.0513 58.3213 li
15.0762 58.3154 li
15.1021 58.3115 li
15.1279 58.3062 li
15.1519 58.3008 li
15.1787 58.2964 li
15.2036 58.2905 li
15.2295 58.2866 li
15.2559 58.2813 li
15.2803 58.2744 li
15.3062 58.269 li
15.3325 58.2627 li
15.3569 58.2563 li
15.3828 58.2495 li
@
15.3828 58.25 mo
15.4087 58.2437 li
15.4336 58.2373 li
15.4595 58.2305 li
15.4849 58.2251 li
15.5117 58.2188 li
15.5366 58.21 li
15.5625 58.2017 li
15.5874 58.1953 li
15.6133 58.186 li
15.6382 58.1807 li
15.6646 58.1724 li
15.6904 58.1655 li
15.7153 58.1563 li
15.7402 58.1475 li
15.7661 58.1377 li
15.792 58.1304 li
15.8169 58.1201 li
15.8442 58.1108 li
15.8677 58.1021 li
15.8936 58.0923 li
15.9194 58.0835 li
15.9453 58.0728 li
15.9702 58.062 li
15.9961 58.0508 li
16.021 58.0415 li
16.0474 58.0303 li
16.0732 58.02 li
16.0981 58.0088 li
16.125 57.9971 li
16.1499 57.9858 li
16.1748 57.9731 li
16.2007 57.96 li
16.2271 57.9497 li
16.252 57.9351 li
16.2778 57.9238 li
16.3037 57.9106 li
16.3286 57.8975 li
16.3545 57.8848 li
16.3804 57.8691 li
16.4053 57.8564 li
16.4316 57.8403 li
16.4565 57.8271 li
16.4834 57.8135 li
16.5083 57.7979 li
16.5327 57.7803 li
16.5586 57.7656 li
16.5845 57.7495 li
16.6099 57.7329 li
16.6357 57.7178 li
16.6616 57.7007 li
16.6865 57.6831 li
16.7124 57.665 li
16.7373 57.6475 li
16.7632 57.6289 li
16.7881 57.6108 li
16.8145 57.5933 li
16.8394 57.5718 li
16.8652 57.5522 li
16.8911 57.5337 li
16.917 57.5122 li
16.9419 57.4927 li
16.9668 57.4727 li
16.9932 57.4507 li
17.02 57.4282 li
17.0449 57.4077 li
17.0698 57.3838 li
17.0957 57.3608 li
17.1216 57.3374 li
17.146 57.3145 li
17.1719 57.2891 li
17.1987 57.2656 li
17.2231 57.2397 li
17.249 57.2148 li
17.2749 57.1899 li
17.2998 57.1621 li
17.3257 57.1353 li
17.3506 57.1064 li
17.3779 57.0796 li
17.4028 57.0518 li
17.4287 57.0225 li
17.4546 56.9927 li
17.4795 56.9639 li
17.5044 56.9326 li
17.5303 56.9009 li
17.5566 56.8711 li
17.5815 56.8359 li
17.6074 56.8047 li
17.6333 56.771 li
17.6582 56.7378 li
17.6831 56.7031 li
17.709 56.6685 li
17.7349 56.6328 li
17.7598 56.5962 li
17.7856 56.5591 li
17.8105 56.521 li
17.8364 56.4839 li
17.8623 56.4458 li
17.8872 56.4058 li
17.9131 56.3662 li
17.9395 56.3257 li
@
17.9395 56.3252 mo
17.9644 56.2852 li
17.9902 56.2427 li
18.0151 56.2007 li
18.041 56.1587 li
18.0674 56.1143 li
18.0923 56.0703 li
18.1182 56.0259 li
18.144 55.979 li
18.1689 55.9326 li
18.1948 55.8857 li
18.2207 55.8374 li
18.2471 55.7886 li
18.2729 55.7388 li
18.2969 55.6895 li
18.3228 55.6387 li
18.3486 55.585 li
18.373 55.5356 li
18.3989 55.4829 li
18.4248 55.4282 li
18.4502 55.3745 li
18.4761 55.3179 li
18.502 55.2632 li
18.5269 55.2056 li
18.5527 55.1494 li
18.5776 55.0908 li
18.6035 55.0327 li
18.6299 54.9731 li
18.6548 54.9111 li
18.6807 54.8511 li
18.7056 54.7891 li
18.7314 54.7251 li
18.7573 54.6626 li
18.7832 54.5986 li
18.8081 54.5337 li
18.8335 54.4678 li
18.8594 54.4019 li
18.8853 54.335 li
18.9111 54.2656 li
18.937 54.1978 li
18.9604 54.127 li
18.9863 54.0557 li
19.0132 53.9854 li
19.0391 53.9126 li
19.0635 53.8394 li
19.0894 53.7642 li
19.1143 53.6899 li
19.1401 53.6143 li
19.166 53.5381 li
19.1909 53.4604 li
19.2183 53.3804 li
19.2422 53.3018 li
19.269 53.2212 li
19.2939 53.1406 li
19.3188 53.0571 li
19.3447 52.9736 li
19.3706 52.8906 li
19.397 52.8052 li
19.4219 52.7197 li
19.4478 52.6318 li
19.4736 52.5444 li
19.4985 52.4556 li
19.5244 52.3647 li
19.5493 52.2739 li
19.5752 52.1816 li
19.6016 52.0889 li
19.6265 51.9937 li
19.6523 51.8989 li
19.6768 51.8008 li
19.7026 51.7051 li
19.7285 51.6055 li
19.7544 51.5059 li
19.7798 51.4043 li
19.8057 51.3022 li
19.8306 51.1982 li
19.8555 51.0938 li
19.8823 50.9873 li
19.9072 50.8804 li
19.9321 50.7725 li
19.9595 50.6631 li
19.9844 50.5527 li
20.0103 50.4404 li
20.0352 50.3267 li
20.061 50.2134 li
20.0859 50.0962 li
20.1118 49.979 li
20.1377 49.8604 li
20.1641 49.7402 li
20.189 49.6187 li
20.2134 49.4956 li
20.2393 49.3726 li
20.2651 49.2471 li
20.2915 49.1201 li
20.3159 48.9941 li
20.3423 48.8643 li
20.3682 48.7329 li
20.3931 48.6001 li
20.4189 48.4668 li
20.4438 48.3315 li
20.4697 48.1963 li
20.4956 48.0571 li
@
20.4956 48.0576 mo
20.5205 47.918 li
20.5464 47.7773 li
20.5713 47.6343 li
20.5986 47.4927 li
20.6235 47.3467 li
20.6494 47.1997 li
20.6753 47.0513 li
20.7002 46.9033 li
20.7251 46.7529 li
20.751 46.6001 li
20.7769 46.4478 li
20.8022 46.292 li
20.8281 46.1362 li
20.854 45.9785 li
20.8784 45.8193 li
20.9033 45.6592 li
20.9292 45.4966 li
20.9551 45.3335 li
20.981 45.1689 li
21.0063 45.0034 li
21.0313 44.835 li
21.0581 44.6665 li
21.083 44.4971 li
21.1079 44.3262 li
21.1338 44.1543 li
21.1597 43.981 li
21.1851 43.8057 li
21.2119 43.6299 li
21.2368 43.4512 li
21.2617 43.2739 li
21.2876 43.0942 li
21.3135 42.9126 li
21.3394 42.731 li
21.3643 42.5469 li
21.3896 42.3618 li
21.4165 42.1768 li
21.4414 41.9917 li
21.4673 41.8032 li
21.4917 41.6133 li
21.5176 41.4253 li
21.5435 41.2344 li
21.5703 41.043 li
21.5947 40.8481 li
21.6206 40.6558 li
21.6455 40.4619 li
21.6714 40.2651 li
21.6963 40.0698 li
21.7222 39.8726 li
21.7485 39.6743 li
21.7744 39.4741 li
21.7993 39.2754 li
21.8252 39.0728 li
21.8501 38.8726 li
21.875 38.6709 li
21.9019 38.4668 li
21.9258 38.2637 li
21.9531 38.0591 li
21.978 37.8535 li
22.0049 37.6494 li
22.0288 37.4419 li
22.0532 37.2354 li
22.0806 37.0288 li
22.105 36.8184 li
22.1318 36.6099 li
22.1577 36.3999 li
22.1821 36.189 li
22.208 35.978 li
22.2339 35.7671 li
22.2588 35.5527 li
22.2847 35.3418 li
22.3105 35.1265 li
22.3359 34.9146 li
22.3618 34.6982 li
22.3877 34.4844 li
22.4126 34.2686 li
22.4385 34.0537 li
22.4634 33.8359 li
22.4893 33.6172 li
22.5156 33.4004 li
22.5415 33.1816 li
22.5664 32.9629 li
22.5913 32.7432 li
22.6172 32.5239 li
22.6431 32.3032 li
22.668 32.0811 li
22.6938 31.8594 li
22.7188 31.6377 li
22.7446 31.416 li
22.7705 31.1924 li
22.7954 30.9683 li
22.8213 30.7456 li
22.8472 30.5205 li
22.8721 30.2944 li
22.8975 30.0703 li
22.9233 29.8442 li
22.9492 29.6172 li
22.9751 29.3901 li
23 29.1616 li
23.0259 28.9331 li
23.0518 28.7051 li
@
23.0518 28.7056 mo
23.0767 28.4771 li
23.1035 28.248 li
23.1274 28.0171 li
23.1533 27.7881 li
23.1807 27.5576 li
23.2046 27.3271 li
23.2314 27.0952 li
23.2563 26.8638 li
23.2813 26.6328 li
23.3071 26.4014 li
23.333 26.1685 li
23.3594 25.936 li
23.3838 25.7046 li
23.4097 25.4717 li
23.4346 25.2383 li
23.4604 25.0059 li
23.4863 24.7729 li
23.5122 24.5405 li
23.5376 24.3091 li
23.5625 24.0767 li
23.5884 23.8438 li
23.6143 23.6123 li
23.6401 23.3809 li
23.665 23.1479 li
23.6899 22.9175 li
23.7158 22.6875 li
23.7422 22.46 li
23.7681 22.23 li
23.793 22.0024 li
23.8179 21.7739 li
23.8438 21.5488 li
23.8696 21.3228 li
23.8955 21.0991 li
23.9204 20.8765 li
23.9468 20.6538 li
23.9712 20.4341 li
23.9971 20.2129 li
24.0229 19.9961 li
24.0479 19.7803 li
24.0737 19.5649 li
24.0986 19.353 li
24.125 19.1426 li
24.1519 18.9341 li
24.1768 18.7256 li
24.2017 18.5234 li
24.2275 18.3198 li
24.2524 18.1206 li
24.2783 17.9233 li
24.3047 17.7295 li
24.3306 17.5366 li
24.3555 17.3477 li
24.3813 17.1626 li
24.4063 16.9775 li
24.4321 16.7983 li
24.458 16.6216 li
24.4829 16.4473 li
24.5093 16.2773 li
24.5342 16.1099 li
24.561 15.9478 li
24.5859 15.7896 li
24.6104 15.6328 li
24.6362 15.48 li
24.6621 15.3335 li
24.6875 15.1914 li
24.7134 15.0508 li
24.7393 14.9155 li
24.7642 14.7847 li
24.79 14.6592 li
24.8149 14.5356 li
24.8408 14.4199 li
24.8667 14.3052 li
24.8921 14.1982 li
24.918 14.0947 li
24.9438 13.9946 li
24.9688 13.9019 li
24.9937 13.813 li
25.0195 13.73 li
25.0454 13.6509 li
25.0708 13.5767 li
25.0977 13.5083 li
25.1226 13.4443 li
25.1475 13.3848 li
25.1733 13.332 li
25.1992 13.2832 li
25.2236 13.2412 li
25.2495 13.2031 li
25.2764 13.1699 li
25.3022 13.1421 li
25.3267 13.1206 li
25.3525 13.1035 li
25.3774 13.0903 li
25.4033 13.0864 li
25.4282 13.084 li
25.4546 13.0884 li
25.4805 13.0947 li
25.5063 13.1113 li
25.5313 13.1309 li
25.5562 13.1543 li
25.582 13.1836 li
25.6079 13.2183 li
@
25.6079 13.2178 mo
25.6338 13.2578 li
25.6587 13.3022 li
25.6836 13.3511 li
25.7109 13.4058 li
25.7358 13.4653 li
25.7617 13.5283 li
25.7876 13.5967 li
25.8125 13.6699 li
25.8369 13.7476 li
25.8628 13.8291 li
25.8887 13.9155 li
25.915 14.0063 li
25.9399 14.1016 li
25.9658 14.2002 li
25.9907 14.3037 li
26.0166 14.4121 li
26.0425 14.5234 li
26.0684 14.6382 li
26.0938 14.7583 li
26.1196 14.8809 li
26.1445 15.0068 li
26.1704 15.1367 li
26.1963 15.27 li
26.2212 15.4082 li
26.2461 15.5479 li
26.2729 15.6919 li
26.2983 15.8389 li
26.3242 15.9883 li
26.3491 16.1421 li
26.375 16.2979 li
26.3999 16.4561 li
26.4268 16.6182 li
26.4517 16.7822 li
26.478 16.9478 li
26.5024 17.1167 li
26.5283 17.2891 li
26.5542 17.4624 li
26.5791 17.6382 li
26.605 17.8154 li
26.6299 17.9951 li
26.6558 18.1768 li
26.6821 18.3618 li
26.707 18.5464 li
26.7329 18.7354 li
26.7578 18.9233 li
26.7827 19.1138 li
26.8086 19.3052 li
26.8345 19.5 li
26.8618 19.6934 li
26.8867 19.8892 li
26.9116 20.0874 li
26.9375 20.2847 li
26.9624 20.4829 li
26.9883 20.6831 li
27.0142 20.8843 li
27.0386 21.0859 li
27.0654 21.2891 li
27.0913 21.4912 li
27.1157 21.6948 li
27.1416 21.8994 li
27.1665 22.1045 li
27.1924 22.3091 li
27.2183 22.5146 li
27.2446 22.7207 li
27.2695 22.9272 li
27.2954 23.1338 li
27.3203 23.3403 li
27.3462 23.5459 li
27.3721 23.7524 li
27.3979 23.9604 li
27.4233 24.167 li
27.4482 24.3735 li
27.4741 24.5791 li
27.5 24.7856 li
27.5249 24.9922 li
27.5508 25.1978 li
27.5757 25.4033 li
27.6016 25.6079 li
27.6279 25.8135 li
27.6538 26.0176 li
27.6787 26.2212 li
27.7046 26.4258 li
27.729 26.6279 li
27.7539 26.8311 li
27.7808 27.0337 li
27.8062 27.2349 li
27.832 27.436 li
27.8569 27.6362 li
27.8838 27.8364 li
27.9087 28.0352 li
27.9336 28.2344 li
27.9595 28.4321 li
27.9854 28.6304 li
28.0107 28.8267 li
28.0366 29.022 li
28.0625 29.2188 li
28.0874 29.4136 li
28.1133 29.6069 li
28.1382 29.8018 li
28.1641 29.9941 li
@
28.1641 29.9941 mo
28.1899 30.189 li
28.2158 30.3784 li
28.2407 30.5698 li
28.2671 30.7612 li
28.292 30.9492 li
28.3179 31.1411 li
28.3438 31.3291 li
28.3682 31.5176 li
28.394 31.7036 li
28.4199 31.8916 li
28.4448 32.0776 li
28.4712 32.2642 li
28.4971 32.4502 li
28.522 32.6328 li
28.5469 32.8164 li
28.5728 33.0005 li
28.5986 33.1831 li
28.6245 33.3667 li
28.6499 33.5483 li
28.6758 33.73 li
28.7017 33.9116 li
28.7266 34.0933 li
28.7524 34.2739 li
28.7773 34.4536 li
28.8032 34.6333 li
28.8281 34.814 li
28.8555 34.9922 li
28.8804 35.1709 li
28.9053 35.3496 li
28.9312 35.5273 li
28.9556 35.7051 li
28.9814 35.8823 li
29.0073 36.0601 li
29.0337 36.2373 li
29.0586 36.416 li
29.0845 36.5933 li
29.1104 36.7681 li
29.1353 36.9458 li
29.1611 37.1211 li
29.186 37.2964 li
29.2119 37.4741 li
29.2383 37.6494 li
29.2642 37.8242 li
29.2891 37.9995 li
29.3149 38.1758 li
29.3398 38.3511 li
29.3657 38.5264 li
29.3916 38.7017 li
29.418 38.876 li
29.4429 39.0503 li
29.4688 39.2256 li
29.4937 39.4004 li
29.5181 39.5737 li
29.5439 39.75 li
29.5703 39.9229 li
29.5947 40.0962 li
29.6211 40.2715 li
29.647 40.4448 li
29.6729 40.6172 li
29.6978 40.7905 li
29.7227 40.9648 li
29.7485 41.1377 li
29.7744 41.311 li
29.7998 41.4819 li
29.8257 41.6548 li
29.8506 41.8271 li
29.8765 41.999 li
29.9023 42.1699 li
29.9282 42.3408 li
29.9541 42.5107 li
29.9795 42.6826 li
30.0044 42.8511 li
30.0303 43.0225 li
30.0562 43.1914 li
30.082 43.3589 li
30.1069 43.5273 li
30.1328 43.6963 li
30.1572 43.8628 li
30.1841 44.0308 li
30.21 44.1973 li
30.2358 44.3628 li
30.2603 44.5293 li
30.2861 44.6938 li
30.311 44.856 li
30.3369 45.0205 li
30.3633 45.1831 li
30.3882 45.3438 li
30.4141 45.5049 li
30.4399 45.665 li
30.4648 45.8262 li
30.4907 45.9844 li
30.5156 46.1431 li
30.5405 46.2988 li
30.5669 46.4561 li
30.5928 46.6108 li
30.6187 46.7666 li
30.6436 46.9204 li
30.6685 47.0718 li
30.6943 47.2241 li
30.7202 47.3745 li
@
30.7207 47.375 mo
30.7456 47.5239 li
30.7715 47.6724 li
30.7959 47.8208 li
30.8237 47.9668 li
30.8481 48.1128 li
30.874 48.2544 li
30.9004 48.397 li
30.9248 48.5391 li
30.9497 48.6807 li
30.9766 48.8203 li
31.0015 48.9575 li
31.0278 49.0947 li
31.0527 49.23 li
31.0786 49.3652 li
31.1035 49.4985 li
31.1294 49.6294 li
31.1543 49.7603 li
31.1812 49.8887 li
31.2065 50.0176 li
31.2314 50.1436 li
31.2583 50.2676 li
31.2842 50.3921 li
31.3081 50.5142 li
31.334 50.6377 li
31.3599 50.7559 li
31.3848 50.8735 li
31.4121 50.9912 li
31.437 51.106 li
31.4614 51.2207 li
31.4873 51.3345 li
31.5122 51.4443 li
31.5381 51.5547 li
31.564 51.6641 li
31.5894 51.7715 li
31.6152 51.8765 li
31.6401 51.981 li
31.666 52.085 li
31.6919 52.1855 li
31.7168 52.2866 li
31.7427 52.3848 li
31.7676 52.4819 li
31.7949 52.5796 li
31.8198 52.6738 li
31.8457 52.7666 li
31.8706 52.8584 li
31.8955 52.9492 li
31.9214 53.0391 li
31.9458 53.126 li
31.9736 53.2134 li
31.9985 53.3003 li
32.0244 53.3843 li
32.0503 53.4663 li
32.0762 53.5469 li
32.1006 53.6274 li
32.1255 53.7056 li
32.1519 53.7847 li
32.1777 53.8604 li
32.2036 53.9351 li
32.2285 54.0093 li
32.2544 54.0806 li
32.2793 54.1558 li
32.3052 54.2251 li
32.3311 54.293 li
32.3564 54.3613 li
32.3823 54.4292 li
32.4072 54.4946 li
32.4331 54.5596 li
32.459 54.6216 li
32.4839 54.6836 li
32.5098 54.7451 li
32.5352 54.8062 li
32.561 54.8652 li
32.5869 54.9238 li
32.6118 54.98 li
32.6377 55.0361 li
32.6636 55.0913 li
32.688 55.147 li
32.7139 55.1987 li
32.7407 55.2505 li
32.7651 55.3027 li
32.791 55.3521 li
32.8169 55.4019 li
32.8408 55.4507 li
32.8667 55.4971 li
32.8936 55.5454 li
32.9189 55.5898 li
32.9438 55.6362 li
32.9697 55.6787 li
32.9956 55.7231 li
33.0215 55.7651 li
33.0464 55.8076 li
33.0723 55.8486 li
33.0986 55.8901 li
33.1235 55.9287 li
33.1494 55.9678 li
33.1753 56.0068 li
33.2002 56.0449 li
33.2261 56.0801 li
33.251 56.1162 li
33.2754 56.1514 li
@
33.2759 56.1519 mo
33.3018 56.187 li
33.3276 56.2202 li
33.3535 56.2534 li
33.3789 56.2871 li
33.4048 56.3203 li
33.4307 56.353 li
33.4556 56.3833 li
33.4805 56.4141 li
33.5063 56.4453 li
33.5322 56.4741 li
33.5586 56.5049 li
33.5835 56.5327 li
33.6094 56.562 li
33.6343 56.5889 li
33.6602 56.6172 li
33.6851 56.6421 li
33.7109 56.6704 li
33.7368 56.6958 li
33.7622 56.7207 li
33.7881 56.748 li
33.813 56.7715 li
33.8398 56.7979 li
33.8647 56.8218 li
33.8892 56.8457 li
33.915 56.8682 li
33.9419 56.8921 li
33.9678 56.9146 li
33.9922 56.9385 li
34.0181 56.9614 li
34.043 56.9829 li
34.0688 57.0054 li
34.0947 57.0273 li
34.1206 57.0469 li
34.146 57.0693 li
34.1719 57.0903 li
34.1978 57.1104 li
34.2227 57.1299 li
34.2476 57.1504 li
34.2734 57.1699 li
34.2983 57.1914 li
34.3257 57.2109 li
34.3506 57.2295 li
34.3765 57.249 li
34.4023 57.2671 li
34.4263 57.2866 li
34.4521 57.3042 li
34.478 57.3237 li
34.5039 57.3423 li
34.5303 57.3604 li
34.5552 57.3774 li
34.5811 57.395 li
34.6055 57.4136 li
34.6313 57.4307 li
34.6563 57.4478 li
34.6821 57.4663 li
34.7075 57.4824 li
34.7334 57.5 li
34.7593 57.5171 li
34.7852 57.5332 li
34.8101 57.5488 li
34.835 57.5659 li
34.8618 57.582 li
34.8867 57.5981 li
34.9131 57.6157 li
34.939 57.6309 li
34.9639 57.646 li
34.9897 57.6621 li
35.0156 57.6772 li
35.0405 57.6924 li
35.0664 57.7075 li
35.0918 57.7217 li
35.1177 57.7378 li
35.1436 57.7529 li
35.1694 57.7686 li
35.1943 57.7813 li
35.2188 57.7964 li
35.2446 57.8105 li
35.2695 57.8252 li
35.2969 57.8384 li
35.3218 57.8525 li
35.3477 57.8657 li
35.3726 57.8799 li
35.3975 57.8926 li
35.4233 57.9058 li
35.4492 57.9204 li
35.4756 57.9316 li
35.5005 57.9434 li
35.5264 57.9565 li
35.5522 57.9697 li
35.5771 57.98 li
35.603 57.9922 li
35.6279 58.0049 li
35.6543 58.0161 li
35.6792 58.0278 li
35.7051 58.0386 li
35.731 58.0493 li
35.7554 58.0615 li
35.7813 58.0723 li
35.8071 58.083 li
35.833 58.0938 li
@
35.833 58.0938 mo
35.8579 58.1021 li
35.8838 58.1143 li
35.9097 58.1226 li
35.9351 58.1328 li
35.9609 58.1421 li
35.9868 58.1533 li
36.0127 58.1621 li
36.0376 58.1699 li
36.0625 58.1782 li
36.0884 58.1865 li
36.1147 58.1958 li
36.1406 58.2041 li
36.1655 58.2114 li
36.1914 58.2207 li
36.2163 58.2271 li
36.2412 58.2354 li
36.2681 58.2422 li
36.293 58.2495 li
36.3193 58.2559 li
36.3452 58.2627 li
36.3711 58.269 li
36.396 58.2754 li
36.4204 58.2817 li
36.4463 58.2886 li
36.4712 58.2949 li
36.499 58.2993 li
36.5234 58.3052 li
36.5493 58.3115 li
36.5742 58.3154 li
36.5991 58.3208 li
36.625 58.3262 li
36.6509 58.3311 li
36.6758 58.335 li
36.7021 58.3394 li
36.7271 58.3438 li
36.7529 58.3477 li
36.7788 58.3516 li
36.8037 58.356 li
36.8296 58.3599 li
36.8555 58.3643 li
36.8809 58.3672 li
36.9067 58.3706 li
36.9326 58.3755 li
36.9575 58.3774 li
36.9834 58.3818 li
37.0078 58.3838 li
37.0337 58.3867 li
37.0615 58.3892 li
37.0864 58.3911 li
37.1108 58.3931 li
37.1367 58.397 li
37.1616 58.3989 li
37.1875 58.4014 li
37.2134 58.4023 li
37.2383 58.4043 li
37.2646 58.4087 li
37.2905 58.4087 li
37.3164 58.4106 li
37.3413 58.4126 li
37.3662 58.4141 li
37.3921 58.416 li
37.418 58.417 li
37.4429 58.4194 li
37.4702 58.4219 li
37.4951 58.4219 li
37.52 58.4229 li
37.5459 58.4238 li
37.5708 58.4258 li
37.5967 58.4258 li
37.6226 58.4282 li
37.6475 58.4302 li
37.6738 58.4302 li
37.6997 58.4302 li
37.7256 58.4321 li
37.75 58.4321 li
37.7749 58.4321 li
37.8008 58.4336 li
37.8271 58.4336 li
37.8521 58.4346 li
37.8779 58.4355 li
37.9038 58.4355 li
37.9287 58.4355 li
37.9546 58.4365 li
37.9805 58.4365 li
38.0054 58.4375 li
38.0327 58.4375 li
38.0576 58.4375 li
38.0835 58.4375 li
38.1084 58.4404 li
38.1333 58.4404 li
38.1592 58.4404 li
38.1841 58.4404 li
38.2104 58.4404 li
38.2363 58.4424 li
38.2622 58.4424 li
38.2881 58.4424 li
38.3125 58.4424 li
38.3374 58.4424 li
38.3633 58.4424 li
38.3892 58.4424 li
@
38.3892 58.4424 mo
38.4141 58.4434 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/VADSCK+MyriadPro-It*1 uf/VADSCK+MyriadPro-It uf/MyriadPro-It uf/VADSCJ+MyriadPro-Regular*1 uf/VADSCJ+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Thomas Guillerme) ()%%Title: (Fig2.eps)%%CreationDate: 2/8/15 6:04 PM%AI9_DataStream%Gb",K$\I-A&a6iWm\%;FNRPgL&g0Kg:=A?q3aKe/m<mVEF_Q]E<hbj;qD`IioQ#ssm*/ol!%;Q*.ED-S>Di,H)?PNlAhZFLe?)rG%fkNPd:JX'YTC4[*fh@kZ%%B#.)RjV_D>^nGX;,Ej3/O)<.hFInTPVtIj%r#F\>+WiC@u2VeQFV45+9fP`F@5c9kO"9h.HC]5&EL)%:Z5(*r+@aPb^O;M-Md-9YKC62>scpDYNFkm"SM4G/l#K3Hk&S/n=]NB?C`IEoCL)6)!t//I6W0=(f-%*Cjq['Roq7,==Bb`<o_<c%Mq-MP@Xbd("W;pR1Ym[:(I1%R!^@@nrcC,&NJ^6QLLPB*$uR`f7e06&ISq_`0PWjM#S_A&r:BCVGhd/q\>?0dqEp@@n=JS4\/@2C%J,?`8s6\DuT_Y`.^/*!:/^DWhq6D,,!$e.I*4KGq`+r^SH0CnRHRDdm'o%ieh@UrH"^.'HAL:Sp)CNch:0Uj49<.#S=1fLh5J_$q%_sqh/>J-UpGVgJikdBTs-f\QA4G6P5,RFK](q.jHUt^r3P@FOQFM+F;\*ms/s1rMN9FOH:),,&jU-N(Zqb%*ak4@&2#r4K0XHqo"%oPQGobUm5NEW2u*]*9=J(Xo:gY;FpV_CT@LV;e@OBe'5dRhA8O,m\Gu;QFmiER7CDBf"6M6PuOa7,1*1*..n5GW6e;Ni.(1IEAhA%k2VTaF!>#_kWcWdXjm6?nUI8J]"M>a;aWVP?MB#g'*PEB:T/iB00g;Nq&%+&"gfIjiWSQ]5Xd>5k"n9uZ_7-'ioaq:eIpssJ<uMq%="4':Ab`ahAZ1jg/g]A>'(8FaG6\5O9sp5&;D<V.s'dFRY`r%<!TVBZ/<aXI-A*,cc8$r9AQT:(iEn.dm:*&4(Me3+Gc0<814oVa%*=S1Lg4KF_*t5(X;,$Tp4k(\3`L;0]K(S&0/;8Mh^K:j?`''rDfH^<PA["]"(]2H%6$9G.p_U\RO74f3U2_C$fH^<PrPj&7@\9l!%)GOrg94>U)0:!Ia&B=W6b%ZfK'PWg$0@cki'D4aTd715_jier%5qadCrPQC+M)\&>VL-69I)f.;5NXYZ$J!,piEuM;]d*O:?_SM`%p_QS3s6q[]OedZMQ.j7o=U't.Q656,d79slV.eY/>c?gR4]5$s;7hLLq*cV)Kk7K4/=G-PXA-C*]@]@GMkrtYZ%"SW<#>RD)=1Yh%(/$R3*?$qQJY\cHQt:uJ%4NYr+^*`K_*"Q6-gGBpWEgE$UmsH^I3[IN'XpiiWBT.9(K!p`PGFUk:1HX.#5UdZlXi6/C#%_$l=Lfm%PEUEXDO,VsIotII&C5I=AKGF'#Gd/G&o5,,?s8t)DO9ijbqKRu$f=N+L?9cbh/VoUMB_obhW`S#'upGsn+93bqX35)Q)=1:9tBZ@%]\756j50%Nl-OYK:9V[>?B65sSR27YI<Y/P$LE]C3V![[&mslbJ"q5OT8:'U4QqLX@$($=]n>e@'L$[,-\/U'Om(+/IZ?iJg0fs!%H[@H^cWi*eM+$COE)RiB-OIH[W,+!r&+Yu>EQpo'N"s27]qC/Ln;7/<JquXF0iDn^D0pb?mg&UoE<QYGKTt]h&bSOj*`J,P%T1@c%2"^m7".18L@]&"TGH@d?^-t.V8;V&WKSN2E-N)B'"a:02)BTJe6`gqA7h(^c^+/9")]-/b9A2*-1AYP8mLof\n%b2Y>_[SH7:m5m%.)O\LRS6qjP6mj.;_m?]'30;/dDYtR.3a3QL4S;5NO_Ooo6nD!mREdYL.<4Rb".H,[S@^f`B<iC,CCQQ1e-hER6#)$4)Md<^6Q`i%]Aq'kbnN[A/((jAatf67Jc4FUj!?1C,9fE62fiq'[4M"m@:`UIK?\DcdUFMjAX0(e,)f:j\FqgQM'DOS2R@#R7MOaj[RY&OIC/D6%92lF<0-[;uN'n.\?)uM/V(VEqdk%cXa3G^>bBtQ$D@@AoQBi06,n;o7qdl3%.nXP-m-GdXCN%X,`XT6)/!!G.VPkJ,n/D$0jbAu9%Vqot;6.b\0n(6V<8m'9sNqsd,XS'6$4n0g+a'=*HiFhu5(fJp5:?1PX%ZRRc(mV!d3sO#s\tho-6*g\K+C)D,oee8E&E5Rh.U+3H%GB9je%nUsX7NX^Y@%GHkKe4($MVeW!0kj3\"%R2AlFslrr-R378.2o(fM8b1E34/1(rl;uSa,N-)J'eK,bPj6AOi^Bm.d"F9k-QA%=dP,X**H0rEXM3oGP!E,1,-c<)e'CNe4%$Kn`W0^+T0RCaU0^ck]_]-G?0d/GU"KD0A--`Qm8^g0r'rbR;)I\5ju(HFUe=&adKPg%*S.';KkR]r8q#<$dA@LdrrLl,[M'l[*PT^.8[;krh?!>*8n%aU&#9pP0""3hA)mA;"'qtP*YDlAEPaHnHVrDF,<]g3TPlAia,CJB%&#a=tTkA9.ku0B)^'5."dJkY0-KA<Q4^XmmB;EAE>:=9E2JH^FlZUAP?lR"pKBI*@B0Q%Dq,=_nCMdi]B/`--18dRN0"8t!g"A<&%NZ!kBCi$<1DQ1!U`N1r<gt^\$gUAZu[_t_:f8?Ql-r>A>VY:j!andArb.&f;T<`Sa,:b4td"":OADI`L?(VI:PGpC\Rd[Y/Zd`-q%2&[<eOV[9YDkY'r?`*to&BB0JTCqB9AVf_EF<))cf%)C:D_W*t2CcLDo^8,n$rNKGQYA.&9;uc0Eufnj+4GDRNlEE+\BK_N.VO9X%A$NGNVTm'BQB?5M:?tk=b+6:QOp>h5b5<hiZ)tuqUXB2?aD7*W7\udpirp`30@-o2H/pZ%/uF>4,(Go^O3o:#4A4@71GI-NFYrl5%I2R[&o;rjWS\d3;#2AUra&(?ll^G_\@fmWj8'ed7/'#E=FsYC'[E15_EH1iA>IU3a>46P9D>d,B=(U4&XZlPSDLU5?C(5g'<>L4n%#,Xg0\*H]qoub6[m8=s7s,EO]QD6i6i_#LkGlFY0:KB!SS[Llbb,<%?i&97l40Q[rU)2qd[>dn)[F*_JfIR0O"R!JO8?6NR(usp<%bh$VgcIS,6l!`3+IpB[IZeo2-]o7sE%#.Z,:,5DMOC.-=5&58GfAiY]QIM@s>Zf:9C/X1Fn8qY]]b(u[47m?jC.HeLAkXfPE!DZ5%(>)L:F8<Ih:%j$@06P%OUQ[lC9cKp+in-hP%p@K=kkZmN,)r+Rkh8[UOb8=Yp$]1;\_0B5L82l4K$A"5>20DYZN2eVO["TG)`%"H%oVG^bU2R\KPA@OS[i<H-o"3DWB0A#F=5qXF>2'7E)Jo,[>asI(O?$n,%X_E#S7N.!Xo%/Ar"b8@n>2X!3_Mb219f%+P@(X[<1*q,%Io?cnj2_!pbM!`$*sV]qFd+l/7X5<#k*TK@5n1tHBf+P:N.L"%jRD:o2SBs/F(J`g9"+`1VXe<8f5q+]Q,>U1=Z`s[4"n^88i^')%;<)5>bOi.thcnVf-"^t`Pf@lqpG^+4`lhO\gA];L;rIJm/1$.L)"h"n>$maFOk!-Ra'Y/)[[/_R\:bfbJbGKiqW'27D[WI@6^c&X%\X^[n/;Qp)esem+RQ_UM$gMQmRFmmPDKIojCK;Bu327(mrI-`[bI5o6-9F7N)gID>Ou"dp(gdnA[tMIkiVNgi*SP3Gl.eS^mi1Bd%X<fV541YOZ)uF-`KCV-DHB!8eb-fnd$n,>XEDXZ1WPD:PW?t-OF"ss!HeBn<kd1SrEHmL@FpKg$:5NU#r_Fc/qu3\'<\e/FG?f8Q%n22''2Eh=>H0Vn*/Q5]nA[dIB?R@dWVWW0Qp9T"+SL#9?$u"ePGOp)f7P44G)VBG5e&P4m>6qVnE1+NTL;\Lad88LTEqA%2KV@qK%YPQT@[Aus+?/1*?<86)rbPp6R8`aR<7INXHPnojSFQ7)C8*#Y<m$HWf9ceB=(LP`K>C766Tl.,AJ[Y"md@Ah[o<dr#bL^38cq;!2%oL3S=-u_'/idI7WPat5@L%VZe?D2N4m+tmrR0p'-Cg;d:/t=R:]D9FVAd9brGZ2d?Yr9`,QB$NSBlu>^O5u7DDrYr/Vf6F,G!4L$%Gre`tc)\pU_-)]j&LP#JM'9IuPKW'V=MrEJ-\4sN]>qJ_.$)'iKCr,kG),GrN>fNP5*[;rp?Klc:tAgiAlPb*86i:uV8_+H(R+A/%".i.-YOc*mY8Q"4Y\n#%N#lO,O?%6On$Ds>*n*g1=H'AgQI"L?Xg>3Endb#?dTqW\iu:KInrG5.3G7`IoN]='P^,9M:9!C^:M?#M%,;ePJo;g]KAGKiPL[O]"F*SQ.,`/S<X$>Apa26>Ef41\M^[[bT)]QPaY2:cb(5JG*gm[\IE=CX"3mr:Cc4[YnLN1t:9ZZq^g-6h,%FD'O;aTEp\r`h3:1hN5#X$7W``_60XSXn_Of`c<9Ho.HiAuBasIb&_7'[,$Pj4f=4Ndb6XQGm;q4e3;39HB\Lo9TXKlo]$D`l/qc%/<8G*\:)jI(8LD1OrsAgiG)L8IBabf7`EbB0%N#YdalL=8?T3<jhpV9\2l^>'L*]$Xpik,2=_n806GIY;*e1iYA.LHNX>ZOb)F"h%@p<QFd5R(t<-C`BB3s8Z/NY1T<`F0079?X*j(N#INq1ZJ@X^-8!fQ&O#ig??=;LK7p0pl-EEhq[o@7AL/<A*J3KCoNM^,0?Q;:#s%-SS/6?i\b+7RtALq5a>doYpB73R:47=[)lELhO$;[AL:lW&QePpQ$@J-McXi_h-/]X2Wb:\oNN"rDbR83a8_=)]Ro6I5W1<'S'p\%/b&@7^)4""pk9+:!&q%[\1/9HajKIQku%!BE0?jXO!%`g@6T5L[arQ2#0bmKj)bI+0$\(P8TD%Xhe49ma^fdZ4^X`B_r@Uhb\.r(%1N35e)9U$B"=,!&BDP=11(:EWb$PFProW,A*0"<c;*aK@feNN)rH'g@M51%"I&8@C1W@eE^M.eLUQ[ESfSBd>HuokcbXO!'Rb)GK%4jOpu,uB)BU<=@ZeH/.7ERa\M[-rE\P@X;;EIAaoqZO\&MsGdqkWT`-8;/+2ppf2lWPk-&i_(B<QZR"rS6@J`7p^%A`*#9oUV+n\%.[CV<KV0bg1V.Su@Pp<nkGtp\^08B9S5"n`NeTRDCHV"MrU'.<c^laiB>r]h(N>R]rbFCAT+5LYeDkH<fu>b(/I*f?4k_H1ZrrML%fK]<N2$CLQRq]<$Zff<V=6IP<OEH%U51EFRk5OqM<3ci;hhEU;C8Mjqnd*lJr4'lsn3n@WV^F0(Q`iLtJ1T+P5_g.9$6=S0KP?7R%!-HV/S52W7PER6Te6/rnqKtIGXbNLJ`di&c3Z$/@g!R^Di\YR3_CRkP`J!io).pufIL[*A2H45O;6Q?<o;2d<1RUK7r)-3aMl):3%/3JLJp$Bf$Zfe[:ZQjcT7k:P(0ob?P(uIh+1O.cLn\mNF8Y8/7XPhZBo@`F,rq'aP\?/8uq/hWE5YddZT77BopAO.@YM]l>bX-Me%rHg%:T>,k)^*c91q(Q`1k,ZIZk0r""!]V7:W.6lZIYKr5Jp>_^_`:.!#B7(!TMXnM*]<R<?bU2s-D2=pRk=:3/OBVW*oVHe<&@A^%q1;e)ihcO18rY"RLJqrqC>Xmqkkjn,m2QH\=;A%lHeDqV^9#]:3aOnH#LHj;#ICIZQ1;(FRmU8)Zeb2sX4n\G;?jSpRtq3^_Y`6]%afN@ddTU4p3.i.CZ_PTmY"$qlE&'C>[RsJJqQcL4cHd*5rS/ri9g)u]oDuZV'G'aL[.aij_3<DokmcG7m!Q6,4K\d7BRRGlN(mBU%_Ao!);m:?^^=e]?"mFYTN;;\f1dBG/*50B%*fj[f*.nm4R2@N?YGCXB\O:d7c-FhNr>?LbE!l#bEr#*(<%Yl`g'$U0[pS_]O:].`%\,[">68UbKLf-EOd*[\8##Pp:.S,.BBEt*$)t\a`*h`k70FeaMF]m?,4(1)7K`_pC:^A45"@9%#WQ7J3F@94&7'@d1@NYb%Um.!@%16JPPbDtr3T'XWd'Lj:0;&%!3MNTBGg/06_7_P`B%H8K?0c^fqZ&4`)NO-,8G8kNTm]/U,8gpZJV,X0eQ)V4WW35Eb^)A7_&gefZ%OuQ<`-mQjlC+#RJX0]3d1e9u^M,^?L,E:,2<@O/*dkl\JYQIrcmA9c'O?roQ0S:EX1'@*Q3.nX>?`MEh[Bg?Jh5gi_+0ImK7]Xpk%Tn2E7Zt13Qdfui,WXT*p]G&egK-,&TiTdiJE"1NR:7s6We.)nYI>>(BFC7p+ECY/E%nKqq2qu_>oP'F?>WoUnSO$o8"`AI61L8C^%@I?U02*Q#m'o'?=hpc\VVg07q/k`^9e&q6M\_Ym87ZPZHAU.0_3cR8=4HBs';jhp$8)=IlmkshY(U--t"J?EP;$,_Xa8ek!AE7-(%')E%^$n)Su"Mtt3[M9*#'NQcl:`,Ts=scci:bK<g&.:',>=BdfU-ZZDf##hb_U3SE@:V`?f`8QrB[KAY:ln6?Zq-9DYR($ZcSWt[%Nn[Y*[`i%>063ESX%N!:n@2no/@P&8\]fH8N70r-l*(34G-"I3s7PV_k.'G3F'\BCEut,50WZYaYI!,b!mQ3m#:KWJhoPmj!iq*"%6]2$S"R-4.#o!`GKn@9q"bT5G<<al].if'1%hoQf'G_E2/?DK@?nTeRNjirrF\N-/HYM.78OZdAXLs_7U<I3Y,IHc/.9[D9^,8*:%Q;WrEdR#@O.$l?IM9Hk\O=6-&E)>XEO?SoB*lqUm&f62%AKYPIOKMF7PsgNCMU;FB7tSOP+=,d=%j]:SDL_^tRc+A,X9:_a^q!d+%C#93YF9Zfs#;]JtbY<Veh+f'',J,[$8\<aEp:J8t_-kXA42s?9j"h7:"CsD36j#F\K5_Co#Q9+dfC/Dp?m[W?Xp!6XglF^QMLO1g%H@oP=fB[QFqmTF;)PE^cSq=Kc_;l9C&G)dG=qB?R5g(%PT>:)T_(&![&7IKt/^al@dKQc$#"hge<rph`kT)?END9JrW"2M"$XIL7%a&89T$79<e3_Y&^$aKehC(J7k!s5"/5U8$'0aP;mJIf'ek!NMAbq@5'Fp#`9L!`gQPp.&;!>@!arJQS/?'p4\Qk6bf9u2o]HHq7:%!&M.rXQ[OVD?FBH@#k@97DLBL"JH/f0D'gB?/T-1310h4'lZ%I[0Y]0&.LnFoK_#MJFAoW574bp"O\DX-9qju!)ur/UniX[P/2NA%5bH"<5n`6,P^s[%<:rMb3Zqq#^]OfKA1dom.6n)iDufI]"0(X?mC0pd[..`ggAt+3c#?_T("q;cPC,g-2L[;d*ES)sNShWRcoYs/%r*J5tjmH?F\%eEIY;:)Mj`#iSr8ou_oCdCP>i9JK]_/?^LL;O'#DIgsJ<2.<>L,E&B@/CD'!ZZJGIZ8hfl2thZKdR@\0+Z_(o\f$%WIa^66&,$^&*t%"9D`@*g=EH@qpj&3YnkctFGhX^8oDF$BLq?Ve*/:+*@K:'(2FP!&oJ>##m).d+\+7W5poOuG2)0%[*YT#UYpdg%2mi3I3i^"VJ<u:<ck"^66!nqeU1$goi(=:8DC*<=,*.,ErG[Y?P`Er@-5mhjaGWBf6lU&`\JmTLlC6EuC.fTM@B$NpB[Q^j5^*Rk%hH4t=XWBOq3$LLpQsl.k^eiI0.s*[lLk)1l`WI$k5fJ7+_$_M*1lKj%#$_pcK(YDm$Q[O"!GVnD[_BtI%(c-fN4MS%jj"-c\O,\2%neJe&IpmH9c)\)Y\>>Q1*>`AVP!Q>JK6"u1Tju8d#/SV/\Cct=98kISUW^I6O`WLT@:Mug0Ib#;.+=551"+!Bdm]`CDl,QNUR2^i%:5CuSb)&G\PBO_A1t9VPTqbG4l-[mJNm/QU1??Z`XWqUOp5U[FgH;cfAG8Ed1E&),d66<:Np]SQN$+P)=?ibf9d(EBkK*Aik]DgE%K6GXE7WO%+4JICcoL"jr2No<0"]R<^chI(^eOC4sAm:a"1nL[)TSYS$E&@dcf?toMBeK,el-c>:1L#G(:'NcRe^H]S=/S:(:W]t5%eeoCQc:V`r,42d/,"-3b9XST"8*Q;1G%A2<RH`r-$b]I*eg/tW;'t_^K;`:"h'X56LD7$!.B1e1^3V,Dl"V<=U]&uVp2r1Y%acd]%QdSrOYDBKBO\QtE-+kaMQh*:HO=5l#RN.nQ3BWNDV2ZWr6X@ZNlY*'H_h\rl%p:$K9rnJ-$aS@1VFVe6ckh^AgR9EF]]R$c4YiRS%G1"ON3>Ljf3Rbfb?V_]baJN-cgGhK,4pW)aGI4R*e!V"G_Q!f6X@/sg\gFVt)&:;j:_om[Ud=m/^-6;u&9tQ8n4ZKhBqsa\XuiTC%U6:^4_40V\gAjo/1*n$UjJ=q&h0J;*=76>&j0"T`c7V1=mHD!Bj,U:Sn:e\O9)9F(Ea!KVmV*p%A5Z,2PA>4'8M<B/h$6PLL1[0B%MaU-Q:1GZ#)S9E6fp''QcY$0GRhD-Rb*9oTi_,\t;VPp'k-rsKgm$tS?Tic/f.Q@j2/H1gi[`gGC7#O/ZIdNanK($cZgb,rFA^=9%C#GUK9:\g:j&I/X!FEd&+EJ[MAIL$5`%^5PTd?pYZI,JqHnqM2d,ZTbNDc>FUBG_[,Q[-J1pf1b[3n8S7&hi5aj]lT=&6m04mb(M%FF6kcVW7SRHecb5q\8LSfL&pbUAflRq`4/Dd/TiY%dH4*.[tFmM>A0,5sL/&*:SSTojW?VSnKp&N,Knf<26B[N='N5U"5m85=p(=%>&U.d7#fkXWY3im#^o/'LlMp*2;4H!7g>NO[WYrlD/"M*&:gP(eIDqt-;bJoi1LJ+L;?nEliOhX5&d@#4bj;JK)iR#%PU!GG:*Hc%#XG#j_4O[me-Ntrdea?=#<(a]`^=MWqSlugN1E_'D2sT)(2F+@Rtuf"Cmh`lA0`R]@IdAUO$T0Bc=L8?ju#b[?=kr3SD0_'#3Ron%_pS'\][Z((.+82,?=V6l6dMoF4ZdiP,+J62XY\"8>h`jTFT/%D*&_5h+I!)hA/D)S;S>C2CCVLg!T#u>LB0jDW;k54UTAm$!sMc-%eUuA6<Z'0jPuZ$kmj]jZnuM.`=m<58JdeT-WR;N.=&cc,G8YhV0H\0['tC;--s_8ilBNuc^h?iZem7B=k$;]c9"[geeZdo7]-?^,%V+Z&7=LtT"DW%.'i*GCMO<_9?pp)cG]5X0W@k"or<sZ.\*e7X8(Vo1MhusM)%D*6X?3f?$+$ct\s-EB]R(WLd>gY_8[gO<8bIk)c%rGS0j]"[^&">B"cla\,>H84#&jgp0$[:NV1JWQX&:4B46Hf)(=[7_UH1S8D0^8%6CSQ56O7Us;&CU05Yb)mRbgt26Ze<ZI;Js!1B%aPYJ"6bU:]k-^mCMEKE/[2V.d.*l/>YdUX*>%Tfr8i.?EQZbs8`("A"3ZH!(ChsY)[Fdqq'\2`XM2AXs*10,@l;!4t=c9R,,u*[j%;UD9Mj(sB\Z'uELI1mcJ4OonSj>*QuA#j*,VdgYmg[)$kQt:MC[#nCr>1I@VgET3eX'&UM,u#>BQ>L;(9>.gV6[i1QAe:30;#g8C%Z/q,XmGmtC<4_);V<jIl=6a-%N)3-Wb4]#aZEkj(l")PA(NdmrDoOLcm[J:R1:')1$T)Wo)nToIm7L#/DQuZXC^lU!%W%<_KnJ\a%2X?8Z>F01F=0B`#].LQO-pZA=2nAJ%02_[_G[GWOO^*-1^)GbBS#jBo>)Vtj?IF==+LD"Z>;!I82=(g,neH(JC?%oE/ss-X4a["I%eun_deQKN8LTQ=i)Qo7oVp;u\f9T:1'c(-Rlf`:21N'OBR(YpQc@s]0DI<O$NXd(SSM-d4-TT!+r6bY=T]dpa;4"R%QnHrY:,<1m%Mj5rr"Q@lZBh,ib_l?)VFdB>)]3)\M<m*C#)G"V<Ur2!QbF0AIacX*WO(`>j'"US.,b.PHRgX.$,_"XO7_&'UdP[QPM/)cR+\tD9%A4]foR3X\1i_O'U[cJdWTOF]ERH9HARU&6+1'n\.T*J\3`OF662+l'<rmGkkPeG>S"_VDuS([]C2Lt0QClFh90[tfHOiun@oo:QR%3Z;<aa5L61j"k$#kh-]2cIVXtDhS;dN5*";P*N;4(p.b!9<0!P0*Y]hh+/GrJRa+rK+]^&OrKb?IPih@FS/'87WQJ>*F@Lu6/rX4%6s_m]2fPB."96mnCjW^-ld53Nh,M:.#O7UgFPebG@lLB"^XbHQm],7oFZ8VC4E.k#>%V9+<P'.q]2u78<J9V+\/H*?I6rtClX+Qr%_q,04&429!m>=<nNEPe;9C^PO+3cF4bq%UrA_XDCfn?a2g/qhUY3u"a@6X=d]W/WO@kaj)D$C$qYJsaDjEFsj.l&S9?]Br^.W<VC%31[[Qd#As?S?A4//KOB74SiKM]/I>q3PhY&EkFttbrJYc+@o\iQIFkW3=WS@LGn-[?MZA'Sk>ld_/6k05R0[Kfc]a&#TjT)7me2@%m73T9+mt!hT,=:i,4:ghhaE'D=<o`[%56A'"(lq$KMRXSf"]Ao.2#t3k8!ru=kE,1;b,tbppR5f63p5NfXU#9X'p/X>]FHa1M[8F%6iKQ@`4M7X`MG)*=2QWo9=)@n?fbABii\"1Ho6.YlIrWll*PVNk$Q?<<]Nm\h+?GHpEX?*Cu]9obj@jN[Y,<$)]:,lVrDJr@Vbj`%=\SR9*m^=[P&C/>.uDKr@qM,7irhOK@AX*Z"G+dMJ.Ifl3AY?&,)\d@^_d-S.<$q`QF2ku:j2m4)ar@^!/5-=GHaJoA^)G9JemQN%R-3s)ALX:+RPJX^9#Ssgb/uP^'YQ[;9gKD'!Kni6FNr?:gag`-OURq,'K;:j`DGD5NSQ,N<b!+,qQ7pLasO+e)"X-K;%E61*k*P3%W?=f=j1b[$dXYjQ=!F_a)!1?H!@ng3IC)"8/R/Enb-eMS*@UP.=Gc">['E*<0Lct=);?"=-O<;r_Y(ENW*5<U68oUn(D0LXL5A7%%c&cYN:SrlaT;H#?@uWCBVEh.IX?`nuEsusgea"6,5Su]SUicUP!h3VH9YEWe?6<+LO/^aOeE^W0D[k\%)KC1!]fr<"+&fA(WRo2?%lXT5WGYJ(AA*?u7@=S4m9l,a8"NG-KJ9nopjQ7VeGFd6q:?l+4oraL)f1E[AUdhlg#jYbDoraL)f1E[AUu$5lmlIFlSQoVMldJf*%l)>%d:Z75`KBgq8okE].SmHi6\irhoT;K>JVlB"FYLUs+]*<r]o@N9jYLUs+X.R.-5C]ear`]9u[6o<?RW3T;-TK^RE3=\gU]-gE%qKFuD79KRb7o94\8,YLip$["hn*b@G]8&mopZtHA*ZWSaK7iI@F@:U#*_ilrO)MPtnA?ln_%(Z7h0G5<nOML*2K*g2q>@^/(X:?G%^CKiAI!WQ4"f;M\Na!W&TmfeRE8PuMdULOTrQQkkolKp'4TKtH7a21_Dnc[K,7X\8YrU6PVV_iKjtV6f_d%csqHI@aVu$!P)IS7[%#,U%X]VT!i7>?uF)Cf9W!/_"FBo!hgDt5hPbmF=Jb=\C:l&d=PknTki,=Pu@'1qfC.SJoHUo0'H7%cl.WYp_\"9YU%@Ml&g8-Xog%;7=i&f`pH)a'5c&Xaqft5[T2%5f,eQUi%Z"V&9Q-JK-b-'WhWGnCXeN%Hc3jKCWT!ABO\n[TD7=Ig[-`ZqbJi_LMhX7\GW)q<=3>%<[_No@E0E?8m>2IKSA`0KDBYfgcq+BJ>H#WX:A+I'#SHp2Xk(H,Y%Vq2/5Xc!c_i)%fH`")PPD$UOe!I"4.efEpOo6K1`J;kVr1C%_7Z3UnnEd7PJNJt%TlT*gmsPi=%HLe;[akH1(\:>_'G"3:`1%W'R75X9\RX"*,bq!c/UD.b(>M:.7o[LoINb:.>`+>=O=;XMHX.V%1P4q06G.'f`:QdfPVig@ph8t<r72bH8DNROQG-Os"%."foLir$DG.5R_LgDQ7&m*q"sXI20SLYU[2E#m'&^;Ukh#td0M0XkA$=l-%OB6EhkT[=Fk_e=1HM5[+b<XcXB-JTh8'/u9"Di/a/q\F6o3c-0*8!$e>O$&R5St85XJdJ^(XZ>Ba"?N-!s*+=`Ys^aD?5"tbG'\!%"`]*E$Gb[`UR?uJ23;;Qd2F^4\SJ3^!I=@8N@dK@C?`-C&J5\oP`_b.9u@0U!HhWC:r]l^"RZ.5-ohpW(>TI>$YGe1*BOf_ia]1S%2OIk%9bpQ]`W`[U0QJeGS)Q0IIQ\$qZkXuf#],?7&2m&b(C]N["$oF#$mpfb't8_+MAqa)!<Q9`;96,<l:(-;1lFm2YB_O/*pfn@%^n7h$GT<Wg(D3E4g<*B`Z6"`;f7K#'Lt2F.=*#>)YI[FEYI/=m6.KgHCnYAI^!:E?h??FP.pSjU6QmH9fRpFd3VM`UKDBXCSZ-41%[KKCV8F(DeW[;H`qdZ?*7G<qN@?&L;$_"P8VAL8UF_;*+YIe4bb!CJU<p1uJqiKuGXRe`t3eH>s?k,_ad3:$+9WKQG*IAnGe22p*%++#lS_7Zd=m$E\q`B"PMR7QMKJu+_"FQTXC$c[8bbNUiJ.n35BD$%3b^#'*aD>=.U:Q8AL'G#&AL3+tg-Og^P8dZf,b".*H&M"]Z%4%Ya<<Y0iEE8]b60JG<5MPQ3l!jG*KD4nguY$mr%1&mKC'ddeGd_6h2@`Tm#=4'2S+]i&G&:"Bs""bof;ZbnJJ!3Jn.=BW1)22e2%9G`qHd(%b?E[>i<0nRCm@"O%5:gt+jRbQQa2GWo6,[ck#R,I&W+>h'`RKh,U@AK=tbb4-,Z`.U@DB8d6SO5)U'C`Mo0E?`[a0?el%$55$"#YiW3+H]9N;/3\#4&cUi:f'H>)@Fj_7j.FeKYU9J<I2:X(k_:@`B5uMoa(YF(m1LM89?g]?m%Du#7#c%,9f"?.oRF.%?t;B%e=q(2]EjgH^e@<#3llies(>`>beSl4o[$X"'?f2k0kFd<,pPqu5o-?QIMVIp-7rIO1#TjoRUDG7`up=p!JW(5Q6S=*JW=WI1!hsn%?r1U&&Z#o,;Zru"8-B,&(6o(De;WI[`Cb-r;#;Y.=H(C]&-1er(r^L9^l/TkHBs,7`Ia_X;TingdYJN4bBJKF.kmVQQ8-Vf!"7N^%Hq9DL/#4Hu7aoit\:0[<Y!,$taVS(h<#O<.#tQa%3!;VCM<[a<!F.k7&umV$J.Q4"R,O/a^beqY?F!63MZBUjF$O7BWMBO5<sh8;%i*MUt@?sIP/@]*kMujo6BIq@oK,;):1JB.s(p?P'C1A.n!bRT!8R#d0`h]+uLL]ak9YNU9X":r7/W'tM5nZ_@,)T8>1DMW@@6/rN%8?".H<Gmid.b%[b2eiJ[<WQr`D1Ef:%0`'4$CK(D_j%nZ+gXM9I2j^S7ZNZf2$gu$1lO^!`)IMJ5)M/a=J32,/p7?t"t#)@!64sn%X=I4`asM,D,EA5K!7QV!(b.1.O@`J0.MB>%U%-qF-rj`,;9[0-7HP3a!/H-i!iA$b#4k`1eCQU=J0G89I4aqVQRS;UCfdu.KKtoI%!B62\eZ$C#%;(na+9[X*l;\OsVCcMNO23!F#c+iI-4+-[<lIYIUImuiJ6Bh^,=PPK#dQ_JBgXp*`/m>?>D-Gm^o-6j&OnTEM#fPn%!2b_]k`hmoLBQ+p$J/?K&-H?G2Mar56^Znr[5B_b$jo]<228f<P$ob@q1TE)$kRAfZ)Je,01nAuNNbgBmT)Udg$1>&aiqP<R^/?N%0VnS4R,")-G;N0F!/E*Xi4rr0<q(J;Bb$X41h@?)phXUH8HDLF&QsBRPlZJ'k0ZZY6&gH'"RX3R,o9"6iu&pJF;?].KXCEYJ6?YL%$iU`an4![-AUlNZm:(/X+\5GT1=e*X5K-0-I0<I[hGeg$OQp>U1ugTKMOo>i@-;^##Qp"ehgBEl-("u]/<LMgBFU/5A?:F-+HTu5%4n$O$9ru*]Sr6#VZH/36#@M0"B6K7k0MJd*>pDG8)(6NV"lKu6fd)BTJtRZ0kTVNe('?M1_#od"CQ\.<U-c+,Vnu8NIDJZ\*2Q-<%$!]Z'PD5!Q1b\tuY(XUt9i*C1=GA9QjoTTd1&JYA>mgc_6pjWT!.j(fWl1,:Ji"PL5oZ\;<'qu@^hFF.KFq$2"tGOK&-6dS,``@0%0E`cY@;QYakR;eR'6=bd[+<^s7Y!tIm%XU%e-1F!CZ\>21/M*-PHhA_W0?[8-WUNn-"5g/@K]@n.(rJ'+K/-Y!jpI92\*]LNAlGe%?\BPZ1'7YKVsI$0O[Yq[fXMmKGSU;'+M]+-,UAAYKNTHc"tJaEkk$Qb(]ilC"H$#1=_)4H#d^(m3NkVCBV^Pk>RaB'1+FL1*amV7%)Zl8`&\p)P7j+'RCB,2^K&nE''Eb2iQ6JBl&ZSD<n%_J,D!aW,SS<Y^YWgMd@>"Wp,YG<aAeC@e&R9-85m2p)&[W$W"LuLlJC1A6%+GRjg'g6=6JkBV^cm*'(Pj7jg;9TIW#3p=^!fAOdG[QM&!3"IC6pR!TVC:(H;`$8D*?r`p#0+M'ck8WXdG[E"@eDQs#1T:HZGQbj%du:+GZ(=CC#m-hD`FUPu2N*N-JP&Z?"(f>1-FMD;6e'?(02U2^'o+\U"AC#U77G@9-&V$/TTfo>b_D&&LX6;^)DE4#!Ns%#&7d=]%EF:koK'M>$#-8kE&8-/s&gfkjC/j*TcID,^Y6R<mW49S3`;qCHfZ8f=e(fR0A]:?:OouB849T%X1Q0%@SFqjAX?pNY'uUME.[C1f%&=I[fJQ>u:'s*L>0Q>6DajVIDa]M.lCPb7Y":XXeENZ68'rLt0,%(iLN0+P_@Rs`3@O[1Eef+lQ0!8'M`s/UHX1;+8R/rZlLYOUM%#+h:7[i'*&ft!><V?'aS4l.#`'%u]Y1PoL=+t;[$!_gZZ&E<K+M'n^2!4l="nk9$37mnc^!S%GP'<rBpS;$3146bahgD;bs6s#SB%HiW.i)K(FOU,UCS;<pcQ06&k#gQ+mt!\gj]*7$VJL+J$4q,2tj@uCuSqSGufKs<W=A]F;8103TE<h0'(4Z<L:@d0q2!c#&[XH_fB%-:LI:d=4!g0ObM]UnA8I\Ko1I>[Jsr;N4P?O\I\_b,6C:7Pi.%%?1K6!37[h!W0/86PH%GOWsg))W/^p'e5+AG6&V#_mlf]-Ruaa%+Dn(Y-7N^C49T()i7:\"_&OD5)J@9J^^Mf^'Id0k.4UTr-5;N,@RDLtq.HPFfI6e]cUL!k"H68[Aie]i":6J4CI"9fd(Bsi8=ecp%0TOY26]'`[],LuE[R%l9%jj&_+olW3laj']W23XW=S!_;`Mt1U/HX_Iap=e55\NSm1'+Z%A&gJ18"eE&8K'Pk8\d+)q$mD%O]@-m%`MsQelJ0MtB`=5ZX"Yli$G\>$fV[XP4om[!!F:]Om*'DtaA0<KE`q2o@qGsW+TR=F<ETU[fnf89"uBFcB_62<G86Kr8Rq=B!%:aj%KuGB'*sL5\`b8OXXHAJs,am-f[lZ9NUnSD_$>;8e\5@[u\6DHAUGjOCfdWM8:c>[!;OV8#J3rgkM/6k?=n\6!<fhG>R=I'!DHp`B%Je!ajfEb=:F0[qo&lcq)84I'=/OaJePY<)!+aIm_1;NUcPtF_@VVC:%W7Sg9!@hP)COF\=UG)>Fg$&ZJAdtlJJO^tNTh=H77P6_'%ARmB]@5n6cFr=5t\j1mNq^3`I`mq#TB3f7QIj3*]8'-K.Jk]4D2a\&&N,udk1&hNd5(V:T[XK'(CXS%F;QK^O99imBmIG5sN\eXr%R=$7mCOC,u=#^XC$*;%"nI-X=ep\lY`Y9h:J$i959hG%<[Gk^"S>J).bV=aPGGg^b"Zq(skY81Gmmb]9$sWuR^fci+'4R2="P29F%@7AkeaJB#Lb4&5UM7[uVfQ+bK8M:O7,Xr1fAa0R=gZkcDi[m09(qJ_$-\r=6U-U0,;K@(<#:)9.9ejoFD(q=dX-OXCb6r)&hdqb`%3G0<F;'+!_1L,&I]]^B?<lW2:RBh,LN!9JKa"`3UK+-LA1e+Qk68$>n3Z$AQ9W$BVk3?*dg;FK&ZDi+'nYf.fQj(\dlNSN^qBk/!%VHd(S<I1VIJViR5la7m&!+ApL_l\=e"K%D/ciaW<X2VaT.4a(.A5?7p8Ru[-R56Cn3"'1qUtLW5Pe8j[?km6\m2$K@Qss>HbUOD/%KdG6<>Q>8.[J741<en<j$s_SNZ6K]a0Y>3#JrEeK#M,(k!PM%W\kB;76"dhJBeq:jW4.Z(SU`I<(+=+g$d2^`R@#rGJ8o$#T@e[W%bU-b_f=k"R\YbArfTQ`No`PbEpR$(31275K)=uVH#69W,@D"$BY95gdZE-(fW"Y"_\dd!jC"gidJllTCf2u#QZ7]!d`>F-BN\&HX%AMb+h$Z]Zmb\Mn4NZtn]4;DfOW_((ei)#r!,u)6c%Bjic1I^FeQC`JEc5_A)mksMN+i)Y)d"i;>r4):>/A<RU6PIgh=4l2b?k_$4%@D]tQ1!1X)eBB2+@O&gE2^KcD&"eN6(U[e?&XXiFU?J5"3re.#K0^UpH\aQl&1d=pN-di#D2_+0&^.[e;i8hc'\<LX^htW^6=^[q%ClY7/Ifem=5,3HmAeD8Bm1!Q7([I_K'<(tn]:eN5]`sBK8U4tN7\CR1b?[ZOA8>ep)?@D&)dlS2fRS6]dS<b1$XBLmN2M`DL7J!^%BmXYIPGU(J"bX)F1iH!%9bDH5F5FQgN7AXrZR?Q5Zu/pbm=FV]$+#Ab9*R;aN?)0U)Gq;]`+@u].Q%l-!\heqSmd6$C7KTnQ':W4%<^lB8=cn?6KQT$:.O="r=[a*de8E403B_maaeZMIK^C-F[PdW-qs>]U0,%C*WM^3,^o-82)H@eu8IkE<OU0-ab^HT70!1/3#u*d!%Bg#5YdZa7B++d3!n/a7CGK4C5;JVR-8;')WF:OqCB6LCUfbFn5Bd4.hUb`@rbif@;5>3gjMIr+^J1:l,(*V!<JDdI^!@!CP!qq11%FdQ/J"M1QQ1"+]*p6o.'ob5Hr+u?2D("f?*717QKQj063PT#,$Bhm4qW5su.R&T'_J=qj<4YN<+:jVrR<*?<8]gA,MB,[/Bj[toe%/E/cmAp<^rDMI3_W6hEm;#^h('+rE?jr?=MRJa)%/Ypct_jp'k^,+\F18X7s;Pg6U+W>NC7KmK]$!64?*?[=N?*Eq;YlV2;Y3b_7%_L3<,kn]'G#dfT%<"FRJhTHa+[XQ04_R]u&]HWD?S\7gQ_/Np%U9)=5i&O3L^4^j6f-CgoNC6'S.7+69m#aTe9IUa6J:/dn*=0rA%KdJs>9hDaY%S+0JmL2^=HBr2S88aX.PtB_/Pqbuof3l2.h?e]GZ[knL?q!<qQ>@QB3C0=N2%%8@Zi-&lf-q2'Pg.25`oNSPV_GE`%12Ib6Pk;UFZdSn^11b@HN)YK`-k-Po^V3P"Z.Pl3!>nD:.NDP6<h%sre!CY+H/jT=`0t6d.j.;">Fj]o2Uo4Q_Pp*,ZMU`I7T'6G%%Tm:J<u"mA?H>lG`MmsPCj:jUNFOR]Z,!U(L6uuX$ea:%@6r-%-gddQ%9cTq]S"KTKbSE*jc#sB@O#SG)E?EiXgO[B8.s%pe'M]Y%NOi0#R5%H"-5(p_VM%'\`L_:Ke'A0XXBJ2'>`N'mSslB'Aj'OE7Vp\kE1'\ZlAf.2F(q)#H$46KXjHWoVPMCsBEV@#RDcc?;A)(Q%H#@+_aW/YN"X?QLa:giVJ\e;7VK^;959qbb8I)kjX((B9\-rD(%66]:[(.rc[K@-DjX!fM(Q22JL?R:.S-TN`$r!0*!'%2hRiTC?%.[s))YZmO"aV_0Kg%nRep%:qA!@B]B_^ZFeR.VBa.YUcDduP]\@"8hn0<<A0aBjL'_*bjY]C+em&qOQ33a1]G)9htd;4g83S4_HX%j)o""fTe<-b#!/9h2mOa8[8AMW$5UO_N>Sm2>Ktm:Jm@KU4IF'#[mb[&@UO(Sf.9.(XmiUp+NerE!R6G'(YI<,g,2_oYUqKA'Jhg%PGPEh,%L;lg)Jd=CoW5Q1+FGaOkRGlf6:pLhOFqg<,`Ock<e1Q)S7doV6hj[2Tr)Ed2QRk5aCi;7Q,mRi6[l6)Q\lmnWh?pMJKMf%o<ka,_M+t2?.#Qnq#m[SGQck#aRG]@,7$&"Hq,O`"(f=![oq46@<RdL/W(rtl@m#/$gh?,ia?+4JSA`)R<e''kXt7ADmR%]WChFT%.RtuhFK$bW^2ab:&Tg+L&:rTL?ugc'N-P)KViFZD&i9_gaS^(j`-Am$E/%XHZR(/6!5i9XFDh4:"PVLc@gIcS'\cg#5mkd"_lD4R%WL__=5o/H*TXA5a;q@`FfNIKmQMZi\ce>;(5b/&/p@pYp,k.*CH-:&VTnYFGAr-KoLj7lEg70!(86H4pZ2[qWm*B_".KVDqb/*%F%"EE_49U,3?C=?unTjthMl"b006-MuS=[JfZib'6V6U7AA)=`l&^g:+U;I#F^8WP.$)b03I<%M^\6"#I%UndEKgrT=</nf49%hmph%bL*Ho+i'lp90d1SQP<?o?5:7"`LA,X*ZDh3.9[Wo!'n4j.HPE$"A9q6_k]3(P[Np?2^3=W!UD90#ri@6P'4-aeicfV-W3_q3p[T,%N`AVr+MiK7][)_H3sk?![k#iaF,+=jKK!T!!uk?'iZhGPO)3lo>36Q7"=b02Qet*5h3scN'qL`jPpr8aTcH*p19qk6EH<?LaQs,g%a=L47R$clm\@h]&M=%=Lff;e5@dfDBVY8Ymh8V5\k7dL:1>YcC6HTGEI<MEW2FOe1,@pGV"bO$.RY)=jD"f0<l3C-(g$SBC*tnX*%\_Jp_F7%QL3A')`Q_5Yfo17;G[S2qAVB+&.U*2DT/b(G(NG&KfQJdb48Sn!4DKBZhZY5<5BbP'c1l<1tZ:e]KB.sti3"j\i<l^'f%p;TM%&7`=''Tog^'Z@XK=NAD)>i'97fh>,7XS%Du[qpSPO!P'Q\;q3R;^C'0)VKrB/>J6-#fpfMOdA=*0P4gqWr5sCMY8<P0\`b;%I.G?NlPV!Pjhr*tnPM#TO.tQ3#ajQl"aD;E)rmJ(8Rr?t@2s!('"J1o4/.ttOZjL?i?B,Cd*NJp?2^]G69^'2\#Wt8HT$tp)'DcG%Ut)KmW$o!VL*aa]BgfcbVlTnW7+8+*Bi7ck0cq3RqoQ8>NJ,@*@fmL(O.<FDF>2s4>L5baTQQS$bU-FQ/Jm,Hq'@.I%b/j:]c@5'%mNeU%.^XP)V%#\t;<7m!S43ZiBN0_^KfSj7]Kq>W42RueqB^iS"Ot7=Q,EZmh7tuXV2+dT73*Nr8Bf(.V+$l)2J%oRB$?,c^c_\<%2HYt!28!O@hb4022n%m'K\``/goQ]_>tr:]Co'!S8m?2^<+;*n-6c-D>hV%p9S8^4)Ec"b3:FfbL*W\AApDNh+N[F0+gBf]YJJX,%keYbM&f\]4rrqQVbe?=uN1<cZ[Q31_JdK79M0OoUS:(P5b]B!Z/Ein.AG2Jj[/c.S@ee#kM(r'N.di\[pk7m<PP1+kFVWOBBTc1(%0G#rL=0114$%!]@Xb\7tKJPusIdl)4>-'NZDb4^SG%K$FY*(n<>/,s^L(c]2(@nbF(,I$WZe$<8\.W>`THbI`9+?j;+t:FGMnC$`%9"VhN(PL7.ngKl:-1D.>aEVRq%+g_R*_9_"(WN-`)o6tE/lN!;8VC@d$16:ig]1!Z7M.%nL=g'.@#\&r]UVmORg9--,C2][A1(1<%d.iXSQQSstobI\eY/'47,ct/i)mIV:S),XOnY#WN&[At`#k2G"J6R!0/JIhC^5+2iMGeBL6tYT@7ZN"k9&LID!%\`u0Ff;s)+#[0%.nh!*;_@.i/"U,,Hk:mne3!e`f=3O;,H-#VVfrHGbkX``!>RQs@DE/mdNHP]`at8jWMcL$R`g;+5Z%F3L*_H2krY_)5@jruX00gP%\`sVnJidRrSaBO!RrZZeOL'OB\]&/g=kP$dX^,A_&9Ip0aW&b@m$b&\Y(6_i)Y[Oi\5$KW6*\(,O$UAK+d/J46f:Kj$=<Xsb%?U/%9qk8PW0QUugW#%2P"d&LXT"ORGm;,(!8Q!BA1ZP[Z[?SKZbU4Mcu)rJXiPN.-#_[qM/J$'[m)"f*)o6O,eVa!\+N<JmKT%(#u=aM%=F49!-)I[1k`+u"`-&qR]C!k/#-"@oWfM4!8tP[S.1*>6@:hA6JT_Yt]D2o@`f)bjOq/>tfd/qU('0\2Hg`jW83F_S>-Q[@/83#T%kR>@1@2Ee^BUq.$g/FlsSkm2_+V@pIhHY\GBcL:,;Mi>]p;3@*iWI9MSmoK68nRV<X<KA#4p<V(M$O;67)f=u1!KFVd`YDl4?T*Q%Dp@um!:nN&4:K9t4!*&GXE`%5X@5[(*%A/II\f-!PL,maUIk9;P-XtqUg;Iab(^2MVS.YgO!To&kqRe*/0u-?J^4&#<<Gf?.dlNL%Fr^ENlfO,HDP6_O4W_sDG]N!gk]c6`DoRu>kM5Oi6d`RG-bT+64E#,_5+,-MGNe8mAd>$6lZ[nA^F\SnLIMh?Ci#[F+RM`m"9puG%qOe#nq+S!=VlI9kYb"jbfp7X`-\c4PX"LArc<JU4d@,0^Ykq8e#nJAT,&BXY`-+51n;^`VjoG`uk02Oq+RR_k@CPP-_B,9]hF@$#%=:\KcZNUUkl!EO?+bJ5/;JWu8_&t(d(G4J`Mng`Kf&EPf#)e#b@%YUc?j8EpZ.\Xa#eO[kX?3O+Jtf^^BJB69qGArGLtF9E_b]nY%S:h-0cW:*Kg1<#*"?g*]fSl&f*3=VW:8ViM5oCU>O<74-(^!Hm!s0:]bjUo@#NQr-7/ETm*k*E^6VJm`hsul&YOLL<qOp<ob8KLK%E=k0(D1]VAB$Bg6p<7ei6N4nMh'6in%"_L#d=#IGM^21q3:^nBUnDKo_u1[#:Gf)t1BtnnS;9g#VtNMk)VFt*C:AnpdcHWJ[f`*u%%"?cn[r*?cnJ8tuo?uUcKY#Dmkq+<rQ>2#RboW7TWQa,$Y"pL=0fZF20STo7\t'FZAW))/I8KQ$VXAW?a/6\k%YZ*NkKJGi]8nmO%FtG>'H,l!UgMh:+-jI9E2>6:!4a3aSEHoT_\$g,dd']*X1hJY@0P0Uc\@mrj"0`_iooW>X7WsQY4+ToF;7sQW9:(K`W/ICVDHePt%d_MZS]TlQ:=ug)3aJ?effa76Q]M`LroHLnqdB&RQ_!`$mD-1SFf:[\OgQAa1!L)Ya<mga@1Bp4:_dIL2&K"Umn%K?V=\a6["JuFj%DAAR1>L[O=i/$82moL3CFgoh2"Ak^1jL#K"lconu[X3Mo2[Sgo5n4"AH(X-a8.9Ybm3B;Rb0uq"0IqBpMA%'t@*a/Oa!F9G\+EG3%,$)\5;r^mcs2:p[C,Xd)HjZ-%<>Ud9I`C<i4uNI4n!LrRgeL7/TB#<0YhNO5KDt_r;<]fbYOf9>0VDWG^A;Y"ScG5!Oo<qFgGo&l%_=8>J;1Tg9j5G#@S*'<DQef1']`%HTA.#g6!*Sp`o@:-K]\iXkER^T+o<f4K(ZWVN?;0n'BHH!%0&8\gZ[?n%i4[lR&DVTHH1^3?%49Y-e^cO\2(O_]I<`Jc]0g:#j]Y$'b%M9'N/R84kII>Q[j3dEdjXutLn%;0@qt$h.?XE,B5CTcjO.WVL+78sOg6;+Eq6R;?J&W]]%GstN5bWG:9m.pCpE7pY]VB_b91V7,S?&qaf.YFJ=7:fejl?l^-8,K#-Q`KrReYJQBMlOZ^<@a(;[rW"lWnO(jYuj`#.t92NcMKGh%4^!f3_^fi?ldnIiIQF&7e]#$tkFM?D<:/C]FnTdab[9eb1V_)E[gitL<peZ5Hr1=7`K)O:PLXO,>-07mk^nhJQZQcMUA$KWn^LVf%Qd^<g(Z$lnT$17,@I`#55CYC/<jmA(b01`!pKRl^VcQR*;J3p*o]E1$G(#dL(\<#7Rof$>X)Mp^VE6k$T.S(+.[0"3&>5S\/)*8Q%'dq7QFgSW=IB''UrTqRU7!hcOmJTgKHRJD)SD_L*ZgjcMpZd"lRcD*(>3GD7]uoTG3o$dR]fOrL_nA+dgF4t:DIBsjhR%7jc44+5%mssk%HugLGc5`ASj55;KrU'X0.gH)tgiq+b+1XKpf"WXD:Z[TV9"\5r1Sa6*\W/*V[ONrkc1B>-<IOjdnTWidd<Lg-.kAe1oLU.K%k3"C0PM,3$",c/WN&&"bafF^3BW]KnAQC<;*A(9&af'Ni1qJ]\Bno++Su^tqC#"?gbId0-gdNr)dp.BIEj@*Z#;jbFl5JFfU:'I=%^:MENP\FL88,M_8h>C:#au`$&DcO0M'\9=Zn(]J9atme":T>?Y;nBD,YMYPdS2hF%<4PNrDN/hDX*_VDhQFLjf6rcWVo@^g0e%jh%A-OqB^@P)`Y.T_f\t.WXG\qW&2dW"MnmQN=9U?:\o)ga;B/uWb]TdUGd8A9OX1@aT/:FVRC]16Dlc7!==kiDW-*Ec33uCW'gW&[a%8-a9MPM,j7X,fWqG<>;&hrdPlnF^2O8ECo[]=1s(,[)`h^#J-57tPp*ReW-XBm7eC]I86.S;TNJ:F<^?(n+\3V^m\lE`V"9RU&ER%Y&J?m7Boj8+'k4]pD\K,5NT'upBU?H18"$2+0#1MGASl)krCpdW-ULc9(/sP4IOO@WbVZApmlV@?K_s)C7"M=BY5>"X<(-I$J2Kr%0Wj38iG`qJ\pE7dh_VIY47Cp74>$+S'Un@D0V8aq!2OYm>_RCYZg,8Ya$">>$f-N:$nU#AVN<'qNmI9346f[jQEM'^EB`b`<`^C=%fUm]X:0MRjfsAb;GiL^"<:A5.A3]A(0RJuNh*JFAIG3SgbqR[p[-n<lS%fgfXLoNnGe7DLB>X&@@B/[D*l`Aj)e>"Igif(M4kb+,%["Dql\&6_M@G\70Wjfl^iQo5SLC*u^[_qI)mJ#ELhmi&-eU)Bd$),8l%^Q6Zp3htV\Eu!#HaN7ulFq+jg$A='_qE;@K7NBi4KaNr%%uU0sJKoD).X["WF#=cj)Ah8e"&]VZ$#blTCMNe:TA/#4s/^uO+44-Zfku)=2rnT>b>@!8VpJJjc.:4`6$a%.=ZNlj]3;87>-$I5%X]Cjb[8s?9g.g"1rV:8,4)-]OV;4+$XdIG;gAbJpZs'607]W)eS#4SNS<HuhZs'5)ctJ'RCdj7E`Un$FNo/fo[E>'?+'R!kVbNFj%PPd(0S'%;*Vp58:ZjGb3po@U\o]\ViF_cci&_lnah:ePMHiLEVpWpjd5gYpY.mG__rn/m!m_F<ql\5SscR2dWC$4tD2=AnjIG`UX%LI%F/gqG1i)tO^reN6[b0TWBS1@I'kpKTN#o[=n$9$E4@:-\Gs.!g3ZcaUD]LGTM/W?">g<H?Q!CSsqp]+]-=RE\3FFI2DZTB*m3%mPP;-43r]Bjf?!ZCBm)_eLi6)WV!SmV?(l3VTu$l!aW:$=M2^FZ_+ff8QWPge+WeUs&B`pYZFZ5Za98V@U/0^K);;2DN_n#)P<P$%W^"#[:itKQh:d)O<r&8`l$%>0>qGS]F[g5tHfn\9I+W>AR\/ZYilQ'K/LjbHkFMM7`OPbVjU&(7_>QG1r$nn.ldb]184b>u`kYKC%6V=#,ZEe$(^PpK>4"S_2o'`+!>1RT81C."B-aXR$pp*i(frK+`:CTXeIVb=VY@H_qd%CilYu+E,[s'F\hVu0bXsWuBiMpo&nk_H_%lAsWZ60S>r5+<<L3(]SSpXdD?XZLl]Rh]^?nF0`"g0_F?J#RUXC3QX,%8Vou5!XV^211A:D7VX7M=u/D.J#T3r`2$Wfjt"W?+,3l%%ah<5OXh3FrJj9mh2s2t>5K>&q]$7IE(*@5,N6&0iZ#>VFu!Afb/[T&T8.&<G?nV1H^gGLa3,93`Nm)=e[BPV'O5K:pPgDEDEFn?%AC#,UY%FOhS(G%AlueHn[HY=YVXnctd(a3diJtM2RM^@,:P4,^HN!nhnb*5J+@3N:^Uj8Fq:PZ>AP,1YGb_p>qSu67h[]%o9C(If%h.QD0G2n$(0!mhZ\*]B5<:.!j<.1cdnH2Veqej\CK;oZ81%u,ZZYKs@%e0eUDP6$3P7JhfO8.AbWH>&DB=.-RppbBT*qJhr&lJ,-%:Cl@];<r!q":+[GN1HN0I?uh8?DF<i5C1dpl0HZjrEid.\+8pUC3Z;;F@b,Zo!-2%;%I*9qLP*hfrcpo)jj:US.tS2GeO\;P'u<\%14NW$a+oc''[=d9"1mr.m?Y".e[`CaENQ+U`s8D7DOcs!P%N)=hiP1jC,rmq3=Gjge61tG[[?8d#LCXZS`eJ@8VLN7fH5Bg*N/$2%*&UnWGpfcK@@X3oo-&6?A2fP4STF2?UlKSHVe2q&C@4F(2)TjX569<Ks6S/.k@4"`nm7g!r<\rQBZ?=N<asnF*ILnk`]NWmrTcRG%7VQ2!c!FFOYgCWFXAjI=-J-'-0Xu^OhNIh;cXl_"lrVg07*K7f:B\orL;-"frni@Sn9tmc<).0Jb"f^!nl,Of1@r;`=m#=Hg`S*H%ma"F)maLdeF9`o-PeMkX@T8kVV`R"pCgNVJq6IKIFRs7[oDV&1PJ$a8dsNtj0?7-C;?&(S[_anl2jdY7f5S5\>>=[hf^/@VX)\Xs%6RUpZ]c6*tiIff`5;)BsbuK#O4fddkH*$&7^X2USj^,LK22+QrFF9Ar<;_1I2\+HSDciPpf+GLB^K8+`lJO!PmWln<e/S;C_E,G=%kP+`5@6aGFQhHC`p#DD4f?bM#n_EZ4D%=O2hQX<folHKMgX*i@icqS>=>(uh69r5Kr-OcnGP`hjI8!5^9?@umZX-8\4uDq1niNJ9%\<nh!HTTL&HMP'W5-C65lfI.G^3klta*HdbID(#50-Afha7]#n,sb_JHsA<H^MQ!cF$6bfDql=i.bOElHhL\`<)/=>Idd2m^`2t'%IILHDi>phe!l$33PM&`3HhbU0&U7ZZPgmQf*%]X>PA]!@FGk'6dZ(-d^!h7(9^dOD0CFgtU[dU8hTPG*;Cq:]Mp]5k4J/3GAmq6i%X0Zeg2Qk?Fe_.G7c,T/1J(6!YCYH%]<aHfiIi4l\Q<4!7MpE"gs3:dD<UNd?JM0*]I(UBLQLF'tF`_nfoBWu2_t5A*4Z7BZJ40A`%V4CrQ2^/bYob:HQA=,[Hs%Lb_Wh.JfW-Aaj06ZaEc8hlKMYkW@"3aA'B`$(R;K^incJ-"2W#2itPd`A=*1agCo/>oHZd.=TH(-j5%;s/#_]M4s+\SeV97cnP7-D>E(p);FPW4/CPH=B4q"3a*F7cpRC7b).%lfVp9jQC/TJ&jqSr/?'iaIYU\U\]U.pAF_(YPBlIrAL41%na]O@^+-+3G]n/[rPNu#1[F49m&TNTT09T#[^1GVe@sV]?-UTeR*?TEbc04:%b.rY`n8SS=l/%]$J*Omg4b&mCA^O`DsGG"?]KV@%<KB?;omp'7;jf*ur*c0-Qhf^#fsl@D8X1fd%(Gl3TBc1E<9q0a8`aU"*K$Ii]gqt6>WJ?<=cSid/!c%jk9XO#VrPl/>J3XOp3<Y*%FER9g<6<<(]&m(>p[Msuo)@A+q4\_M$a>N;iN)6J^WNqoaXZ)YmAE7Nnj?-;Zg,PIFq%`f8K2A^luphBb2m.t40(PlFQ%O)ko85u%okr3(2sGYGY&QDb%N`[jg1JdBOu@WtRQk.R@'C/UnSX+AC<pDFHDfDTcIgajeubWg'\o]<+YS_RGBnQ+_8Y;[\mU:WrA5S_Yef1\%Icil*,HCL:H>_ZkT(h<'A@^<UT<Fq9mJG5$cDH6IFSOUo]iA^X..YnD5:rI,:\n*u[5a\P:&UaCK?/LKZ2^bO\F)4LTut"c<EJjg%ld5=T4&TA5O01k#hk]G\bYCnK`No(fFP8THqhMb<#;kCXP'GsZ[i9RLD"i_`*98?(G4"?651/R`5L?A,!._[G^"?c$A?gNi91PuR%+iPdP_>mn$,`[n/kfS>ZdW`V^D#'oJ?[fOT+6:gc>T^2"7m9?.'%I6QlfF<+E+")RE8NWQ*tG@_f%1/mJ$4(&ml%L9**Cm;*_rfL%H^a^VSdsNlDS5YkhZprT[mr]sH0>]RJTr-g*pUY3HY=;^*?GIEAldcS>OV'[GBhV!4DrLY]Q;ol`FpV^rP,hjj)E61lZ;_G"p=b>%Q$8F;3rk#bdFmAFB;)DfFr\<FN\IWkUHRLtZ9qF]HUg[WYHci'@d:TqS_(C(ORI0gF!u;C<Tc75ef.A&8m\9=8*[b,!CX_G?=SK0%DOoD37nm=Q2<qiohW?\I)jo70ThgH+f=37?XLLi_X0Bp:H?R9QgcDDh],=2"V>j)k9#G]Ucdg$Ah6ai7c$tUlje2J>*o\1+hc$'&%MW9#E:FP!e>O6\HUcrmEUCRja!FHl:D>'q=q"D$9LD95XG#7ISn"9csS,-&UFi\c_+^a@0iJ/6?<UO$2n^S4Y*V%Ylhk!;b\(^So%i)tOjZB65\@Y?l@@Q&W;..dW'mLZm,S;sNHNQ)dt#)BqcjOMrTfq`V70_t,9%:9h<2hGW\rdXN<A#6B%q61I<;C.JSD?d4F`)5(o%k\<OAP_k&(.SBl328@8,Ht[DIo*W3Z%NiCicqhobq4RQNG<p;'fH3'?Ud6J78L-_\Pu6<L,$)sp10A.j0T+oQ0nSF&^4ZhdWtr(.%&D38.UK3UIC)n:j/X]%\"G4-a)Q1t/?pi$s&dpm;gj01Q\1C@c>L.3E$!KW&Sr:U9lu^tV6T:'=9=mFUehc7BZc8>kXEj^Aju6Y6%5&J9_Op*D#O'l!&oBBamggW:q8=peD]Cej6(;r^AcBk\)cogU;As78'C&WKXI'srSBW;pWR49S%,Ufi@CFS(b1g.ZPLH6u:E+_"S%?8Ob8e`'$h5sEOhMg=pQHit,Anp=*Bg!(n.nL<jL0I<>Xf8c;\-Maqb2p[g\VBcT7_^T^$"VuI"GmF7&/j!/eo'uA9rFUu/KRT2B%I)DMgJ7e#0,oSt&n0-@=.+A4?ora*%%@<iOL'g+pQo2XKU08J'&l?(U*B!XZ%<0gM5B+"udjg#0g4>4N!3o>h\X&/ndGLk.T;MGm%9Ujf(WSU%#^J9IEj2q)_HrBH>dV4P)XTlouM+&26W5XFCO74;%_aL30$\L-3GUpl)PD7"i.X'3]=RMYUj%)BG!Yi.=h3BF<GkQMk%GU0bRptK/'qafHi#c2CDmrnF/+Dar,JMA<=c&jIGiO2?SQML$*b:@`+`H^UuR*U400!->ikK1WP.JmQ,-\4J+QB-s_$tf!"F$ga"%?#*I_a$>]\*kc0\H.t^(((sg$,Q&s^0=USM4.D72j5gI#n126(E3H[(@rcjKb=9V=l7WrBs(*p532.Z.@Wb'4Ye^Z5caVMg908^\%F2cNPIF4P1cC7U9jJ1C(n*?9Fs%'#VBS6:96<1D`nMs-"9n"Kj(g13!#A'KeQ]ip'8[Q8T3-nij0M3u+qT23sc4$25k<jp%<g5@u%2V<K2L]`Bjo(`g9KqeZ5cc:+aV].8N_sKhKP,&QFK*Yt`<<iTP,mjX6U;f`u/ANH%B$`R5+NS?p4fhfq-RBCt:Sq;VmeB0?@Q+8J%!`j4=\Ba"B`0$hHQf')oJ(JE&3pEYOfSdaHs6!k$64tp%XPZA7k309]:\*',]??2Nk$361].HI`17Q/h/;:NV?m)#J]@(4RasRA&%GIg;*Si8dB9]I6gYqPl8[ZoVIp2P*OgTP\f[D$F2n*<:7k*O(+\FF7B3CpraHoe'M^Y>dFraH)<O)P8-+\O!,M"CoX1N5)Qpl6Fo%CehT8N#%O<Sukc(hg4ef(Q=5tbnVE8a&[pOU5snk50m<Z;Pd@52i(T`,1_Dm'`Zh=N?OFAP!I?/+r=+)"kq&<`&^.k(r\iP6N[Gr%aG_sl[WL'fX*j26c(IUjQMSma,RCVXBcOB/%TJB4/&Roe<>l3+Wa%MSE;88Qcu;I7V?ap9kq`"<!0/H6Bb4DR##k]:CP46(emfAe%*WY$2O2JL'i+%SRR\,'<md1h[Ol`U.;B1N\%l@kB&km7g:"t=Q!+Zu,8n5Zu:aL;?,ec)b9<$Dh&/BV4W)??ULWYHWb[SanJ0,51%A&B8s;iI*JRm'j#PY\DD>*2Do]q>QM-CC[lm^7.$U9ZnVK]jio+1QXu`U/<cLYWG$@gYMfikuW[DnJu2<`1!$m@=LkVGcmLpb\Pg%ilH'@:+5bHTkQS</kbK/,u"1fAPe%:k6OQjDoKPMcBHbnj=?=n#[*4tM0">"-.0*06Apdk>I%FBc3jfZ7,sLorZUMV_O5*R>-X5V%=XQ'):P*_cie36^;;%Nf^+^h@=dG`%c5s*;%2WM(B6kJ8:EpsJilMrk9qKpN.FVAD#8sNu.[8=t_iJ_%A2%0:'sVLJSE;cJYNLn_%jK!!qWLOS/9NRc-H`F9Mg%YOPrpu3LDJ!/+ILnIs./nf1#,]jMq+F]_Z@nUPQpB.F?B\ZM4('pa<JcnRmTJn;6fKq5H%Hq,ASm$;%L.KO.c5S*!J3#5UZqZdJCd:Rt"0.+tX%DatlY3^B+dA!V)>d@O<k%A8dVX,#C@$OQ`?f\1UiEV5#MWBo9S7&:GnlHhH'SIk076`b%^VY)MaKXeN1$T:.ZQ<>Go!#S)O[VI>M!<n:kDTP)R<AD/`ejW8'-WW<bT1:=MHPRIBoX2ohJA-q1.47+P,-4[\=QADnDuIgGf8(/%[NC[/86Doc4Yo';(mN$s4HDB)<UqgnDT9t$X/;uM,ADaS,90k9<^9f2m(ar)%087\=iFh]=eb/HO]4CR8P)`)4)W2u-%?JlC$a,;%rnr'IAeO=t85!IZL4KRVA+Cq0*uS,f\nH!W:6LnN'skH:N&fn61[]i1"Eser)hjinr]k.eM6h*)<@k5*&u2O:Jth%/#MAMPAuPAW%6XOED(:P?AKMZla2am7\n$cY"k;bq<c,k5,gTM/p(DL=t(_PEaY]C.h;Q&!RTT6k1+\:cb)*Rm<6f_Gl\#jU0Z/RWs'buS-Nn[T"%`4*ASI/_m($Ogj,q#imp?c#.][iW]\RciF?Oc@'Q`V=#,YC:ALMWX/N]YILl,:)4^+u0iKFr,.T6P2/]ZQEQt4rTg"M$kt.^r5J1%G\%"W<r2$lPt'lC@5Ua<[:*@>e8%ERg[;IXkB[oUl84bIF_hc:_=B2rkMu)A\Xm!_,jn.;Xpb:/<B<P>J%VVh[C$m`I;q'?#JJf0%FU$f0043kOjM]sKC=CSalBA^&]Qs+cj]]?Z716PB+2o27J&.k^>>s:bXF'9dm6=A_cX,c*`OuWpDs\GrPXYB,MFCiEaeJFp5Y#HJ%RpNIrmLRNP2Z08YC(mA>JkLQ;^&<7@eiOef$@N$8GZ$*-d%.\XIt$W@`;\XS&smHN\Flq$s2VX^>Xe.cjQ\Tuo\jPiS=R?qWI@BA%m-`'>S\q2P7JZ>miS?q_aaUUB0ZC&Lj'/,l:Tf([aL`_Z-HsoWa\R8"NN[UG/10E9U$H0M`@WO&LfZSilDm'MF<uk$RA0$6=-t9p%@s:qfpi+WGh6Q4$Y-V2D.hM8D?G3AeT3'Y#QVb,$I'qo2>Y2&&HY7T4_aWC+5$NWNF'P4d+3qp)H3<Z%^"TQo#I[ti4kc1'%jPAl%nHT_Mh'AL*bBsH,d-meUqjhj,EFb4C<M[eg>`rL=Ji$7M\=IbGba[ee@St?V(<tOU@Xa=T&0l#$0o1%pqA&/g@TgqD]I\f\ft@,C%a5%/.2U)"tAuk$(4>!#Fio_hjiK=S^=`&/(iSe<phAjhf;uO6e02=eN/2de@Rlh8,nR;]fMro*9.Po'd%G'b!k,.kNXSJMk]P'L[%SK.[(2[q\f(Jo,52C2^\reDpjgsC]9l$Tp#VkPpp+b."*SjS(PdAo6mDXauE5$pLGjmu>Js6=kc"Su7HKNDtMc_l]mI#^^30Io.u%0#kX?'iCRJMkXtXF3Z8R+qj.Z-&"kQPsmh;Xt4>p#YU,$`1m/DjK.#VNL0J4nRT:[[6@Vfeu%uQO^FY<O7VW#.R,MRO(RS!]#Z+)%5XL5^mN8JLEAil9Qc6m:b\nU'p+,a=GrC"L9W,jRRqFdj[61\QXN=g->s`&W_F_@@m5uJMejT$Z?i7,d.#[]MEig%;^@28(pMY.;%DO#PWj#jesUj^#2?7fejAiJn!ei_:)T`^5CfkTO6h%)1"iV*89c.eFko!`uQUNJ[<jqA`"Ktb=H'\]k>?894Po1SqhT47#=Xn&S=%DZei760nF>b5GK'id!_!@0lg_REh=/D2tMt>FDfR7W<;Sk;L`XA4AD,#FEMg57;Sd/h4lD;2gQa`TSgp?'MjFoG)*3Nj$]#HBCgL%L5RP6l[1`KMK2F8<U3N7lp#f:=dM`qPM/2i]?m-JgNnUX[p@PhfYYT0Z!$do0g/<[e)QK*'rsH)<;c"n.sI7n?/=*_7+J"oE^&R3%E'A$11f!W5er0:'Q$[5gl!a(>SY)MPcmn[5(o*%-DlUI0$K'1$06+IAobs&d4;lm7lT8'!5lfVN;WrZ]9p^jR/=)LNVuVL7V4Oa,%]FoWpc'3Fd=-Yi0UGKDCR8t["]\3p,'cJ`0,>>T:q##Nr)P;T"CJ>rNW)dq!1R9ajP06MD?&Ba6_TU,#'Qfa&@bIAck+TVX(ONDf%Ch$.)r*W27j3q^Ko&mFse?"(9U7a"EcCB\s=tX/E+"tt2o?3%iRJE`C\P[Z4RC@pW.;nB?Mgl&4=ONY5kEC;g_^/kk$-Z7h>qo/X%n-&A7n"0jT\=f(pHk'4N`*4Mik<+P`.Ut+\F.ie!#9b!]:M*ZBRsV%5Y:-DVPiqjiEJ_'eJtVps&P/ENLFO"He#5T9D^&10m8#$N%@I^[OrkkI(FbR\ul3_)cW[j<?;ZIb!3LML(UWN?0A2_+p\BbsCoWDTA/1tT*U'2G:UW=ku?$D&%P!>SJk3E[Wg\>V3:TI/h-td.,%.29Ll*!O1qA"8VBMm<rOWbur6NgpoDMd%6o[5]Bb4F;4=IW,I'b84tJ[gkC]A[4lD2iD7+WA?R\gTDOC'KDqN7cL.?I[V1!"eCUM%@rTo[c1CI9[bUF=QurPW2IBpY9)@crRoGV!n`EAO+W\3s1@]#t9!iG8oB9Lcjl4N\YBC#AN,\m9i5/A"#g`puF_/*V>Y6Jf4rM)G%6pc$aiH0(mO@#?]K`7M$\PUg0pq5*&A[Hcsb%/_!4`2L41g#S\>K\Qucad+t]B5QlUr*AImJ.T/JkM"qMpiYAb?gl8_5!E)?=jhE%`m'q4m>OP`q][*sF"a)n[8^9T-el9>d#4`Rj$gP#1;:]=Jc`:Mi?eJT0!Mj]lajlF[9N37%Dh.)R.U&d3io+iFQn06j`HQA[5U]`%V2.F>4#t"1S`NM#-jL8IHe]B.oA@%G5C(liKo2$TiiWQ=khki9&V$L>n/PrC]h+0U``&@liH-+f:"ijVl1-aEB(CN]KDh\eB%Ri$%bD1"H=gfXcJr<73QECML[kgfM&,9Z?kh[W&O2Vl!N6f>NT3c!>Z.L$qaa?t0oRe>?/Vuc8c7,eLG<VW^^CS&f`uAq:WW-bOGgmUP%ceD7,p[>#"Y<_?gS'bRbrqY:Z55P-9p[7/#I/(8Mo><Y\:Zn@@]srDMrPRfN5C@_Q^$[ju/cMQ[r**P,na<;^IeLm9kc]2ks8Cf,%:Znce1?aW$l)cXsrYPcrhY4_4%td)pHLF)#^O5n*LZaRk(Om5kNE`%349!-f$[obUSGqmta.Iep'i2F$O$=NU>-7No2jucKr=dmX%H@oFGPCJ"hm!\n>-i2Gc&)1a'j$ikEPN@]55#Hf7%=6Eo^@$A5H11(=XklY=q=C`0rfgq@a]JN;p>>88h:>XD2sQaAqq\.lr@n$7%e%:Ohfa#2$Dlj5Q59$.MDX"tUr:em^<U]"\YER8me&aOm:HC.ph&"2J_U<E$pWpN]Gl6U"+8tlGY6b`$]]f@XoKP/,o]I<CpIFuX%d(,?hs/5RS4+Eb5%H$6A<T@-RrTt,MrF,VbgYE[nZ[3e%Dok4nd.u\=s*jHOpUr3bh.$&D:VQ]'O"]o1L\VJUC&C9sjS/nd*!SoY%1*?P\^N[`uq0^\[h"p>`GNL"FHdt</o&h*WrqAXjp\>3M\>AVAp"cP5l0uBm%mGG]mjL3npW);>3Ehrop3_*Lr8<@BTuB"XID5I`%L+R\S8A:D+kjGs-PQQEQ#9Vj;o3p%7,`g6L#QHp#okF1"7t:HJs'ZZrJ1pZ3<Iaoll-B;"_+.jl^:c%gs7&11p64_mkg1^B07QBU%I&jt^s-Ve*IF@rMI<ESdk#\><+T1Yg%sgbA7t2TXiIcX)Yn_sOrhHa^,)ogCoDa/%d[rc!AFP`Wo[2:h^Jj[jL].5c1@\.[+%5jm%i.Ffhl$k+-Im*b_i;*60O7&"As5H83PEoUlpTP=#<hN:PF%a;mNe$Wma,dK%&SYAFLJI<+*pR(:phQ])V7n%[TD$#!TQbGKpE09X%rna8.lM6eHa<'16k0*J9DWamcjN72;:Oi<1mV1]^-i3#TB/H"U;PSa7T7nA7eVV"S590=0s8#lBr4P/&GB.lmFO32H9*bXpaa]N8%nS%(=9:u-,p@n9uj1kM?d!L97G8_DABTdf%rpm_pNt;6d<W44ckS'6DTAFq+r4hWsT.a98?!A7ND]G,Vhou,9W1LfKH.ZC\DY=#e%\ofM%qpAbt_;O4C8hC)drV*'Q&#A5=++DS)AcJC9pY8N@#M''^J9uMq3HlV/S?W*I%8I%YZOJ8JIJ3Ruf/%IgkJft;Ff)cbK$VZ0%g$;ocT2@NS-)jjDWi,,R3EL7D8gfps#dSJ+DsK!P&fQ[m:A&3F2lb>O`?[Ui`45/]C%uaKZ?O@!XA;F9&NMkggMUh6G1r:c_HXPI%=n4EJAT=Q@%5;#eLUf%^@"i4?VY[`rTikWSf=00hP'HD=F-/QH<]LEPlIV#smYa]ZkFKWBVBkjqD\PmR>d$$V+:aTq(%]]/Vcn$/%S!*Lq_oN5>1aRlc.`'^(b1X/FY4bqk>R]FCSoeQ11YK]dTi!tfPY8tl,Tl_ch-butVlMa_gh8Dr?Fo_MS(W#blfVlBlb*b/W/?=&%W*id!/hWQth&!WJF^NuFk\$7Ughbqs8,J!>0tHqB?(8V<ZZ$537)/`'fIDq:6EFMboe"n(4'ImSB@/AZDu'cVZkNG8#5>'OA#jjO%TY3!@0@%<"n$=Of?mG5Y4=,fMr_+U/d]7:rV<?034%HBTS$5T2Vhc^MPnu*RcW?\&AZj'qrJ87umTA58*u;kg`@Q;GBl$]/d?f?H%]A?`K9@I4hM$A8&=DZL2f>>u:^QLP#EYH.9^deb_jb!/L[jQ7_H&?]N*7'Rj[CrB.IGYprqtcjpMUh/P1V-ebO)INH'&%5Lbh2:*%d9^H/L0pXHn&%SkS.Du$2Z,dObf1"b-"cLUoD"*:*rNGDR(L@L\-c+mBgjF#cJ5s$fPTq1-$-T3r>&Il.PTOHcTIH$9jWV"-WWP4%.Q9[7Y.%j^^8\ctH2X&V=B*ui?fJ!d23rTGY,$W34'?)da_H*V"ScQX0C`\R't%drHgmOf^`C6K(@SA.VSqUigfLFEke&keMJ;!P%feX4,Vo7GR=)aq19<uj$?)OU(pIWklj>WWP#/;V4&6VuY=_j&k-bh:E#@.R),!7"'Dio4QWCb!S`H;K0"Bs3B7`2Q.ker[8Zo=GA%1O,^#/*'DaAB:5A73sPGD1U<=jLs;CAZ,,b)mN<)+m^"=/9lh</X^>+eF*5Qa=lcj[#BJX/6?hQZEY6O8mH_1P^''Z*Ilc]'=r!f%%b,(j>*7-^5Sse>7&#l6"fiEbQ)#kmS79^P2c'\ujrD;PpT\6[!^fCd+e97s4DmT`*U,\.=g9L=X%9L&'UtL4MmuD6J&6.#h;]j6%;1T_He;BLt;^1>tcm@>l*5tGRa<H?Cn8ki8`Pc9[+HfVBh\gU6P28H'JVr5]9F$\KbBV8a`=tuJb'"Pm_!9%C$*@mc,_*NV?<9rE%2^":.^k23VE\TQEHbj(hHO`\@h??gDf$86G+2#h:!aef]Lp:[FY-P*fo:bfh[7!<'YuC<&*T?(SfP$B84AaU<XVUn)C2LFb*kBL5%+SrU+Y<H"l$hd-"jAZR4`dZ*b,fuOdX4QO3L=YauMW2$K-LtQ<9TUjtUNs$>j!kaTX7Sci'^\r?!C[WFc#PFm>)?V7`HS,ihkXeb%:mUI-_c\F6/f1joV41(*Sg#cNlYDXkhqgT;MtN=fW_hh<Oo3%"Q0J/Y_K_/OgA=m/<%<"PVasH1cJ>>"bd8Lrijmgh#B-"50@5L1%g#T'gPF0AI,+sjYZ`DV\58\=pB!C\:%DAs^$JbsQQ%s*=:g(Z!g,dEr002nZ6ZM`qU#(&(Cq<FkF3r&al5Ws#r6U6k,QS[B:SJ#P%,>JUPh`mCf`AD86`Fn)#@kn:`7(o@R8h0`<P.pBP\p\7lU/Kj5VGtuLS?Gt"C>M]3KXjE)^Pkq<LLMJMG+^/@Rc9#s0q!oO?hb8>%kprHjNe"PT67Z3E]=HU.F"=qBqrG3$@")+WI+m^R<U(j7#"$#AD\pR\"LU-b>;':in*B^enKj9H0>-*W>aUS[`k0dhBV=-2Y8;-(%BVQC]<&<`(a330iD`cb'Kq4*KDPq?OfpFB(g[[(D?\*oAG@r5#9O\E&C4U\f'l)OjDhj/5/b@M?E1<b=Dgs@+-m&>#?LFG+YscJW%4:i9THApu4dW<a^7"#7cL4UGH8M?6$1klf[otQoKPnaP1gK![Q1A`II9;rYim@.V(pu/UbmShC_1XB-Lp(qhbi(&AR,PpM/<Uheq%koEt-FRplh9_Q3+D>fdr"W>U\H62uN"-N0'UYA[!rG9N5/bU2"CGsk?Olp=>he?`XN,/3:.@Gh6jn0'hEnl<%&!fmEj,5Pt[God<%Xc8>of.6LjV9/M_j!idmWr00+CasX[nY5Ad<8L>-R.r^B0DuZZ5HMqsd4q'#b?(m^33s&-cIn-)i;?bq]u5<_Q`PT/8ub4H\AA+o%3<T$ChQ!b]?b+5:m`"lSebq#_MUL4BDiW\!X,s-s9)^@=H7s.ld6`b9Eh2_\("GqNYOB1UcngK&7!Dr-\AKuZ&`m5Wnk[pXlXiL"%?`MNN/I'@6J67]U.m:h7kA>]6B%h+HA'`oF"f;qnkQ;VmT3U^gQ&FM'-Vd1VQY"dQ]oea*DeB*m=\,ZM&Fd<do/r8WiT1:CqN+`I%c2_>@GpVX]rSCC=lfht,4h8,t4Jh5$.g<rG$2VUt:9fXkHa.At>[iWNa!C["Fgr\;TGu?_\Q![UBUNIZ`VR1+9tXH'YM&\fi&91;%^:JBJa&eTq<$;K=39eYiI'G792SO(fQ$-lqF1BW#h!KIhM'YkqcU7$0=;b^XMN()dcMQVmV'+QHM'UKT>Hc3pMu<rV@P5%BBRO+W%G@s+H?fICoT999dAh/7+r[DeF!aJmWpNrGZTnV(N((4-#:%D\SCt$6p2oX5\cQATS(YUNrf@SVgNnp)WM"1_9b0\5!jLnqPq6T7L%:uuSrG_Oqf`:@79Er]a2)mCB<^nql6""mm?K;&&n^NMRHZb)+QT$$[&%\"eJRKi2GMRC:VneBs._G,?TE'&7Y0/^%lr)+^\E\!mB%F_)5IrAL\"\(I7(QkQTbp/<je2W#l3;77j.^gW6N8#,PK8SRO<rBc95_d@_Y>dne1(Y)Mr`_.p&=s\(V"^O)$*`NK5Kc=2PLN<?>%[=+c\&\Gh@3LE)?2DQht]Q=u*U9iOKcb(f0Y!-cS_oCb1j[#s`]pu&..hHhP'kRW,6*n4\?a3#GI_!RJAs;Ij&[AQ.Zul%)]p&)S%$!T%/*h'iU,9,pVP'^sJb@]Ah^#Bc/am`4#/MS[#rU7-A<PK3dZhrBfY11W`@bk+-**#1CNSAhR;$C,QQ@#"o<rVtG*E!iUagO93%:<\pR1IcZq",S+_k_O&q5P]#nqQ`&>_)pX!Y7G</ZJT%f01[Tas*eH>s/S0WRsCUK#jg4+U=85)A@KBuNN?=/BZ4"mZP)i,)Q\pu%h,fcpHc#^h^1Y'R^.'GRg4#Sr-,%3l2tlrQ=V_tLQd9F3+il'5%+B41kM#[pLYVR2\)db#E/,o+5H!cDf>m5VR*KC5qC<N+?,^-F%KpMbqA$VB?c;AP)_;9HGCO.]gKkc7_mDEa!NbgKDfgBO>'+J/!!k-b%n"^>(l515)3O[V-2YNT-T9jYE*6VX\X6!T1OW*=J[DWd:%@EK<M6A/mW36EUS<nfDC$n6PUC72Bh6LOBO>f\2-ia*=P+P;sRL]pd$7bL0c(nk8G+"PAsXVH*BLKsJJb!1<>*TkF3Y3koA9<Ns/%LmLsGc2J3X/>'ILos'fu>G&*VO7,HZDC[;OmQ*>-i$rn#Y]"R6Q9mb/;g&,+PNCu8aelLJPrhuYMp%F"E*5Q2QC`"N2fWHb9Hq`U%n^q?pc:*MS^)kIG_gR?+'1TL4kWY.^3a:L&[jUBU.6#rfCL=>I)d#CkpaXRQ:D^R%4)b9<8equ#BTk%?is?FqYtBuee4VM8/8&<g%",.)sHYE.\:fCqlI#=W3%Z;ErC^DAlgi3+!\8',SIC)?g.@Gm<+Ik*\PqPeX'8WC#YM8fO#TGt7!LssFB\fB\K)-<:QWc=F4UJo(%.F(/FXi>Gj1<$F)m[!b$@f7bg'AjJt$i_PW=c_c@p'ja<K$nGF;Q*n9/IB*lXp93?J<05d+6gcTIJt!79<iJSnTO$fUt9fFfl?%r%V48RX&6+A,^q1najMXjnQ1F,h&4WH(Iq9jW=/7)(U6YBUS0`PoBAIcafmdHP[t!SU,$gOe\K8[m_fqYC'iP7[rl]K!;G'@cG;5a:%r.Mu&FR0ndC=d%(!jc7Lj^t%C7MmaV,OTF=V6fU0I4r^-7(NY6OW@@%>Y\I9RViug3$he>CN&pEnG__P&R,:t_bka:?B!6_oNr<u%:7%2l@9-J*qO-N!T<h\qVZ1lCkC0:)79]NR!fKP$A;>S"_IW4(E%b&e0N"Fo9-DK,+ej-B']].?Y1Um@T87'm/9BXNd&kZk7+k_4%%+'jDFq$(NWPUhCk*'/pQg"b&V?t4$@[/Z$%B"^3p#:%$nl^(L#G0s-%ssr7p$@8Ob;1;L>>"/>6)J/!mioHMAHf0NSP;4Dj7"_0%IP6(ZrDAF3&_"18;Rt3aOg:=c/\VE25LD<)Z6HbCq?qT5b4/U)Kd0uiFC1,^OI%aqn_*9>(Vb?dDTh(\m2NS)35A5YJ>E%8-3%+i%I#,Y!]Y4OnIMGH7khIqs33O9([><'aH=aRd;THqAngRc/#mp!rK6]EUnWBtTH6[W$0M,^lUNo-dcdIHCC_;a#T01`<#)\7[Mp?Ac%h5f="H[U!l2TJX(8N\q"b,`oqR%-$Pks_>a#*qV3gi(L?3t)Z9HdZ!(^cct?pu9BI&LDn`MD*T?$!QSa<q5^tT3&ZF]g;c?hFL2D%G`1A5(!G"sSU0,N``p0@Z\J(fohRO[kq1GegYs9#/AC1(>:d#%B>=%G61SqXR_*=EDnuVC*A&DS7a[g;(ZR1EPp<cZ]f;hr9s!HU%;(<B[GDoW)\+bS+VV+AtC4d:jG>PB1?RV>)S"*%[Zid@okZ+`!i^YZ0F/+B<qhgd;g)[qU9tZh*M`Vj.f[g7u^2A5ZdI,2a/Ckh$%ZRM,%]p'MuCm1G>N:]^1[Q#j#HY-pOp:WE'>6/H/^*2naQ=-D5BEr%-&AIgMkT%4'Og.a,F*:c8[6.P_AOmN9UBu>Yk/5kb^N?96%GrYBnAGmk<IcIku8"@Z/MI,,,d>:Q1N-q`mlesc*9Xl-K#8`#5iR.&S$qA5+()r3KFGN@(6RXk`PZjY\alCZrTO#+`U4^7(o0:]U%.jY9mPlInPi"EX#=2\Mo%(M-TmqZ9;>E!6!X>$m;]SK,B=h@cW?#M&SZcPh[!M4eI\!ek7]Vg-ZrC%W2XK3cK<=kibNV=Ls[J/9o%luLgD]CkW=P4Pg:_/6q9Jf@]555`UUgZa$u.5--.>sO51P(ehqE6FHi]_Al5T)MF?^N>Q/r,:9l.GC5l4sbL<6Mj:Wfkmph\9kWm%ottY1or>KIs+W-D6_Eks5lt1SL8];6jCuqfj<[n]K.S6@B(JdERX8*eDMVY'\WmZA9"mpS--jqc7aPB'5RW75T"N?a![c=JSua9r%s6K^?TO(36lG&`srkm\-kLbK:k1K\2H[1*iHUlO5h;@fG1!Bnp,__]Ws6Bd.ANg&Xr]QI6KiYo'X7bq)rpN&e>P)=r^](G:=Srt]%D)VFg]pQLJ5kX@0T>_S_)#sK%$]WFYL^?XW?>S_gc0#%W.XM,LoMat%j\I$I$t9<Gn'<8f$+,M7#Qk)$FY?p_M#[DMh)];DUV=MB%GbKuY4*j3D%]\];nUl#9)TK7VTJ9/;D8KIAc2LC59sZG/!PdUdoXoKW*jTOm,(N=9iLpht(]X:uU*khG9om%]Q?R\,aJOT;Otq^n%R_c`Nh!g;B*BXlngJPj58N.V-J2Gi7_7e*ik56lP@r%ciQ/(YJ&#bM<^H>Y;DWfK<p\B:WGaYe_Sg9ECrZ@gg8D'isS!^:&!EZ?0%N>:R`j4MPU`A_79s1)6[8i`g+H6S:cih63cg&u^(e2=J=p;UN%#3hp+/UC0$I>B])0PX-3NBL9oO9)oVi]iC@>0o72C,86tbQSFh%6p&ta.T"B7bcH43>p:\:Ob`Y6!H-b05L5.H)e1FX5jSOV*ZP"p-eAnLE:/"ZQqfQaaa_Q:3Y5fSe7oH]TS_K-m<VlONKpmbK^5;e%.7aX-894]RXi8WGq$m:=Y2-<-MN#1T6_VWo#d2aiG^ATB6i!.FgkL.d'30$:W&m5j>O<4!k>pHoe#$/F+bGG^X#ebJRZtl4)PC9O%Z/gl1>D]ip6.=1m.nl6SFP=?gjnbS_rIj\.JtPG&jkC#pNbfgkkm@JWc/8\6mR;-g@kh7#2-1[Q8u_oMq_njRAL(qUl!'lmP1\<E%`>k!1ljYXfP19T[R/A`R-A]#s'qFJZLW0p%k%5O)!hP_4PBkoen.ua3G2fUmTHjAg+!fK4Dj)ig`%%D;J2&Le:rB[0PjtQ\iA\*$%Xes=VJ>6ncR6Bf\UtKm9(GgEqhVZQ&)&;eMbnqp+/T&<]C[L&GK:/c[R];D6)<b.d+C"!/r3k[#2/b4:K7@)&oEWs@C2D\+Ue8,l%3GKiZ=MH3CO6ouLGZW,%,r0SlT6G_<Y7$E!Y@?aFm$Z5g>i[8C0"<rIUPFj:NQ&0hrM!_J<6_"I^Wl*cc0ih_VL36(<nC[Q3`I&%%HKe$S;8;GSg`S!#]PP)g5elNdlQlapb$Q(3$gVL%VoLc,6Rt%#ds)^2@aA'cldmP"3P+mZ.qX-Ic)b,s[F#>.S$9PuYE^d5gL1[)%ggid)CT^a>`;4BEQtTi(J`*q73YAmL$N1MU]J[C&NBY)=X.#$&R?)k9Y;'at6DN#[;o!IThWSP-Aa(k_RVIhb/Pk?<U/B\QBssJu%7"0%')\'@_T#C5#9=<0*nl&Ak;6$.)A5+tAZ%aj]T9Uq'dHL(V._f4pX#F3:-gc#(e.WciZS+4@WA6V2!],&bhAA2/(A>*\-h$Hf%@@M.$UTWE5FUh,(pATtnTk8q8SQTf-4Fu5sLSE0mk^0\dC36h/I/E/bN=%2(1n1%h,@rC-g?;IIgsp/HC1Wrm#PCQMk!tVPD0_Up%e]6Am\C/.Cn"s9`T#=\mXjLh7@enj:7Dq[c[C'OGn#:=PfiDt^UAQ%<"YYcS[77.dik;MJW6&Xi?-Onb@grq2<2F*8;]k8c/S4ef%gg$UD,>7-qEE#CYfBCTE7.VU@2Y?llh'J&H*^7cQ7dnc)ZPI&E;>8@,X.R.h?p56'CD:cUk4d&(Cf\qsZrMF@C,PiU?%$!aX#JaO%gbo$/`<nP=Z7-*-h-qUtNA`<'7Sol-q]OFi?+\T)7;M7aZ/&YD/,'X`Yu3O1k$>=@hY].uVU]@>\p8=lEMKbX'Ou""*&gXaAOa)T%>MkEGZdINt1LX-re7=2Dhl/\Ul:IP^QaQXEq:Y.7D=hgodF)k'1]HL7j$lbOh6B.SW2HOu:qb7,cc+=lp7uGu@s6d0CD?;LB_Gp1%j:8+%3,(:S<os$&2!WcI1fmB%EtM,1UIO:Y8tNDdIr95#E5$_>gkrB9N[!@2gaM2R40.q9VX93n2C3%d]=V!g!Sc.OX,@n@Y/Nk-%.sS.lb9b,eFd)>D=J:_[Nl\)+*]NW#S3:tm;Q4#X7fA36=5,Hm?09E<ir#b.nlEj>;ZYc-Bf&19I#:BHHM&=f%rA-#Ce>XX2EtfN%Y^(sm.Bub"$5r.=qsZ<g-JbWJ\lhV_eZ.]hO14hlii/?&eR#VTZHkD#GTuT=7fq?&9BU$D^=%C$Q'*pVs7H/#QbtYdeU.;kbmoAE%G'bI)VmGp"g/EIo>NW+jm9d>S<kn@WX6o)*p=&>s=A5NXb4E)??MeH?]=?::]%VBHr_TX(<I"(/5Ouu^Io(#>lK5LYeUDg[D-PP^%neA\F5<*e7?%"5<5J7H\HaKD/IQFZ#MX<TWEWub0:LBaVRSV>iSkb2>G:5ocDgW5c?`3fTII3s.=>6[@1&<ZM0!p+Voc$\?5)n<`%Mim.#Ze\OcM%go2Pg?J6oI'Z\\lM"+W8b;K;brQj(<*15'_<R`h6Qt19?`JWNA'M7,%=VMqs6)gXS&?cRYdJ%W1)ud5NtKu:qnSc%k4S%L`cKsoqTSXbqQ&&i"u_K.H14Y%U!qqoLjt/ZYW,V3BM78H20GT=E)As"6)L\BpK&/i,LuL-lH[YY/K&9V_E+nF8X,cjiI311%lTcusj.HIQ_%nO_L_qd:Yu-]ZC_iQHEE]\GW_Bs-)N>qP-dm-#C,@u!^p>\2<\i6anrhO@ZspT3CGtIV:&V8CUEEi5Rn]>WdRJl@%<[iUS+\'oDb\jm\aQnZ7`C7ql)@[hrf&b-2Iu2Fm$2gaXkXBdVf5).:%Uu3;`aiQ_h-mD4k]!?HBZ1n@C_WG]TK?hG'aYXH,+3+%%g=7A8A`H7'mOQ9a&rD!:Xmjgjr8lsl/U&[PkWQ@>anEI"S(-(2cP^s<$Yglp5[ti>H#C1)FWHi1kucL4JQI=^<Z)Sg7u"#E@9BAb%/F>$7,p*;_]-+'K`!V3%6)@k,59[=e>b:k&I7a9pr[NNr?c"BFX@B/aIN*^CK=nU7o*l63>%6X2efO$NgV2`U]$B:b7(,V96T1G/%O^:(]4\jj7f]^]*W12IInqpgFj)#U2bPAs.]P)p.Ma/;lPTBA573f;qdM&[V.M.](&hmUsE?F&g!k/F37CuL[[A$Uj/m2k+TD$.B%^!pB+p$53q3R#4DeC[95r%T''7@d\#I&o3QBW@'<A<W#b5."p`T0LAMJbarsGq8/Ih"dZ]+VoKKM.Lr2W;4L3L9pOj,aMbJld&e[%W_>;Qb?\6:$bGu?Xr(GIijt;FaCJj.r.e3WKC5KL^QMBir(FkUY>9A+%^?_LVt?'ob?7V4aa/Wf.p.jHn'W5&=#'ga?'_ggH/!6b%6J4!Y8jj>rl1AVqFWfPtnd;aFC=)CJ`&qr/%5kSr\LWLo:M"4RMo1;s42inQ1\"4U+0!:545N>.1gUMNN9-lDeMU]JfX][:@ABZS%U@4`UWH+@=<X,B?7bEI$F`)tqY3%Q<0D*5FPPS#tN8?"SGB/TgeI%*_R@&ZW/'Hhhl38_:XU=8E[DC:TMi($=n&e,oSc5dEPrrWd%qJuu4&24%@\0/M$:g"QtMp[74FJ;fH'5Aa*.PYE$XGsO,"]a,CQC;ag!Cacm=BLnZcWZ:i+9QNi:MNr<gR/]=>nW86AQ)L[-\WFM%4gU$f7_A76AbC[iYKSDCq(oV04I/[LKB<tmrb6_hoVB(m.nW"=9.[REi778Dr'L:^bR4;'+OX9^"M1WdSiW([kR;3`FM(;@0CqhL%0P8cM/.S&^)[Y9]<q6Q^m1FS^/LHt'ao\IL;L0]#Pu6_>(k#/:1$>>LHQ'j_8V:5\hHe+n[7\[`PLAF<Z/!V8^!.("qOBnsd&Q]B%9uai,O%BIjoj.AsQ(RTEm)i&BHD%!kDf\oj1-aFD7+r2Hr,CrR%4`NpCoO3?24oj(#0dFRJfu&U.'RX)(mlXu'i33he#n`Cf+n-)%R](C?8%(O;-@9p9fF^kK7e4^!U2iY%Z0D)rS_TtoEQ``#1="kdD=RLTUplENf?GHJBGiZkC2h(;OE.J25p"Xm(ReVbfad;sOUOKW%A"pfc=k[pJ)eK)2)lNWgI:%>KD!%VHdO2TI+OT*?SB+<LL0Tn.f_T@X9(4s$ML':?%ReTmXZcNh:(<a6Xo45VZ_D1&%'JK>V[uLq%-.NL^i\%Vjc4,T4Y8&#3A7MaHj`\Di^#-En?'fJK9acfL/V1=LSQ=S'BU`Ot(6Z7,Jlal6(bj'\f1#M+XCP@[FmKuLctV"B+jlI;%>u;ZdLRU6L3nRnq&u5mmRtT/i`I:ra2-O8J-@ICM*FB8JB_V>*"#)b']K<n5U1(5+l=emej==BoRkdWh>a,`bMUK\&>a/8%hdf-B%-?G:5HRq\8Ng%M&IrqbtHR3)LmG].A@RWh1Z%ENQ1pm&BqdnHBT7P%ao1\%2A4M#SH)rm7Z#f>I%*2u.>Nohga:Gso(dP`D7e2r5%]K;91@=8>fg,\FTAD+uJ6+?;&P/spOO3*GD\?(kjDfeO<m_70-Fg@9kR'>c'qhYBCVP'+D.;qY7?9pnhE<??NnbYc$h?oOE2CJ(V%_):T%P:n@meoZs8iJu5L4`X!^OPU7ei_[tC4-7t/CQi3Z,#:CuSjUge6/PbE9R]?RcljmR+,"_8A+!;eS5AA"h`4/#BM]FTZ5M>M%qi;\pbcQ.!C>SJp?2@O'IghH;.Xl^)VjNXBh(3_0)Cdh9UT%Hg?uI$.Ml4QR7$e6HHTaWGhlWuj7l<"=]g77mg?+SFV*Y,$*"C/]%$:d1*mmB6nEjT-,"g7"s*"?XC_qciG8']Lm="bTa('j87e1=hP6`@2h6-HD@eR]Ho[[QZBbHi_G%rP.VJ/-CsiDNU:2Cb-2FAckC%RBs[N`b&(Zg=N099GU[7(7RaX),V=HYaNqWK>h@_<C"+JEGEq]0`1/j,hd%bK#Y[XF0Z/VY!lWi<o1LXY=F'+DTobpG+4"44+jZ(%57>:4IeP[HpcV'[QS)24,&k-5=$V^TTRVJp3'Ls81t;)o0^;@Ud4Crrl*5C6@8:akcGIIp0f3YNS$^[?0rX8[q-HsWE#,$cMEsD;%o"A3Y-JQ7\N1G_"B-H4f[jRf&o!?]@3"&;.KCcSt@K*$F((+]Ne9PfTppkiJfr@NVUnkr`ER4#V!AupgQRIha\qDFuAT%c2U_-07%<V<>uU$qNZetJHCEL3:hbUk\0U=%-151dD0Krs97H:&_::8d<=egA?dH2mS9*_b&Um]eTSCE?,Pp12F#WSj[3V'f!`2,/LK]%/S;%*k8b8BCrVQ$oRKkn@T`_HNTP\NTPL;,h'.EHa:Z9J:&[G-F*/h/(5%a^n3kldMGu<8[.(klBK+"U"ioNM+k?1[k1u3RLs\e65H%:%noFaC.Gg>.Y-W[R^0+W&V+,2*3g8qn(clA$FqJgg`6bb+3dh,Op)Z<uL/&gVVh5aI#XbMNTTc)R:VkEB,O"3%_;d7lq?T,B>4?bF%SN_YNA31<V:*2bld"80*kk*cmZ.5a]kYsIC"@4E?_OZ@RdmqasH#,-g:>q;9NA+!WeYI%F+*_WJd*PiSW(ZEA?IYs+^05H;0mIQJ%e68Oj+70KKA*Mf,%N)YH(6tfr+]Bc%j$O8\CO;Kj6DoP8R$V;OKeqR&)!q*3^C`n`a/;kh*^;2#j28=>rQ%":j*OV>7$[Yg0[]VU%p[*&o'D]/YEi%52(!%@4b5n7rK=n)R:m5^2M/U^K!31ZV61Ea_!h0UHk4@BQiTNNo"3.N-6dlk-9h$]"!-UHgih+GDl"#],#BnS+%[S^^0qnR)>\q8#5,pLPS7Du,C!`^[h('dkeGJS=ghUkNE$D%)sSm4HMkp<r>9C8:72*n)E5thTFn(/\8EPHCPLo#-Y/]qQbVR*sj%_r1!DRH-.R#Q/VZ`%a2OBN,(N,H"^P0d"l[JaF2a%`.]&nM)q\j,<<D^VJ9?)X*F@f?l:Z:rNM9)7+""8t7qPo>auf[=-tmH4a,@%(/1"h1QLMMLPaD_$rRKe=4tXljub.e]_To@VArL%i`%pt@L<5'Bb]%,$9<?m4@_Jn@LC$A-N1!`cK#4+CUlQNU]RemD`.9S@]O:t%/bSURMCPt_\58^:.TNh\2#c.6]CUY^WrXNdA3ehK)HZX^%B.f_+2rl5fH2$N6M='f-rfW5)+q)TET2#$7X\J@`,4DgGFS5!dT'!f%:1`*oA)p=1@F!<]9hTMX!U5;#iM2q\P9Z@%SHOSP#8N./6i'n,%dA%rH"U2YimG0F!4cC<UPXdVWLi6Ba^^ANS'@nbK&au,F?7XY%UCFR$3)'1>1.\>&7Ub.Nd4==YK_?$<bT\;!P!&^\^tB4'aQR_;\sX"t@QJTdC6@30SSeEAVpcr'ljhSbq[COt1A16@A6<XFio4K%%[I:[-M[Y*U[g/Kl2sdGEA>K&c)BA-(H"^q.)8Wr&3"/O9n6e5I;Z.RNRIBu),5"KShB<XPFZVf!-=hW\qnY:8/r&YRn=1L=C:q5W%#g32o1@OfR2^0dt=jCJab^2%#NUqBM?n:$<E?:kb%*c?/Vq21_m5P>oq=tZlQjpSYm":?J?%Fl[K)9M0#<L,0H)LeIcBuA<5-@Xk%f"+E2]gbhk:;kLO2X%1(g_F-#f1$93e"6?+kJ>&E,hEMMmPqh>2BM:BpgZhPiDdL`YKr2`42jS;3$(iP6hO]/3'_GT\c_]eiRB''%CAJ/VNJE^E6h*h-gj$?"\>'lQGA]Our[7g1^r)!W:+7A^cdhS'4P[(lVK&_:fSN^X/7.[Z5*:8I:Sak(BuDC)Doa;Hn(tf^S.)S+%-KHoF$+[Md*RA,g2nYrX'+e9Y4GN/^'k<;?;:D"7IGjjH49N)ggE<rbmnEGhmPZ%;GIJ_FgB5BVD*fECO30AFHSle&LdIS-G)q%K%2S@EJ/#18-1q2G'd;>g0N<?jihhL>'pF8)[1!tMk4o3p[OS2<33<p,DM`9U/Z#4MDqs6!udBkadXJ%E:CY-7'JhgN)6R=!35eNP4%6tq('>"#/Mr17=@kR1DO_JtB2qSEf"e/0Bp^'L=3\fbb6Xf!CADpO)-]fd#Qp%BqmeCuc&;K%PMJX3:RWd]AMh([22LP8*dN6%R"%1(6"4Z24;%R'B:l*X\gaa3G'H,D]<IO.OgoE9d%8DCF9HG09u\E!PWm7ml6Gp+ZQbr<X05c)P`3.%HTOba<jf'1>rT(!,D_lN!PP%M?pDIa/8/Y"]WB>$0G`'MkYd@'7aDQ"X60"L+2nWQmXaE(Sk_d\FABc"5+WaG;)uXng(=S!&lEIFTtp#`&ao=4G`kNZGrjrB5S2u%K$<ngg%Wr5RCtOT-*o8F5+-il=:(.b(JHa^HO0GcHgm/OUuHO'\(E:J#:/Ah=bR0i/%Wt',m/\"f!J/?F:SpT=A.X-9#1l^*`L+M%,qnV2?oPhr\mAp,HBQKf7h];I[Qn$`HS)JVSK?GN6Q]b2Ed=e?.&>CBenT<(LW.DCbH,XiYT'C,()g1>^`_170N'4LD5`)k6Ng.u%,OD@LN4RMP1i0F?^R6H$eCbmrh)_LjBZ3'Id;0M;ahDKPj7DRog2q!d\m"jWB$EfmI`XeMHEp\Ea7rNl^UT,>(%,\k7c&LGIfChQ%j/`Tn2oCs=VpaL<DiLGLDV];&-U<\5EXG*3d#uDoh2mBQX`g!U""q''$.d4X7<V1C?Sp^!A-go<G*M*4I)dW51>pn2],/raP["JX%)!/ePY@l')Vj;Ko/Z-[)RH+ja_A/'B8FAc2-JXCPp$G<pVqE@r/)7C$j>=oTReP'NVXa&u2.2s<7Qa<iZ.+f[+*YML8aK$hT^(sF%Ju2Jadd==3*eC1MdLL=@RSHQf&?Kh`6dr#Cku?]\S:mb<ZO-'fQW):RC08'BOcK`Q@r$AD+-3:_PD.GA5B[C&:9COE&OHstdiEcZ%+,6Xk];H7eb&a9@e?F%8IK(:#3]0!W1bRR/cua$2G!UI<)k'Mr\070pF/%pKY]OpCd;tuFe?F%`dH6KZe#?d?F<m\-d<'-?.65Am%M5F4@5;dAXe'N2O=?>9._FL<aZt.AOU?N/\fEl4P2([S:-tWHjF&"RJ*fSX;cua";!6*6AVGjP2FETL3g22\p#QAg%SJlj:CTlnd%e#C1(A2taXJu2JadOEJ.1SF!^L`qo#c\/1MO5r>,RSF;bVk&l%FKtth4KbT2X8ja@M]EGA8NVj^O'+dCS_P1hJTQ5s]:AXK:$L[$%I!$oEZL,!9*1j?/8%LBF-c\Mp&uh\BM1=%K$Pir5^mfn&Y8Wt[:K==G,pV+)p83/lgEl4B!M.r"V`.3qe]k2?@J&d5$pGZL1<Csl%f8*<DV+(T\WdSd9HBpS]'[oWqGB0-6Bq-]+,5DgbmW>bX)7UdF4#AS7SMlYS&<P1F9Q3/pA0K@VB`j7k.adHM=K.7T\MIVj"GG`j%C$p3`7Q8`Na_C0&m+XgT^fjd4L=0gU9UmUYRI6J2j#@E)duP=G^D_&gC5=).nQ6hh1mcV_.JSq';0fA6iSO6aAfR%J>mn;"+IrN[%CGLDo1kL8.`u!`9[+u3&E?YLHTn_f-^64IefE*,YfYJ4q7bWbd2)^]MI1O*q2>5ilhWaFrZ["p3Wm9c:ec%Jj%AaT^R#JDslN\RT%?)mDNKBe"kh"t^@?p2P:bXan/TH<Q)7]"='VN)?Ki7S:!)0Ro:blOL<f"-%n6O(4[7Kl2FSL'CQn`]BYA7j8r99YSr3tj;)02b5:%c\G[9N1!2q`HD+T%e67,=WA]uCM1dgNnUEWTi)VR^'ob^:MlFej*Q8'md\]Ga4&!6>`51Tk99Mg+\Da;kN$I0\/&rqW^\s1bZ>Ol%.4@oS^_&N<%Md:s5iNON$#%fiIq"-ohQ!66j6daHd;F]NU[qM.Pi5AA)CIQ5c@C;\aSKu-ZO]iB1fN7FGTnk@hW`ck42[U%QXg(<%E^YXDrHtdZ]=7V@1>Eb+C(BI*Y(:]BHN@9^R%pLk)@+jM)A$s`#$i=EZD2rX435Gu!,Lg,T,P<>^c5E*T#7[5].kLK4m0V%qEti&%?!V8b4Z_151(]X`J!^O5QZiGD>n+^ta!Ld?C1eK[Z;^-o@c"S@c+l(i0u*dF.IL/MU=)ua!/sK(8>Bq33%p_X40%XHB.S%(N`LnY%e-803EG,&OH6o$%)^>ZrH+d+.E=I"cg;=%\/<AU(9GhD50P'a,ThcgKU/mN()962kVe]#HKI,7Q1X[;.mZEue4[dr#^05&,1_ln?%YNc;<&K'-t@&#4/*?i</%ncRemE(T:L3/K<Nt.14,H0f((g#35SHr/7e?^dI<>=*%]sbIPBo`r+!2a:M2\Is%kQ.dRg13!d8$ef?%h91N2Y;SlER=1&lL^FPS,M^,!>'rrSa'4nka=4#6*mS;#8)"&:8l9l.4,7s`PTFqP4D`<B[JQqgk"_(ZNppR>%.?b,qaZqCi@BmW%_\VPKRi&+^C9dk"m7@Q[=##K;)m*(?6_R@'#g`&\hEHb($Y?'E7igr'-S*Fd.#4[F&mp&e&>%!u$1,so\sHSS4=0\s7c%3=ZVdb#%=RA^sYWI^04p*`BX[X[aC$qq0>,,?Z\(1>_DUBSGfOB<6K_nqu"MK++XkDg-?"d8IC\huTn6\9`F$!=E^A<1XQFZ.)AFFSX?<j>N%#&7C[8"V]]0aV@H&N]`IMgju7.W[fho^'Lt?'Wl6cY]t)s2MN6MC`@[lflf"ba&SLds_[]2C'_ee>8-I+LF5<f?;teg.HsG3\`E`%gTKpM.^Qr0!:%(8D5@W/JZ2SibgLYSjFX66PZ(&C4<BdMdI.\iVq9:A8pF,LT4kV:Lmq8.c$`mgn(TM8Tn!AmBu*nn3i-[@5&e:#%q.X.-eU:pBltYb_;-[EXCs8nM/n=6_kg]l,)n*SKc5+(_$-?]?66cqf(Rd]II*5GL,nd>98b=Xc/6`@3h,O(0_r=jdNjL>fHq+2@%G]F@!6l*[bZ+X<K<2T&ZA]-d05gA`:MCTd5mm)rO9J-O<6$WsgOg3I5*4OcEi(h1&%c8TM8REit-n=T]HVJZC+.ouA`O"kq0WXQ"%]!*E?BPHIudIl1CAG;RA3E$=ga`Km'*/Lj\.+PBN,piPe!m$nCetKNR)OGY>iMUc)'[URpasiBmV*0Gq-dA:Ek.P4(W+130aRU7M%B:1cQZ@,ktG0mXCPmp_LGTTM^I9<'C#!#kXO^e4Yko<*rq*qEj*Or>2FN@DI3#&#_%&!,M,T9Z"_>nV&V,e=X[5)5/5S\Y:!@U5/%r+TX@"V9.Y:k7ijKN<Q_@o7c^V4rSCh!p$I=sp<u5bf/]9X1?iJ.d1nndQnbl7`pF;%0+r,9MO>1l;<uh,fd=m#LAlUjRr.A32t(%T+$kYB1_nuX9sH=P](J0[^.7@"!)[IEL_YV3_B-@2Usnc1FM;=[DMl2;EgZLaCe2hB/"hs#targ<X%8-RB8k03ti7oJHfn%ofGNW%.%JoX$qRP-`J-E2YFfWE4'DLlpU4)JlZ]"odZJhRjJu1HeaLT3:cit$oW:FuReX^ErNtL=+e@7^LZe=dZBA#0l_j1h,"gmnjn7Ah%j>rJj=!t&@a`a%;="CJHrm6n<MduATaZH6@l?>o+&@K0"q?'Xg:d$#+T@u-d7l<LXYFiPLR<gDt3H\('S@t01Q7(hfdm*%=9BJ8*%qWVYc4"LGuG$[C]<EIuaqXD.H.UH&:XF@)0j#\:QIRmd0rEA->mi6WOoIj1^8?JfOp!X/kmN>Dgbj20e_WA-#a`Od$o(jfki8e&>%j>"7V7u?b]rV#8Xc]QgT5H>l>8a"1\VseRV7AQN<f2(&hW`f:bENY>Hl_dND,/KkBf2$=gh4R^54F-ntDhekEa*0ia%p;*1PAq+S%NN@SaU,h?SH2[B=Lc)k_&'X@;0?I_Jq\eu$l"BZN$S$"s3);5bVs!a%^Md.t&KI@n:I/j:-9O=2ha(!UHMR>2%Ak@^ofGN)4p/Cg%hWPE\H2S4G`@'\"Vrm[$cg&OoL/-%[-UOZZ\D\$uZp!A$eAN?/20NY>5Q.[4VakSJH2ULY]c,#YB*@sTH<rhM(3S1(n9fW(TQ$1O%E]:2Z$"/!$X.M45ZK,'NE6OM`<^5t"B8>UAds(7YSmob&p!\,,;VI@qc0M8c04Its4`TEhkOgpQDL"KR^Ou1$U\"=R):rb,^D"6b%AU47H=+nKsrhR2UqLTl?PB^hK5CGeuE$CpAf2"+l?*DQ6oD7\W6"t&/f$j3d)3eQ)bj-XGadoM^HK\OlrMc7;:]GC\7r]Hnl_f4l%&4ste"sK;>o!j/!7WjoS]Bf!\Lato6A!*7(n+BAdHQ;M9Yf3o<NtIh:[l7gOQYbE/D+a:@-B+?s@kJ'rd\6A$V!!aC&RaLr;4lOU%/`#Q-c)C8\ah9O"(KRRNP>CopLJG2C-PA6ti`+Ut?<h]u9`2K`8USMKSoe_4p%02A%]XW]A>sUNPblN`O&`4>h0,c0,_(m;V0RRb%9XWYk5BWN9KW+36-;X;!VDIMWnaf6+2!JB4Am)T@\!^rmHG')j:lcRqJ/Zsc5Le?A[8GuFPA@S;oJot<ggbT:?J'%oD1$E>[Oh#'%I^U-MEnE=WqfU:]LE5MX5At$UcA?&f[bT[2dak$jTPS7mUJ&Z&3ZbuueXq8]?FfGoGEVR%7mL6=Wq2"/0@I4WTIKDq!VYY3YML?'%[]B.'(U)ns)FK\I93q!n0sg$nfTE"\KRAqKf?f^TqVnNn_Se^W"afgMjm6Z@Ps[Al#LT`S9U[I*DTc"uZ=pGmdG#O.Op^-oSgP9B%iEVT`"Huq;I0<U:LID:-(5uB1,!4I(iq>sAQ4iGDL_H;l[2G1baf*S&rE-<jQHU=11OE>YWnCR7[`tCV?cVNt>U7P-J>3U(?(,8e%Oos-F?GS.9OA0d];Jr5$AYGS;B6OotB"lAVnZ:id(X9A0Q>>:45'`#lgU?IMenR_lrI-/U>k\]7]8%Pk4flG7OQo!;pkTEF%R$oP%COfp8TrLKTb6b`W^;)3$l#j"DN;j%h4FQ1B!\XQW,OXoRYC>Gc!Dhrl:kdagYaLtl^@4;mcr;,.FQ/=tK1B\=FN4+]EOY^n/j71;%-6)t5lP1M8UTU$I+-c_e#ERW;/H;A7M%?E,=5khLWCq%F\7HuP&RKt(D=artIGt>[>GJK9J=I1%aqY)"iB42![P=P\I0St[,7_&:%E>>hg*d@iN<8G++%k=ORGeUI00IBcMo])9W66#R)9*+LYdDl[0%S4!DVYB*uoB3FU?!'7c!lGqJ8^p@`:'_OQ?MSRkCd-!2'D!U'%9AqI-^<1po/Q'XL`)@&FPuOX1A,.n\e^k7dopKXZW3K-T22;"-GTk\J-cUkL87S(RjaM*P0%Pt9q0ViL=hh-&_0\)f1p>9slES4s%)GB7;g(]mr"Dq':2_+.iJOEfEoXMtLPD^A%rX8$Ff5CLFPJ:V.YjI3Z.4&cP1JiOiM11$<Q=g2;I0P5q5-P#e#2oGc<]LAgNFU%X%ea.EiMcpNSR7W`LMlED6BGOW*ba]?M(k+,E0=dDr^Yk>97*7bVkbJ8!-g]O6VHdS6;/Y-@DtEm:%a^9:M]d4N*5D8!qA:j_pg20r%Pg?H,&^LjOI4s/?1"cWsK8lKOfC.S+#I@8Q"IA=fAeHqCQOU6"KF`=Sa/qbVDG*K)'"1(!:cd^s]A+P,#P8-99>`FAI,<ISTNFuB%.*N4#d'NhOI=i;B6+aFcrsb`[HG)Y+0&:c*QpHgmV\2j\]3eJM7JJaREQ//jl;G!p$/SL;.nG"N,:UWL/k&mSgQr;\]`^.8B\Rt+%#T.ESA'KnRm/p^`;0D#tVp1Z'_`q9J>?a.;\sdb@WVWul7P3AiW9$@;p5Z3t9OR;MeF8o2-'k?\1].k!E!#eAj.\@Tk_b+V3][`H%$"e;J/qBQpS8-"2MbNY&hnTrdPK27h5u-c;%G%>gSYhW8MNXj`9RgSdT?VQd\orb01n/L)jnl2#hN[;rKrh8j7uf%/X)18?5R>U8%SYTS^'5!#Mp^i_F,r<gM>+3o1(Qi*L<GKW-aS.i5:Jt?HDRNT+C^MDt*aJu=63@R]R:=`K5J/G(IH/=YTIK0&5>0J^?Un74$8)/7%A?<Pu9h(G\Pi8A4K[lW$F/;>7OYTj)qN<GTRGh)^+T*F>'d1nm,I*8TiPVL+;3^jsfNGX&GTYe/@*ch(fq'ruK:_-aQ$KhfP>,q2%4J4-I^(GTc?f<hU+W?n5)>Z?d[FEd<4KGR'VUA`4B_QrlkfU*:$9;$/RS=AeYEAda[sMa:<-PVWUC,Gq?$D\ShtEf(i\T6rCaqeV%l7uLMF76d\YWnG]c.mGR>e5l7kDRadCS3-1lV&V'qPIWZS+9QmDfZO62i38l`SRJ\[oB,97^CQ$Q%nd#+Z=Pd6B$`JGHA?e0^qfs%8mHa%SJB4[iij2f+m%41VjPo3$gZ'/e9,Ipc"oU5UaSI^V4GZLF0\*U+8BEEd$k6Y'p$N\ekHNR!"j?OA"0c]mBlgBC4'Xj*E/</%!aK>4%3Z1+GI(I-lb4nq%otZFD6X-fO4cmYZEahGFtZm99rd+t]F^2]L]C<o3>g@l5!fFUk"`MYoL_E",SsN?q/t^QT\/F]#A!Xl%+K`q".OBaG!jZ[`EEZ>T+U66qCYe3*hhQ%bpjpVV\c7gATf@'#eq0+)osLIZ5)FS<%ep,H]tdg\4B@T.T9le$)X4gc<Fbi(a8Q7V%'a;GWLNcS(R>^C[8@GA7QmoB"#F&dG"0s5t$V>XqHuZFGlNaMJ9=j:$QHborI`5'mi&3hOC%pV&^2l7:'\>?@1@a1S\MD'T!R^GZ%m)t#(1#N&F<p_h`Pa_q0@&d!*;U%+a@R)n2Pi7JW!fW<mR+I?`P=K<jcW;\e"VQ*>$]]W4@c6Zs<Ves3,hfq.hFS_M%%5oaL[mN8%(^+<Q>J[(t@SSB"AIDA?9=-,EW-D)X4W4]]'GH(#h(.@3l_C/5MjGEmpShotH7CcE,C^AB]FJhkp@?(b$l,=W&<0`g8hS>`p>er\%/tm<_he\2KOoO,argFC[R(WYajbIqPneGo*b_o-nCR;o<b?`L$?Y+Al(e<:_Q$eiSjhaP@aY6sj@4=#Y?Y-!Qb=CZ[pWG/WQWrem%TpT'@1H4P9efg01*T3/Ol&CtXB'<?'0BDuD;PFdQL(CfR]+Cg"jYd)72lHHr9q<++-5Ug;,!>cRQS)MN0tp_X(OdXDY][rsSb[7C%`phig,f0SePB$^l*YI%'o#O1U.3o^;RD6ZM!HsbL$g':55nn+]Y=2E0o?1:F4th`"$Z20t%7N;U!W3[G#FR.rBmb@bY"U_S@nsh"%aG2Zjlb)e52uVYc;hIjRSE:J)g(5GJ:-sD(HPNIg&N7*R#H:2O2%NcWG''[,P392W"\&:j;p7Y$q$4Am18&*S!'.)t"2&XIQ6ObN%<*s<n5i\&&"PiJN`H.Di([gabq)]ctatK!4b8d]nm-Y7E#q"b6\21UkTbZc*R)['A7kQ0W'`%E^ejAI#n"E8jX=mGNr]/(T@l%?*%(WU("&0pB!pQhl_b%6R,fk8<_MP?A(^3e>G-7Hic=EV+WIu53TpL6-*0*BhTJ\ZX0W^PCh)\8?8I"uoK.48i%NP-%=3nkZ>m2``o%`2meInU"5*48#<r\PRlXafk,Pe<:AtHt;8XVN[U,RVsOG5$ageM)=Qg'E'WP!kJ5l]:0gghK[Jd2uZ!eiuE[1b+LrH0uarJLQMB$%6Q0=.OJ_<,2[7fWO-Ii_U^1.,QuVqn15suCBQH?_fQ=Phn**a\/ZN@tnY.07`fUtqb5+C'[Kk1mO([,#pb%,7Dq*"a*>/b:I/W;;%F)Gb'ktC%^'aR7`8>0p5@4Z4B0&!hV4s2Vcm-[XF5jL>LBcShV31;Bf`1M$+1_tY?r>eDg]Eg2eq`BfBZ6diGrf3bACa)[P4,tY"%1YJ1Pj#EJtNMF==iH^kE8+W\3@9SJEfchsnQ>j3o]@4aE;$r?'T?+gsrf3bA,WtJ_3#YoX0MbnkBJrp!f+:TS\9Bsek=3bEU5\]O%?UTfs9lV.)>q=Bhf3jtlGlkI2BsRlrM8:/@ia$pq&N__ndH'p(Nom@\)MgH'+Q?1n$EBDl$QL`n5M&MS3#Z`QSu8-EU\RBo,"E=5%r4Bt41NG=^Ze1PkcHXa1]D'O!^sPh62(@qJ*6i"mPL@b$d<H&3>Y7'c7rsS.9bO?_@?@7pGE(7C$Bc9A'kYZP,m["^bq<4p3s1d#%GF0(`Y=j04*P>iHNV:O;1q3o\;)DHPrSW7b73!RU_2>P:VtWM%IDBG+G:L=fQ.Oh<IKuSVMp/_*U87"U0?IY['Om^_]m3-'o')pN%jI;0g]0]T$=lMB#0.hC(L"I"9lt<M`.TetfD!%cBM/%DAqh6`"8;o"K*-en5<,LLBXJ80Jh`$Xca`o%DV"$9W?bN?K>@U<WG;#NL%!JOOOkX0o7*!j>sJp9C;IXQ/t'NoeK26Xp2<$&!*Qa%\loJOc*9K&mIe#p0EBU<"o+!!fLBTZUin%4CY`*L=AXp+,CJqt:U"7O]1%KrPZ\&TXXA*,bOg6&mN!p[*!E$Tr_(l+oK?+,9A+j)#>42:iC0HOA\hET1-k\:2>U!Ih\XfM);H?O&YP=+X&2-JfN7LO#IU3aG:b%N-8[X8ibKPg_Uneo/3!$<->T@Vl%FlkIO_G<$*/M!b/dDE(=F>F$;;I)\8E2Z4&Fs"D`Lrc:"iq`mne##[1'M6_giql`KinF>muf%>@*@+h'/Zo0Z-IYiYE^-:RPN$57#Q=4m`KagGed!JASd6OrKtJM$Ss5!pcPHCOSNO"S7B3@*"hN/(["5DKKnt+d#.G6]"nsg\)r=%6NN:>"u!36]2rt!3Yt:Z]$VjA(.#lXiRBasKdJs]1F;0@.+(+\4\lc/p+XpCF&<1V+[c*1YKM40b1RO$^9'_50oeZse:;\EOC68e%r<n+aK7p@R,[E845&1'77uCj/c(J2Y+Ej$_9`btHi#oB.39OV5@U<[sN>+ed7\_cB0H*4[ET1[kJE3tS&[@aQOa#CuD9/R*o0$)?%mBKAlO,`=aR.l0-5'O;d2Y/k:Si>OUoWrG*)7q[>mQNNs4&%WLji"Po;9*T?TP*3t[`7940k1Tt[VG>.fU>CRf`$Q+WS73ocIS(n%.;*IH_U]tE%gZ\B'=LC.PU)4T:Y;*eDZW2'Nb<.pmiAjf?_at,Sun,\aYH<B;jJlXnhK"!=d;p.G."q$/7\R#*u#U"+laWfXO-<T%lmh'_1Hk;Mm"u0Q70GKdUq17uGFL7,L\gYjcfXW`IA<eihCn`JVh?/-p3CL/`G18BR)0OJ*+EC7nNQ+HCVc"-`"]ht+QA^*1tE]^%l04?@;(j.E>&B[=Nc;YqdoD]_p+;2CePkaR+YZ=re7c5*ZYB9h)@;<A%D8?ZT([@JD'u(ZiFnS2:?d]WNU.H];=0;^D3(gf9H4N=%oW!gaBB3`.)HRa*cH+B9TAEjNm>N#Z)1RTh?]94,G[1sN'oBTO^)2_@-JQb'([VIB"%FAoH"hO9`DB&P8GfBk+gg"V)YcO+e+Fs+%=&kY&E%cpT"L^1QMZeoW2fchuh'M/^fM>f2<15!F<]t$BPIBbuqnqVIT=^7o!c`re^Hu"fEE7dgh9.h4"!1)kO&Sk]NL-sqGrF9#%MUUGW'B2g%=V7.CJ>6\C;Y%@Cj_/[a[J?[>AP2CF/!pe87D5^o\]D]C[feFhd]Z$o,8K=h+e]Q-V?q?"b08q<OK'*"G9-9D+a5)$%2^WaF<W#10Rh35U@*X9cmBO<@EUh8S^#57q>-N\?mC<+4.AY#YC8,j8]DCVaHadO5n5P8]gW+G8h-X8,;5r$*Sah8>1^>eN<tgW<%gfRu)#5B9?_bC?fLL7XH!g[uWdnd()Y<S%r3EZ\ApabF>*B_Dii;'`W)"]dp^<m]m2YD7&i^nJQIUMIO`91k]XJQ8XX;HG3aOk1W%1%,im1G1$iia)_U56cIn`.[:,c9=r\_2.6=>1]c'n>j+mF,%*7)GM&rnbENe<ERWlDKd:di$;R2H\d_,l%$R0V(aa_oL\KKM7[#A%<YXY\q!9Uh'IHM^UMGkm)"/l61:Adg3Gs3JQUgUM4A&\H-:pV@DXh8f;ki`=asUBRMg,G"4tNcU$LQMYJJm@6__QsfJHVS,8!R:B%_co?'p=r_a17H=^PgZcT_d44?F9KnJ+R2>)7(k]oK0jKg;Aj?HZN\RboThc1YT#r=fCZ$N7jhbDT*+`&GI#.IGeZEWFp0``adXA4%`98jY(sN)E>62ibDY*6Qp,ba6l3RcJYHO2E/HGjM@UPFZ&@PW5]@\+'c.7-oL!a*+5iRL3`g'YnF[jeK)'%hoUW2<=aP]$`%-mO8%=PV:4%\)cq$kE/rm'*ublh]4V*leb<AK[0gs2)$nZ]5!i@ttVN7,\htd$k5r$Q5b;Hl0Dl!F+H<6oRAOnEi5ukQXS<k2dk_J&^7J%mV,?Q]pkJcqH3DTj".>]Gt%m!r5;`kAam8si\D+33A-\5EPf##AB9I9\?<o'^eV]IEm"0jU*IPm@]1`ZW4bZ$gh!;ZT'F3j9hXg\%!]rlR]N1-J#LS(`#8l7F+H=\\_;SigPbt\YlMMtQ]@)L9*l2Te@9Z-_A7*Fi^0Is:*lNaC.%7P,J"q'CR1+rX'_md*&bSId1?cO<%JA61fW,Y6$5eF:4kXs_M'TXYi5f(upSggr?VV2')a.c,Rfj;aj%3:Te!L8DLDJCJR7S<J^R(<9",lD&XjsI9RT$*nIp@U"DgeQuj%Ku\MBRs0;:<fki*dT\%*O-T.+[!MY\/m@Db<oL=W<@ltgkM:1&g7?oKQc4t5J/Gekjs(9;!.JBsMK3b'LH>dFk&)A5o'fBjWJ=/f%-0;#)&T`q\%^5JU$Km\2N?RD7G_4.8Nl65Dl"@J,E#6[flj/4uJOOLI*bKM\omr[kfWEUOV@;D\`bq>B0kH_g7W4ji9c7ud>G^uu%HeN8iO$H*^68Mo\UA"cI[FHfrYu;Ah")8TBYU:o(#1P1`/,(Jr?F>31coMD=CTWli8@=*5d;:TriA@8J+?@N/-PChladr!-"(u0t%"R41k/&>VQR3E4Kjm`BT.I8FOTPgiuiH!cUe![mo=2&au\22fM?*7$MjA@QT?NdI*0C^mQif')$DdJnG/I<#N;Oc`d\f\T/736):%NrRm?RnM)"^IXM)hD53dOWaX3/;I[53MR)1jVbN.P%22r#bj+!d1)0WEQ_:;DLgf(@]'jp!6P&k2g(jYi)<^(m!?ULM>(7"#?W<]%#:I=A2KpAF*EGGTDM5Z@J#-%PmD`]6A!Kr\/aFOEP0LPj(?;EK,HCJk!1s)Vqj0[((59gRC.W%Q=qp-I>%<%*Zma3qhAbb(6Ask$%,fk;N#qD#2[::48?lQ!<\1Y]Xbfu&3l`c=:'AIK9N-I+K`A]^)r%f9X)XXW+E#psk<-@n%S]?jf^2PE5Do(SpSB"!r1i"286ZPuD%1cf)PiqGmXH/+%$oA)*@K9,;X.ia`eDFlfTm`LI"!hj&>N:V0mB#a%7Ykb/XhNa$+N_./(*,377/Sj+l_AMUuagc.kB'^F(=_lfV%5[Qki1:7`_IsE]7EGLuZn]+*R:O;?7YkH"`%.:pXe0[:^cHn*^eU0k!(UUDAApjF,'9;u+De3__"Bs2MR'i9,$3"ae]b7tqas.-k%TAJ0f[%MAgKj\hDR5*HPM*Fu'j@%9YkJn*\/;0LD,kgiFGC5#g3jC%lJ7o4*3>tTLeJN(7_tCfl]:1$?%.hec%"(S",apMMkjF,.%1.ghV$F]J0i-dY=G[I(OJ,gahhcW\e*tfLSTSRqfN8Y"E)PjlZAJp&uj4cNWYJGWTn7Ud$lRu%:$;K1'8r=X-hu&#Y0%W1tDDacd%NhEFIerULM@!c4SZ2;cs%g1aUTt\X$PK"%4!NPGcKPbLmIJ$\IjG0bgpXAQq"$"8HjM(h:@VC93AL$t!nWj^)<]O2/j*Z2sKsJ8h%^GWb*h&;mj:*^(1bda$GIqMNnOr;!qq+Gdl,f8L^RZmI?NLs-)1YMc[S:oKShN`S):;Z=eMa$lZjs7Ubq7I$>PobHGiA8&;m%Bur%c!2sE75*jh@P6s&KBG-?E?<qcCehj5%4kf_V)\id2IokS"3jC_&iP6DLAVO1<&@";*Icu0Kc#$^:eMhNP1,-Gl[ca>$6S79G]p?s%((qd+)7]BKWCGi.90_%,3Yikr+o)@W+=<RT*TRnDKX4t"YnkpB60&piK*8o/R]cLhN/@g;676:`knq^jR^FsM(s,nkW^ai+^3Ss+%(Q7aJ#c]W.c,itB"Df0:.NqY7?4%csWLPLK03T5!)FJJ[l`o(YY^)-tZn*o+HYXZQ9h8=l(E(gU;hK%M4uR?JPZbUYg`YPsVp,NU%hMJ^$LIKDQ/;EqD%PCfJE'rj0516gak%FfjU24_;WO'.cA![R,,2A%HF:VlthB\/?m.DdFI2q!B;2,2..a"Qe!d6TC>Q@FkT@"C1%G>[LHQGVUlj$pW-<<gJR_E_\.07?ekXHu*.?J,E`V?r)M^oTJ64P[_B(Hu#702jJg\5jTKFTc&k=VJsCn5iCa"o*R7`.QJ+GuOdF%MsXVY<E&tl8>?n`V>7(PIqH()V_gGss41k;:MFO'+n;'dpF-PeD"jG`pF.]8@gCdS*.CKnRK%q*c\bX^[G'HuU7M=G)[M^O:@"*K%C/I*gBVZc]kbiN'd7?QDI/@N?kXT"VJ2Fuqk\%EtJ_3eK)GUHCqOj,O\)C:sZ6`micZ@RD6h7_rHq;P1e##TTEm&OLRl3-eUG[5W%Rl7[$2Nh_6kaOJ_OEBF&Itc\mG;SiDq]"n!B[+@5k,^LYC=X@MNGI3g5U_Wi\)$Vi4]VJ'pJ`kX>*.G5G>/Ijj%Tn&8^moqHI`W(%IsTTJ'(J5;^(;#4Mds$O82?]ma(;g@ilHpW4^8sEM8$/#k**c:2$A=>Fj3W#+ELP[\@iCZL5omW#CW#Vh4/?"g0IcWC`c<'Duhck%C.?Pq5EP2(AmG6>UBc_]Xup3MPl<YVnq:`kW(T)=Z]LHs-+YpG+]3u8_D[0VD!ebRVc9`-890"GjQPc%5:8KWj!d8',b.+D1$H.>%<qPc*=?rq!Rh^Fmk==YsVkYaTP63)C?*hNE4["5\BDFgZ!=WA[66%#3]A3%EZfkYT!0!ftVd=8>(61%;U^M4VM0MCr`.\muL@^5b%h(72`'"#,%5T_r9(:N3f%#cTM?bLRR/Jce$V.pbR0I'Bu//A4M$LD#.<kce8MbH81?C,=!f$l-c?>B+7@ESmO<;K)nTF%@D2of]#%6'l7Y_tGh+cm5"-$jSbU7":Or/i\<,-JerCB&)bFNBr;m*%rAZhhDCl*J$=#TmdLY&[]T"fEiBr0W7[Ds-C_)pW-itj>b/M(==^*%a*EU^-JKEo.Q-;iE[%-tX\r(]^jPKn\&rgSd>dc.2i)9e>#Qj04G`u=-j+sd^To,A,T$FU:(bYBOdnhb5Eb5bmkt.FL.sYD@`lMb%@?'Lpn,HVP;gMKe]V1AWXX)o60(+2?'9`*lg^VKNAnlm@9=_k#hNfUB]16=,%d.<L^Xn-#^&rd6>o\7[f,)H27M.#N!K3RsZ.'S/%1<"UKM-*NV[4gau-KEd/Y:2dl).li(=)eB!/"bH9iF]D^U@SH=O/+o#6Am7ch/XmaBq0X4=;cf&@D_b7%bfZBQGkrk]/Q(V._l-!%h*1lnGm@bc!g"O]D6`fXC)BZS[0GKF-(mU2cMaZ%$o>U;?P5:m:'L-AdJ1if\sc>_GrXqVMfFI2@5K90$2rkd#msfLK/$O+\5UpW%!JJPiLL+/9lKM659eIoE[7a/+"lEU#?Wr>FAa2d.f0.neJJ8e&0.eKTeC6*&Vhu&)7g:@WcM\Ei&>aQuU!K\D:s@ba*uoBnbCaL?%ps/[arA!d^C#XVXYf<d"A35F[=uHt-^itB(d1&rHT\W,W]n;!5P%]jPEYP)^pJ1@7'-lCs==H+j_UO]on8[1oE]U2XdYVC(`bq&r%-)-6S/(A,]8sBmoV(tNATZ1"5jA&@o%mK&8N`+*_7d&bFj.Mm8)Ig%JO!MQ2kO"0K+Oh9bMcZc+rFJR9Roc$*bY!^hMQ)rZ\j/Jm%X`a-/%n#Q3$?4N2nJdP+G-7L)Amg4AK==!X^`L)Wm"_#K!1LfbeH&M<0^Hf'%Yp&8^2O-mr"!2qOejlubXp+13,t.JQ69Smrq)AG%`.^:N5-1WM8NcFdGKCq0.dZ8k-fg:DSsI(FICQuGAE,9(d#-5(ZA5_Cih*:kd.7Z^9c7f^q^63>N((V9ADu-+euK5%jG#tY9"[hW%-o*+?AR^uROXS0ZFOdigd\48b#MZaTE4g1Td.mK<>ka9:.(?KSL4O3C6:;GRI*AOSeZnJ[Ya&5G`[XJuSf!8he&G"m#Yqk7l5TY?%9LrG>X!MIARDC&<HtFA+)M:D)m*%G(2$V*('`ZhDB0)UI#"T6+r2K!!-99A;Fe2Ncgqp(S>SaU3cO>7aq#*E3q!gB2rmp#JB:&L"%K---"^G"+!aTb!!+8[S'<0?6.]Y6Tfp^sLoF>1+inP[Wi-]+jsB(5EZ)#PL=pY/=d75a(H`2LN@f\D(6)>nHTS%89S%=X+ofk.rB%1JTj&)@!scomVN8h"aG@F?D"oD0Z92N-THcK;:h+0J"Xqc,#+f9g>SE=k7K!<d)`8CdAWYBPc`s'\bA6\R8Ci/6/n'!^"gKrKP.H%,M#X"R/)\L'+Q_\/Mp>ETSjg*9(\cAU56^WJ29(j1#VD.B<^miTo=8(lZ9Y5m\5ZNoArcB-B"rFXJ:7[2-FJOEY$]qTR[6l:NHJU%/C)lrb1L8%j&AS_s04d^PpG9=rlQlooL^G)b.kK`'\>@3l207&Mdi5ec/NYZ.@!(ukO_DI(![t8b+CF*9QD,TnLp;gr&3N;QjY7O%4IXip3+J^U.$p4`:Elb)i:m6sJsrWkig"mJc<(`kX:WYfMf](.K%_8;[:r:S$e\[@B^(fj"G5q7/ECO6a;P]YRi(mGNeBikfAff$%Qm>+m8(^?lI^0RjN5YpTbY;/%@PLYNQdO$?,+<fRmQo:d\dID+SXb0b;GK4Kk+.4E.RJ9UBge\o%3iN@d*W_)CPFGcqZR3XZ9jO.%RHlI<iu:GQ'q*79\3tTqrS.j;1k^,M#>JZWKfr'hRh@WjU&cF'iI(%1W'4</cmOqum`j`Z8o@0u=[ia@(MbcLW_lkCeSOotjgE!h%r9e$MT_#FX".A$e$UOqu,X&^X&<]53C<SL:n&(25pa;-a\gG1"Q%=KopF=?K,_1sXRh/rq^7!]2AQ!/QcL9=T-m:=CYb>GkW^8o&%I(>$&bXcjA,^30"SkPKBi^o/O>g7aXk(5Js1TJa57\!DXA%N9TLAo"ID>Y-NU$MiA-18SQgpR`)IH2oVelj&p245Et9"[8t?hqU7%i=o'&g.VC'Ka2M[K7[qiAcQOiV2tKF9R,K^5'Tf8#S/?*"/!!p`]l^l#o7rN68HAgR.F[2,d1:@r5.jrV,-qq)$`b&;NRY+.;TWI%,<Z<>8[]C\qIH)b'm)S5'sLjpC#Dc-T<M@uA/h6u5H3g+>QE0E6fIh.+O/lK>d_n%pG@*@%Ek>.lhZg!6cR;0,_Y26O^^*1K)*!d%Q+Sj''5qg>3n3YtKFca5(6D`kc;<Q#I^$][3^FamK(n2)TA`DOpJ1oG;0#B#_Occ94\#q<QCr*W&aitX:/O7ggj1r8LAAk0UjDP$%60eM%1AEBr(bYaA2TqO2\_U6SHc[kqj#1$J]FQpqVul&?]/T/or!>/kdL5#d4Fh,:A/,Cmpq@AfAPdr"`$Ne*O],Q6.1b=pL6pMS%d5LWtm(blkSm5+U2i+ksV@=+))ROSs.J&L[n[Sp0'7ERjs"eML;N^1X-lWTlUGN_^([,bOk,YQ5qs4.*5HcME$KPqYh>`lpb,b?N%2uathio57\4oa45MuO1GXp_X@1fTu004sg*?K0$L:8OFAX#W>$eM;jjs.84CXR]N%FAnC_$T1U._n!>1C<GlN34^FU6utnf?'fai%,dtI_8)kE#fs?ZFS%YpidHmW3$sktM[i4Mu*g'4d_V]Q/hmg=Tgp5F'+X$pr!U7?Zn+*cUD8b#iBJk)$0/)aF2l5'B*JJ%U@BZ3D%V4R2[9!h8(B;K>>+Xq(G.lK4"?]L[C^T.pOU2BTdq`8=bk99q:Xi"M4k1HKj!"76j]Q+7Wb/!AWGq-YVZ='-+.<j*cPDs#jOp%fb%,Zu9(lh:M7f8e@Bm*bi5G_]8E!_i\9^0l,=X&lBG6.QAr-i62!/J.F0X'bX15]fV\$Jt$?;qqrJFEbb##B@4`Vndj6\;7&hU9OX<%3&8`8s.J_F4HNYWcup!C8=Qg$?,Wj5BGj0CZ6%ut-g>&H.Jq$g=Bn4)blE6?HUWKFmGSbR8tWqI95:k"H38>%`.BparcZQ,YIlI%%C"c9GIYkD'\%<>D4/%]QHl\;`dE_P2[Pl-:ot1!oX6(^O*[JlR"H(<CZc)d`ohp#BQ`iAe3XsEG*W@DUQKnaN/f*WKEM*7OIg)_.%J]EZ1UZ4!D/REf26<oM_paQ>,?Jq#4m&ed`Fsg,R^3b+MF:9]cPlZ,ZQW9%HCu]BjG?)!$Pq?`*!3>8Pad\=b+/#MOT3O';!se$=%a!YcDciJI8nHf]O"qONr@DJq5Qd0DSU3<6?L>-\a&T"G5P*<^cH3terYIai0ede/+Q_`DjfE[_B/U?%K*,S6L^N#Zej':UOi"T\P%m@>_YmYX52c$`MHgJ;gs8hFQcpTa$Wdau?/$(G]IB5GYHLF=V[>KjOg[>6>`<`79;SLX128JQ>m:n]11X^iBf.?0nRhp["`<bO-o%JY_i4jNDFiE>bY+E#!W4qXKAn.:+PLjZ0UM>n=.kba9BAAE(3/pF'Wu0RsBDnf[JQ^QbH\&YB-O(=6SRcEd3JL!IHDmoSiim3,7C%4huuU]tb.`cHQ6RgdBnOl__i#n.cl!@#GpDhTKN(jhbNDKF(kaOff(T(1!0U(Ze^jVA"UDL`=^)F?n&c8)!FXkYeP7-C`bU1b[o,%=s$g7EIH)U%hhUa4eFEDDc"7eG7N/o@dmX]#L9<Vqg_d\Y_$I/dmU1YX7[Djb"]fNHQk68p-pbZ&uNS97$&tG>SV6^16^BqpOo`c%mo*1.]:),=c@*iE!--)Ted"#b]"O2+&U/O3+,2VS!,uE)BuB/T"0**/4tNNEUV3pl3lU1'O@1;BW_rV!TD!7E#47CQJ:A5LRdN-+%,^j`:TX8I((tlD_.tgR7<NIi'e\'NKd-4X&-9<,OgjA,n>'picT?#aSFGP)QT0.?Jj%e7;cLVon!:P9o-(!2DE1W%W)$ZY=?URN>%CPDLE,kcHqTSY`H6P273.SVO195I6I7lB'1UTXhcs2/kB3:`o#*O"L?,ZoG!dKd&%6t/?C>'IVRO'pdX8?Fu1VoW+f&<K(X(.@JR%6C2g.o9%OE<TuTCK)%rP\>m1G"iJle+*2OC?_rPi<:uMbD/f7_LfOL_4)UHhDu/`"g3,G!in56,F)9F^>*,6IB3tum^(]Eu8spTZ%Xi"09h!*j6=`?g7?pPe0N:=guQS/U`[c`i\rCEV7h>EW>eX^J?^GPJ'XObq&:&`P*"4+%0j;D`4"1"D4#@-4OZ,3'`@DT>?m.3I[%oG>bFYd`7%^OX($ne][tb+fM,@3ht]+^>&7*!`YaCpA\hSDl*.\"sCDDOugbS,s*c0KNaWU&kc$5/7k\pE$ulK\b_,.gPN#HjOgN%i3m^'iPJ/6nE/bK7u0_R4skn+H;LBH)p#;-c@+UU87dP)goo(j.?\ufWN3@Pgh#,r5-bWS9J#(Pl,ZT,0`K;@+K!Rgrp/RAX>K%]%*DF!5+m#(r::9kDa7]I+RujcZk+Y`;B-oJNR;=c\E]r;r+kBgK1s4-Ohg_)Ys-g,boKVo-6N>t"')P0Td=4h<KYE,4ZoL!($^7dO%mJJ'nqUbX"fg^PJC/]M0hRkLj-EI1C(Pe_NX4aZks2G"X09=K'M18:M+)6I88'bFJTc0UgN_Is;*;XUCTBP=X7/;J/@#SRo;1:D;%NeU^3K:tZk)#AlZfGF^O_DE8>L[ZDT')]SM+XZo$0JQG[!)Ss\Ktc'a+!7HF5Q:oe[JnuH;ZC@U>1Z/4.6ehbl$pO:T+-RCJ)@bl%M+5!!QMoDl`Ie).//l>N+Y$/XU,3mRQc'_%-7oQ".@+Q+-$54XP7f318sg//PF&N4846bsN._q\$:U`FYC^!cl6.B*5s6IsOWZ)<%*=PP5_Pi*/6s`1b'sF;0.8&5Hh\'9?p+OFNKVG_"TchUCP&Mtla@iac;aTS"l6$b)Q:.Bu/1CmG-)cG>@CgE75XFTM0#>l,,XTnS%,T,KP<%($H,],seY!eXeT`k%Mqc/^lTFR-^,'Z;HiXA?(5/AO3s.U3/_P"kA9'@ZP&c*:QE[AOm<*g,n7^sP6:>q?A7?J\2.'@Q@%J2*??&XHfUKGQo_3_0Gi,?#8.-&;d@UhHn6mHl#F+_8XSNfXl?dMR';[hY\FEFQct%+7GE"OWMY,uIRUmu\`S%@>!MMYr8:_`K\D%#p]p7Ym=E!#8trY((Uh2:`mdifk?0l@`)XF_]U!+'_)Pc(rZB-,+an4&FMLlTqt:L(Q*2Y;6JqfL+bh5,r>ou8OmLE;25!"&di\K%F>-)e(l<sV,,(dZ.*E>3*K@<4=+o-LrZV:lSsUZN`]&\8)`JS-K7%b<KSLC&a;+4J%C%a(Ne)X7UaS]R76K<2"iE'tLu1(`:aj0q%Tmi.?_kA2SKF!HJ!c<(7/)iK_.*@nGoF/^+-s)'-ML-8=Qk3?;Y>)D(8P`Jtl4N(=9).3UB";6Q_Y+9@_]c1=kE',d&$/%CE.j*g%76D(f7l^XV_B''),(,;29d;Jr&7\hdEZtoZ\e#Q6;2"&n1^Gmu91%Ek#n"9M/\s,B`,j'lPbVP]fLM&@\#t>"gdc(=lp5&-79R>f%DM9;6^fMReK".FM=C"`+k=q&N($-c/4E+aD=&hdnTm5g`,(>6cJkV7V$Bf6>$Zk2;2=^1_0uLbXH5T!m!Bu[W+ujY:KO:Aq_D7g@%hed>t+SH%/i>B`QiH^3Q(`h^qQk886W!Mo)L+>U^NdjU+d0NefjB`/uBs&_7L5Ln`*2a(+Bh(VUr8VS5$P\I0DrQZLSha`7`Xsur%:__qZ(r6k-!dTIb'q@Ksg`Uf%6P80H:_]c$hf0[upa;<aoa+&Ld3CtJK97;6"jB>2;2>SYhe^!LXt883-1hB(+0l1c\i&@UB[K*q%FQef/W`rA,)Q9r66A9s)B9%aM`*,`UEpp7r4?VDsgU,QL(8m#tS_]2>qp=7;c<\")R#Qm&GINS$9`c$<n)PKpgNVfD9mTXK813li%*r14@:4S@!)Km>HFBXYSi0sj?DF#j5Ds4_<d=sjKh;W/4h,3$s]+a2)2!\dcg#rK@/"h0-&^N(r'9F!oK;MuUDbGVt$="IH#IU7J%<4spc\d%pZ4eVN_cs*:C^3;rRTm*4.^3B''KNAK$dJI4-?D[tPk7\],&I!9`"4Z<f>+anlbKtV#&#$U[l*]YrmTGP5NkXnTBHbur%(OG.4!RdaHqWWTFS,aSsW7;j9I%*`WDO5Q)&#il;[F.#8=TRa.^J1SB6-UqP6!*B^2YrjQZ.B7L&&+le:n&R)K<B]2o7Ltl:Y"TO%l"rlX<uI_ASbR])$GQq`d0d##DpnNLW?kNK-VaTQ[oY4M1/@;1hTKP&(]'fb[GXdD6$4J1GYI^_GJ?];cp$J$]h%V=H3<0_Hj:JF%")^[me%Au5YRTu<F7WsP93T!P]uMfp;u`L8f,.=kcRX7e[BENB-d?k\H/`'BG5+@Gc>H2IF3'4EdK4j[S0u$JQho",1JM6?46%7.%O=p//<SK%MHd[Q;fh>c:q\&_:JFqdW3D58@l9aAgX.5`<D<[J@#<b^7%-^)kRcoWWC%?mdCR_N40B&EW+C47oB@V02QQQ/fkK'E?%WUH?]rp#-UH#CT+T=;`nd=YWs]=WGd=+hQDFK$cR_7G#n08(7Xc.eT]:2g[+6Jo&]/jm4sGO5%*ftPi3GqZYql&H#RORDB1J(+C%%Yq^BMn840T6!`^Os,aQa[ibV(NJbI>a<Pt$m*GA"9&J4KjL<Y!Xo<0#2ilCPSpsn8&*fIpN@*MRj'2AgQ/]i*r:JmT@]utUB:=>j%<W^^7_BJV^`n%Nl_;402eE]bU]0d%'c1cpmHlf>4V?J&M`i43Z%uM3s?JX'8KelmQ/j1Vq[>LO>]d2psF?eui$[kQ-g*p4QZ[YeR%`.kC.o5hMh`-_?RX7brn`kLc,h(BeM'jp/\ZK&r%\kj5F#/,P/U!8Lt'ji9rU>DGAZpl,Or`#r4::TG4.pDUgp9;Z@qD*DDSuq;*%Y@i2WNR-!=4_V2D+(VVGTX=j[PCLZUgBa/0HH'C4M0,0SXgdcRR[3/if(PN#T)4/Cj3NINl)h1tdV!7<f=<YOI$!dZHS)ifcj/er%GM9.LoJ/S.m2P6:Q+g=;NbsSVrI[jHbgs@kk^'F/PIYA_GP&QgjYfK;V+6S@O=p2XHbWsjlb-YD7H`k+j?I'X_fL.E016?M4^B_i%Id9XR@I(M&&"-GP7iT%d#9>g?c(!1:)^\(L%D>EHVR,$i3Gj!n?<HZYA(TREX4EchKAJ$Zi[oT*.4`]_7Cp+F=V/(>#EA%2KC.q!%Zk#48/'H\rI[>G1WRI41^3S9hl@#f:MYCo_9&II_`S#Me+1,X<;fS)j\(NUK*,YOEha/eKNoIs+cp"bkD>?erV;M:&hOP]Em/a]X%.t+:>.:R!an,5G40a"4EI7rW=$q%V*Ya^*GbEmP(m:b.ChD_!<K5-IBq"PpF%WC*Jr!tjYNS'kp8NZF=D+1lcog-45NGDbqi->hp%hF6m/%pCR1c7;'HD:j,W?Km)Smf>/3IS_Zmm43m/ig9\d7NJQ=-(io=)g1#t[*.3a?N(0M-0#!qnXlZX$fXm/cr#N2&>0!UOX^OQ%Q270FJb]/hM:<rH$O?GmBDM@14o^^+69r+]]Un[Bg=<%VpGA<_P3/:tKC2uaY(7_p+sa_h6!ii)k-46'q"A'2"aLe8p%Ag:gXTSX%d$!SJMlu]d(Yfmm?M+$]a@o,XHMg<X4/L?<6SVH?#Lp"G4VND]ZZBcmBK77qlr^_5?g2W-CgFXH-tH[TN=Y;H:LmHd[]$[9,.m*O%e\+C+0Bj:[=5?hf%_FC<]+bp-rPn*3!gopmT@pJF'mpeJ9$aV@>qQduB?0gCh1O?a:kA.gR7OX,e!k5-o09[4^$4r/fb3PXhVt!U%k6A<'k-maLQfp$();^rk_sT[G3J?5K48=[fc>Ui,oVQu*TsueZ>_^GXpXK'UYjJp7G@*.Xc;as^le*=KL@#2b(Q@mS1M4=9q(fb>%-,)aubV2T%D>3bC5fMEFhIXM?3KtE=U&,7Bs7ges\E8"=r%gfIo$5%WHP;SR.o5_EZsrY_B5,A-Rk)pS,JJa;R@`(KnJsFsoU\O5%o?ifM_f5aT_dL1$U<DN.G+Vs_F:./J`oqYghi:ok%I+:99tTN)``o0"?S:kmLL;+`,.71s;m(5aS;;[IL*&dtd%S7mQuAcB3b3@o%[_1c5o,`-<Hruq.pZ4PtAaEQm_>>#fr58BMCPf9*a%,"t(XsE]G(`E4A&D5L[gZb?a>1KA2Gn]"meXI$[_,b_YhIMI`&5c;\_1lf%GiCm\XbZSuKe`6ECnd&a\V[lVHjf8/#niR>*l\mL'/HQu!BYZ(IF5OhNG?GA&g#uhMmj]"p7iSo*1K/=K?C"HcjnG8AA*c?bbESS%%pO/_CSq<TA2fH9,g6)4f#E)S*J%K1BUL$(msQ-R`D_JQR_9VT]a=!g*U8@%2UD3LmQqTYr`*0C7hsuG&QTg?$0qlGL9TZ&V)pca%o#f3M\VT][dG]9XA=9@"a9N.7L>V#X&^-)Hi3b+h>&Ee$Y/n)+6nr/\^k>VDM9kS`'X/P$<oTbgZXO`_/$B!$,5*m@ecS3F_r_c,%kX-9*3Rikm$m*id[aqBF4GX4"Nm)]3B^YUSYpK9jNN2R8K??=X4ZBciHZoYW6$H!h`AOQEgO&!2lkL)6,TM[bp\mIL].MIcEeb](%J+0*JTm^jpOf3pW?hC#a_AbNshVgq&g(NgMQ),HpmMVOlU/tm<+#5pO#`KktT&>>*[_7J=eB<2la!O7%J89R@[J]CKhLQ+&K:4T/%%pJino/",,"Y9>/Y:i;>q-;.VWkgOV6[J@%#*Ye-I6F@D0g*9dl&S&b\*^`C8!R=E1qjKX<9SrMbkcC]Y<@^IdIa#+Fl5Qp1d]0d%b*_ba[bi;qFkf9,hcn(8YCAJ65s_(3_1!2o[_:JQ>@&smN\e$q53Qi<$W,n<+%2Uqig5"'Z6"*q<Zgt.;aF&R`.K6qoUq'EmYdJ+%PXQE^T$70nM@ZGp7I]D"moV@+%+2GK5)@c*J_]O1H@u\G.8nhAYcOFqI>BE9cZrplC*U:JYM6Fm]7"#^/S"[NYa8i]bc6eSGR242%LJ2W'%pJIlG>2$8+MQ!SQ/e^FAS+?dj'3D>K*Oj;2r5TPT&EnXH8VAH$\S:YI1bp"HET9#HMdkNiE7P7_@NC$pn0W?S;RSp@:(I'%e3TO:m7]9!kjJ1>%pBIha4l+3+OpA4_13Tg5l@"Q9Ig`%1Q[0<Q._BB-XuHD3L?sdW7'\(k?bZW`Yp:I2=KSKaAn7ub7@!@&S4Pp%JZ<NJ.XK<T4Prcu16j0!B/LL\17a8u\[P>bL^'Hn$<u[jDo[bHZ5BooDQ'LPeP#+YgbFVpIA=)eoq(qF`BZnV-)n@n/lWo^*7a$H%+oCD-Lpa)(ZsD`c;)Uagr1M+[Tgf16\no1d0g2gWL8Z['4Oa/"W269?1E3$]V2!,&/1\#f9Bupb)]67g5A*L:k'?MgBPuK(P\AE_%J@+M,ER];=&YSB'$7[g@=a0peAl*olW[aDg6D\6I4+!%^<#/X?Z(*2?*T_7Xa[T\BM6Z<8X<@4/+<Oj,S:.*VJZNiRMD!B#gp2)M%e4efM+p2\k!AtNYM=Y9?Pr4al./Z9Y9X+I<_-MC-7>!C)>&0XdVA73n^Iou;Yk5<ONhSqIT#F%Q4e<fh,`U1=rf'jR'a]5VI$@00%>3F1Y)bMAL]^O2CSgmmL6u_-jgftm7<Rh>VL70IU]7S4?M`kKFj)au/C)"i%qRs?3WfWp3+6k*<=\Y,BgoQ,(#\pU4s2.lL7Y,,^%eK+[9F]<E+&uUF"Mf[G_8*uuO9,R9boF.nA2u3E.K0nX`6NkIp'gJ^tf*=5;3F2Q)#=uLEK@QYD`:N+46ICA&8+:CKMbe@mnXs8o%EW;Bb9pSX/U$@4N*]elU4A4;$:g$**aN%KeU>n:i!cL@FE>[8\>tM+[p^CCj4[)EW'l30Wl+ec\`GL<C;lTsNe%(QsR!/%niReoa%aC0cUm-U(q$D_>o_7S8tc&7[)\g-OA`e\XDN%<bb'B`t3,7p3Zn@k[8!,pmoL^0s\j8)d=>X`fBOKS]9jAnUZX4@97;cVOWFqL&3%Qn5\g_1AT&##<(`iq0=a_S!DX!4)pj8rHX.oXCBnK!4_dYa=i`@B/[05,`@!Na")T<(!s$3_LZQ-&_T@)*MXCQ$8-b2_a9*gOK=4%O,0OWAM$),J<jFS<5"iG^`J&n$)MX0),uH37f^)!LqNt/Z*`H0#dX_#]Wn2KKR3jF5C8o*`YI6.SpgL1L7:AmY7DSqd@s'XWAPIf%HWNKFHR2>jg'I&lUZAe)'OLu/19N2Lb6Q/!2MJ#[kV@+l@ll'2]nRXKII-5h%3=&WQFHV[m/n%uHJ#`.]uGZf\"YUp8MBiN..mW3%_\mK!g!J]C4(MaOp2T-ZE0INJa-%Ea>CkF66eUere:'".m528!N2`B4+`6F*;(PmJAOef1[q.%6VW4o_>!?$?Ws<K@YlQ`L-4`-s%#Fq0`a;o^Jgf?\r^Ndk;L%jU_doo?Q!#dd=7co6D%O`6ZEbR2oDUWGWJn/%XL7Ji96etkThO!"u5XhObcKS=:<V5aR5R5%=OS;($%[;`S=oD*iPH*2\aXItMrQCt8Al9S)N^jeId&2Mu?gli&ZHE)hFA^tqa\^$Ac2uIZ]io-BLCbD(&^RE>B&"Jn][k@sC*^-$D*4\4g%Sh$IK1P9/TiFOlJSkq9a\l(.o5Z^Mn5]LG>>Z^RR>q[fi=R'1m>H[9Ys/rrH,"mi%AJIMf[b%p0/UAaqA6hk)S#Ar&25*I=F;MKj%J@sbq@TmRM%2TAZbH&obXo^o,S_\M4TgA<.NfIj%N`o)XRb&M.0!qct\_M2OF"Ha'A*-7OiE!@)qPa-X/G1teMbjkrH`?^541(rG%<]-s>&VsiC*Us`YDRf+-d+%CQTT+IBOSd_>N>;=oFm!tt^;6a?.JW:._H2NZ[](9+>E']BCb26%j+C$KYpWUGT(-i(lJ0Vpd_<$I%2a>AF2a437L>G,:%O\9dICmO%0C8+1NXQT!&XldE/'CZB?,#W+:\.%LVI!p`$BP`o=1*B@:^u9-38rNW:=kbe!e-p[RLcDRM@ZHI%3^3*.*br#kB=H2N<-;\8\Bk.jIN=0Ur/fq0;+HY`K?dA1Ecds!"*32/ml%%+jh!:Beio(VFE@2jo8gtibV!RTL!8nWIeTNRRRe5-%dWW7i&q>&`mjS?38:/1EHF4%#4\*I1O7'(Cs$7*nV@Prm&A'Ga,.I[$^_3)*ZDl^c&!_/i#-,,H#9;VOf1(m]o(UlNg<\oRo$)jg%`5KHH0EI!lou!d07,N,4o`>]LlUZI/+ML6o_DlA"=$eD[3j7RBf\K%LXb9kC1p9-;?Mc\3";%-UOaIj.9Y-8BX8lD$m%;?J_oOMu%U\BJ85Z>TuEN^:DLGl8A:mb8sD#b#D'YY\NXs5AWJ<j"(6#9]=OR$7__ho_;%4e.PpiepR5QC8gs.^]Y6d^I%ik'^j<m</l""qB<%E>&6^KX)ghft[FYW\$"H/P<&CV:tLi-MFDshkg&7ksdMZQ?2BC97beP3_Ho)pF%WfU-1_G1/sCt@DjDW[eX8lGHXaM@-?BdWm)U-%cd%NE17Mo@4*Pme0-KEb:f>%(``?8BG52ot:V%.W@ljl,P+ZuWg_$3FQ".?A`K"[DkPmi[7i?X5mW.2KEUpGs=9<?XW@mI8A/@Yu%[[(J36AZ%&I=A*lK_-nN>I9Th>WbD)F(Q3,i[HA'nJg9r!Re!=SJCGB6R+=DipdcN,I7-D'75?l;'?p"A,m@X?ml[IRF^cb!NO(D%Dp!5KK-Kj8dbSubl)-,L*^*95[^O$ne_<Cai+jE)I2KXcgrF>tDG/MU>g<JI3o"7^UD"H_iF.VfbR_]o&cJUU(G?ZoTG!o$]_*bW%(,b2rFl-9FdW67o(Fd9[pn`utUSniI@uh7?7ATXbZ(ji@?R]0N:a.fSAUZ,N_7#aA/@t_K#fW4afta`'#BWZ.M7c>cBb4om;;md+%N[-d1`MdQnYKrq`>M:[('4B;SIVo&pq=k&;&G,F!Rm62V+Koa^hf/\;)cLi\p8qp+[JBQ\L-$>N:>3eY#>dV@>%hDXOdY"BnY+5k%k_FZ'_Qe=<Y\6PMEdVPG-l^3u*q,n/,DP60J$MuL2JSf>?'kMr_1WVU1,@]/\dTsZpEJkM*<l/;&F.HD5S6#<&dU!@,P[-I+A[9a%UW+%Q:&a1"TQogO5(&ClWmREQ+Jule*0T:ECa?!C[Gs0b\!&S)(^rX&/IN5@$d-Slp0Z2&nsOtAP^V:N:^`.m.067]@>AL*k"'/u%8\(<Uqgm>*8+M5>DfSn-.f2)P,1k#o^(XDFeZ;U'XNB2Dr/$BCIj*8Dk7>GlREoq><jha?9B7\;rJd?)%ho=pqe]*[,GSH2q2)aY%j_J9IS\"Mj@,:TX9>L'bMn`U\CBiPr6XU:H)bL!KL64tXIc[trVr*IU#eO&#M]Z*OXU+HLm!F4*_0bfYKG<^U8W^iM%-kFulfDX.%HiFD2l5uj((>2V*mib.0P,D`;oVSgd`8elX+E^kj%0TbaWZRt>X9]H:%X`,.O>l!E:9mA\RhcZ_':Fl,D8qYoFjTHE2KGZ%g2-R]%0tZ>j&i-?7OV(;N&uL\4D,ZQM?.2i_)0m"*I9C3Y95Cj?BDdL#BqP@IW$>G+D5Uq?(Lgu@@1fo/.^^3N%a>25V9M4s]*]1I;^"1`%J;A<^;qd/VX+0f2chP_!Fa\+@8<Jr**TOHnl.rnuha'4$Xl#TontQ\6B4LoKl-ZYhkA;$gd8dh:lgO;A.-=Qb%&qX[9NpSMMp,in%-!E<6<chp!V@l>=N10Z_&i3F\7<+r7T#cjK#OZ'Y+Yc"t\'(%*??@"\/p+W?U18O+Ec@*TXg/qIq2jbg$L#_^^5cfr'j8l?3Vl`4%W'jh>U0T6=+s1P99TC$sTi8+RZSH<E*&.&f,8]WIG,s?tWR.MH@6P>[Tu4U>iW1;k\(T'L*Bg3)H$amQfkr[W!)Z'"=\q35>M\b+%?0V8iqs*^&4_1:.onSQ*;Fa\/Fr&.,=!Jk$TM*V_:,p<*a2dCT3,'"dqY$$KluF_KVINtc2C<Tn&m8GRai"j'5)XlRR;kcF>*$OJ%8E;phnt';M+mZ\(odi]:O\jFoA_(>.6W>hi*<V4IE5tZ]2Ft'^@Q%#2'/Gt]iD3IU@'^\&Y-U_(aCB*VS^,%rNEM\]Fc((K(dM&=%65#J.PbJLKOhIeec1*4e3oi,]kCaO]]j`hI9h,8+35/D9(\3p^FW''$7oXbqN.G[nOM7g=9Dbfk.jCRUG70h^H%i?pk$r#n<;S$5%QGja97]Ic_QE3TCW8f%:3L*Tf!/.00eo0:%"bJu`!qmDg)];:LUU)M%K]Omr=Xt-\8oqW#6iE,0ck*bAV3.m]HGBqWOK.ZiZema8%]2ZW`*fLf!TW=OfOedZ,6fFj:'YC\H;u$VA7>WCEqMSfHA11;"!2?q:)+lGY<,tC)6%ZE,1a[Sn5<2]QZ58;gjK>Ta\A5?)W!l)m%-:gnk3i4Eh6tkddUK[Z"]2[=#fXN:;*KdHl!tpeIF_s!3,;%Tf;jN8*;K=CPR2>J;a@S.lP/Lq-,`A&Ceg<XO'&b!JbPi't**LHA%&kGNuf%cu]$uKZZm,N>]QJ=YH$JU]$A>Qi9XbmB/:m<`9(?;-W"/)b5WQ<f.8tsBpFr"I#.O,H1jt2+a>J<OT6htkA+/;NW>CW2J%'U"QZ/iV5mOb0+']t,]r)9=sD(q8#36ZuLr[m)2,HOj"&dZ8AF:q$'r5eqVuggNT_Xt.F;6I-0BEeWRF4a(h)h=$?Q,H;e5_2FP.%DSn852&B7$RE)%jq%Y7ZR7E^_TlMh![LAgO5kR"q*KdEhIt8jd2PV>%2n4h]=iWFVaM$G(BFlk=%66pXWmCg@L#`XSqBj/E4"`+Y%\O+UC)+RlITf#<8X[+:ROV'ZD.:BN,D#UHpr[7>gnB%1E`t,9sMF/FOa)>R&oc[D$Lhi!Jg(mFpX,+h4:8NJsJ:W_-(n[Z\X,BFb%/U_`/?IY0?OB<Uq9]>j5_?!HUI5uJP*c`o__MY'HLg0(Cs7?IXV"MV@,L\s2pKEBWSUed@N=A@SOFcf<,4S\A+;*fRm-mTn:cirQ%9CNIRq6S-2&G/"j,3C$h/9-o&OkH*kT)!/:ef%#t3c+B@NW/Z,[06$S%>6==#hXMTY^DQRIHs^T\mp=Ti\R"%1Mm&.891Ai\/Z-?%[r95ndj0N"<Hpc06U$6u=7[T]cWb4P;sPWrPTe/QZBT`kia0Q'A,9,jXc1r?IARDqU*r$r&#jcWVpBYNLX6#FAt$sMj'G,EC*\,H%Hk$=J`kLRA"3>(BdqQUfX!/HDc$^p%4[_@mmt(ik48Gfim4<BH+gfq0*['4RdmMb3cfH<,JL`g'*l?j%SK-,ATaaEA7e%YJ";5Zd%l`p'i,7`NLjRrciQi8)tG!'f,YO_L&4br!-n?@j6b<j-pW/!'F'($<"egf`"S!`u4pZ?Ac\U*:">E14=H<In%UsoU8T"4e)cl7YI%^>]^4I^8F.?KF2)IFjMSj<;h\?]p<8nu!7Lhs"/t?9^s:+M?o\NH!j/;62Oi\T2oQ%r4g"=5bfIr_rOM.f>##/"`-W`V9"+AEsaM%`kk4.VOi]u3,+1BX=j&'TS"k2o.b=miGY_@p/6HTYgZcnjL&d:Zd\TA#!s6uQ0MMG%:n:@)Ar4N(cch)$#Lg?2`5ec(5%E&TmVdr%&pRcXMh2^qJ/c4g>1dbY<FhA]rn[fmE2eCoI3#eSr5gR8Q53$:Cuc7J[=pbsol.Dn>a)WHBOca<pd9-2iGtl"ro1=jj:,<'j#4H%%E"7+[Dj,aj^9?XA+UBcY3#Qh-]L%hieVeRl&gXNn"N]?Y'k1O8f$8-Tr*n.)4+*O16I:FOEr[NJ9HN4@T%b"Z@[iN3b=,Fo>oE>Y%WQ.+((Wbutn'qLWrgjnmN41/b\G#>(5IZ`5%9)%8RKti4_.H?qpSV<=o5Ik4RKsB:.QN8Ge2_ng&C_c<oFfB:qE?P^2u$OdJO2cq%&9+!J)Nlor50HCk$h&SQ?KBkb._%0-mQj,OnhB5p<sf5?k_qN'Y,V%;aWA/^!f(+CHp7sR>kC&?7D?hI]Ui$!^PdMT\)uD9MLRns%3qNb%)#:lKLs.dL+rAA9N`)Pe.@uY@B>JOR1C)RJP)=iN,YB1<gJ]7*$(H_YfCj0MLr-Y)eb[(P.W88&Ve'm6!,e,k@'`;l-Q'h7%UK8MrOSb-Dj]5>O6%U0\(9h__RBJOqqnOG2@n77%=[(4[m2#5f$j^[JaM(Be<)CAl!2D$9@UdDEU-M3$4I))F87'".+gF*igmA"2%(D0DqHjE!S1m0I=;[q.mJn=5[fk)6B7l#SU*oM6Z?MdVL?6YIbO-DUCU&"KMUM7KK-'q@N<Pl]/\1[*2ngenj\*-SL%,J+8fs`33%U89U4<R=DC.nbPi)2_,1.b:K(+E+K4:MMpke<?i]jPh8W+7Y4e50:Js,jpdc3Kcp38/2pVXabS!n0?'H$r'*5o1@'EaI-%5heNZ'%ciqg<$$N<6R8A6`h5!#iR;$p@%;a2`Oe@9^,A`PX?E?b#[@'p5-%u&n18s9Y\hg(rm09C*]\..%1C>BInRenZ!er_7Nqcp2:gqlt%o1\#B73n@M4A,4`fA^s,6B:I^#'n>7?)_lJ^3]HHEAo)nE;/2T1W:FtW2!bFRUTH^1uTGriM'3^&mde:ZRa?l]d2$<6[k'-JQT6k%L6,o!0Ip;42id19[[Q;8-pT\R_S6fKY[U9g&'^pP;WJU-4j)H&m1s';)r;9_+a7/McFW`_g5q+OaIRI;&&]WRn=\uP\UhS#;g>Np%ZliQf+.k</_VUk]7@fFA*Ur#^SIM:3TisQC:g+,kP.o$'Cd#]_%sjhgSK4CrH/[9B3P!'=9h;O1>IJ62'G?N?(M33<:bIL+JrA5W%KcF#n.N;i8Obc?2/^bQNfCNT27'Xi)^&UXHdN/sX]L6LO+Toi(?W^jJ23VbP$k:F1kc(jn=PR%\KqSo8VT?+/L4M$(nj_7P@l5h%%=F`LQ$CsiCF)4UVmbqSaMsDH2;/ADa&S%1!b2(9r_?KK;g>_JSQG'6T;Bo5]IVL#b/.lPt_aW@+VQmE!+_b->>k8YIkdQT!MBm]:%U`;(T?o_4"+Y/d*.9[,AX;d^gis%2M;l>cS^X+6Gk7E=j(Kn&&df*rha=D\&dc4:/h`$`q6".i02sBQMe4:.#`k1/`@RRYsmpkB1%K4\C'o'0+g#pH=c*7#dL2N6[]1++g_f4O-E^\LjnA-l^j$TSZ?1>l0Q%5$67$s?+8C64,U96TFM*jZ"RYrD`=esmi'6;B3oYA4&g%lAI>fS/jE8**J%bMk9A>KHUrBTE?mE,"5YjfhVV`aELfQ_<?CR5c7pboYSJ\_/EesZ3Nd7(W6ZpV9joaM`(WoI6uhR^*BB_9:T"Y%nW;`nU$qb7W$D*_fcTS6n.Ce([^o@*iZ@&Nc^kLM6XnY;pTE8^+:L7JF=h^!;>=Nt].%Yle,;agZ8W>>"Lg+3Rj"tk&"#B3o-bq*%&K/S?D/p53G37=eEcR!RN_1L:Lc??RHe=nGQG'RS#h"e?Mf25-65bs_=E#8YjL]a.;-l:01`i9ucZhLL&l:#C3=<_WGMBou)23BD%0(8mNd"LmO<9g!k?q%4&oXqfP4MXOEIM=8`mO3Yk$JMO_8$n$3cl\BnE*Ef@/X2`\/oF3Gia:;-r!62^A:mV\pjsp:LJhn9f+"Pu%;5%hgeKM1fU9&,;6D\WG\[,n#5RXki,gP7+[31r,iZ(Bb$PL!NPc*?M""d&#lD)R?+pNJ.c6Q>%?e),^3L%lB9*]a`b</^:BL<+>%]B]5rP@g\eb&=fn]0U69."O33Q(i]Br[X3UOo7PsJRqHR@rkPZ6K4-<%5]ndqh88]:4_c%r>FhE^s4-Xf2A9)XCp\k6I:j<K"4-^%W,<tlMX%#;Zk?mojYg4neIq]Le&b-,80h#MC&p]cL(qIb/3/t<.mFker)A9\T19JcOB;9^s0NK9'HN6G:*9^SVX+eh:'O54d"_E&%DgO9u)`#N7JlIUcpk;OrFKX50;CXta.uo:eS+rWZ8YXFh>S8o?d)M*iZH3d1S^&?qL=O'$)Xm%PLD2!RF:)[;J='B/QA?,0met:W%;rb-@3ZG)h=8is0X8@R?@R8K:-eD+Qa0!j;WgA!+"_b.j7Obtu9^T;'Jn-AOP5QV$[3RJ17OgHVbr(b4()2GO+?MsO&Q2?!qW][u%VJ*$Y_$F?YG=GO`6:!BjN&->[e.4lj6,)k!\OMjaB*?_7Qjs8[cIO?1*"",Hc4kq<#?t#M6sP:p9IQJi"nJVGpmRYokc!iMHNo@f%j=:\A*'qJg[`^!*MN4BDCY]\\-K3h,&cF['Gm%+g:l+s*[_e^\AP3#_7oh?6A:CNJGZA&W*\_,nW[_.;?%ejqW6-NFR5PL?7l%,k%8ddNBR\7+O*NO="3%VP(p`LdfeDs<kLKG6,EfX66W]Xa7!L1`ccTrJLpW;lZUa,1U4dhnddUfb_ZOTPs/@*qtN=cj5g[HKCO9,g4%P1H7Uas4QgBqZ>/9On5\dghP$0NP,tL6a/%9<B\&qR)^Q*.F+f+R(jj@J(P,D!mbC3>97H!d30Fqp_LbC+Ul5c)J'a#*^6QGdJ<W%!'s+2;Q"lu+m@#/hBMVf5t</["eb%7W.QD[';&ca"[s;4I*MsW&o:4KA^n?PR4]rU!4$c;F)hnIo924pddXY@l9DE5\E?r0?##Ch%*<A*jZdg$m]!mBHRNkCb2+?RSk;_.F&;2sa3N=UF9Jrb/2A&cPWMNF4lmhkD$&!&R6Y+nia.VQSV&LNJ0q(8300OKW3FYbk@1>NN%(I/@dn',iLdeOnL]1TIo:"E`L__-l[QUSq1O:=-l(q"+30^VkQ-2Ti/Lbr""'KmU$2'CR-$cot;kVa2lji>e=7S^%GCHnN']8J6j%#r.<&+,a4tQ+<CtX842X/OB!`ei&8Gj0A0)E"kDT!Dk1f'm21)qo2A:A/gXN"Vgf\Q;]&'p-%73pij0+fK0K@m6?E#X\#E/5^NE\%\,5Lkr!sJ_jI,ns/=jPCB6X)q9\5]cBD+XJIbT>rmDLQH)!BE;p^,0MqG6/ia'Tp7G0LKJOl^6Gp]hF;at_U__'A^]eEpsFT(TFS%@K1n#pX=O%/sdXc<AQgUgrR2'YC:F!C<E.d82a>GN?#KRp[9F?QPX.dG1'T)bg;C)k>lffIEMJA`9iIS6sJp1:YRf@nOXTtepV10%UYE2=RPtU,VA2DOZ@92o,;4O/oI.a:\`^H@,cA:;cSGY&@IKi0DWe&DRVJVl(IF/PVa^G;mJ,3BNV*-LkFi@5V)?n4h9SX<RuB0Z%W?5YPMiTPP+-"L`8D_&uK:JZ)ebPA$'(l0<>\5.tcZ`r84l26iOAnEq)!S/sl3/=A9les?Xi_rQm;EI%YO5t7l.)4R67fG74W9c5%V#97JcHMp$H^m[:RL_H83lp"s[JU8P(J4N$POa?*BQ/_YqgnCPT6JR]_CjpsjV`@=\=k'sJ^h>>Qq[.\>`h%PV9-\(jBpQfk%$Nc%`EP.CNCR=3lS<+d[!Ze4g/?*A^KQW'a.!b-?-(.bQ3M%B.=#97"QW+qH[WKl`14/@T4Q:"dc1LgT`M!fI13XojQ"LNb5k:F+*.E\%:CFOVc>AG#\g)4_G::WB6a?gS6^:/NhDWH&qI1HlF:X_.X;!QJ."01P=&GZOB>5PiYEL'K?=i2=5P]Hl,+Xp=P^ER"ZFS2,l60Vf%CqSA4-nL[P02a&Sb%J'V)TbA[rJ*4d]Xo)6^F(d>)BshjbAt+\j\FsoGPCm/bb)@X>OF)+jo)4J[`0RFlnI2cQYL-cn^`e0)J@qK%[:GhU8.m-Z6)s4-P>cITK[u[$<$ZRJV5l1("NV3;`>]7/`tq:Z?SQ_09P'O'Lb9Va9OuiD3+_5sCG>ktbI$*iqU)oFidFEoA30C?%`4N2%Gu\T.X495_OQGO4%AfD3nj:666C,<`b<+L[Eq4rS'S=98mV"0<UNZq!SAS(^h0hXX-7K:.E"$5>?G/6rX@ju0kWK5p3PM>\%5UMqdl*$D'=<!i3AR.ULa)'/$6N'6_a"?oN;isHEACPaqoj;/T8L-]Qc=;I6r&'Q".TH54a.s[N@j$ulS!rGhl7t)HM&E5S<mH`f%&m9Xr9Jm"AR!9\[?`_h;`;=^^ZbtNiZ&b`qjq8d./WEG;bmS[;)>!:hr!:;Wob)*jQ@cb2"i+<UQ:SYaKnuFcKZ*b&C2WI%oO]*Z%EF^?hRS;+1!/a`<A+$2u,sdDT=qY\7Gct"H=tR)I].6YEnM*3'(<q0L]?e4@k.Dm@c<(-bc9640ELk^?=et&<"sV#_3Mb[1kd/Te%H2"&_6Opor1@:]GB.5p/q:4lV]K=A::T"AApShK]aO/Ps7;=hK6"J><e#!6sD:_!:d7kZQhSf2\iJ0W]l-&$c3r[)%e*=AP[QVel%+RM?L\g]ILX&YPMB7(%AnJK;7A[`[OG.g]3PP1Nt;uF]G=78N+QFi9`Vs"01D/j`)k_ur'VVQMnB/Y*E.auc2VI$oSVlt2kb"BiY%3^9BcQLF&H+YokQGtVcs<@o%?RD8M6Ze3KKjtN]Eq8&/o64635jJM>R@pOQP=)-UBfUJs1nk\B,H(gk)J)-O!NA1nW.ppLG`rlk4%id"2E@Hu<[?g=Pe!.?7qZ^XDa]$RSC=ci(8%Rpg^nPbX@geQ0h4>6>;Ni-(E+0Eu?J6o,e]P"&!Mt?H$PD<eVkbpTgL]oc.aMVZU%YuJ]ah?p(@XZQ?$;(V=udUPJrO^E__\0?,l#oTPt@rC/b*#dUt0Mg:e'g#C$ObCbZKc@Z\Tg)DPa((Jg:/2ZQNmNqZ=&!VNo<U1t%deD83>]s22]r,,h8o_:OVAD*>S[pA<&mM!m*Um2+\XW_#9J0J*=9MJh'Pl8%=HU:(>JnI$pla/!Ar9YHGKW`soD_agHHLKXe:0``%*oS7iSp^eu29f6mREt>N9ln6L'b(psY3ua]pIl=HBHLaT*\S77H/%4WQ#%g&,1H:^.87$("Z>u#;:fmo<1,6,a>lO+CdI+2,3dB>%#Y\>o)/@S5L7sMEfT[G13P:L&B2]l]A<"MlPq&[,;1^nD0,.WQXG8_9aSn(&10*H)5O&%og510Q237!@ZauHHLj;[EC<h"N*4DHM%FWAIZ`Lkg>501P`o.s=G9@A%XPXNMVVP0E0(1BN&*h441)0G$3r<b$tp(VR5p7AiH4iM)r]r*JUcR(WIlAN/;;03^'8G':_aOET@%Ch==i`\F0]a";X-_EHC'A#*qin1JPM0d(;$lN7oEc>6sU(6Cnl`W^b)I1'TNX2nN-__P.d0CP\'h-sT'3JeEkHWp=?R4komd0(i<%M%+"a\+j&K?.IF64'O0M+]TU>Q]="eWim=$l%X1)l^J4e+f:$/9LImDC2IJAn#&]c+f1"m4Z\bj+.c$-(R1DWXNrn",\A`5mf@'*%V1VpW4H!`uQ&"(/k3AF@r3Rs.,+A3l"`^7?"fQ4,ST@:%fsa6GIYWET?[1)C812%T`0fIaY.f'@oI"_Q*0Bq?=$N7T?]h<8#OQ0$%SuI=6WHua&[M$Wbm>RJ09Uo2Lq,S5q"HeQ1.ohXqaAfiSUm$'teb=Tk.B"CBg72'/T2kr&moaBXfs$(p]pZ8U`Zfg7J),O[$kRb2%m`A@8(qCi1hn*GLpEsrF21^"39\_:6!iDMKAEi>rQ/%.gJ5o!j%\]AlGq(*>Q;F]8:t5E%$H$PRY&$Cg8Kioo"qUsB!b'3?qH#7Z%XA[9Jk+nhrFF.Ns)YC4*,SaKrC!jYD37HBl1.Ad#W%KDHFch'hA)KTuWF(qc=GOE`r9.0J&8MgB<n:*U;@CGkgVQf[]#SC#kLb#<%5I-RQ1G1iU3ZOn?np\Y\65%H[/0S6>+\G%C^N#KL*^[8t'9n_9N7KEf:m.J?po9jVj:mr1F&2ab(noJY`$B)nOMnGDAkm0ZDI\r_%(tCDfgWP9+#T5-R7oUOccOK,um%,+uX#LhroAl-`*M7LjN(iN&<4FeL87i(tP<1%j6>n1"T:q)&[%=ZB1bNK',?dFe.MRZ4gBmFP%e`m]gL"Oq=)H=dl@o?3scJ?dUL<r\c3DSgW;HJgO`Xf2P&4+Cj6;*&Mr6W#a60'P#h9@AFb%Y?t;Kp\P[+Elq`lF+gZQXgGUb*aH%[C+G[7pA:mlSuBR;7GO#2H"[N&m3-,.8D6V"3Vm>3D"$;(GkKg]%%^?Ib,Q!53\U+=p:fO=VrQ_XL:HPOnpYo`<nWHYZU'qiYk"u%P1VqqWNgDk;K(m%&49I!iOVZ1<uoDUIVLtZ`nH_c$0A1^#!,(,Uq,-QqPbl?"fm:d:J+\ChB/F*6kQLAC.QeZHaQ(L1!3s"CNFc>%l'?9/=^\!WQKs>M5m:\uW&8u+Vi%hAW@h3#X8N]@3&&(rV*+-]I-F*8P.AT!85rGajX6:uPqaO3`HT(Yd(Kf%:<6gGRJ%"t#(,-I%(e.6aejpfJ)%5ern^6WT1=k1B(DJW(?P(t(`^eDi10C6Sq11j[R$&BfnSa+r'Yj[OJ,Gf9rnl<'^\mEto3_LlDuW]6pc&5js7rku%qS3$-s6uZ\pi#f6J,e-8rnIJF+9(s5H%1=irSRPK?iKZsq>UZghu2RU;uZQ9s5>'cO8nL[ro;o7Du]T>s)J"8o#Le.&!!.\T,`>G%^&e--qtp;d65U@XrU9b`s7d\n?iLZ7g\g+3rhGcDrhk6&:Jto%9.9A7%ts*=6[.hA+32q&QJ#W@f\^<D'>e`?Yi%2')5pX$04F(!%8aN(dd)u;+6U:MVUD2^+lpW^[_pE>s)a!5$hncS,_G8H5Qsp#STs+#GL5bORm%S],fM)btc>O,-o\UM``uiqZ+e`oP;b:ZtP.r`a%<kkoOR^!bJgJE?/A'Mbs]8aR6k^sN!ZChBWOl+fI9C<*PUuiKE+j9HrCU<sK",Z>&[[3[*d.lCq%u)pjDeulWlq-oo^:tiBLkX[C%dS0-CM:E5M5;ioK`_N)>0pJjF[=iklJ&AM(#j[>`-P.'?F5Z&"EH0<i]"ar,f,MJrWZ6bfgdiemfM/HNnMb8aT<9J1Ljl5*XB"i>%KoN$b;SH&]9Ph\BBN[-&ia:>t_IKRo$_Z+ir5nBTdZP\)Cd`]Wgpk8<s76d>@6:_+X4VcK+T^0gF4@:^?5p'5!A#Xj^)58M9FPg)%YUlET*HsMG=)dQd0$b<bbg`,d)8D/B)e!_84l4/CPucIPL%StLi=Q?b;=:8j,V7&7A&f>QjBePU6;W`$Rr/!PG2>=g1CuWnUZRRQ%1^]-`](ia`#[_E<,A&#1fSk.sm3#&ACr='#;W;KLm9IY#r*!^XL$b[a+o=p6jtEKqRBX?E'_Naf=)ss6.:d!IHZEnhaq,Hnad6*O%nI;iD`8ZtcQ9t-c?JUg5"#>Ct\DI%\N[*O1[Rudp998C]oY;r&pD*-8[I8.qMPKuX9=0c4)-Ll"I,*@4(s;dpW4rM(jM-AMl#4+8%LSt%OYZdckhWi[YA>]I,F2%1PcJZ<sr'd^[\<qGp:Zm!)`R8kHqT8=.(d=STZPLmQ,8P,JXMbB"/Z1Q^&U*.afO%'`B3,(;E/C+t%D#o94e[d5^.)5j7X5+_#"1mJm59.K+.usF+KnH2$Z+(FBd>>A))US+.DWAZR?$lHb('6.\R8.Rh:Ubs/R&kR#8=^;Rg$Z*7cc#7r%Y)(O!qnIG5QoQGS3WUqLN]h;A1QI.*>&H&IM9YClkfo`)47:0Ye4_FWW*;9)@^ehe6Rc)\3-\/.7f#_*g1"mO0T`SOln"\\#UmZV%<FRaf170d?jQm;Z<W*YF7UHEWil(8EYAMgJ@X@GlC&#+F1G$V0^`KagR6l\PQTS?+T?E@J`-,Ho+'"XiDi+(j5mGsk43klKMHKl3%;16Q%j;hg2MO<RT'FMkTF@#(R&e#n+o?L,P'l)hq`mbIMH-GuVfWg=MnaY`/=L!WA(.,8eO2MufOWeKK3D<n!kAf*lnJQW-L(5W:%Pm#[?+.nd97.S(I\&+<j>&8Q7YOJK4@egjM&%Ho&=gVt3L0F/.dtK+!<ZK/-*\e1KAO?te$`&SZ4GC8X&um6lX:3X9\Mrr6(JJN=%.C^n!R/%JNZeZt5i(p(5W%a$0+Xod[F$2(uE6gut`G-nN&epBM"kJ<GNFYN/q-q&=YeG4nW'$4Ab?Y-+Paf^aXe5LILcDR7FHLeP%e;nKf&@d6B?ZJhc@96CTl/oS!-a*:\T-$P*2PH^$C+N`]g+@1LRob0O2HQ8Cdhe)tCJ9<5&kCg2ni]/XbuE?cWRICU,\].?&A#]6%?:-*PI3ec:?2aW35M5(df\tT_q)<D8+%ID"QcdnUd&6W2=+R>Rq.Rkp!`hgo4A'H&MgdRm<U+t6`Ecn.#pIo$$h[eJ\nB:IOYP!(%[^)Tc;$!o)<P`\_Yn%*;DZ-l:n.iKe`+G(=003pbQ8e$cHkZ,0H=5Ko9^t\_XSW[#,<F"_Y<(Pi/&%cR?h0UDY(]d2^`pq]_"XVq%h6l9iR8A6742dSnm;;E_+_ACZZ\OGB)q0blp<(p663W8afA;A</J'=Q!;\%GT<5HmFeZ4&c1SjrTa@gdUZ8l'VC4/,CdtHod6@_;%Sg0<!]LlCOjK'1;79:;c07^1()\D-PfIaZ8-F9qODs<-RmfPE16.d4sj*JJn?NKB]Jo=[nd0s-<Nb^LJa#BC<aj4iJ(9Sj%Vp72(%ZM[KK3nk%5iYtu)+LZ?^:kGLJ)H!gGnT$kjbje"5,,Es4S!\QXi[Z,$C2(]]eG8O1l&_T:@l5_IKJ@=)SSJZ1;2m0?,m=Ja-kJJn%eQD'8ZM/O]EKjpJZ[CK)WWr>Y$30.#&)p=+qUYFJmQ/."6)tr(#^Hpa2Q&0q0p]*)9;V]X0FA(DNa?&^=h[\5nE/8`=k?anDL!'k%?B$i(';o>19VYR)G(3E=V6Po+UM1ALS&Oh:h`ur.(q"dFZ%CJ-E1c[&gmT-3ofFE<BKTDVcS&[gZ*?<^I6'ge/s6:'IAkr))S(JP%Z,On%+?RSEE4R3s);UNWF^ngQi'PP@VXs2=98/82N<;[l8aVG<!IYsuUsYr@H'>k9W/NH+,O'9hmpKX-,@.[RXoulZNU<)j50F?K%0[AE1#,Wh'mU=*PW-u)(:fn!pcPLjBh6Dsk4L2R#(aCp2>=Qpi-'fH2Ki3YWb+la=3s`O-D<cMp]S<?gjh?:_(NS/\]C[*e0[eHE%f/WK5KW[b=D`L$*/MP1ZF/lL8HhoC['<H^M3P;WEZ@3KG@*dsDl"sl=5r\Y]b"?L@k(!;@@#2SO9N=a.F"i=no=QEi+:_[q-Td9t%7lO&bjt@ds&[h*,b,0pG`hC]>U\E1/*Tq#bnq9Yhf"R9mP%!A2E4>Vn<FLOCQehp:05P)@Jcq#e*4c\Ua9Di89B4C]r9Qmk6UR>Q%3Jg'!(0D!\"NH#qRjM3GLWee,HkWji9V$+hr!kImJAko/.@4FZ>RaCaG%lZhD<Fj0>kM11]:hO>G9rGaN%l:tBg%ClfH!$/3@EO_%R76;+j\M@(Wh@/]YSRB.<nq8F"_jTi68/ca++Z->dJsY5IWaC'Yd!_)D5n&6[4Ahmhcmi%opH^LSE9ffp(LNEC'/QnUH=eeR"[O8%NgB4PlYW(gCQ*2cC=tWNN".0;D8/9X5]1Re(nr!7TV+OPK=B@/CHLON"&86DZ]*p'YRh;#;7/)U<e.=M%C>YX]*.hd0ognGXW-SV%0ognMmH:h:1BV.R@Z881#e@%Lie8/M`hC:%eS=S3Zo-B>->XoT"g"9-.D,0m,6bC4k&&+Xb6,V?0e\32))o<3"UC%r??+cb]Oo*C%.>`Zn\5=iek@'-)H')tgkgI6,`/Bl=i<\t.#o>BdGF/DL']NhH`K[\52WL2777b4'VH[&iAP:,c(#'Mq438&D>etBJm0jF!=hoW1%#7S<oYVWWaT,dA*eQoY(!kZ,!)\Vi)(Ed8p/EW#pA#Wn!<>V:h?rp`CRQt-<NRK4l*62)<?kJ;uDg&qY?$RD2c0"rBe.[EEco;(#%`(sl]J)e1t&iZ"h5/<=giOon,o_":[Tu0"5K+Jk.NMC95I$C<oj338hT)oB8fQ2,nMV5KH/2RH[Z.M;^X-pm6qHUXFHjU;<NPMK`%/dr$k5h6D]6Nd5&2IXuMg><i+[bQcDN3rkK?Z=U#W#Y#b!G;"e5Q?I]mcT5fq2H%sF+(%kJZ0#9<LTkF$*:U@6#;>Z(3J*lRTH8U%fZ<(ia6iP.0"=@QX>uaNAdSGS=Sb3[h5J,4;G0PIBUjcqK+Po.\VB>RcCn&W$8+D>d`P':MU_nZ)#"cN:1+V83YA#[(E5'ATX=J$%d[u'_Se*qI)CMBLpf8+K3#T+.K;F-ecnpe+^-]enD6[kd8.#G,/emTtf\Y!Qd.55?o`6UT_<d.=N"h'JICe&2`T2!gV?kbg1*Q0/%++[BmRZb'q(^Nr9J;_:%^k+0F$iq`[)121D&)AYD*9Ut<gY9]pU_l=]?Os5t]HupJ"#e_dhn['Em<l?32dQT\Y-0S,);FDE953bN%%T=9b`c5gl!>a*>^fYA3?--5ZTE>2+B?+:dbLQ3;ZaIAJRg%I>>ROc2JRs^JZE+B]EcQ\4D1J(($Yg7GB)j5,CT2FifEff7M$!c0%#s:kFS48d_&a*XW0<jXZ#0&prOLUMl>*OT78%[:7%4it5i(C9.!$2!'F=,S"J9f-80if5'bCot*UOr&b:RW#n364\J%u(:7@%9_r%N26`7h3YW!W\g4t9-oP!o*p$?T.aat><A,Y1Ib"FdJN]=PT4G&b+A,p](*S-7hccV)%"+,T3pl"#'S/5j6kJWgj&4PWbkSImjgRo%l>EBrI@cI>LVR)4rg%*DJE8OE;%-RfY(7bR!G22;K;1p43\\at9,rrri+g?+0b>mdm?MJ-DZC]!5AW5s3f&KOiKALMY`R'1`e"<C%ol"(Cs-_M5@6@/("03#YDc[p/3C=8bD>hC^(\$?%@X!UE*0Zs*lu,INUXU!_+<k];,nZV)!bTdcS#M1`MSoBHb<a!TG8RS+a77Zt%JonZ%7]5],nJs/m&<!=)8DoPbOF<$"7k?'uf%_M$k`u)A)f:kpq,XO?Dfbn_<[!!<C,[9FD1$$[`_C&X/?te]Jt9Aui-WH9Oh=Gj%p;@f`@0(fEJEd^/1Es>4Z&+Cg1OH*a?+b,^@fjZ)Z,6U*nM>D.^'B))pJNu/mn:E8*5s"'b`sk?NaKO7QcJ(,H;!iFlq@5&5%],!%(Bj*<LN+<e1UIW>Do(s:+!Q&2cF.`VGnatNZp#e$(s0+[jk?]48;[d+>juPp^+?Y*4*O_?oQEPEN<G1p*,K:[!Q?8kl3SE*D6i)=%[\@/>h:=M14HJe;YjUpCXWF78?(f/,g$6?j.Q>(m,sH2r+3?pn)Zjf[&"#$(cDN]pRImKgmVQ]))5S;mYUl7`&Li7TO&@47Bn:u(%1$PQ@S#GKc&S&]qL,1*APo;N15'NA^9Q&u=^O`I:DYc6Z3ZY)kgmSgsblCD+J&KN_>B*.3<q>g4KrTA/?\+2>j#8NtM]K))o/Oa/%(g%L,'FN5V?IYD=_t[E`Mjc$=7trM,XYAPN,mS[+1V'l'YgRlfq7$rF\5PUsmR-@S5UL%B\OUOJoY?*I$R.U8As*Y.ETKZqZtt[E%*8Jt#P/CMbcI-/=@L.0;,'a>MmGb_W"V;og_s*)qd&i2`mO*!rjZN[7a3WbVi3:U5?%^9m.5P?T5ArS;r;Ne-?&=dGgFFqR9ns<H%^o5h"@qZJ>$!0e*L*._DK_5P.>r-s>&F0cBcIU`?96;Qtb*Tt^qnTdWNn"ea))KeV=%DSqfW)rFOD;T;bZu%8<"<<Bjq!pnWV)D_%BBFht\P9JX:+?=`BXY%7K$'akbW'Jh;Ic>8r/.lbooce%.8lY-9[@jp@1Ng#1H$3umoo<Bef,`??$k@kX\b"Oj7-oG6FDpgHba#o%(n=)[iJKe8+Pscjl7$\3F+9.Q[hX_t\Nc))0D$o+X?g5BjD=?,ABl=d&8dirOWQn2!C@N'7W>t2&`2/"3\KV)^c(Y/bA@4r9+Vr+%=d(4n[gUlQAB>V7J/]kUY/D0n+W3(#r,kJJ9\SQ?)ah,@Zg?J)335dTH0oU9"j5:UMg40o1P4Y3dMA)?%S9QqR77KP4:A,\8+$(T%eJaOXE]6@lhB:9O\#'ilCCM+GjnKYEe468NgPR7*R6bnl&Qnc9iK.bp8DL9\c]$Z$9Ar>Hm"H\[fu*8<l,#@e*!-MscogM4=C$2t%jF/;NkkTMBfJ)Gr\Ulft"qV.X`o&oZj.LL(b:-'+d2T^oL2*hEBEcn^S8,\?<<'oYLBQo*Y&Ml*'<Rl38Y#nE@rJ@Mqi`a5Tm>iA%0QIeb0n_p6GGT6[a\U%fQV\8B%,rsXfsO1T%,s7C\Yd"?7+-WH_JU.A7cKj]kClq!\)V@8rnUQmI#SbG^`>_?nWCs"gprM5&"551%d8R%<C/q1/BoC'R7ogAOjrHqVHc9'*L`N_a[X2C32>$N4J75/gCBMke!E5tkVq)J;)&U5aeo9Y'P0X,FP?gPe!SEp7O5aaOF)97*%IE/'Pl#F\l:^'mGb!ihk!3(IkYZ>LF2<ppVKt,Q-;hL.ZcE?8V4[W9hC5.P[%eKC6&ZeX!.[1:[<U/,9.*\!TTUISc:X8n=A$[$5%dVGuj$;(;VliOE:E]OFi#K.egC1&p55rFCB`C^gKlN:h]GB+G&n5f.,0=t!AVo&WSK=#oE3()n;Yho+O^#2h\T%dn60cHlk7UiGT%TZh'e+D>FB7RK0kDGr?j#?!,)>-q!_TB/d+,#Bk\Q1UW\SIj^e@i3@bFiJ'^gRgS(G(D>8KDN_RTqnA3_orr$dN+:njsNWlS4?Ga%Giqq.jkaCc6K!JZ@435,&iq/r;mOW[iWi<KP1AcbJf^.$B@U2BhOhR1`Em^YL(r7dBe/jj2Wcp>&B3,W(fAl2c.$[k#6G6Li?h#J%/+P8ENs^gsnXo^\]a]%1ZnIm6DWhQYq-5@]_9N+kXTN(g7Y.HU?Rq]Y3YbE5ca$7R*=_ELU%F2R(RTA#f%"`uJVAbXm;A``.<0g6%RO_JM(WKls^rU^TerLb0b\1]3gV?:>Q;T:kgh[TX2]nbE/EG%q$qcHnC6Z)$8>WQcfr,4_6]-Ta"SSmL=F>=D@HK89cu<DdbW>8'%iqZCimDeB=V9KdF&A@=#qQ^j6k+sc,`0Qt"j*]k^9_Yh0A)N*ETX3YKa?XA3cq]RFb$)$i.*R1-fJ\)=<bfd=VTtd0cYk&3\:)AM%'-$@L$<9:Td<'L_(!f:!+O)"pVj_mN1Kqa[k`$F)4rgV0o7PF?[dlL]Bf]P6b2"?JW\(Y=*CWKO;&0XQf:W7UTm,Ad7+mP8ir*0J%B^B8FH$PpIVgc+>nM/AQ7\;S<F[Yh@)lbW:g#^/&/lk*>RO`oo2!ir^4XGCK%Z%>2^QpoZljS!\'A0>Q(,Q[:R$^(7GQSo$oKaVb%(!6r=^;D--c$FJb_WVGq(sqh5;U`ZS+)F,"oQjJG!#AI%_^,NZ=cSb667aja8(5$g:_JBX%l'D9J;M`r<(o0h=:i0>ET[QQEsT`#%10e?,T2BF?ZIQ>%-TSM*9r]KrN@<b`B%Hka'cGBi3qCn&aM?BZ)-:HC%taNk2dV^iW!APHN04Od@Mm"E&1BVa:Hfk!H4]o0\FHRS%TG.+_ZX%ID5#s`G1lE9;pK\reUacJ9NDju!\;*$fE*t4PN6eFG@,gfpl%g84mX#Gh#UGnXl.N$O!K9n0fW"$6CqB'q&m`;kl9XF@%`jLmebP(<D^V[(D*SFFXe*Z+<`GN2Fd==4\e'-WH)gMcQWPj=1F2\Z>r^%,ekRs>)qf\MZ,";#/@P,VYR)$FG"tD?)I6QY1<2oGj%GLq)/_=Z^M](cUI*e6\D2O3q^k11,PX)7V(V_45A&&9`P#MgmbI9()S2GXl2joc'r[EM%k.;ID:M%/3FY)Q[75qT!D%'e585[qc(%<Fm<+TnFoI&1`/Xm3t_/L9WMe#>ABp,s$[`j]aE?hQ"[UZ*@c((\G>X8k3;C&96-b`\eUf9j\GejM8_,5r%m4`ns>2@["T^5AH_s%5hicXTDYf@0`Z9<(:%An\%)/Ia)Q9_fIhGFP4-k;C7K9)-aDLe3"G^0QG8_b?P.2X@@%fB\*H>JXS<"?4=4ILkR00!YeK<bo5i^W%@6IDQCnI*Da>kQ_:\lK#0rPX".7M\+KbS06#3JDmq/db8GIUWLTQ&\o''$1YQq8$4]*16PRE#`;S,3pOlfN4IZ'M^t./ZBTa[IVa%eKB1Gpf\>Zk/Rl!4>1.r>;lpQMFpq0CK4^aj_VleZ3kMb>,o=ho*[oICq7>8B(duF&Pc#lR=hMi%<M49aLNtdqI"Tp31gNd,=dSh%:6(`['(bZhD=Q$:B?\L*<mOa;\1q)t&H["V%EFPC1U@bIn6O=fB!JC>Pf#J<IH"caHJ2_I-;"]d>YNYW+u]&TWPCbgj9Tb;ib&k`%JcR_bChHFHfbtAhbXp)3q)7b#;r>ljSgis:Z0$D'Zab0tH=fonUs*075@'5eS/gG[k>K5%EtjbhWVKC+(s$1B!?L(VIR[Q_.6>C6%)K)Uk5b;eKDs0J0mpjBsW5(YFmYW)@C(%mrO0>B^Ru"at3`C?:%Ue=-T-,lG&jh,mp4uM7pQJc[U)g.>i*9m@#<eJbJVlJ-dJEPU%r/6Z:%Y/lN%pHmF]sW7C,5TOMgi"76.P>mlX*Hm-e%ptPhtIhk[(riK>WiK'`!Xhi8>ho$>WkOpf^Qb9JcN%B)dbsfEbjtWOaY9f%\BT6s)<gjURr%__6B0K(+BD!]er)G$/5TSfk"<[a6OlsKCY],C@VcVqoA^"bWK*?-J:WFRJ9;#TJB?A$<BcHO%"hkgI$CIL@4g"O%Ru,20pDTO`hIc\?ic>E;Kc-LoF\,\lT@&:P*og7ObnWh[JHR(.6sAnI*K+#kq8e[j%4,pb+sjWG:T0U^VkP1fIE)%15p#^W>PB>U%JaI<kH@3Umb?>a&P_oh_gW8\d4nMc+aoP2P)mqce>=J1X`lF+OZth(*`4h,WF/YGDfi2/m,@fk'q8mPD''O%ErI:&)J;r^_]-A*D%$FQ/?S0!lALlJo&Q/01(<]FE$L3h%&].T8mQ[0%D]0j9Nn(;c&JQNFs9beJYFC^h%Y('krGP]m`!>^_?>ktG2MjCnFCr\,f%,a"b%LKI8E_&MKY7UVp1;r_\2LWE+T?#9/_!hph%WP>,E$;orG!8F3T&n1f_Bn9B8<jdWg=D/\BM$rOC5ZD2:o)-@N$UptWii"ZoCqd.'%YAt978eLVQ(=HXKfLg^nO]Y/0I:4QFp5Saos+Z5LfJfZED9/Ig7V,8/?R;Qdm3f>?eEV\B=CWF(eARs9'^I$0_nIkEBKrb;'+c]&%b]p14rXBh,rXIVYrscRreC.0#.38,AOim:3r\U&^B^_r",tu-ZC9RU3&+ka9$4d']#(nKNW6ImnoB1*m/U/W_,:#F2nZ+YtTFk^o%nuiRGle`2Oc_*Ya%^]emS&TF*Uk:'e7<\-NA7ghN+XQUANiaB/KjoNS'Xno>TF=HfXo(N2R(j3$m4[P!LH]i'Vo;*=J_h\gW53*p%)m/rMQn`%:kjQ.M++HNBXrdWk%2.UI!#ocZ>uMYL'DAPUO%Mc.XS#p+PrFOR.0F>=]"a>L]/;C"O]*S"3b3>0[i8n+8SsWgf&oh^%c'f`.:/hCTjX\l`LY?/Y^C]OGLYH^&KIitQMl9=8+/@Q*?u,(47MN2$LOYX_4"P[RG=d4I';NVHM$uUQKe01#NqPW\D4/]H;*"m@%mJ(BEDbn*:f;$2!<cl$\UnYF_3bIHk2cPB=\sm^s+MT'k4`]BuVeR=P/@crI_bDd:-+Qm3hD,%i+WDr_*X!l+0\!M"a7ZDB!cu(-%5cQpWb2En_+`[`?TCn>A7:dJLh!g%cAG,9)DiAV#a_2nh_(?24*N=f%*hB-&*Dpj/\JCR#P@t;j&is%#6t=Q`QQGT_,eU1WZqG[N%!q`JC@"7L`JT0])eSd%t7>K9*_7[-(R5t?%qa%q8*oNo5Cc"^7:M)-I.E8j7irP"@7g;NULIg2>2lK71e!S]cQ8CR5ae/,e(lh9Q%4XM[/UC0I^X.B[-Q?4$r81+dtlaOfkQW!:qc1e0:'RsdTrMZi9^pR-`**5!=,%1j>6M)F*K(;/@<h^2'>%(Ss0!P8T'Q']\)JGG.%XlZV"qE*LOfA3&C*?%I1r\!?PJZ'Z,\K_rIip_().C#bW"L'-]5cb>M#W4aq]0%2CNofeMMuqC/Zo)LAIPHY2=,YDBiR"B2S*8OE%l_s*Ad;V51asM-eS8Q@>k\fbeh8dkh;SIN.Tt]=3(t`1\1ggLSl9cZBfTHk(=u9Z)buSmtED`f(aK.R[As01[9M')F]7"3;cj5@1%nl[0DhaQgd5hQ"=MtF"LC^.K71=PGE:RBq:6Y[U22Z-jV*sH1qBAZ/<VLW@&"?DF)a*=rHW0^,1htdjsO#nM2cR4Ss3mKYj@JjCo%7%qQ#1%a<srMHQ`%*Be-d6JD4UM'&\d<L6E)Z,tXp+8`i,XCoa/.n?m5Sb:gZ-m>qe"G4Zh.2>m_C?^W(-IF-Fp+PbCU>?>c28l3%MT@fhUR(ZX>I*HoRE^J88(^?HOI>qMH.$aW<.!M79ES[^%.0=9S#7Q"Lj83S`V7`E3BX%0dOm]DCs?I/nd+'A0tUS@V9nhU5rUZI%k;UPG7AJk<To37)V0R)$:JPG>@XFAr)%fbc:j?&.@Lom5!qDHms5Lk4<fl2Q]]=_S.;6!0<PQ[4PkWZiZ<<sM#MlYkGWspUV_hYO%7N@8^g8eT"nedKp2/kqqae#+rE$\9'Xqi-`2G;2RBO^HMAVM%`X2"BM'?Bc4/_NZO8GN!62LTQlS=\i:dtk/a8UIsEU+.2ikHA;h%i%m?@DrmBHZ\=n=[X.jfO]Z8bF7VB$/RXMS#018shPqd)6)=@qeF_]J3'HX\Otr7k`9]cW2Om5H[aD3<3R5lAj_3[<lY?hIHG._V%obdh?XUkH"!QQ8O\MXF`(C3`jgGAqkRA8].c5o(`FJ.)"%cupR$0?""N#XFF2_%9SU>AYk(Hb[(OJ'Q_I7ftm\Rld\+$uUidi#OG%Ofbl[H85t?5GOK/;WZPi&^LJPpg!ubXAaJuUUrD=M)H']q[`gZ7Z$C:kjSh8(S+?bW'*Rd<)=ddGX%?p.n<0V%a6@[LFG-+."cWV%k$&l#M5"cY&O1ND6Nc"(Jd$6"pl+D;j4X_I(1h^^M2=Ct&hNG/$CCch1e.Y^jHoi@2s`1?lun5r@,P!,]fnTSk93P'CWmUD3^&ic%Ju&l*g\!:3L!1QpGt/ln#T+:LS4:%p`/C'Z"?$PX:_>@<D>4[qa;p*DYXg`Z/SD;Y-;P95To*[,NDPEAV19):$<WuX8Icm%Eom\l%.FSQF*=rlVW#lEb\<7*uV&a[58WOEZ]J;0R?qFsbFen6\n#L-d$n4b6LZIahN2dKDW<M?+'`:3=\,6j+\VT9&P4oBmQ)pM!$;M-P%8a)-.Ae!"X7#X&!^7M#98r1R<f*QINH=kg0WWtC-l$rb-mQ?:tW+$t+P/%:3^69XZ=r.#_plUB7`9nr[lKqQ0Upt&i.g8-MEKdiH%j5EpmOu.pT;!mfOX<+*ITE1hX+#/j>S7?t\`'B2VNd8!jG`L*;43@8PmbU7+n9H46Ak)H]WC);-BLQ]L.A_o@V(qR.JoDqI^N<+n%#/NhO6USuBUDT]E.O,C?)<;/9+r1bO>@_bB&_\["(.QE&@NW1Q/ZE^-#[2+9.S\)Aa$_n:Q-MSL#kE`-:L6+,TL4uC!7!ZW(5PJ%%6FdYd@0ddh,8Z+QCdNC;/"&]daA0U]f!\)W,(>c?X[MA1XpgdbI"\&D"2+8M-=#N`qGACQI?+`,m%Nf2=&tJPMs9i=;dlS>'F\?Y%S6?&gO1o9DhW1DB!:(>fk+n$aLUd=]G_R+GHAe^KnG4EqG)NFI>WN(&[n'Y<]DIWpldTmn8phAE7^ucn>(!AE,2F_\2fD]@!1uid%q6dXM*$VdX?$<srg$84AQ+f+=R:QA1MJgT/B1QN_';CiW<[k]L*Hf8(AJ3rQkgd:>-4u8gl:&2(D;6Kc[bN5//p;2;p"P_M^fIO\%kZVa/qlF%SgZ15$'@e%LRk,aA8<o#Q_FF#nU6]aQ1#j;6\Kh:rM?-[jck#TN:tS>2;VeK.[aS[mqsE[MJ\`.LjE@rq5u0f6*7m?e%TKUH3?0gL?F;t2np/Y@)Ipn!:6Z1OQNP<'p9qLm12,s&-6eEL`_^<q24(p'OTfO3U#Jcg^WDR9s%X#.pBP8I'FX%f2s6A'RE\IXs%oV&60jG+_&VrGd].CEpp&+HE\kIOUkj=Ts%M9P.drIO(1ECb;2Y_Ik0jNa==o"V)'eAQ;db5f>@2#66tofqp[e]<*(W9LhjZB?$*%]B>jFVC<I(EDPF@_Tu4gi@aB%i&Wa6k:ToZS'<[Sq>ft_/%k>_1h>Q_d=WNMIC-Udmj#^%qOVB$^$`_K-^p:'+2GS;,&t*ia]_<\%PJ(0l83g4#_RI=UH$_gK%,<F=$-8=$mnp.Bqd!o`NkEM<\dE/)87r"b1sS7iQl(k3D]H_pE57<BP[BM!hQu.A%#skjcuO#SQM<Fm%=Epa`^65ghFi$?kbAI]/jW$giHhnk.ZVo4So6[Y5KVe3CKoi-%_,l?TpF>*u[\l0Dma[%YAOgH<h(.e_JO$\eiJt\)o+.h9-!&b(%f!B(s=QY/):6nJ,QI?Ff4L_7'\s?<KYn.Bd@)J=C'3]tMo\N"$5/^if,1.FQ!%^M0ElA+Sgjpqr8g\K#=K'Y.-YLmq3O(uF]HpaR%Vbq[?,cOonY*CJ4P>iO2;jF@f#C.,_)O2f,Ra(ZFBO*JIeJc_-4st\mLNU9J'a'qf)$38CT8%l"S%U6UcK6M_EFBG(NQJmL$dP'8%#X+XrK[JGX6uCXKBem.K;7c52TS/#AhoeO0^8n#nZP@hFj&k:!r54Uf#13Le(BXt,-GE:jmLRSJ1mP)NNLiN8@LZ`/++>i>lBV8q%C\O?G(LnqLBW)n>(Umd#_o^#>(2PLm9[;=.SmkpZJ'D,2(3+[<QQ`8t\LS<!T&?8^r)anX*3:3ZJaF0`q'DQVeN?:=/\fVMO_2,-%HLPuQ*E8(@k7&Fta5d:1rk\LL<"nHc,2bk]pM5P>&IG3UY3_(RiqJ\T>,Bq9N,`4*BY_&W31,j'Z/an!1X(tIGATeG^8I$4(<j;,%4Jqu$ru^kd@T^O5d^du%V4;T))Q/I\.Bms9orP@%-[=LhT=CR8V@_O$@&N/.#8W:K1'uQAq/1hcA33r'*5O2o!5n5pH,2TC0S`r&%N<+Yp224F/S_T)61o0H:q=/na_FZ\B(OGIue.i:'Nbs$\%nPo8'lia/1<WK*23'-fYi1ug8)A,PKrH$MQWF;^DBCE"@_TWQ8ND7^%!:$"%4M\Yg7CX(TO8YoqO/GG"6-k7p2V[Q8%Y2&Pbr4R>O'"T:hn#QM`OuFXe%1t:%L``G,%p:\.VcE0P*,b2E<K@Rdn3KM'c>cb%MY(^U8etWK,Z8uh8M`F.//i-"*KL)-:[PO+Qm&Et`^@SEB]);7?8'0_,le^o%bqY9GpgY[;T/FkfA]R#/$LC/XWn#2"[JVlr*6%T%HH7#2qlq?e1K1P^FrMLoZER)(g&P5K3MQF+lo*92B)>H.(r)B9L`9\o5I-lK<+j8Q,Jsk)=0!;ug[4U##S.YUbheP(b;BFg$7M`+%RqQp:SE'cPo%=e`'U&Xf%3?<pa)-*_VB4G`WM1==WmpPCQ9pmCE_Mb'eqiA-6j"2M]BW8Pn'9i+8X32L6D'N6h68MU):0i^d`M]/%]pt<.?\-Wh+I6^B@3<@i^$']7N$13ceP\)b7B$VIq]kPhi:g<a_("hDBh2X2<'5!*iS8`?)>"cniX[T*Z\E!d.NHg,;LIgH"8:UM%e0fnk%IAD,;Q'h$\:g_(6H0PM1pCQ+$,5"6&k"8VlB,6O0@!LAW/A'<bnNG(]P'R.h2q+=o;/+s;?EVV!jHp5Qhr.'e_DccK<e!d%W'Uo*=_\Vq;b1p[[=G_Q(@ju#%'?4BSnb:NWLJso;\,!<[2tSdnX;$M2.5BF:ki`l>:mgeeA2YH1c2ZF:#KQ9aJgHuM"Qfq'T''0%6FLo=(Qc\6b`,TGJ<^g5P.42"+&2`Ed0j4N=b3gY'2Z=Fk?n-k98`I?pB\6"Jc^H$"sjLtgm8NVeb]M\Gt<+rI4mBfH,q-^2GF.8%a:8$Ai@Kb\]iP#_;]YW2>(d1lq+)A<\d;V*nTIF3*TDU2#eJSH/NN_JMCHVDE7)*.K9=?*dre6M'#"FH;SnALh\8jBJEFo1@HZ+O%>&:b>k1L),I"R_(Ds5uM+i;KfDmErQ6Jd<4I!#3$>AaS`6,B_t\/Ab*`#PGa!K;t,@@_"L.de'?bDcYBm(r4)ndbB<!?sB-:_a,q%<\T7akUM+nFNpHS!4(Bc^*p34!]6us[[&h*Q,#lB_4j]JI68ha/9`o]d)(j>d`^Uh:>iZh,b/AVV(CIoju7<$fNHeiE@l","]ha'%8.)eLWbG$QE2I?]Ogg1MhJV(BBsSH%@^ZtYJ)!?<m)io?F29-4_"C>_N9"8(S;3Z'aeD5@%N)fhJIO>A\Yk47K12)WAQLf=WL`HB%1+J$KCLl::9.oBM'$?"9,N6(4<kW5f[3:b=pP%Vr_J$N3Kd:o)(?,+Cf*"Pd9R!=.<05pL\cFfg7j_Q9'*adZab0/dpJ_,=N7sQ4%3$(d29fJTR(tf,5)Y5+#`qL(@*L^k*Nn9:IfNtMc!=M=co!jbp5mhob[u7+&rp!WnCoP"&"]9QeEmrLF!]kpKeG/8?#>oB\E`]^$%,\_rC&)Qr63[#SoW=_Q1ZDVZnPP)R;dK&L#YsLC!Sef@c5"T=`fLY!-SSRksI7PPuC1hL*P9cm0#g,PZ,TQq5)H[I>kY_<pnOq*f%DF_mR;O`/*6bLhkW4%+&%9-Q2)DR<_r,f*>72^fA[`]L=>4^i[UE8^AS8I[r&Lb\KFdthV)Nio/g%qkI#`@#)Cc">dc)<@Od^Q:T%"!UJNg1JA_]Zp6u2WG9]`2YQlY.;6Fc:jJ-"W:Ms0GcEnagYjiT0D"fKEi)r]C`or$5OJ'i4eZn8?DuV3Q3\+.46l7dNlM>Zs+gk%Zc1P=7$FtnIDgV&dH+V%-`CB7!T\173!'jgY?,@/7SbIa?>[1WZnZ_Da2T910nZ9KL'pm%Na\"ZU><g[FR)EgC:fHClnQ/eWFqZ`%i3+3V_^^=03/uc'db_pAB@:B/@0RgQSJsrZRm$2RV%G.M*d:t3DM?3mmOQ`r^"MH6e(kC&<ls=gj)]3GMD`2j\.]'E#6+(g.f9nF%AtIP%$N?=TY*L?ChUT5o>8*bUHC)CkVc6`FP\Zn,``$E[2&OiQY<WfR7&u<V`]n7kC?&=%@Vd.7Yp%dM5KPL:jLUn;dGGEXV'(Yg%db*t"+(\G+g!IOMB4BS8k-1mM-$:E:")[LT3[oZ/e6ar$';96!(YuI?VMe:2UD,S\CNADg3nmQ#b)as]OaNN\C>(HA5>-:q-).6!%_d4\47*DjcB&&`32C1LfS;iAS9""N7=\=NIR^^;IfIG%"`Ud%*P%2a%alM$e,f_81FFV3:eYY%7hr-.:^IBA?6QIX:RW.5T^2:4p%B$6;1Xl`juQRO^Sb><iu";RMY*Oq:O2!+Jc3jT_KVAQZ^VaNKa:4>l$o#5YmTJ0OX9mZ/\=>A=p:@6`j!Z`8aWocfZ1>CpVNhQm'%dL>PWITC'm7,&00#YRUTJ_gjXX[\njGf<u87$&FLVhcpYQ(JoMe??Q#Ur(A)L#Km<Ji%cZan9G5N@7CVIpfVd-jNl8B"0,0$AK#Q%-rRe]2E]H'=@;F]f6q@!@@:7'C@OTQ]+Ld9`=3A!C=KY-dRR0d+"D!i<s(jsN*+$PgG%@NVGRqqU7dJqB,Y36F2ju4pP?&Kk6K+S%5Rl9>S`'\glASbK*n<]tSscHQj[\4pRKLLP26**[eA7_D0,g*O)qn^(0pG2qP9]>khC?lpS99)_/.]n)9+L3"&g*rn[;=6(1</[:%OJ=P!Cbb"A?+@aP#R;7cZ)&HF$%5df-n[0f%BLS7hbSEH!2:W#/&^NJr&aZi+hH1iWYt=1r,$-"n`UPNd^W*9;\9kF:d1)%/u.QU%hdr7=1lTTpZHR-Co#5&<9IJ??s%162^,2:h*'Fc[Go[[pc%ST?!e0R:P$A\hUC701mil8_O%-?_MCSs68>i1(cacp$=?@\[&j\K=%3uJ_QOL+md`4hqo9.p)9K6"LI4p>_\AkDHAS1a_5#21cE:K#-h]h.GNgj(5mcj4O5ruE/4YZEYq<!lPt6<"s<7/(uQXB7c?"5Yj1%8?Nd#Or[#uac06HF[e_j/8l&Wha@*/&8a*^O.@3LACXDqN<SeoH.UC\m33^MC'GVkf$0uR2PW(_27VUBiYZ^BjB',9L$t!rEGp0M%pd*4R\p\03`N08IfAgGqZG#H@Eo@?\7BjHe46Yo/ZY(`XpaAJ&]++,-(8#'9#V)h0Du#M_$YFs;1WV]ooh;Ji0LrDs.g@jr:($+k%FUi27%C9j%B>b]<?8.a^B6G9c=)`oAeeR(dQ$roTUa/?P&,fqn15FD6d6qT#!&?QReC7;66+".0_Dj>HJjU^BAfjJ[\AU82PXSUR%R_V*D:iu^^DaQrjXYk4kUG6N:bnJ%<0$$H+bf*9!e^JqYMgZm^##/Y2r?N)7gsI7Z>RhMP#C%CcQuN]8hrPGl6?!`E`]CFUA[+GB%O^`Er-]2o:Z\k;?,+7md;gfI%XYNR`0F-nF/X!!T,JHNYK0IF-IQSOgMiK!D8J"P1kfC,dK,/J%@VjfcE>0i1kj;W#/m;:4J@[MS%JWkjPTeX9M4lD;r<2@nE%Z_E"_US]s([Ogn&qa;./T=s$IZSOeW/S@,kp\<Al=9lOX>=&^&L'$94AW89g!osA+?F;?foA=DZMSfj%']#!X8]#(tA*BXak-N$pBNh,#l*lN0-)]IHD+E!pNI>C+cQaF,9qYM,^Mh9%cHkG/Bq5^Y8G'K^.Y"-`g"m=P\aajhS\ZkG\"Pm7%DJ,5As84rl+tgN7C4eEoP4j(%9QQrO)uY>$YHHUT:gF:aD6Dg30TCWG"fFo6)4F4@h!"48OO3VRRCPZ_(<9c&e?$X6^2A(3X4&,G%W"ggE-(%6flq3<nU2qhLJ`#DV0CDD3kIQ$cn:Neai5m5Z6>MLLMoT21iO]^0V]65IkYs8l$l!-;><EObl1'F8E;AF&E3Tn731_5"%&Zc`b>W2&[J9VR*$i:B8H#RcdLo+*Ok2G=FU#^eJRS_E;7XQFdgc;YIJ]3["!4iCtn<gBbp_@1/lL4@`k=C:Z]P6kR3Ghc!X(_bk%hNtaI=&'0sGjV\fC\a^X3&nT+bn1c1GS*%Hf*,P0L6s/dXbW/nkD,.gqZ2hud.?'Zk,sk0iq>DUoP`o*7KhA]Qrl^meG'm*/Zm9X%F47gf==Se0pqq&h_b:B2HV=06H(SIUDd=+.Zion>V4d+1UY&0JaKp3>+p#PE))Nk(@^"VS3G3G:\eN@-FgiOE8UF*/XOXO;PBaO7%_h1Mhc]BL/^UhOL"lrF6e`=ihp04X9:%;LgTB1WAfZ^5V9MmE1UHGgij<FC;G'.$iEfpfe>$Y.p("bTV,[8R66Tb5ne];U[5`j"h%&eDD)gk&=u(OVY76dh6lF'%Za[RkB=f]/)/VC8OI3E=!Z$"qWjL/.Y!%U)P)#.&Q2KQ\mncgL^+-tZr+pV=3<BETLt#.A1k44(W,%b?E@l@2&YQA02:;5#J,.[pZm:2YN&f(*b/mkMF%uQuS2r/,Tn7R]2E8T\XlW3;WYp0*+(p!nA-]&R60NU$8OV6(Z$%h!PX/kKJGp%R<C<C$XG^&0/8n&Ch&o7e7j(kFCaP^)?Q>"M#A3[3cHig>"]@s!Tb0_K:+mt-ofS?AVrMlApFAVD%pr)nQX,QoFg!NAHAcI*"[O$%G&YQ\d7(brI;U8T-'K/q+.+WJF,E,l4Ib=hpi]gT9W%TYiT;dT%=lrX$]$?+342i,@LXt*A4HcuAGEWam'IoCJ:C5R?G?\7NTqJo%J)af+DZP,-+ik>(\G!!-1$_M.Y>*$5Ilf[ib5cguU^$Sg)!@g'3+-NGQ#WBuBYqt!W%A*k'bEclU6C@6$7[e_DNV69TP@eQ7!RJ<%2n`o2P/T!k-n\%+\!S'AKP]%U;uM-6UJ"JD3"qVr6PU[Gesd25JHmP?,?Mlt\f5:*8@a;8hZRr5dYF@<$=3=%:*O^,M!4CAk^o4]%F=n]FgnLEW909qa#XM0;dN$rc(5#tgPAfnXWY12lIgfGGA6V`S2s(Q5XFD@W!2VG9+>gNco($9id\4TE*d'j?^mWMc^)PT1r/A89%#*_*/?c49N4d[(oJJeECD==>B'Lq'#%ZeC;`1HsjN&ErA1,'kp%!'S#6A>A#FP)jfaGXPA5nAmI#\)M2Hm3[:PqCHo8fF@:0c8B)%.jsL^b<k&Cg@tHO\j[-cXUqS+aeRQjIO!>EU?3l#1\@+[\KXlTQ3N#$WQ-!Rc*n'hWSC?20hCjFU#LsR9rR8X5T.f-+n6&cKV61V%CJ.4T4GFPU$^]L]730$ECrKjsgWH*00bZfoA3Yr!J7rdaZ7(6:DEli(PnRusr"<+/2?$^!V$Free46MB&F3t&@sA/p=k8]<'gUPs%7nU`#UA"1L4W-N/eW(?7@39(0o<C%[RL*Yn7`s<_np1SfBTjD0$Q6[#gNIP)]@C!<4c^Z/eI3lp64+8]O.XcNeiC$/c[!+`>N5r"%/aGrA+@*<859XWM7u@]UU1G@E6j/=[bm:^$[U-$sIj/u957!WZW$RE77:L1LgkA-U*ccq@d[u$,rZX\\G,.UVTDrTU?lV<fj$6e9%dUN6!(k;EEXE[of5bqh6('M>P\L#\..,G_q\55mhl[t;uo`H@%QUhX1eFYhba?WYo#K$2_*sdcW5EK-@M3.<r6qj\YrUC+j]2sQ0%+P:]lf2&4B"ursJ#;Wbq`XcMCL>is*`Tmrl%tocO+sJC#7FlcYM3,OOH*e\fNULG"\&cY$ZI!S,2c)#hAY4469(8b(]jGOq]kbt"%pjo5sPMVbOQM5;</Cp3J2%h(sB["N[<PIYfLeYTF@d8B#`'#3#SI"E(I`r7';u[qTn$6\$dVah'6+oWCD(r^[mLaJ4SHBKN%,Ma`%?,?=uJh;P8Z2F<eitf2VXom[>U,mX\RPSSeA7SrZmi,b!&lS:jFS=IA4WL=\#Yi&qEcLJJdL+[6DTscXPGeS:aEG=]<Zn#'p2$+U%FiU.%C=Eoo$dJ!!Y:Q$;I+0<O%!l1ZUFIkf^)r$.]I1.%Gb4Xuff_a&gISML8/=t(=6C4$m\=q:LD2aA8bj3Z$=:J!_o]ZKC,FWG%]WA!nRrB,<<IW^JgmE+hR)COQpD`1HDj;K63:Ps+`I?@<aL4].I;hNDWSa/o=?P\/o\g\j<2dB()8QrMa.C'dl<W5D,Y\TfcqI(0%WV>f*:(%fFIeMaKeGJTF-rKZO5LW+i0W^-9RVCD"=F'SDHkfe>DJ?uVa><]6Z@Wf/=$q>djEX&$o$\-JVTHf\^Y@G>h*0)T(R].7%WV=Bi>.I;d5Paq5's[BuctA_<rote:<Tl^?o.l`L<0/_3cD!k4UIYbh$csk/561uZY1-9H^e)0/qd`\Ld]VB%gGq0T0=Bj0!Tg#'%!]qalk\%sb)j%O%TOC.G%+)RmjGODek'/F!O9X,Z'FrA]J@qF!"\WKKf1>o91\anU/A,MD/348E<c,EOpb>_@%lBPs/h*juQt`m9%cq,)gJ%egif[8a@?9D.rQ_lWhg0U8gCN]T#E<7se/q7om4^h;Q5#\n1M,t\/J9hTsMF.Hl$L<Q_(ColY7=^mcFo(co+QD]C^Rk5:%c#Q>3l##72-9%$4&a$htGZ\Zo%R$Is\PK+LXIjq<FP?`qbUgD<_j6+13$o1\Yu^qX=r=s5\O-*7CUm6-cdL.R:#.Bp/W/HfZ'7:a%@]EtKNckonBf-'8;FC0)30M@n#R<!a9%KS_cAdP6Z/tcm_("!2TJ5OW6l1WekK&;[JM15.4^PSt>s9"$fO;lm6$i=f(4qXQV9i:q%`ZT(,7G>=1Of<A)W%&OF@!V[=Pt74'_0$HQ]9J(@3rfHuT1db`pMr/F=LG$DP,=KY/[2#*/2#"JI/$/08qJlpb:PtG#o$aF,!/dj%HMCLf)F9n)!84CS`%C\^;j;m`VtCf;T^&O,BUg%X\CY-ed0.[B``5)aKU+bj^uJn%ep@N'O)%A.lEXT0%#86!QSR'>naY48('k\B%Rq`C"P.8XO$E0;QWAI?"RtF1I).0?]EA0ZC<S-=?dR\5aU:rJYl:[EqG&BZ^+]#'4q',npngVh^^47?>;siuj5j6)?^a)GY7"K]\%9"YL_W8<qsg%CN=daFq"MBa1`hfr(!]QAS,Xol:oSVg\!%,jjMg92q>WqZpb;.305Mo6hX'mF11R?5B;mUeHk%-e2]6^mgt$H(#r%mA.Ud+NgO3PMG`:#r=SVANf"<Z$HSA3u?2*jjfpmX'or2N>a`2;mJfNbA.*u9+"i<rrJj;NZ5V8kmNF:R$pbQBp?p;<QPS*09<\<%m02^i=@;j]95!he5Q2)j'F>21jtCFQE5:-(W>]_AD#V(9,:MU5GZZns='Rc(V"4r49[-p':/O]]6pfFY.j0=]4=hA,$;sOK/Zf*q%N#fUH>260Tql\g&ldcR;!)tXqoY0)G@L8a5DfQE.X..fASbL7+T#lisdYN.KE'X7L/7%b=<-IO>f,EguF6a8s2r@HEC)r.:rF$&#%Pd'SNp8Wh($7Bt0rQPl7pe\V:+`j&@H,hr&>Y1&oq(,^8rqPm7>L.MIK(UruOOQ.ri;qs8/1Y]T.m9R:^Qt1L$Dtt3P^h/:R7/XJ%4hsT+0,Tk.Np0Uq2'ZW+[K$ogfqKK5"6)c*XRHdYH5#"95%fE\eldH377[1IU7(EAGUW")IWJVeKRLl'm.Ubm_csRU?a;BY/I&t7%?8l>:-Xs;1bV-AFW&"RUU#T1Ze"HB<nB!'0C/u!gB9tu_G0\^A\#MOQlg\%63p.:m[&VNqm+/_S0FUV8Xe*_]ip]@q.KkjqG&@n)%"gOUTeBm+<:=R<$+T7ACU?fh?Tm<@H7<[<\+^5^$P/E$][c5cbfU'\8jPb7S--PFo(gh[@fCP/S3noJ_b&\Tup^0mYF^1d\3YPYZ%E?4Joc;ee6%[^^=-e2>&_'(lRaUIKqO=*MWXl;\p.f%JYX'&auk&cAYLY'L;9,&+:7m<_\p7"PWBaih.qYO;&MG,h'?O^sb-<r3[%1FE:p1D"nShInmi@M%Lk!pI%pietObR.m;YTAj)3%+D]oXk^DFTR)005["HjEo/A%\6U7cS@<=G0@+E.2u0$ibj2i2RRC;0bNX^q%@E,EdllW*`;1YcT=rH4hrPc'bl!9%<5[F1(?6<j"`B;i96X++-6J.Q-W[pL+]V30lYPX73GkWIJrXAc?V$u/f!p%'b1hc]0T8MlD%OPtL;;E+q)`)X"Q$<o]4R2A(s3m4J:0[o5B#Yo"lVcoCbW`R+%i]BSc4Bp0X=k[dTK(^Om!7-0ZC*r5a]pZ%SS#:YhaH\G[WQ4,8%3=&HG*cn'N(S>GY-P/<Up$Llf4?B]D&8d-c`NDV.r-J0MK8Nnchr6maDeX4_MM*[m-Y$&t3[M=C@MsM*@:Z!V_(0"?f1l'n5_^fV%^Y*.pGsOKW((nK9HJYH!du))"VDSWE-R0E20h9PP/c$9>'HSKDUDV*o5bNBo@][fh'$Y3T,%Nb<1[`L:,@h,aaCKEtREP:"+Htb7%N"1QoJon5]\K$S2-VM^TQT,_F-,`#OaVWLaFmI+602m5$\g]>Y!Bg1]YgkEsGnB^)*UGPi[b)Wf(ctgkRXNk#,2kqUVHFh&B1/6P%26Tk>`OT.]N3dAH/fSkaEJD<PK947jR[5Ip<E?hj.I.oZam52"pR78]2cFd7U*koE?2*.&H?`#b0lHS0KKI7&9Jrh>PrH;b"r`BN%\InGLJ]^f^q-p\k4_Krt&K1#qF()T\5>$CiL=BBXpnfhVd;j"q>rh+]ls$QTm:'f]rD$QN[[,L1q_HSZ'PM$U*=1kAC@/SY/PW8]%VocUI2U1;fk+!n<Bq7XOC*jldhmV./]%M(dY@YDS2=g).hMh?B/'2pjB'NTZ-J*0fO=$9)QXQdGp+8:dSkONl@OF"ie8f?P`n^Ji%F-d5(r\-dC>*$ks`TB%:`%UQ[gX;#2?@EPiCE0lm9pLX9GG3(M?4M#nGt3/;\)0"rK>LgaZ6f3>#oel!!DJpq7,86RMbh[D.p%j+%i@r:>V'5(0'htG('Fl3u5ZqUsp+L@)G'fp:>XLVpHd=hrJIB[#m3aa.+9)cG;sZEt"i^:]\7`A^"PQ2U4<>f$Zf*!<[rlD)L!"d*%8.ZfH_(WlH.$^MBQSU*6[pb@,RfA,'VBO4E]NJ<Bi)m\ZE,U4oZG_=(>i(o=$')9Oa[UG6TG3`:5G5Z_fB4)@n%NLnEI"@(q[M=Y%;djM3XB4DU4+bW79`$`"og[4VFc3[,pEC@cM]BE3lWNXPFQb"^>e!5=YB`:J],*TZl1KF&_\tsb%NBM*%'kWTIZ^C9^,`rG)?^Ga%/18uSg7_WLLVq-jYfOmDU="K9^qMWdN<U(?NHmO)jL`mhi.O\"k+\)Qf/,n?L#@S.HX2g1XG:e8/mgI$8#5nh4?8F/P-\moCMN@Q%.CG`N%mjNpW+Ef_^=n=)h$Y9G\EkXOU)Z\m0(F+^g)e69-.#^ImM)Y<jXN,ajk*sSG'KWQXrJ@m=VQ>,EYuWSiG(Lt;\rAT48_)J%?kE39IR"pdWE>OK\\2N%jTjRK:bOpR]]<LZlh.Amab'qe.uejGf21FHa^"S7#O)uDY%Z`3M3cic<K1@AE*\8Qgo9ah3L#8o"P7nh%0sqhg^RcT6VNV![^G_cBAu8Z=GU,@=3H[#j7UAc,*3).o$11JTim:1Vr&G3qDL=g;;iBfJ:"*>e;Zuc)90T3rN8fV=It9bAh/Fs>%\>b6\P@0Pu[u(mmK'$XuEC?Ii^o:+kn'o5je,I8O]-d?I1G=Z(cl!m]J%pb3>tiM<n`1M=`K];$%^&HrQkE#"!H'c^$=$@5`bc85%\;E3D@-+);.D]"r4sr/PLOLq3fYLO=)EV:p%oYm]Bd)JU$r_\Wj^S+lL/tbhA)D/W\@@!+N^a-tYJNIc)T'FiVsfiCU56SFF6m=,%EeS2I%[PPoAH8U@oXt(=X?F$OMDa3YVo0PT?t/q6Hu!GaA#\kHGO=0Pk$D6H]H8.tk1EC+<r;D;fLSS[hRgi[8V`q3-[(NY3Qu.H%4Y_8R#a=pDl6kHWHD"Ba6^[>;]K@4@4?.Z:/ZETbrmn$7kr5F9et$>II6C):l'MCI\`:=bWhL:#%C!&?ZZSoZKsr$qbq6\+_sGI=%nj4kal#U#,=D+G3$'K+nmFIQ^jS"=l#Mum0p7>X2F^n"eTFFU:F$@.+->4*G=fEtg174"_ToL[Sk6f6GHH$rLGC-I8&BoNgPR8jk%7<<$$[&(b/()nIl`<GAQl^s'q(Ple@g+g(:V8Yk]*5Xhs(&:<)F-Gu\--T(Q4hr?JWl`WFZI:WC?C^QD2de@@&I=Hi[sZapb)<rl%=AA*)ri+.Q`g\?"Qbdrio8rZTS+i.LWA(^tqHIN:,,*S)d)<d+j@H0GQM3gYT5jCLeSUE5!r\6S^.X$fJ)sj??d;a(6,_S1bnmZ*%-+LOYmRWQ!iu&J9i!cn$[!FE=,t'KQ%%5FG,7)-j;N'/<o@1iB\6d]\0F?Fl`IBFKC,%VW]B$SJ1M6o<dU90GI[Q2PbI*Qo@B[s/%7U`nfm@YAt_=\!7O<%8Xku\\3+W!I5ZH&deEk2gY@9j?e([d\@4)kf\X0q&X-qpfcfHa4[+DI^do"%=%&l$b_#]S$]-hQj+$Xn'g%G7P!4,Eu9*#1oju&#tCNXBLs6ke2D.^UPuj0[:BC51r^WZu+.D47+W/7UVUMJj[_0OhDBj3V`6N&,"r@J!Q",9FT\O$.Fff%VqF"%W"r;8q#jV<@pmQ.4Uh`.nIe$\g,r]6?*Y8$-.<E?LNKIRDql<5&q"Hb2=r#@OY7cQC[6Jo-VZ4#\VQ\)BFeb<+dTfY%BeOX3PB[=%:Y`cEB]%Ti3#=@;+NGLaQ!-LljM&g,OD-KumL!#ZVC#e'=tdQd!u\^[ASutp1[%UH+aG<9+#^Eb]FQK/lsL_a34!;bJbH%sW0\?Z%A0aYQc>fO4e_EX)<IlD_idJb]<jnWr6ZRS73:6).[&]!.\;Y+&:k7j<+&Xm9<RWUb;I]kbQS8WE2L5f2KMYb+nVB2b-S.]o\BS,&%n7?'e&TDf1T1m@E%Bb+GH>F6M=,9)PJ,sIX[CP+T-'G.lA40cF<<J"SD$K`Tju;)Xne,W*Fjgq)F%,<:@b@i)$@.jUi/%25.V7=V%L)G_BFM#QsEZ/tg,aFPQU7*>Z9Pm87crs6'=0g(A/m39#F@rd--$rbc],DQ0>cG&teI_O<c^@UohuH9acq3)^eIY<qr5M9sS)duV%0[Z&#7Y9k2*E-Gm.\X^9R-Q7+"0NsI)9MAr^T4VjjL\&IVR;(q\mLiY>i&0[Xd[V_-tilDFLo`Y<?%UslV^QJ\fS`<cd:_Caum!Q%VPlqN<q,[k%tKS[2PZFJ>dgH_goiEYbg?uR>YaLu(7+oXU8`QDRi9W7Psu!KPPpHg0Paic)mQXdc$:mO]/f[1A'jeQRP`0.e$+c`%;=a"KTZueQEo+jFh9DmAFD;G7.dUa]=B\O3Al3s,9;UH^1'G/ArN:mpo+q#C/;kpUI=G>SN4N>^G_WBCZ=+Q>+9er,[hMbmYK9oL%`R:nn"(@D,r4IW$aOO36PMR6/hpof`=kHU0ksBA*_OGa,ZRV^CI\0l+9h)C;]jI%8Po&OH?7mU#/pi=iacd_n'D56`d9P$SX:DHU%N<sHW60uMol'P*jL]\KA(WVM$j$^qZRmpak#,0*!TKEp8fZ$uS;f8q,H<fm>AOF&Xm[HK7T?i1Di(mIS7ABj^:IiIa6&S[m.5u[a%I.2b2Q_2t%;MRrH"icjp])A3;Q]HRlgr^P^4g@[JOiol&WY(0AQs%e3Hc"iX`BfZ?:J;-UG(a2eP"B>*<LYQI4>6L$2ap;&irO/3%;Y(!l9%`/rJh4*Pqb7E*^Pnc(dDQ>,#W*]5K'8mc\lQH.>IUk34h]V#qHmS"kcT/%V.tLn%P>lo2CNU":Y4+F:uq1fJpIm5)J>E+%,b&*t-uq=X]Xe:N_lIZVQ\G`\)a$m,R_$cr'VW))U.\YMA]P[A-/-':j3,OH"FcoA"^_tW$=`#9pUJ<']]2*fN\BTqn0LGgG2*h,%>gK6gWhh\M[h(dSdW$e#nP?U#?Ngp#hel&*h*F6[dXDp@QPVUSj9S+Q9l2Q>E@<2eL[L&LAUi',hq;DKWV*Dg\<.rJXV7#`FApBU%5?U23iP"UP;k+NBhVR4i;Rg;O>&2;S)J1#A++mXPVIE<TIb7:,(]CbL^I[9(Z`>Tj:fN'K%<M2`H)5=,VLBK5/;IQo^?*V4Rc=?V%@<0o8ZGm<=1m_f+.h5B[3TO+&Ii>JZZb1.%#Zo"gS.i-J>:t&8<F!osIYMU[3FRpuJUq8P]`(aiEag'];tMLs4s`$dN`0bh*6DL;%SADAp>U$5[[*,WA&$o'ZV-O_3K)"uKNV'G8ma?8[gZ>7>Ro_C.Q76:lioPdAV+>NO;EYqsfRZ-Q#Q?/!.&r\?EiYX40.gCo]..Rf%)nWe"bu\Xj]8R1h&iXr[h*S9hfuNK#)B=B)(p>drS)kE2_fqH<>41C//.Nd$F3Ces(GF?hC+6tML:Q8#?7g0WSZh\'[WEP8UIULo%.]`&gkOkW(gPZjX]T2t6D1kY)0*@,P+KuVf3ZK\qnOhd$m2:7T^(LZm#?5-TM^]C]GL*Sajb5l/4`(p<;-&R3?-Bi=Wkk`F2u>td%qKW!q7!S4<Y*VjORDm:UeC:t]EEc;4!Kid'Elf?jrXP+`9kmpVD[3)8XulNu[?jUA)b(@6VQRO.Jo<;hF^<DEm=gEPUD5ua0AoVm%<;@K:V&._)@YLtJMb-HRMTZ:HM\e]bVXM=^QT@M*em]jh3$bkr10,sMe1-r3(D!_,m2C)1Ht`6N8>/['d=B`qo1o#6Wtthd,MuEi%6Yt2[1YgDu.i>^UB*]p^KEVlo[e*9IA#$l+NiR<8D0UseVQ48>.V28n4!n31M>3u9)11/)g85N[R[UT)]RV_G`iDG=/R47MO=O?*%e1Q-]%W9oZED1nnT\0ogInR@Y.?iOf:.%"n%+"=[$W1Cecnl's@S`A\Z`Vc4GdBc[9W2iX0f1f`"Euke8%a7'pM.H3ES)@.fo\Mt%?;""0\%iUD_3ht;H.CZm^"P*$?q2iI>lt*F#kNttHO3d[2i2KJ=7O0qQq_GlHit*kC/;6QmmdQ8/Im`))>:d=I4qG[hsRoe:;YL"%C/M=RB%d\g+W>c&`JSZ;%F'UEkjd[n\"22C_Htk5=n,\M?G$gMF:I4&iW[CA\(cfWa@CMb<oO>UjEl4Jou<,;<7L3@%"Rk%a(`4$%10P4W/tFUX_rJ-4O<\0f+'rDuZ,M;?/r4YSjbs&5;/Zn&OslA/?/C,R04%=DBgoi5a%^tU4%<@%413o[iV;JfS<jc'oHiATf7h^q%]QbT(k%XN'cVm@?Y$=Uo/^c?hUo'G[@5Co:>qD.Y-As)0?cD6PjooD1-D"JNFXN+!<O=rup-\i*.2=,+QDfSPCS!RNA0H$X,$#a7%X!iXE/qe5L>FMPWAF1jE^(@)!Wn]<#nKA;99Co)2.m<\s>LERFV`q7\J>9B=R\UEkE#bkG=c&`iU2u&4EO&8$0bFVc:46pQ:Y)N.%$Aua=fV26tQ'&#+(t*A,c<d'C;igR%"_jpHY#g^2osqYhVr+@H(C-P5;pHJ+jWu=K.Y9kkV>]*H+$3!nEgZf9om/6A'6P66'[P=)%J_13.:-]:n+[k;_2b-RcpT_]-D6DYTj0h1MG%=m\Q58`aPL\u&Qikd8Y]1eYH+Q,sb/["*jq>%-Suc6oPX>Ic<'6LBKJ3gIL"?D<%,ps\J:UKN8]RqEepG9"'g67q=hG/L#@s#A.OaQT:06J`e-a+Zm@<J[4F!(Ig7&H$3'2>AUg1B*cj-(;$o_2:#.Ok*Rf@iZF#^.p-%`(hV*?^KKUV;'#%#\me;"`8eMQL<MU0RBAp166P^F;fcGaHfZF)Ym2TV3W"[BA\HHl;>)L:g`_p'Fn6t.!iI$")64F$JK+@<ETcj%9GbTi@f8e$&f!NRp_7erdRZIbqG!jQfP%-hRBCUK6c6DskOrS"\l]uH*d+gj720hhELD]G1t6k:eHT0+99h]+-Hg/&l*%29E/tKk%#['H8<Ot/\Z+/hV1(!X>"EBlYPro%dR.dT&`Bk/$Hq4#5'hc_QP`$h7IeXE#ZPI7X\&3]nSR+-TRY807PrN2`P'b\F-nKddO#k7q%$CQ]R/N:f[(Ek`[M_as.ju/HI>'5AG47:N\JjbXDnh;Tu8kX::PD,VT>?%$rkdFH*1k=#Lf%R.N"A)7oUT8AY#LkjWg=oNqkQ0M*%.ROa12HB$(J8S:cBj0c;4MD/:!Qr<hC)3JseEXd4Dc:$,2H<a-J>*8#4TPA-p,YPB\IH4XhhHTVNW@mY.MGWm`GB\(;?Pa1*seI+%!rO=`qrkG1#=Q\fn'Gq6$g"er!o8SpI]DEKV(\&>b,Q7B%";'cqFTnZrdG?\Y4SOReGSnsH?;dhakk:H[+^ZDH]`a=(B@^87mk9$%6VrcB7a-e?f$8K8FfD:O8>"f>*_U6U0/@bCB9n[&FJgcY92?berfLel`cm(Oj55r"1$gW8Fc[<G+N*EB?b2=-U]):lU-PLn@DUVU%jOB!CnKBgQf=qfXk460/BJlCeM"!5m<fsek1`eq4g?!]"g@Rq&J>C&?n>:N_\%d,$"o/W_R2n.;^1[);Z4`^77du4g1cMPhea-E0%^?OR(m,rad5-Mt-n\%E"8HB`$:#<hedceIfC70F7&_\hNe!T>E(@5d*auj#Y6lB!QQ0/3ekd7P9L7ef8I[(Ta#=GFlJl0'>e-WM&%Wem7\^_l@.pU#3\bhMF*;Y'loBR24Dh#LYm*Np_N'nIps#GD<WAI?.KX\q!UMWg@t05BLA\Rf/kMeVED!KPOrEiW1R$mCOh\JV3+%=>IXm^RtfP%4*gQ^]f$@&X\gc-BKQ4S^5(QWa:W!e3QMmpKB,m*#MZb95)T7?eSF>M@N.,'=9T`/0#"Wc]L>\/&"m\nT7EcEgmC+%:Q[i)$/2'O<;!M?8Ke"WgJn-.3Ae]MD8++3nlAMJ,Hu]k2%*r6^P@-",EYdh/nn1Z`PN,!i;0+n)2KJii;-Et[AFprl-m<lQ.#no%?S%;LPQ:g0#HmbcA8_USWhju+)d0CocK!/%USK%->gZ`'akjQn`3KH(Vcs#lpe.`)ZJ@!8C#!c#FA"?dAp#pQ3^Yd^0bD$hp]\>Q%p-Sq-k><<_RRN+!h@J*3^tbo85A[1MIC/9_8gIkG0_>6?A2GT?U^24S-68#Ao9"i&>K$<WT<Os&Ohmf6T`#DBhiWN=,@RKF[@\Za%ASt\`jb\8%j!6&<cBlEhGrq0h[[I;$4$FuTrm']:e0L3r_fmd&&Tg]r7WAaaYZ,!)Z^=fcAEd<#6DVA-q`g0bL?5@6)@*DTiYn&d%mf$7nqR'pY&9YDkW1F';'c2F6E)$kHXX_cnp<FWl*=Ia/S[Z3VMFW-0_VjSc$&-"2)XNtCOYU\d;[RV=(/+HX:iiS4&*m^7Q,]5P%RTNR>c_@Y!$b4!UU\t'(aW42uW59%6f&kkUQ,JlV"R%gDa8FD=P\#Cs7J0JOLUmJ=CG\b;M0#IRjfg%JX/'dt_`Kh:<P]hI(#`<G%(1T]ibl\-)G?&,=K3CGY'S&_/#Q,Or11d]"!<E"//*pg.Ih6IiT/oU<i1ScM*T5L?TlR@e*bSpRDQcDMb$EB18g-$TUhF/4=Pm(3%"-f;**U;*r?5\)a4(-g9Y(bk:4QV2s;sXN=r/o;c5`!uiE,(hPW7&dd]!jpaQbpjZ(>0=FjIhf:rW_.\J6de`&J_MAm$>M_#dlQc%"ea7ngd0sANC]:P<!@-8qZIC'P<tOqYI%6aG&H4n!s6`3r;d@tM(EU6.!=W)Ymc0qBr4/3VNLh/[EVQ+=sWOt>Uii3<KVChP0hEf%=Q>:n&Q!*9g6/rQ1(Xs7'R;FMKX\hl7T_?<IB-gf,MpDf>&IgGOd.[8#@+i)#W]]A/r5DA+\X&o%;RY,6eth/[Zr1N*cIG`EJQCY%rTLLAi$paW4PB]Lp$IiL3RckHc]QY@M@Ut"c\)dX.1nB^I8j+dptT>i`@EL7ItuYKK,>2Wlf$fDc>$$S3GQhnW%;LbYf_bOH?l:p%Fh%@9feIAVaa'$4Q01_:?ML@rWi+hF"k.OR&KVCD_c->hl?/)D;6J&RN-mAukc?t-0_UUQ%pqK4EqEq13=60rm3"cqh:[iR@6]6O%WaL",=E,7T[+pt%($A?+;cP8ED.`<5Th'!)q$4Pui1n%Y=hZPV.9E7NGWW]gUO6)7Q15O/$EJ>$Goi4//'Q8)iRe.1#q5+JMVFk=%)#:dAP03TGN-lTfOl4epbX@f(i9GM#7:S44p2[$`>IE/7j.H<e4IBK"N<_rK@.M$I2T$ZXM)D-u7(Dk".s2N)nB4:X4'+6g[7s7e%j`,I?ro[S2LZJRc<qZ6c(0p3'X5MQ:&L$(<'f2gZ71W''@RO.ikq4+rdDsgMmMRQ!Mk@8UiLj[8$S3RsNre&X(3DP':O0Cp32/qY%?YPI4QC6[9o7YAioX7.f'lZ@K23_jVU)G6r!=r.sp`i]J'rBJ&qbn4SFJd^mH7LOQn\,Qe\[)^ajr##Z6TS2,a2%jnmNQ3lrOk.S%UO&NR<-esqbFDTfZn\PQ:.G=IRU8X_C.V]mmT0pqXD$iejKlfi1@3J:\`@J?g7dKkJ67Eo+r0XR.,qISaY]MrqXV;LYSdA,9i86t%it#lY+?),YX>036<0]leB`R1Qkg2cQWJb;8#=d+lZ'!,C-?qQp98'p^.1]VaFA'9%-G$tb/L;l@)PE29+se`;9iF$o:_b4Np7Re3%B2BAQ^l&i;,+dHmj/:=u.esKQAl6gP*7qD@,3h!J+=o=+_Fdg@%19PK#&\Y1].D+XXIZ]<4^UD*Gd\;8O[fJjaVGo/l('Y'oi-H8%%a"]Jc8QUAV]OC1GKB&90jr7K)6a3i8sKI*A%/83FT)8YUr03R-@S6VXNqSRjXIpT+H=T2j3]>$2n[^doZI`g6oo?NW+".g6fHN^%PpoWSn=Gsih'o1n_$WL$-n<28_(hJu?MB;/&V<.P$Ft8_a(-l4#5][=!B(3YWi2rgDg?XoD3T(^;t;B9GnO2KRWa<IYYM^&Opp$S%?#:9$NB7GAQ!BY%FsumC;?Kqf3j!*jRMV6h;Hq<C\A(9nJ)eJ".bgPp6.EY4W"C(B04ubD"j?FKOHr2W#tHnNVRBXTCC/H]2r#UN%.38LD>@G.UYA5]A+%p4]N[:E5%gQ+W9_&'MAKS?C-udNIO!tOmHdjLSIBZmV3OH\$.1r@cYlSZ6OhR0f/F!R.bGXn#nPqbO=HUN9%B,iTg=:j=ePf1-&@9p??@j#l$#U,nC8-Jl\5N<RE?=d5)k(#DL)-JCb%#K$;P,^S-@n&mls3*m"5j_\GOLCne<W>7,#CcbK(6bVP%L$DQ>4D:G]\KFdpggYoKJR^/up\!aSGc2BB2iaG*PbjW$-d</a$RD3`roRbi=_t#UYG3qA*1QZ^GM^.=rdZGK1lIS]_:a@W!-P,-%1Lr01T)C\3H*$m`&Dt3&mmjG`#Gu17<@'-V4%<q"Qd1gG"m1u(3^ol-\L_H`;cCgpa&[MRP#C!i@F_<PC*4kE8K@E2D/Mp;l(eEU%7_agYO0?Mi"XU"Pj%$6>)U""9`=TNV&sUNT.Bc-*.4Oqome;P2@\n(G9;J"A:.j2M:c-n5WP'c3:d^2t$g"2&6(aHMPB?++np+l*%e>,38*bgp:r:K&JT>@f>\R];5C.8Dia-O7Re<3_K3Op$Sl%5.aG(\jf/1X<VDrud&<%2ZY0JdYJOGm-n`/q3FUcA0[*Bi?Q5Y$]Y%B<j>=OGXb8ENH7L8heE<Amf8eO.7+d.V>?<b;:G;@HL#'mUZ\R!HhDc7hpNSU"YCh;$qJtRK:tXoqPKC"kP?u.p6b9EC%jJ,j&MA%c_i[)9_Bg]j\_K'YBgmq<DYIU=`gU5j#b(7^NPh83)P3qJSZ(/UD2Nd<(W0lP]l!?)=/s>.#AJ_NN3aB8#bh^/.?'j84h;jecnHG%`i?Ka/.?5K4UScL+BV>R8P(L&n@6du=jh>G?st0t70O]3ih3g]M.i,?+4uU0Z:Xp:!b@Zsh*iJ]E%j>,V1osY$15!Y'r*a<e"Ea@%d8%+EJqJWPe$#Pr-lA2(6)7p,C!S4@MpghmF:705,ZpamjED$TNS"mfVa]8E]t+d>`$MA>TT/`PI62QcZiOJ+o9E/%j"DGnJYam4%aTAQ&6Xcma#ij?>>pd:5S!Ufu9m?>e3lD(j<3BId(9)L`)Gsb\YVcN,S4)_]cjMfN#UGNE]oJRIRN[O0ZhoZFa<a,S-/KbP4QL?(%QH$3@g:Liq!u"`21Cu6D[5aE)0I<Y@GKo5B%F4`N^pfbd[>?)-,GI;nA0B>iY2\BXND1X,&u5pcnc8[.6NXp6[0V3C\4-Do4NF'\%"A67%qO7h7U6KZ6>W2?lbtCtPQ5WTT<_;*b[\Sul+PfV#-K&AR:eX/=Or,@p(W_D)&k^X,Q45@d3_T(u<qK%:;#+)Xc%8c]]9>ZB%+NZpW+S=A2m6dS+[<8(6)H?+<3^m5jMU5J3<jf<-*e0:R<$W(>e\ShMRmou!j4T+P$ZmIKZ^o,FZ7dnsUF:R*InK?,Le"D0F#b\j%HLVba+9TW@D@,kd;tg<@]%bhG+AOfA_[uRA/6^W#K%oKh)GiIND$jiIn&^9^[/\!a`V-WZc/*UgQNC.VVeDJA!N>"YK4HD/-iHd$%2&;I76:V'Y*UTcFT/roL@J-Ku6;T=S<+a+G%`4lF+<;fn-a&,q?9n%8Q&StcEP+8ubUNJ.oa235Za4bG*e0;50pI*4FO,Zh4tPjF%63QF>0@GFJS-tZ+._;po:>oJ409FCg4e+j\?s[6!Ue3RO]gDX<85_o7JgAq_.F56:M\(T+/Pm[&eh(I&-DsHI09@3LfT"sb6+juN%6Y]CZA5I)Y[,5dff*?%gO_(L-(M'&1E.CtlQ?ibt#bU?M;GU:`03p=tN[j(jp$$_c4K2q_"8L9A<)O0W`@+Ur;B7Le'bMSZV?@$[%-)%3^'-i*_l#\?o8TeL3*lfJ(AqW&)XHBOJ.BGj/MFY,Q`S%Cs)/>3!02<e4<(Y&/!V?_0`[om*:[M_1-\[[26%%6b<@Df8O<!<2%V&'.b"\AWGPWJo4!iI-KFE6WbH*UR#b5;Tc.>Gg@b\b1S4Y8AL1rbS`^s>U\`l/k-+4'@_>Tdn'Ji3)"6*GP2-r^lkFp0X6e8oBZ%;#P3$-0M(1`ko)7k#<3h`^(Eg,?F4-<J:fI)q&cl4SjK!c`T`iYA]Eo.5;s*a(P0GbeJ/I(/593*Z,mOO*V1RA\Rk74Ab(C1@=J\%U_mi+a%JUuq-&a.nWd$93li&?o9+onh@hG8>Ap]ede8h7+cBoSC>*j1UO^h?42*QeZ`Mc,Z_[cK6=LtXaK=BR322I%DFN$EAKe#n%ad9oN'OOMop=!!g6qH*V'TT6VL[9mgWd3c9:k7ni+Z1X2;+[t,0bDn1PFFJW.raq=]WB$H[N;GZS%-gr?@c[SKEfD`8[#oaE$$*Z%$-hXiAlJ49(NqRpL_TO#dEiP&V7R>;/aG96701)r;e?RtJ$(k8>G*nu[3c(ecl*t@n^aW_)YAp#,g>>"*F^/3lY%=7'K,m"g=GLq%A3PoeZHCBWYM]GO6;>F+4Itdd9"a6/LZoCV:QcjX=O8Q6(Xa[WX.WO19^#T^'duP4T4g('`s]^#Ut\EZFmI6.Ue81\]`PeI,=q1S%i?-hq%i.7!_3'UD'cAsuNtfGj<mHdhPM?JFWmXJ;I[ZtV%]2gg8Ks$oNKJ>sgH=*I3eO2n:=dHtp8$\,o$5(SkhHn:3Tblu62=1p%JrcSN+gtRA8^2"u>GR4qOOmt5TnG&UlC+T8OP1J&dI*s$;.`2We^u/:!%uH;?YagX1<I3Id4:eR&3-0YbXT.DXR>\,3e/>`34U17%\)L)"iY="4h!<p2r.[#t2HMB;+pPgl-AW@qRrO[$E5;^?!_G>m,>EZMb8&!`Sj8p=o8j`Od]Jm$GRR(TTa!R!]LdrO-Ce27[Y:*e%h#M'hZ<u*i=rO;Z4I-><RPc@f8.h_(M<3WZ@+&ZeO@IkK_;l(G3hB0!8ZO%+'F6^Y&gKs6Z$6PPDcn1i_,>\Q)cJ3G*JlH*0/c5g%WP,)Q!!j7Ub"Jb@_0-7g4UNiV]8V#^A)E"CYR4jTTf@:h\jM0,97<\uQ\Tf#57Ft:r(.:H,(V%A2:4au1i"_cO`^D$_BP90:[p<-%jAJ1\81bRC,S,CgZ7mQ6U]^iGSQO%5\&@+QYt?D*QARmPBsMp(&0t*eM-ZTH:(g"),'GM5.90$_CR&aj6U@OpQ+;T96(oUl3jin6%cI0DWHE^L=lWg]3Osj@1Q8G-nPXLW[AZ(Re:T1PZ$0"Lo9bL+aX[D&F$7q#pNbpM6GLT\l`uKqIdU5=cR,b23MCU."FcN9dW3)ll%)3?8N$rL2B`T`X6BiJ-=DrMuS/qoSW\H*TP-3f4PCs;W%;F"M6Zd'VX?:e2>l4qs.A,f5*V>(-VEd"+WP3&RF[Aq9Q9%Ij(*i5Y]%X(56EG%IU9AH:*d6>kj=pHhp&dS4+J^f-i19">=In&OnKi($m>Ef[Lu2VK][8>N8K'c4*27#Y>);7g6PAJM&A<72K"IJ;W*4'%ZB%;H(\8,<-_5?k,mWbG%,MF-EJa)csFl;,aIJJeA!)bF2&JhR$:ZWROnQ6TLuEZ"]mTS"EKAWX(JIXB>dOL%LR82*TA;elMSB>!Fn[%WR?@D\(5Y9Oee0;]r=bl+nKFN74_c2=fSa5PffOBPsiEAaXShf.&gab/K.Sr^5&MI"\:qb=ErWI]"ENs/9#p/Uf+bsW9'^S`D"5S%X]BFjTqmi/,ES>/%ZuoH)(Jb.Un/:R*AB".46]g&#'R%Gl:ETY"[oa@.4Q'"4Kn7B`1.URO4K.VP)GXcb^#Eu-"shmq%M'hg&Ss`%m:/GYRd5)a>Y()oq'qstNLEAOaAWJ,&B\ql>"g,#Jk^;dS6=.Kgr5&V3>EF4CZmg%B#318lVU^aSDf-c]N'lq@2TFA<c&OI$:0m4%W`-nh)>@7WR#ILM,CV1>JDF,ZJXADZeRU=9X*thso+HXhXnio]gjj^Z=?<]pbA17Aa846:;0R@#0:c5=M<Z4c<L3lSSj;Umo?VmA%G*f43E<tj$:ego+Z-1.hVZ,OZ?u[DNX5_c,MLKC:"SN6&Phdh7ni40Df;BA=!M#&-*fQp(\`rYW6aVrLY(EGk*gkYQ@d-N930"Tk%\4o-R1\"=;aW83dTdDcGS%qAVYgQ,miX'R.7I:qg4J^m8]2^,;TG6BS"T+dGC%]\!W+N5,X5DUtW8_r,Fst"(EI_2!N2+YY6r_Ss%Cm_>"8L\r_1UG]&Um.HuM!#RB9s$5\Y>o*E)>gg?kTb8eZ?_3J``*PFNe8W+`fjC2d7GdIPU!sbCIh9o5>N3VH`L#[C_`lAp"D[I%Cj"4hbC^a7X.SqY4-LN5$^Jc!APIV>[(8W1`@P'bWZjjD?B+bY;uhihd(5k/aVjn"Nt4qVGX7_"nkE3IqUWi"8(&&NNQ@i^'+\GM%,S4\+B!YCt!bBdrDoJaJ$\IcSmDP1,8t:<ZDBTLN]VQp$O\eIJ&LgQR^VFIs#t2kmR1Tt%eRKIC/Vigp708T$9((]9BaHeOl)Qb6%?BAp1YrL1>(p2:**4Zh\0?AYor?RNBo$qpp/us5POG#j/3!MAVpMP7X\NN],rA@PCGKa.'":I3%nQoKs(oed281dHY^+`O*Y&1m^%+u!!8,u>`skKU0>%8&3'<J<j4Z&"R^lAG3(3$H:?F/\dEeKCTCcqtP>Yp^fQQfsP0,gMO<SqO$,?s-`F:Psi6;>JXW&3Qa!KR+LT%23oC<a8@\6LCPR#>qq93jXBEa:4Vo!AP5D4-E]%.l7Ddi&kYhtB8L^k4]NS->/h/,SuPd'9(q_]BAIrPXD+XpV^.M,&KXlJmDf-e%Gq';go-MQr9<-4fOU($JjNjI!Alg1U![c%u,l[^Q4OH;,'j<.DZ_R,$kpIt0<9QsG<#d@,\_9L)P-R@HFXVlf.UGqN_8Tl+Mt&MQ%js>h%&Mf0n`@n[XTn(RTCGFLni]Sf1_(-6-<F]Cpg(2.#0$=7&qgs62PCA\F=](aJ;V=U&(Yc'dk0U+\YYPECSbbo(&637DWp=B=%eBY>YV>S5=IDMOr:dl!/qFTP'@J=-)E"k`k!q)3cNaBb,#)0"JFFOo.29I:<V@KK'34#9ndmi`T4IU8">s*ZX<C]Om'-=1KC!%ed%q%QW9W%bW:(JIetlF!gB-A'j/dRDcd'$B3d[GYCs>:G^h?56]\GSCp1RkRWN<E]ckPf(m=eL&?LV8+gd=?];$!]I''hb[Em*=:As%K"HtF>p"&_5;Hc$HjpgK:+7D6X>EtSil1Rr_b#o@(]Cqcf;]Jk9B?&bWpnG]V<(OF;H8)doj\i2od]>S9k64fir&YlH+I$n@]>oo%$)1U4P*5f+5KL\[ek4[ZnM<BndU@/?R)dl(3@0UA^e(ps,U>@668)><TMdhmcb?C<(:=6fs+J[g<0Ag(;R&2uOWCOfJ.jg-Ltc2S%i2);V,(a1NAtrYP!\c(i#AW3r+ROKL[Vh?U$c_]Fhhum'Y>$LgFXUVcDJ7YiK??d"5s.10EW5>dNJq(2c(G(C#H46'N\nsZWt:Ei%l(s9T#f:a8#WJtQCb#T@e_*W,Z(^M\Oj9n4X]&f+rHamM9m'].31?g=`+W-Ik?=@%g^'q8<0'3+K90&FDr3eGVJ=0b@+>n6f5.NX%mAo*W@#`lA'lQm0Ug:!8)[2?N:]HLAK)1Q]Q#eS%</2X_TYaD<i;s?5Bi>'t<U?'o`&P:?QWMNkQKEA#V`nRF745YjhVX?l<[F(K%_6.J"&gW3;\L+A#o*,i">H]R<OOsk_.rtd5U?1l?7@K$a8KP1,Fh'd('8c3[&Q('QMKOi'0Zn/i]Zmg9?IJLP4hatEm\r6n!Q7pW%Od=Gb6n4"Eh.4o<P>ddnJngKhm3Nh#aMk'aF&'9[X43j^c^b<C3]!;g&L>*Ho6NM_WWF<nn?l*3gB+<[1Xp`H4qu7AKG]UaS1a#u%ALdCjA3\dgn'UbgbZ^:lhCme_6MeYSAucl-+[D@]L?8N^ikq>lJ&kh/LN,T93CDg,fg?)mfql))]Jc@.e:PhoFel<CC<l.,DRsm@%EUo^QCmA4eEGH"cij\Ol]A#0?UIfscdt.2nG*@m\l_F]`K;)ujEAPc%GB%D8pKFCh!Z%0t\u6_;H5)E/Ic-hZFiuf!5lkDN^7(68%6kF;_(q56\!Tt[oZBmM+*Y`V@YQ$%'=\2eGnei52W\WuZ@c]QUd6!tp%Q?u.pJVL]!1NXc/8?I/g<P[PfBDB)gS#Ok8C1d02@Aj2%l%)379*;+71eB[.3)k'T?cXJ$c!m$^!?e!rRZ0r9CG5ibKPa>-EG'En0tl@cH)?J64l\^fZqDZ;rn<m*Z:?7T8*#cg0^8<!M4qJP%/:IEeg>n_srbKVJK+tWi[Jac^O*`/RjI!N\)_c:aW`/Xbg6,mE<>8n&Ckhut(L3$M=!u)o\5;d3?PF&bQb(`?n_0Lr=abu<!*OFj%jql8LiNFF-X\tW7%q8hW,ULLtR&?l/NZoW2Su&b!AKuf27$i^)it+jC(-qCf!HeMb7:(r\QH*%lLW&FU6+^4tJpn_;kjX]M*i[%,%.,N081r2-<=BBS.I_Y_LF@\Q\$]<9uf"JfO*]-6lgru>T[LO=]8dOf]]4A9",slh*Z+nA>cl@0t&P6b"&neg[&]HQU\QU$(2gD^o%m8jpSL8WSXmc-Om&mEsq`)W2(MssE^pR!SuOY!7,l.fVlMcak5@?MEUOe-Qm!KmcA?1t<CUK$3\Wm)#A*NnkXm(R&'i`ODer5B^j%7tAVYg(7#h1.I!0/o\:(rYIm-*^nk\6Rfi,1sp,m<.`X^^-Gp+^I*&nWsIClY=S?R4%/&tI[,S8(joX]U7_!B4hZ7?h#I!#^\Tnh%[ZpgXn,N@$rVj!MH[burs6sCqrqHH^TE"/jr;OIqYQ+Chn,N)Gs3om*]Dhg"hu:fKrVuH_s8LaXqKK\=^]14hbO>K"n,<!1s7uQf%r?)((\,#q$o"Y2'O8nshi7d:b]Cu9c[H_+DXnEQ;X8dn*)ZR]jrJ09js7Q<hJ,]/'K)Kuf<OMiEonZs6";O`N=k761K-94;crtp3%+`R8D""s/*s5rp+rgg-WE"2ujrj)k*.D9"tm:oGDlGr&ms,Z&N+UjQ=qua>9oZF4*^]+6%^OQ0B(d8Sh`Iq>rm7dUUk#af!_TB3"%77UY?r1.Iic:S'*=5I!*JKTDC5;.W[T\'kVd^qie#:C(QkI(Ib>L<tOd/-R7NcETslE@lS'JWSobqV-VP6q>HUK"iGrJU-&!Y_Md%lmb^,8PoVTHSKub-'B`0-uba)1&crXd6'5b_Y7U>L"@f(jht'rb1WHcQ.&_./*Gp_cRp.9P8?<1iO/BoGQRgc^*.mg5(EPZ^9sRJ%nT4=%hW">5YKUBSePAK`*<u@-&:JZ860.h@!qfp8a,%bh&.\*bTgnM(mgr70KHe;Eo'//aS!rdOp4V<8cJIFiCoG)lS411;:jVns%T_q[.Kb,p5%e6Xl$\Tep0@3ho=(q@($af?@dj87:KXH`s)"]>56LA,6k3.M%j8FTrNTX@O=eT1Wbl5Ik0Nt^ZMICH'.u#1D0HI@*%4aFbM%\*HTjj>rd`".tnI`5tYh<ftFN:_4#m:,]MrWUJiq#XtT0<>DZW#c^4/r$^<Y\W#j;'l&hFu$Y_ok@fF.^<mO!G<d6Q&Dd<%-O=,d@5SnJ4i4;O5BLT9'jDPe552=:gNR(7oPOH%YanOdcnM_%0"*N)D*YJQk7Mn9-HMnV'uQ/=fM53s,=QE4_5Iho/03'cV'$;r%+h";QH*No8G19n]!^UYYnUoJ7NQ.;.jBmVsT4ONbfR8e(]b9)o!AVeO/AK@&VP'>P5!,>%pbuk1?saI,G)*<1\M,sRWb>5]M,OU3%",qA6_O)GX2R?8G76Ieph*8]$&l^N;r3W\nT<3BC9EcOC,nXQ%R\$HB=3Ieuj%m(0@uP%-Z_[iJMu,8QE]GVA'9h>kZ/[^BN$k1:%A%f+7hdDh'fIXQS'->"CFPOn`da>@rH<?DS/Q!AF,dqLbSWjmuq%sDUK]5KWWDasRV`S$c#gDR*7Dp5F65@c0a04^%2;/o_@J>O[%8P#ph#8MPN&Si[u7>?Z'HZ,^<&p"Cr>OR6t.-Z$^8;,gVjU%R3>h?OJnI5?K!T\Ih1/6!TWPF8'HCk$;.qXH[:0QAc=7WHkQ7bnO%`(Ie:)]mk.J[U/IYB-,mQf?,??;DB'QjE<A>:P^]k1DAlm9[LJ<(f+8`7E5sGcW'sn+Bd)#;"gM?jIJ\/$E#KnJg=pOC_X=@]dA9%2X]\V"p.0_Ph9[Fh<kM9fhOoj"2(h*b;##JD!uHRoko>?-QchfT9+snJ3h>.=<2,G=It(6]0/U1,[snIQ96^Sc2/W/$73,]mXi8j%@Q)jCG!*/Xc4%U^l?.!YmQ]Qsb]Z'u6kNo,p+b)gM7Eb749%gp3C.&GG8%;CijSUq0QVt>[X+Bk,;FQYYe6AX?]Wk/1:QE5;3hb)%>7*'&CC(S7^0?d0JF0uR>7#"Q;PYGDFW3CQ'&'m&kKJW)f"B:F=-<WShFq$TOP'7HI-M4(a-a/m]d;8ubTU_/dkbrJ0S""8_=O+,%O:TT2T'u)`k9ZL(DojSfo)P`,4"Y%^/?n]0?q_"BX6D\m@L5'Y!GkO06udeHhMThs44g9b?7D/ZiAF=I>p$+qj]@kV+;V/ZXmldX%R\@T#]L/dWmnTFuk24n&ONqJ0<`]CPi=%J4pQ71'9!"T="_HeOc23%T?q'GK1llq78ib7]k-8<cfY$'=rMTh<GsA_?RGgXG]8gUs%]%<#ikruQ*+gFnp\s0B!>>s-X__tpGAQ?.`K$)$s<Y+Q^\b9]<>$oPe0qI"=IEct=mR"!>(McJ,M`EjZS*X_5O(Ninkm:hPg)^IN%$(Vm\QM"uXr%M<,Y3O@X=&i^FV9qu]</RQE?n>b5Q3lS"!=I&P690-&27iI'5IZt_fT$a\-S?l;=76TV-f%j+`5K$J>nKGgjk%q!%YZ>'IQ+DLV>R+*W0-g]m/VBl@=LFtO6cV1p\I'R8$eQ7s0bN8nXZVS'KcI"F!1fuo36n:9F$XU!P5[Dk3<ATI:(s+e*-N#iM!6b*%-*JhXksAe.KkeCa-O3=S4j^5*M9h2G/S98YYV&ANCO8Neh_@ph9VoUB\X6-5QoSKr[%l3#qNr?,V\]S`@&p9Llo64c/64s;\,\ua%11?\8JXpO/-d.2WM\4Sd#Oi)Zg2S_L(.Y3CX\,%t*2\etYk[rpHlH/rrFk-/AI_)]L,tChN0Tg3HQUJ:&\EL/NUI3DgW;*FPGU*D%IA+mlfE,!gqK);ZR/-i!9g>l\qG>t,Le5-tP!^%lL8![tg_pd:L3"UL!%RT^S[+cfb0DJ$5Uo:#2qF1bpq4V+=Aj[iod[oR]a8@o%eFD<t:-]M]TR5<`;cn#FCq81+(^OW:g>2KHZA,ThV!!18_&M+*c28u*GDY"koU't6/C&m`5for=f"S9@4N^NKpY,*kr*QF'[.?;X%;?7a.r>`3*J>Iq86@476Yd9Q/_^hRf4VI,a#ODjN<5>/7=AaS1R)F!X2)*2ae&DpI2@A;G!).%?,HQ/8763L,\DDTrpujiJYr8fH%-cht_2Ri(RMCN@lh%u;b.ubCrR"`p(U/J0DQQqX#;Q+osO.iM\ZG&'.^nRUH_T;U/C?YepQ\dG97=i]2rRlI'm1s0YTTEFfS_fZn%Z18dbnY,!Q4KbE?FRM=!np5l;npV'!%r,1:R0OrYZQ-22.#RZ%JW4`C(e]K3/P1!oXI90s1BS?=Mh%?SnoUh-?>5`%jL\;;)=Q8P%:dGSIV2'PJa82[XSt,t6\b^u2!LS)O\<b#HKtt?Zb3+*>JV4&3BAQ.,31h=lF.X8*)8NNa!2asLhUCP*B"_)Wg-8H2m0%5sftE',%"tV+0<%l%oM`UHMXW[G.""Q*.X"&JuB%\#h8E/,&.GinKk8*snobn$XQ@:&(1$Bcg;[r(LH?M!49Mi!4RN3O?)1e2*!TB%$dDu*n%G=M6s@+gkJ)][Q.3lrIh1'"liOO[Kg@AQ>$Q(L.IKGYPeE)=inI8!ZiT^1?7<ONDh-So-m_1?I^W^:)Qhc,aomTh7$5jlWe;^f.^%am_:c/h:3W]sP3E!!["h9"mhK8$[*11&$mD^^;s`HuK[0*MsjEN%sVu)U#W"Tb/`XrH82*I!+!Z%gN:F4CGRo]sNLoP\::UWp!9D%[cDM2.g<ARq^@uU:A==qe_-[-9FSs8@*Ndb86mq,0O%e!/9OBpGt/0sLGp\fYPU'$=Xl:<QQ_ZJ=#-,n`DElF/Ar61W$).1rAA*/%2aI*0[!\2sX#f-W+YXtoaL%s]$CUJ#B&"l0D28i.FBe\RK1^l3f:5_2,K:0B#[]=ECntfH.^QR*JC4m'p?;;Q-/"s&3po_ha/OZ4%2KLU=K`a*$T?:T'5%U?46HBlBS*.A^.bOgi>?8>4U>/@Xe<6Gsh'0)98nJJ3MJ)iA.h('C/l-C8f)V)bqcjrk?6O$/DM+3iQq-_/%`__g,/=)Al`&^08s0YFr[&tdE$UAr?l\UQD+iG+H;(fm+<+pfaEZ:oM"'%a55,V),1dgjJUi0:kKK^8rb-t4\eDn;*eGu"&Z_)fB%-1rU?J2#B$;N5rFjr%3Z4<rD6i,Ag8(%2Hk<lXJ5nX<eT>u[M!.!!W1:$t`L6[5bn/\*3n8iSn,@o+'\72LnK7^YQTdpCb+45%'0%A.HWM2IKKY1WErE2)&+_n8IOG2To+sJaD![qb[5%<%kRfkpeLmQ9%QE4LJ#pk_k]Zc4?#;I!StKg<^1=DS$IV;h3OeL`"SOd%WYg%@Z+Ol#!Q]0b`TAP*fXo^Mbq[:dj8Z-/?BCj4L@EKaO0rrK197@Gr3iAR0JI33n"';\u`\n[a\S8=MX&ok>BS<OGeLB1!ouMoP!J;%DUsAAP_g6<D4jpBm^3</Yf&DM1!r6aG"GUt])i[DMpn51fIZMn%h/7_!aEj[!bZp3[&1J;,,^6^%2+IODB@(ZO?pU5.FA.WWb[?j%49N+Vjk;+5cN*4HG4H;/3!!gDSJ$Lc?#RD50^')M$dfk0cI*GrK2/<H_ms0iB)q!e0_[nCE6`ig4)SG_Frr(mJCuZ4(lEt3mLhJl%`oXgiZbM-dapQeB%W+`=]V_F>(o3?FWsE`+l:b/gmaG$*1GE*@E]M^m"&#)6p<n0jQn>JOhXopHq*3FpYPZMG)D<Vd2\[ukni:I"%!OEFU0qR-]St"sY^5PU=p%Oq<[7+7p(q7&@WMH+LhKh:7b-AlMJ?2GS]V"5pNQI9NQ70ql<5hT;.*J8?66OKiLtpVJYK`5=@+bZV%Sa.fDjk^``,el+Km=erJWk:)2m7De*!s-d)a%n.:eqAF1JL4S[<JO$t*9!s8XS9=h[o"*jZi1ZLWA:cini7&d<(86`kaso+=2l)L%r.^@CN#h?A"r19k=n7RiFVbX]1VF_E[53AF3c\@KYiDI'8<.*26TD47$R%H!bc*.$'8mjIA.GjHK7HNV=5oe!V`^hR!jJI.W&Huc%61JW+&^(;A7C)t0#n7/[6%YA(:=`>bE&E2%@m$WZk6<GfnX)csc(dPe02Tt2dgd!t#gN6[(ZR@Mc'!OMB,n1"7ip>m`1G_-bV;qL%E9A"$@fRkPb`=u^XE$Jd(_V2`1ZRM*a!\qa,r.lip]2ra^[OOXmn$%D8)rSbiEV>\@T6J%D_,NB0RaXQ=XqVQfZQWdc91H[iWBUe%/<3r$:B8<)bjh6*E\[O$YD"G<W&*XSn`.'i]\][S92BD#]m\KZSiV@K9?36'V1BTCk%mDO;[c>3p&!Q.2:nqmp41S0eCH2H0!c"W%CrT$7OnT3a^"9$G$KnSYbrmLV-9GH"K+F,sTfna;fkG$32[D2JbWE9jKZ#0EiPP_LdMf%EH96Yf_%[(j3o)Ui1X`^cU(".,pE#Q.%fOWiG%.#*EUPrGr*A2?7L(Qm:!No?-ln='g\XqpHYUE6Jkf]_DD[k@3=/,mHTY'VF0h$ZLU]5@hJPs+/+h+7`=TBl(%Ns>\@6)X`%ZK4q^V#bru*oX=d0XLH)]p7?."K*9s_04j406,ag2lIXAZu6P_/"L<8[UDQ^Zr>*5Z^lGqfQ,QB/^c2Y9KE&gq255F[N.,NH3<H7%5len@$B_'N?_CR-2fEt$T_5UKbN6d:/LD%52.nPn)nVJGm6G%\!fGD-ec0S.J-bnZ5G8Jfjh'-`)S6j&r;3hK#Gu03:DYhP_;0(D%O+R"+?ju-7A$srM?QV4*%$X"A(LjchPgZ3%!fqq`l5@-jV,Q0[2/g9PMM'&Ac!<"Ga&BnQaEI)FieF.#.cVsghE0IQYAFSb(h8R,%1.i=KJ-I4@`R]A0!a?ZO/A`RG=>#>l;np)j[>RY]IZ?qr8tNq`YrXA,";^,ZYaj=.n:T(3lbsW,1&5_GH#;D9g1(R`S/`d:#)ngU%CF%.35rGMVf!kiC@(7m$XS"oTlb#jWHt05c><PGWdQR%['@.XnNt`mjKuX[^F^[7Tb=mL)lbXES6^f`MoluWA\M:*AnA([XpF+(d%>%ijZrXAc?`$66Q4VI0Iiar:>m]VZ5#fTQ/_9>bG/^0^gL&t(WWGFUcVRaM/!(W!!@b@?\FtrLb.i#$QHAW,9@.ud3S9]WYQ"s3W%/Z'8k\\5)g"&7Hlg:-_!:P4;H"JO7`k%$.qc*/8>Nu2Ah$j'/0Un]?ETn(Y8?#XXKeB6;L<8hX#K&$O0=cpL;M"s$T5X?q2.B&4^%i`PFF`-$SIdgQMh.C;g.Ba.ZJM+pX%qc?=$eb`W9$eT!g?AB(B`F+/%p`,-q;@J.\$?m.nV&1D4MC;C3SX!Z?1hrpX9OURaL58)G%%[d2iJ4ZX\YtS"FM,A&[[SdO,&d)j+OjQA]k8$GC1M'WeC01%Q`gVo)cYtSX;T/qsVA\;GU'%W!hMZum79+-q(grq$DI*(.Z>U-\%Vk_7>)#3s%'&*aCRkG2+1310HM+ik^@L,jrkC-0/#+X[CqOMM&%!kR;J5Z%gA6!SrjDL62UT[im0C'XG4dE%c2C$&oJQ:ANn=_^N%%?0fgLN'uM]nl2)5h*R)&]HLaAd@J3280l#,!<Clg+*5OA;EbbW@?sSZr</@57V\S>:bhnU4OQN2^Ft\XQs@kQc\au&MMf48`cP2%Opt6+0L?E^k#i`aUmT%eT::s]MSt.[9cde9Y+`M37?Q%AZTtpoER$F(ECqCO>f.4fHT=tD-(6A@#`QB=?nOPd``!k)*Uirjc%GYS%b15a'OA+DC/K[osJKCs=GM?7K#)t@Z:Cq$E!SKEbAB>gd.Fgns7Umt`K?i+0(LsHS=[1"4&R3JRms)n$We'C=,S?Z:]2cRr>%@;H%Mr0/WjP*UsKjqCrh::.eSoRsuKa;mh_e/sZX9bT2fY$,&E=Ib)Q)E#6K)#Tr@*;;<W3N'bmHkWCI#u\i^K_Nt91e/,mcQR_=1T!)%N'3d/Qq6Z04E2=[jbV(SJi+bDI;>l'P_$B\lGoODr`RZ\:867IjH>>C+`*\l>c)1`lNUE<iK/[Vj'pi$oJYRP0aWVorfb?!W<eUA%V!.<a,9.$nl>s5e?!FNrq,UXf!LnsE&n;hhoFQ+UVo!oOWnB;M,90;t>/!T:3`\ck:WV'X3*&qa>Yb*L&M[6OgqKL:j!jf(dLFRJ%P1Dad:fQK&n$>ls!OX'0&eJO_DHsS;@Or*Y[E1Q,*-4`R9'JFH`R#PEf14PgA-8[/mUK8&@9agcftr^-U7%1f/QR\$\E5tV$6l\Y%VnX<`JJ_"%lFe2!%p@=ZApTipPc4M*D?h]DJ?#=7I[.Hu6)hk3Zp\F:OrOX]YsaO3:\f^^'-(eVndA&IT_)soc#,"RAr2`tpPGk=%X<^h;/2^mN>]UYj[9C3)X!K'$.rSlQgP7EHj*m$c<+),?S*<,sahARYkWUCJWub_ERsUHu26YcZI%Oi^@3S2N.FW3'EtW@Q?gio-%Ah9e%$erPl3JlZ*4"8%Ym@]S%C\:.m4#Hl7EO0]sPc>n(#R3#gI84ScJLT,7Xco4"0n[[o6qIOo>:qRNi<M*'Llo`,Y;^m?1=PR=%Ca/M9F:(1H=>hU\.q%N4ltDOpA#9:ZF.]md4ZaDh`5H?AM.$CZ(`]fi/]orD9Q\Lc=LeW8Ql]%!c+/SSYX7cDg6/I2c#(fL5Xhbu%OE'Th>1`X+&a`C-l`no+l`kE9Z.;p2C)o*>U@i?U@iF+)c@'k"<`gT$.UE;WM)@6RajBHN2P;OEp,'aqSn1X`8i_&247DiIN$gKK%,($q8cWuhfb8ZP1^:B]A!+!(Y!pI:T<[T.NqSf=iSQYPum't>gX;Xdc2O7h([)Aa]Z?FZ*A_V`pEO"P5D!L[$ULXkX_Y96(V<Ei[%a7%iQd"%*FnNu)4D^pj'cGWg3L)T`-HeDAjohO:*<1da(AO>md<>k_UrQ_b"0=2*'[d$](Hl3&[GB"uKA>.iNN^EfAA@nl;=0BQA%.BEIBbgYL1LtK4#V>>Ju&l.lR4LLSZnDmnY1ee%'8m@,]F&;:eTf^fOXZH]&8.A9=LDi]GT./@m@jCmW7AkrYh8Cf2Fe$gE.2_J!%1,7%hQp"MLScMsfGTX5R+]c6\Nk_![62qNAD<M40G>)hAJb%K#V]g1YJ%)knjO/FqPD7GZS>;D2h=j_]SCj2FgH-[IOmi!Q5"cZQ%TtNHH1T+Q<B/a5!hQJ]X5e>4Rs&%RhT<iTf<_S84(P'RQq4.1X4M$[Mo)uZNT6f7=3Bjk$FNL%Cp]&o&VX#kVa&[W(QFJ8?[Dp3Q%no7'g(sd*8g<N']%^"A[\)6W^@+H$sY^E%5]3nGCaIHrbLHVoVdh8JpaPXR]6>;0<;bfr$RJTeW,[ch$(5+FC*"!FGbWF8;1]o1>%mM)n@bbr+Wk7#B9"?)<k.:[</h(CP.rO49dZ*;[NXSE/XG):A1n7L<8,Jd;fTr$MD[)Ohjf]-;+@Io#UhK-B]_Ysos:!$_:VfAet%+dR8jKtlUe[bOsq.=FATC(Dcl/k7]kSfu9Z@3_T?3HMU%G0nF[a:-X;H`=k8(1t`G1m)F`!J@?rS62=<hjpY(dYl5oEW;%=5,J\J%6mfU,;j*i8aRU"6+fr-8IeT4%aV;?@1O6ueDSnm0[^b7TfQ%d@'/W]-,Dtm6:XGG59\b$E6lst!(g@bRESVoqO3P<2L=!DDdCo>:%>Y[#(@sgCHQg>WDq8HY`nr.cG]0bQri@Op%B@*9f_GkI6rX'r=`Kp3r>G:eM=Q^;)-f(1;@O#^Ri^^PLHQ[K9XkX"MhbSQl>u(7,%&5R5?Q$Z92`k(Bs,>IE2^q,c&=EEBSV3%&L7cnC9X,7m(EjHJ6&W-Md_?_C"f%cUt%,J()`^33Tb9*)W5/86.1R8>2*G*#65H?>&%^Z#=5[YM=\]Rd35UK-gE]Bb>3Lk8-5HLh"cn+XGc5k"Mc8XGmu=LjqM55hK8&=`K5T=LKE%)hS/4XG+`M/"UKEX=71T'-TuC+dP,%6BI[l'XW5_Zc?Fh\js'nK8;,Nra"&?/<"[''#Gh'E2/WO'V>l_NLc[n+f%?#k@a,@::BU,Z"c>nZb7+-J%Lk6422ni%j>jU[aPZ#%f"P7G,foPRI*:DM=M*4GN75?sX#*2A-q[YjM@Zt3JrO][.tmWH?$Xj!iqW-rj$J^D@f=H_&0'#&)7QA1KPX*e,`Y[8.Po#se\sPZ%$`+_sh>S,1LY*$$Id5r;iM/V]9WVn_=H&"PEt&#)p&NjpA9cgV'M:+lS%4$Z/H:<-$)Q5%T93hA]:Dd%OZ09VRqr$140<tPNX7lI%-?P+;X1n48o;XIWf]c7qg;0"dp]\95@F\4+UnGp,'6\Qt'mo&ZlF9s2.T\9H'uRan=#-lR9QRp]L4-m-qR!\hXZo,MWTaK!hWLq]%fSb_ire.uU@2Jeb+SK9JK\1@N=%)DoDGOP/Pb)6d=%;Pq`r+:].*qBl5CQ&3UpG;5J;"a^p90enV*,JQPCOQibg7Gb,WPK,g0?tY%6B-%/O;1/R\o5sVm.h+=JaP&<9?Yk0+K78HK4aSe69<A>Kgo4[?>Jc;p^PY[mMg8X3e)j2P[f08)bM&UKXlj+ONqiQTiKQI0;LPe%)oRn5696N(&%hZkOEDJU6%,),U&-ui"D/-_4oWg8A%4,(d't[@d$j&8[![,a.C?7"-M+!5;$nGf1OOi+D.oS(-@M1a3OX?g`phO?%<*E3A8P#=^lqZa='p:2e2eXc"Zo@$tR\loIHsZ]--ia=e/ba8P.j>/%PdnVpU-/#`Ul@5%"<sZIOAh*2KPs0$csXi>GGq@'5&2]p%8.(f:cJol3gRU:Fk94pKouE+_7ZW)^o!Lr20DLLW_lBT-`qJL_M?)-^7)oTjoAioB!pF1_RH^5INc08VW-qER^6Vm;J>BN%\D#sD%ZB+lpja$Z8p'p;TH^6>QK@tC]"*?<kL^4"HO.(g7Q=39jTnbN3BMDi><-fC74N.bpOoh<A+-[U8[IYSTl6i4Gam8I?'mn6MmuR05%fQ(SUf1CE]<5DarK%Bb3Wbe(YIU+V9b-A_L"LbAE^2-'uYa'(O0LX@Ef3QmTcWf(d@B5e2[AWOEGPnaPh"#.Y])1:2n/'U1q@UYS%aR+j;6J]nt7kH7e!G^lJ4l*2"do,Yp[g;h;NrWBMeusjaX\eAN1WGJ_^^%8_J7d(]P1Tl$_il;lfQ>E/P9)[LF3)T\Bt/5uS@Y^>%[SP1aNsEcU-N\S6^W3:@:3sfBaEgjW&\DtNkrBh3q*gT2)UUN-?VXggp&MJ4BDF)ednn=n$#C[=Wt*3CJtMe9ATAM[C:pOS:'OC,%*m7)SJ#:d/\N5`!o='Y%m1qDU8k:gXot4q=]!km/%44ChQVnu.IfgBT@W-jYY=8FT+`S>![3q*"a4FcIL6-&s,;1]:P$b1FQ>fB*%q$ul@auj0!_^C`KkWp::V[9nqlF;9NOI,%';B\BOQ^T^-Xc_d/IAZe@(4KL&2^9U$3-tMtK[N#k*?!9*qJ;/_`Q6hoRYR=6j_/@[%.Mi-]?t[1VU$4bta![(Ue&UX+&;OIbg*r]ZPQ$]r2'EbASG+-`-1M*#TmTYTW'GB\Z6:Zil&!m*;a<?1/IcPV(0+/#jq\!?$&XcX%5`SY6*!UM4'X<K'N/jq8doJ8T\cZ_P79+kYFP?\Bl?M%<Opl#b$a]p$$UnmbqJM9MMN5-G-jnNt3ArUK-)dubl-fn[RdqIHEkIjV%NTk0!'[/fn(ncC`EGp;4&EaAl6il[G\uAL8N_Rr+L4#J?Nsln;6lpQ_jd)#gfm\=@]n4]eFngkG`aWDS]2^@A/ZVl0$K(17T+.H_%Y`dCKD>T7'3/_mj>]j.B5e.%TZt5]+h@Cp7R!XtN!J$`E*G5P28=VrBP:Z&T6-!+OCE('N9(L-R&kG:aUEn,a5S)4`DbcSq!'9OC%<=aKh.kAr5ZifU8C!*"UOQG;'S,ahfYaqDmW:I;>"d%T)CLu]EcuLqgaj8LIR58b<If'P)l32O:C*Bip%KE6hXcP/9'cs%0bdt>l%JBlD0=#Zm)Q%cU<F>J5e>2@>tJ<mOhdNa9ff2Ii2:Y//,!3,^]2N1Lug&>6l5:F&E,kq8sV#9_a!GJj9F%JYl9.d6X;L]$e5J$cm%e\<N7",a07a9&;#rU7T-5Z,2#rA:27VIj"N*@`5C(BK[._fh7RL_Q*pD&'Fi.S5M&HXTc@L5\_hh"]>LbZ=["'j%)f6tB@[S%7t+%b9EJ$9%B3<N\H")NTjZ0HU4fG0nZFTa='.:8EeM:'p),>iA]L.ZD_Bd5h#B^R?">JLC'M`a:cYmD__=sdTrR-E#523JtgJ;/1>W5%d*/=i=Xo!&XndmaTZSIhJC^K2IJ+5iO>Q-\j9Z)p3uK>A`LgUb+<b=X>)dRnM>M@(6*i2Yr*IkY-USZQ\l2,VWm#L'"J@Vo/K_(p%*S7;o6k0]IeT,9QK*F06B'+IJTJ]_R7Pu_`WhKR%QTrI6-uJhO4k>Xuk\]B`9<Wm>J]2KYkY%5l<St15$;c,JX=g/SR5@K%dFPJa%pRK`fXkbd5mq3MW5bu,u"Rrp$9M;Zf0YhS/-</r;CDJ@l5ajSHbuI]l8)s:W&H9WU`h?+!ZU=iUd<PS`[9h7gPWJrpQ7F5'M?cOt%!_K.]6X/hf75?:\j=:utF++Qp4"Bd-\f2b-9;05O:VK*qH+FQ/]2ajR*f-QT1_,>a"=PdK[P(Dd3/^QI-#:bj;PPPd%Mupd<UraF%.RDm:A_!h`P9qc;?p.LKfs7l-p.83YJkuqO)X)_Je?tU0:OlEuh*a46,gED+4pHB>CR+DBB8>bZ,T2RF_)g`*SZnr.GQp3!A]%fD%@i,ue&8Lk(D#oVdKurI_!0UMdkNS)LB?>>YZgt)GQsP@Og?k@moHCtW5CUE[<!KWPK%@!WE1WpfmBQ9\<>@BmT-/s1p@3#u)c[8J%(ToM*Qn:p*c:S+h>#j6:j)K[L8c\ZCQ"pES<CQ5GDE*4n8c\B;G7D[t]5#nkEWS(X,flK+CN`8R<5$3:>,k\K0*3@=+,<J^LO:$@%0l2lmIar$4g/A1P9Ge@>.Fd#?`rso#"O>.=DS>&l0JaM2'G0<eE'a4JK(?]c[_g/JH[g,h97502EgRBb]%\MK!mi8nWXU>uZGa8W%<@OSI7C`+dSpj#S+;j0m)*(uhZB,_>//^@$esRmOeGi+VXK',?Lq"t]?(t0o2bc0/Bn@UjkJMA:ONUk=T7Mk-fe'hJ;+gsn-'YdV%_EW$J``R,qmRK+'eM"9tZ8&fp7[q^K/[J@(<RM\N?CqC`Y;3.f["=U"6S*H]+N(5!i"@&2BJbM!83%;MUtKGaO;Mu^0e=I'o*X:p%LtEHO3MA'SeF]"SZU#@lU6]XubSXk@`BfrN&]i)*='(sAm#e=O"<@h7SlUT(S0fFk>-f&()2)g8%#?:43>C]h1eI23Lq9e?p=-Kd%lj<tqh'.l2_md^hc^`S]De-&.'K9Qe!f4LR#rQGS+)1I7\>p=^W;0[ZR1#JGs&jC^cllb9WQL9`C7F@sldHCk"I-eOQ_Jp/G_o>4%ThfDZI8M0`L3kjXEI)IB((ZcHf_4-?S=OnYZrH[KC\]M?@"[K+8u<,X_t?]2DCY,XBSh(]A9%['Y%d44qiYAjiXaO,6NG&\3I%F$%\c="$X)%/45?BD-A?G^iRar`j,t_j$+Da_PX>G#"O_t6kX<N9NJebi,UtuUn$^MQR4oSn.P_lE>pB2aMX/aqZ+\!d"$183;"+j-0%RDZ%@Cbn3<G)pp)#<^u^S!FBH=n56e]:J55;*\.^!$k.:*q<o/]8:QFK2\/gP%4X6[C0p:IKa/G#H2dMYkN&'$V:T)lf95t>X:Il%&/qc)#%UI?+J+Q.^#Rp(#%6!j2Z\`1he&+A)j6jg'R)>P!O6<Ph2oI;QN@`]HN6Vk@"hkh)dWgT/=j0PZ!I_VIDu0c@;AFas%X@_%p'bshH.\TVUW'5M,Ffh+%b1j34;K!:H2K4gJinUa:LO(CQoS+S<*IkMf\P%<.(No)"Q5Qf&3N&l5raEs=r%CrO*8Ws&E<n(aZ)QH%Q[Bn`GQX+leYC*<&8+/+6*q"kaJqYGVn$o@dLol#QYVe.0``*s2ga;W@mOXkll(9hRM]6^_nqCm[<^?HGl/^#peb!Xfip_k*T#Rs%]*W==P2g6(,D#_HAVVGiTm/14((`b!_[#9L<?!??Qm(=PA*1"[/).b61f:@4"S$"j/%1R9NMC:V[X:;=*4G)KJb^97NEQ#W&5//Z%Le']PWXV=$7641opAV).!oml6N+DDlW*(7_jF0@q6e\+F"A*!98g^(T-Ar!R5-"A]e/sObSC62BRg$1k^1mBeA*!-K)88Jh1/RS^%>M`qkJ#liWZ2TQ^.dg+?Pu;Kn7$5L^9fbJk\8JYNBca!S_3X=$Q$nl`!H]k,jEfHJJPYP,%%2#7lBVb!mMT/(/!hPe[9[nXEMB%J%;4^T&7`/U2/;+Z6b/&4ihbQ\:l#nqUM^Y*[7S#mka#"aVYbon=nD4chVG^?]5e0o%3Z4ksF'>/6;JcYY.#G\>d[+3:6gO+l;6mOV%86.NFO%P735U;#q>%;DR24.!:a3]42KWJG'$&G$dJ5093H2`@o<lsId[Sg.4$J!d+M_#Bf2618UpAg#ITC[^B"Ge376IW]Y/UqB-%'HeqF3mX,t_kW,nE:PG!IV:#MJFA%G^=%@k$)Y/bEl0>!:8i4Vr:gG3i%Y8DZ><\lNl\$E!E1i9aK#l.@uE6$QT1LA3,I-62<8:f%%=`F?LB*0;dTC%Xi?;&;+JaY:bsKb=R'B>#N94.q+NDg]oTC2@'Oo/[m5jN;%W#k<cqo.9pe+Dc+og5s#:?JQ5cc0hX0d7=D->Rg%Pp>[p%%V=5-e>&O,Mue[j8`X(&YoN$giTH\i9%Ns0J*!qibCNc03uV]UO[S-_Q7gMHu3`FE^rMmpqBC1C0;+9:@O<V\LB]V+I3RI%iiDM>\NO:T6U6I_APSqJ+`Pr5\s1;.5Zg9>#IN9Ekk^[QHb*TL7q,k9AI.\cR6B"RVLtXt_m4I1nq11?*4*X);'aUZW@pQuHU.T$%Fuib^<6=LkdM'/FHN:k8^,3r^q7I,l#9l]fn[o*;>5OL0Z%?(HKLJohZMmr@(e_,790h=u@4_<j1j*e6cp1?gr7@NfWr8(M%7Nj$%/gVu2ZqD^t#&*:K(7YTG)C!7qC+8D.-jN^E<DEW-AUenuI^`PSO;je1/O#gP`-un.0a3'Y4GqF/KsY-r]+hV#HWSF`l&XnS2hSSW%-eWH<PLW.3>L&e.ZQg8fb^;W)H6P1k*l<A'V=fA=5%HDT&0?V2orRD#hC/VKQ&P0&J2ZdsD'RURR?g]f=7Y@$`fSW8%I=)Z3-:DE%,:#'2B`.;[qq8)B0mN(J0.Zs<M&6V0&J93SihZ2oqS#%j%m\JHTd'$JE8]-1]#E3ZB/LIdNE&TtMe\pc27ZZd@LWnZ,0DS>o"jLF%;qR"cJp=('7B[NXp/$ZM<RcQQeeagf)/7HpPE/gY5]k!_WKunlK6HL*g%Pi8%R-hVk\`I`5b@!]WmHY,IFh$Zl%:C!^3]^'!;.fN%Y,,;?5]c6BBgF^D7gDsBT+VaR*bSK<'EM[N&5KSFSEoeM=??2:Q7oOI#cD1/EI)WO*%Kjpp/c_FIhLal#Qirl]`@&C#VtDO\gQ_7%6/A\Ks"guQaif8iJ65,@R<"Fd!:`/S1%TG@3E6!Pk.-dO5RaGU)#]JW22VGP2UDImVYqua;X6l+<^eMUq\$g\dCR%OJ9W8iNk<e`%!NdRM05[pTPUWiHYH(;*W'-=4Z4UY$Ng_anZ[DEJh\J\%<)M9u:.kr^Cb]T'8I"Ht;??;Q"J'mBpArt\rMlkjq&n14@`V+G8jLgT%g9USi1`;e#HGBB1MOMjA+5Eo<7ItrT/*%@cXeNU?\&46cB>p5;/GBLtffu5Vd]--6j!?sdrNtY$+_Z&`F]m64cmb.DEk,JZ;X[%6%:uN]CX<X/iof7PI,!og;2O*$,pp<dE^64.riNJoC%m[hM?buDmJ/C%s,*rA;J>@L7,G6&kcm"UT+i-H0eEfU\<E:]%GTrSeJbe7t%Z$24E97'YiNNq3'7Sp?+!SrlN0>]ih^>4j%CfOYDPfM[F1$5:MK%mMT,(a0VLFLg-+`/hMKFj;!0-\mlcba,^p,>F>J1,/];fo^A%.$&ng!mMaRcn<QoWAX`"nH,t<L#N)l+gEW*dfJi+0mQRlbu+)$1.37BRR<3.^":3%VYHI%P^lk/1gO$G83tjj\i(\UBaF%o!hp)V%1)&Bk"6,_^(>6uWA3l,O,M':.`)7f?6.X>ZVX7\pfDp`86u\#\<Dmbt;*],:VXqa$T^Rgm,oXbg:'6;/MK**^g7+@O+h!Zn'8lnu%U6^PVgM\&`JqA7H)%t:A_S@l^;Q]`gUq2JseTC!!\Wt8l.i49MRl5"2rC"VY+8\fg#f[?[ar1e@kg5?cgMiq+TbpjsUGo7@%Yg!k%.<-btj\u'tOA1Y5>WOq-nW+?<ma'3/n#W5n"+YX%613.P&V4Cr4b_`=ZATu?f3?a)*C<=LeH>r:6IUmm,bVOjGND_m*s-X@3)FqV%4&<0+[jjoZUfnIJWhL;k,b&a\0YdeeT_?-^cfS*>kKQ[ZULIKOEBk5m*Oh+P&?CVKLT\U'ABoc5C_[fiC._M;na_2=VoS\0`>P)i%U%Gi^"MJ#P(O:/,D`E?I.)8GB5bufWiX#g&gT\njQG(>XY=1Y]:trQ^?e#T+/c`u$d[i\)0.>#j/45b5'L5KUG*WcbJ659o,);bF%CB)#:1roo*AP)0%VIs`%=%2'a,[iGZIE-23/0dK8L*Qm_Nc:uXn-Pgn<Yr^r2:#+8Eg25**X*t3I5YRZ,H")nC<@i(4;1_]N1E7U%W6%HDX<*2FnkkQW%fJY80I'E'oq4`^;UdA1/A4-pW`F8&j()HN@FjahdN2:gPZCiTV&1%Yl&R_J_fU(O#G#,4\qoSA%X0.<l?hqg%F%DX(rf%iP/s9Vm;X83e9,3Si;HOCr![p:a&K:P/&MBdV/6,I4e,?8tV6[U2bYb#aX0j(^Wl/\5FIjor-\5<!@Lq^-\`/<Sf2Be4%jZ(Gdj3BZ*b;AHm0q+UQ]*1V0.EB\rlDf#r\^3LqYh!YDGKc5:qMq^=l_j.&C7Z3aV<r_HG@*VuE=(KcLFRFOR\-0:]r:.5.MBhV%kbVb)=jepDf!iR@#q9,>P!Vqg<#r4\<m-8#7FZNLPQ2_*0O!b*e^1I5PdhusU$^93-2XlTB\,b3L<j=BQS91X^9SU0%5e5L?Ijd?%-c]t8=+r,pdUsu>.ja((L:/Lpb<mgZ6U[)C'XMfTWX?IC$Z1g\S6onGlH"[Tl!bU5#_Z$!-i-gmDa:!PbCoqUk!hoE\!,_cBXi;p%/,-shBd54EB4a1uNa!Wl$h`VK,&=&]])(*.\6i@:`3S7u\.]_X;"8IAcu`N'e;e4N"Bu7iF`rM;^*:'P"X\G-OiA#fRN@Am4j+9j%9q;SVh]b]f-"?Old$UZDOqL-)[5F]F>KmdsQf&ql511"s[FeN&#ILW(PCpq5Vda89A:JF[<+W#!Gbs/mP_IhWIIc^3UmNZp.btO$%_4".mOjq)b0CR0q$TaRuP/@dq[b]0G]2fa`a@00;W[s&?A^OYhQis2b)`"%oFLN$)MRs2:NIfMhf,hW:mA<k,.(s$`<'/I=L4b(l%DWteBFrOP8.i(C=eK^R5*0!A_gH&,pF:].!o]BF>&%4f^YB4InQM+nS\/X^$%,WQo[#POa,XhS[ht(s3I4]^U$l"Lan[OtoQiief%REMTYrV0<"<S6DfJp=.H=G7\*:I:T.>+fa$p8mT'qR1pMo`HTN%GONrlLG>P8C[rAGSSPgHToDr8[CBZcYbe'rC/4GBF\V5>ps^%%h@AR#+)'D#O6_EZE'%OS<CBLPQEVp6V$!-L(8Br)VSTWWXeG,ln@!qNBKjnl[+(2CpbX3SH&SP%640-))Gp6-$CPu&e6(S$=1Gt8%cnVq,pUi(_bD!M(8tTUUBiCbU;!9XV;9d?rSWK4<gV(t7ohqZ'/6&819?Hu<cn]C_47b&]8-#[J"B%tS)s;Z`=Rp*\f%HT[(3_;?%64n9(EjYo^Y+"uoWJbK!iK0]7G7/<OOK/BT'T_"j3ak=OeF!/sr7Gji$u#OCpQ9AcV&#0=H^dp2ip3FBp2G4ZZ4YH,GM3b$$DH%o%@;njN/Om7<I,'&r;IYKsD26<J$2l!eo!II0C>X&BGTh6?1Er[E+cfJdqm%D''-3>_M,&?oW=j%m#4r$m2mc2kPWnVTW(Y9_r#,D=%Ldm>1W1SSaG%A`**Teq4nem1"#5.h-O(&b\[DgC7Oq1AJA'We%Uf0C<@G:.>((hn>OXDWdY,i>5Sb^Wm9[F-7G5C4s6s"+!g*:]W%;I]l!qC;e0m,L5Dd9o\q0n[r?OuNHk&Zqic>rHs+;O5Gp0F?.c5%HlF1)Kg*:rL&kOes8)FmE:6$>;lE`Y&(]<SA&R:=;S*?R$:0%5aQ%G1QqI^1ig>"Qr_TfIiQg82!ScX\I=&um&RP3iB:khr(S(7:lEb^$EHTk#p#V>!YiYV"&1c*>q%#Kr/ekVfuP^m.O:L(CG%iE%E986LaXXY\%V%Ui7T;[F_16.,&Ai_jHhj*O"O<e(.M]<U4\>n$^J>dO+h8BmapE2X(8'uoI1t*Tk9AAq5Vqets*n27[Lt;'K]+<B%47oD:$U*RT]i8*"=A[@k#oK\8XgCOemG6"159]@[f5?sNQ^1<$?b@X`bd1I^,3LdN%ipHlTY+_f+cenA,=0e!.nU!5;b;')*ps8N%XJS`6LhAL6Lt!VMoHFqVL*5@-%Q+Ya#5/<$5*1k]pk)r,WQ`_h;59=3++&fVE7)&@V^*<]((A.Y3YIR.NjNtcLm<nWc0It)bm6IT%;K\d(5$<u1&DL_'ADs'##ksCp-`5TjX6LNjgiH[BM`A8,a`b>KAVk*k,efU2OEslP$foetUZeZ%)5&.2BgC0-P`b:*Tc&AMLeSS_%&L\<aq%Uod3Q%sh$&qb+.2$uDJb&;fS49Ml<&YHih7M/siNA;o/LD\I4\eJA\K4D^Ylunc)#ibar$:?'R,n(Uo53%5gtS1Er-Ajf%EBP;AVKiSKHsX_f7pN*/$fA3!o=XEuO'e4uosD_U?e/=tDp(p#Q_34.VE$fp<I[n:RRI~>%AI9_PrivateDataEnd