%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig3.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Thomas Guillerme
%%CreationDate: 4/28/15
%%BoundingBox: 0 0 342 275
%%HiResBoundingBox: 0 0 341.7490 274.2642
%%CropBox: 0 0 341.7490 274.2642
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Bhattacharyya_Coefficients2</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2015-04-28T17:35:40+01:00</xap:CreateDate>
         <xap:ModifyDate>2015-04-28T17:35:40+01:00</xap:ModifyDate>
         <xap:MetadataDate>2015-04-28T17:35:40+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>208</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q83/MvVfPMHmXy83l&#xA;uwvrrS9Mk+va21mB6c0bSrAYGBZDKVh9Z/TQOwYIePfFU+8s/mZ5W8ya1PoumSTNqFtax3tzHJEV&#xA;VIpuJjBfdSzK6tQE0rQ0YEBVlWKuxV2KuxVbHJHIpaNg6gspKkEclJVht3BFDiryO88+eZPLv5h6&#xA;1rWv2Wox+RiE0+BwgkiheKSONLoQK5lVZZHuKv6Y5qqBOZouKvSfK/mbTPM2iw6zpZkawuHlWB5U&#xA;MbOIZWi58TuAxSoBo1PtANUBVNcVdirsVdirsVWxyRyxrJGweNwGR1IKspFQQR1BxVdirynzJqPm&#xA;jTvzdW8P6QHlm0sY7q6aJrg2voQ2981yBEQLRmMn1fkxb1VPAKpVmKqs08qeffL3mm61S20iSSSX&#xA;Rpltr/nGUVZiDyRWOz8CpBK1XwJFDirIsVWySRxRtJIwSNAWd2ICqoFSST0AxVdirsVePReZde8v&#xA;fmhrt9rx1OPyuZLhIZXFzLalVtbWaL0opAIVWMQ3TVti7u3JWUER8yr0vyx5n0rzLosGs6YXNjcv&#xA;Mlu8qmNnEMrxcgp3Ab0ywBo1PtAGoAVNsVdirsVdirsVdirsVec6VrP5gTeZJ1t9S0y70m5nvTp+&#xA;n3Xqm7aLT7sW10FuIILaOERu6qqvHK3SrtuQqq/lFLJBpItpZGZb9ZNRhLkkmQ3EkNyF9lKRu3+V&#xA;IcVZ7Hb28Z5RxIjUpVVANKlqbe5JxVUxV2KuxV2KpV5Z/wCOdN/zHah/1HTYqkKWVnfedtUt7+3j&#xA;urW8iltbiGdFkjljghsZYo2R6qwVrmZgKftHFWYQQQQRiKCNYogSQiKFUFiWOw8Sa4qvxV2KuxV2&#xA;KsC1DXvzEj823dvpUek3eiRyrBHBf3C2txJc/VluDBbyQPdEtwq/GaBGAq260OKsn8oFm8paIzKU&#xA;Y2FqSpoSD6K7bbYqm2KsR1Kn/KwbGQ0PGKG2JNDSK5ivpJU3P7b2sJP+qMVZXHBDFX0o1StAeIA2&#xA;UUHTwApiq/FUq82f8orrP/MDc/8AJlsVTXFXYqo3llZX1tJa3tvHdWsylJYJkWSN1YUKsrAggg98&#xA;VYr5mgit9e0F7WNY1sHMqRIOKK95eW1oW4qKcmiuJ6H3OKswxV2KuxV2KuxV2KuxV4z+WWtS3P5v&#xA;+arKe1iju0N60tzCLBTJFHeiOASJBYw3isE/5aLluX2wpDKwKsi8lVtfKflbU+ixXE9nct/xTfXD&#xA;xKAO5NyIPorgV6JirsVdirsVdiqVeWf+OdN/zHah/wBR02KpNZ8hNpd0aB5dd1KOeToPTAvIkB6d&#xA;TDEPc4qy7FXYq7FXYq7FXjdvdaQfz/uYLs6smoC5/wBxyQfVRorkaTGXkmVyZTeKjspZPi4cAfgO&#xA;FXp/lP8A5RXRv+YG2/5MrgVNcVYjqBf1tWuT/eW+taZGjdOMVLPnXoPszyVPgfbFWXYq7FUq82f8&#xA;orrP/MDc/wDJlsVTXFXYq7FWI+ZgfW8yTijPZaRbXFtX9maGS6nG/wAVPiijJoK7fLFWXYq7FXYq&#xA;7FXYq7FXYq8e8peZLl/zT1G3hOqahSS+gk0+OZTBbot7HGbm5iu9Zu2iWOn7rhawl0ZiiFdgVZX5&#xA;F09dR/LC2sS5jNxFcoko+1G5nk4SL/lI1GHuMCso0PUjqWk2t6yelLKn+kQ7n05lPGWPem8cisp+&#xA;WKo7FXYq7FXYqlXln/jnTf8AMdqH/UdNiqTx7eRNKvSKMGsNRuH2HHncR3Fy9SP5WevcjFWW4q7F&#xA;XYq7FXYq8Q1y59P87oNVsvKN1cXdlf8A6Ok1u21NHkumbR3uDZrYXU9tDEipIJOfKlU7s1MKvWvK&#xA;X/KK6N/zA23/ACZXAqa4qxR4ZLryd5geIFru5k1Mxldj6kMssMJU06gQpQ4qyiCeKeCOeFucUqh4&#xA;3HQqwqD92Kr8VSrzZ/yius/8wNz/AMmWxVNcVdirsVSXTYIru88wrMPUilult69jELOEMo+Tu4+d&#xA;cVV/K88s/lvSpZm5TPaQGY7A+p6Y5ggdCGrUYqmeKuxV2KuxV2KuxV5Z+WXlho/OmueZ0e2nhvzO&#xA;Untrl6+neypfW/qW0llA/NreVCzvdScfsqAtFRVlP5W/8oJpn/Pf/qIkxVEfWofLmpXYvnEGiahL&#xA;9Yt7pvhiguZNpopG6Isrj1FZti7MK14gqsgjkjljWSNg8biqupBBB7gjFV2KuxV2KsRuLn0/KN9a&#xA;o/G71G91CwsgPtGa5vp41YDrROXNqdFUntiqf6ppMd3oN3pEVIori1ktI9qqqvGYxsewBxV2h6om&#xA;p6ZBd0CTFQt1b1q0M67Swv4Mj1U4qj8VdirsVdiryez0nRr38859dhvb0ahag2zQ/o65kt5Yvqvp&#xA;0XUIy9qkCSpIOLKr+srqWNFGKvQ/Kf8Ayiujf8wNt/yZXFUTrGqQaXplxfzgskCFljX7cjnZI0Hd&#xA;3YhVHcnFVmgafLp2h2FjM3Oe3gjSeT+aUKPUb/ZNU4qgvJ00SaLFpXL/AEnRaadcRnZx9XHCNyvY&#xA;TRBZF9mxVPMVSrzZ/wAorrP/ADA3P/JlsVTXFXYqsuJ4LeCS4nkWKCFWkllchVVFFWZidgABviqV&#xA;+VEk/QkVxIjRyX0k18Y3+2gu5nnWN/8AKjSQIfliql5ZnhifUtHJC3VhdzStFsKwXkr3MLqv8lJD&#xA;HX+ZGHbFU8xV2KuxV2KuxV2KpPo/kzyfot013o2hafpl06GJriztYIJDGSGKF40U8SVBp7YqkHmq&#xA;zbyf5MvdT0n6xcQaPbvcGwa9a2X0YVLvwcQ3B50G1V3PUjrirGL780dG0xo4NSi10XLC8q1rPbzQ&#xA;ONLEv6RkieSSCRo7ZraQfvIkd9iiGuKoDUfNX5faXrKLFpd81yNRa1+sqLVJJJQb2JJbcivIvd6Z&#xA;JD+9aMj7Z+GhKqIu/wA3/LMEUkoOuLFBMkF3PPLCscTpcWkN3H+6aaRpLddQjb4U4P0V++Kpjrn5&#xA;g6bpE2iWl2ur2+oa9JbJZWlxe2QcC5u1t6ukE1xJtGTKCEKEfCWV9gqm2pfnBpljfPbHSr2UxT3V&#xA;m8KmBblri2u7G0jEcTyKvCdtSR0aV0PCjcSGBxVhNt+Y/wCXtxrj31loV7DNKYZLq7k1D6nOo1G1&#xA;vNRrX6wtuqPHZo4rOq/vN+PGhNKjZvzV8svdwRabpOu3sM0NrKkx1KaHm942nenFErXdCypq0fPm&#xA;UAbYEgllCsq8lReR/NX1rzBpNrfwXKlLS5vJrq5S4ZjBFO8JdLh2PomQRuCaB1IFaVxVlH+GdO/3&#xA;9ff9xC+/6rYqqW+gWMEyTJLeF0NQJL27kT6UeVlb6RiqY4q7FWPad5C8t6brT6zZJdxX0jSPIPr9&#xA;80BMrySMDbNMbfjzndgvDirGoAOKoi38paRbwR28D3scMKrHFGuoXwCqoooH77sBirGPPmlWOjRa&#xA;frFrpZ1S9+uW1jHNd6tf20kLXs62sbRyKt01Oc/x0p8NaV6YqkB/NLyQstvHJYeYU+sWf6U5/XZC&#xA;q6cRGy3jUvyfTZZgQgHq7GqA0qqgm/MD8vrrWNMuk0TV7m/uIJmsJWvHF6KQ2tzGsRe79NUmtNR9&#xA;WrTKQAVK8jTFVa7/ADd8hw3thHHb62+n3yXk6am19crEYNPtXuLho4xdPOXVkCcXjSu5BNBVVkt9&#xA;+ZukXfmax8i3+k3FtqOt84Lm0uLi05x272k0zswsri6dT8CrRuFeXJSaYqx25/NTyjazXYn03Xlj&#xA;tAnqR/pCUXKMRfSS+rA14oiWOHTHkoz8yGHwDuq035oeXE12406bTdWggtNNn1C6efWWimjktdRb&#xA;TZYCHu1tdpIyQ/1mh6DemKpXqn5meQb+XQbtfLmsaxY376m1hcyXrmcDS1V5Z7aKS6IZW4tSsiP8&#xA;GynbDSvT/Lcfl7zDpS6rp02omxllnigle/vAJVgmeH1U43DVjcxlkPdaGmBUZN5I8uXF5a3lzDNc&#xA;3Vk4ktJZ7q6mMbBg1U9SVqboD9GKp7irsVdirsVdirsVdiqldWlreW0trdwpcWs6GOeCVQ8bowoy&#xA;urAhgR1BxVjev+RPIU8y6zqmn2NvHZXDapfzyQ26QzPHBLEJL1nT4xEs7OrMfhYA1xVHp5Y8l38M&#xA;l2mk6bdQ6kfrMtwLeCRbgyxsnqs4UiTnFKy8jWqsR0OKpdb/AJZeUofMR1sWcLMtslnbWH1azS2h&#xA;ijeGROAjgSVij2yMnqSNw34ca4qjo/IfkaKS1ki8u6YkljQWLrZ24aALI0w9IhPgpI7P8P7RJ6nF&#xA;XWukeRnv7qztbLTG1C0kF1e20UVuZopbl0nEsqKOSvK9vHJybdiin9kYquk8jeSZY3ik8v6a8cgi&#xA;Do1nAVYQRmGIEFN/TiYovgpoNsVVD5O8omBrc6Hp5t2j9FofqsPAxcY09Mrxpx4W8S06URR+yMVX&#xA;eWfL1toGlCwgcys8091c3DKiNLcXUrTzSFUCqKvIaAdBQdsVTXFXYq7FXYq7FXYqpXNpa3SKlzCk&#xA;6I6SosihwJInDxuAwNGR1DKexFcVY7J+WfkZ9WsdSGjWcb6ebh4LdLa3WAz3LQu1yyen/fKbZeMg&#xA;NRviqMfyN5Ke1a0fy/prWrFy1ubOAxkyOkj1Thx+J4kZvEqD2GKpfb/ll5Vj803fmWe1jvNQuozA&#xA;izW1mEhjZeDhDFBHI/JBw5Su54/CCASCqmFh5G8ladeR32n+X9Ns72H+5urezgilT4eHwuiBh8Pw&#xA;7HptircXknyZDE0MOgadHE4IeNLSBVIZZENQEoarcSg+zt/McVXXXk3yhdtK91oen3DTqyTtLawO&#xA;XV5vrLK5ZTyBnPqkH9v4uu+KsYhvfyq1G5HlvTLeytdRsprqz0tm0vhDBewuXmFo80CW7yRzReoy&#xA;xsala9sVZjoOi2Oh6JYaNYKVstOgjtrcNQtwiUKCxAFWNKse5xVKrD8w/KN9rL6Nb3rfX1uJrMLJ&#xA;b3EUT3FsWE0MU8kaQyunBqqjnpirI8VdirsVdirsVdirsVcCGAINQdwR0IxVgf5tTX17Y6V5V063&#xA;ju73X7xBLaTSGGN7Kypc3QeUJNwVwixE8D9vpiqX/lj5p0/Q9In8n+Ybu30/WvL9y9lDYtOZGktn&#xA;AntFtyyxPPxgmSMcE5bD4RUYq9Gsr21vrK3vbSQTWt1Gk1vMv2XjkUMjD2KmuKrrm4gtreW5ncRw&#xA;Qo0ksjdFRBVmPyAxV4R5a1PVvLmuWH5i+YLaDTtC81vd/pLUPrDySeldL9a00zW/or6QgitxEKSP&#xA;9vthS9l0vzb5Z1a4it9L1KC9lmieeMQOJAUjERerLVQyi5iJUnkA6mlDgQm2KuxV2KuxV2KuxV2K&#xA;qVpdQXdrDd27c7e4jWWF6EckcBlNCARUHviqrirsVdirsVdirsVdir56L6joWt3Gp3EerynRvMmr&#xA;61PpVxZlNNTTWluDNfwztFD6kgtpGaP989WIAUVwpew+XvzA8ueYL1LTTHmd3juHDSQvEoazeKO5&#xA;i/eBW5xPcxhqDjU0rUGgQ8hK6toerXWszwazNHonmXVtYudOuLFk0uPT3luDLfRXDRQh5RbOzRfv&#xA;nqxoFFa4UvXPLX5i+WPMt2lrpEsszPFNJzeJ4lDWxgE8R9QK3OL63Fy2oCaVqGACGTYq7FXYq7FX&#xA;Yq7FUq8p/wDKK6N/zA23/JlcVX+Zp54PLerTwSNFPFZ3DxSr9pXWJirCvcHFWL2HknRNW1K5u9WM&#xA;0nmDTL0Sm5jmeELci3hiivY44yiFpbaGIMHVlBDIBx5BlWYaTplppWlWel2alLSwgitbZCakRwoE&#xA;QV/1VxVFYqwie3k1hGGoXM0ujeavr2lSWYYCNbd4pPq80Rp8HOGByT+0ZR/KoxVH+VPy70Py08E1&#xA;m0slzCt4Hmf019R9RnjuLmRliSNQWa3jVQAAqqABirKMVdirsVdirsVdirsVSryn/wAoro3/ADA2&#xA;3/JlcVTXFXYq7FXYq7FXYq7FWDXvl218w+WNR1WW1W8vtSMl1Zhh8T2yK0dvbqSQyRz23wyKD/u1&#xA;/wCbFV7eWfJ4TR4tD0+3t7TV6CU2yBFksREtxJyQUVln+rwRSlhVlIU9sVTbSrCzlstX8s3cSy2E&#xA;LvbrbtUBrG7j5qlAdkX1HhWn7KYqiND8oeX9E9M6dbFJYkmQTSSSSyN9Zl9edmeRmLPLLRnY7mg7&#xA;AYqnGKuxV2KuxV2KuxVKvKf/ACiujf8AMDbf8mVxV3mz/lFdZ/5gbn/ky2KqV4BZ+Z7G7BomqRtp&#xA;8w6kyQh7m3PsFQTg+JYYqnWKoLW79tO0a/1BV5tZ2006p0qYoy9N/GmKpVq2nrpnk+3hRuSaIlpO&#xA;XPUxae8cklD4tHEw+nFWRYq7FXYq7FXYq7FXYq7FUq8p/wDKK6N/zA23/JlcVTXFXYq7FXYq7FXY&#xA;qlnma6mttAvpLd/Tu3jMFmw6/WJyIoKfOV1xVHWtrBaWsNrboI4LdFiiQdFRAFUD5AYqxTyrU69N&#xA;prEB/LkE1qIx2hvbkyWq/wCwtrWP78VTk0g83JTf9IWDBj/L9RmHGn+t9db7sVTfFXYq7FXYq7FX&#xA;Yq7FUq8p/wDKK6N/zA23/JlcVd5tIHlXWSdgLG5qf+eLYq15qhmfQ7iWBDLc2fC9t4l+08lo6zrG&#xA;Kf789PgfY4qmcM0U8Mc0LiSKVQ8bruGVhUEH3GKpX5p+LSRB1W6ubS2kTb4oprmOOVd/GNmr7Yqm&#xA;GoWUN9YXNlNvDdRPDIP8mRSp/A4qh/L97LfaDpt7NT1rm1hmlp05vGGb8TiqPxV2KuxV2KuxV2Ku&#xA;xVKvKf8Ayiujf8wNt/yZXFU1xV2KuxV2KuxV2KpR5gPq3GkWRpwub5GlG1eNrG90pH/PWCMH54qm&#xA;+KsF8qarFJ+Z/nfTyVDD9HyQkUJcJbKk24/32zKCOxOKsj12sV5o13uEivfTmcdkuIZIVB9jM8eK&#xA;pvirsVdirsVdirsVdiqVeU/+UV0b/mBtv+TK4q7zZ/yius/8wNz/AMmWxVNcVSbynWHSm0xvt6TN&#xA;JYhT1EMRrbVPcm2aIk++Kr9a+PUtDhG4+uPLInYpHaz0J+UjJ9NMVTbFUo8sHjp89udmtry8i4b/&#xA;AAp9Zd4hv/xSyHFU3xV2KuxV2KuxV2KuxVKvKf8Ayiujf8wNt/yZXFU1xV2KuxV2KuxV2KpRJ+/8&#xA;2wgbiwsZGkr/ADXkqCMgfK0k+/71U3xV4T5F1tT+bb3qENDq9zqVqjt3hkdrmJga9xaoo+eKvX/N&#xA;vw+Xru56mx4X4U9CbKRbkL9PpUxVN8VdirsVdirsVdirsVSryn/yiujf8wNt/wAmVxV3mz/lFdZ/&#xA;5gbn/ky2KpriqTQ8bTzZcQj4U1W1W5VR0M1owhmdvdo5oFHsmKrpSsvm61CkE2lhcGYd1+szQiI/&#xA;7L6tJ93zxVN8VSjSv3Ou63bt9uaS3vV3r+7lt1tx8vis3xVN8VdirsVdirsVdirsVSryn/yiujf8&#xA;wNt/yZXFU1xV2KuxV2KuxV2KpPo5E2sa3dEHkk8VnG/YxQwJLQeNJbiUH32xVG6xqUWl6RfalMKx&#xA;WNvLcyD/ACYULn8FxV8waXdtpMum3zkn9GTW1zLTYlLd1eQCn8yKRir6mubeG5t5badQ8M6NHKh6&#xA;FXFGB+YOKoDyxcTXHl3TZZ353JtoluWPX1lULKD7hwQcVTPFXYq7FXYq7FXlXl+51a9866hb6b5w&#xA;lWcz3ssvl54BdRWqWl2ISLo3FxPcxfWBJyhEbRIV3VQooVXoHlP/AJRXRv8AmBtv+TK4q7zZ/wAo&#xA;rrP/ADA3P/JlsVTXFUm8zUt4rLVNv9xt1HJKTsPQmBt5ix/lSOYyH/VGKrtPrN5k1i4UfBDHaWR8&#xA;ecSyXB/4W7XFU3xVJ3/c+b4ip2v9PkEgoKVspk9Pfr/x+PiqcYq7FXYq7FXYq7FXm+oXXm5/O92N&#xA;K81WtjZm6Wwt9Hurdr5ZbwWK3hRqJayW49EF6rO6n2Y8cVZl5Q5/4S0TmAH+oWvIA1FfRWtCaYqm&#xA;2KuxV2KuxV2KuxVKPKVH0C3uh0v2lv1B6hb2V7lVP+qsoGKpX+at09v+X+s8dvrESWbbV+C7lS3f&#xA;/hZTir5/dFkRkcVRgVYeIOxxV9F/l/qR1LyVo10zmSUWyQzu25M1v+5lJJ6/vI2xVEeW/wB0up2R&#xA;JJtNQuKsTWv1oi9HXwF0F+jFU4xV2KuxV2KuxV5T+Xred1/M7zDBrEF2dJU3slneTnVPTKvegwRg&#xA;XE7aftF9j6vF9ilWU81xV6D5T/5RXRv+YG2/5MrirvNn/KK6z/zA3P8AyZbFU1xVRvbO3vbOezuV&#xA;529zG8MyfzJIpVh9IOKsf8gS3NxpF1eXcglvpb2eG9Zfs+vYEafIQOwZrTl9OKsmxVKNdPpXmjXe&#xA;4SK9EczjslxDJCoPsZnjxVN8VdirsVdirsVdirxiC806P/nIye3u9G9fVpiRp+ufX543htF02Nmh&#xA;Ngi8JI/V5/vH+Hk2xLJQFXqXlP8A5RXRv+YG2/5MrgVNcVdirsVdirsVSzzNcT2/l/UHtmK3bQvF&#xA;ZkdTcSj04QPcyMoxVH21vDbW8VtAoSGBFjiQdAqCigfIDFXnn553hj8vabaK9Dd36+rH3aKKGWSv&#xA;yWUR4q8dxV67+RmpmTSdV0p2YtZXSzwod1WC6SoA+c0UzEe+Ks1tqweab6L7Md5awXEa/wA8sTPF&#xA;O30J6AP0Yqm+KuxV2KuxV2KvD/I13FJ+cWtDSdLtJNTgk1CHU3aeG2a3t2voubsLXSIPrEsoCyRq&#xA;9zLQVDurE1KvW/Kf/KK6N/zA23/JlcCu82f8orrP/MDc/wDJlsVTXFXEhQSTQDck9AMVeeflbevH&#xA;NcWsxPLWII9bTkSSZ5gqXoWtKKrGJvm5xV6HiqUebRx8u3lzSrWKrfoo/aaydblV/wBk0VMVTfFX&#xA;Yq7FXYq7FXYq8R1u41qT87oRp+j+XXvLO+/0Zn9Wz1qeM6O5a4ubhIbrlZgytEGCf3iou1K4Ves+&#xA;Uv8AlFdG/wCYG2/5MrgVNcVdirsVdirsVSjzAPWm0mx/Zub6N5afaC2itdq3y9WBFPzxVN8VeN/n&#xA;hfJLr2k2K1ElpazTyeBF1Iqp9I+qtirzrFWafk/qX1PzsLZmKxapayQcR+1NDSaKv+rGs334q9e1&#xA;WkOu6LdDrK9xYMOwSaE3Ff8Ag7NR9OKpvirsVdirsVdiryP8pn8p3/m7VtY0vXrDUry6SaYWaq6X&#xA;sUF7Kl9xCrfXFuI4WuPTkMdshMleR5V5FXo/lP8A5RXRv+YG2/5MrgV3moA6BdA7ghAR4gyKCMVT&#xA;XFUm85TtD5U1YxsVmktZIbcrs3rTL6UQB8TI6jFWItMum3umainwRWU6RzgbD6tP+4k5HskfNZT/&#xA;AKmFD0fAlbLFHLE8Uiho5FKup6FSKEHFUs8qyu/lzT1lYtPBCttck9fXt/3M1flIjYqmuKuxV2Ku&#xA;xV2KvLNK03R9T/OG61yHTdRN1alvT1KKaxNi8fotZtJKjlL8cZraaFY1DJyX1APjJxVn3lP/AJRX&#xA;Rv8AmBtv+TK4qmuKuxV2KuxV2KpMR9Y84DsNNsPYhmv5vwKCy/4bFU5xV8+fmfeNd/mBqpYhhaLb&#xA;2cRBqOCQiYj6JLh8VYziqK0nUzpOsafqoJVbG5imlYdfRDUnA+cLOMVfQ/m0iPQ5bwjbT5Ib5yOv&#xA;p2kqzShab1aNGX6cVTjFXYq7FXYq7FXYqlXlP/lFdG/5gbb/AJMrirvNP/HBuv8AYf8AJxcVTXFW&#xA;NefZSdNsbOm17fwKW/l+r8rz8Ta8fpxVIbu2hurWa1nXnBOjRSr4q4KsPuOFDKvKGpzaj5ftZbhy&#xA;97CGtb1zQFp7djFI9B0EjJzX/JIwJTnFUo8v/uptWsq1W1vpGjr143SJdsfl6k7gfLFU3xV2KuxV&#xA;2KuxVJ7byZ5PtdWOsW2hafBq5d5TqMdpAlyZJaiR/WVA/J+R5Gu9Tiq/yn/yiujf8wNt/wAmVxVN&#xA;cVdirsVdirsVSfy4fXbU9Q7Xl9KsYPUJaUtKV/lZrdnH+tiqcYq+W7vURqd9d6oAQmoXE13GpNSI&#xA;55GkRSf8lGAxVSxVp0V0ZHFVYEMD3B2OKvoTyRex+YPIOnPd1m9e1NneluryQ8rac/7J42xVNPLV&#xA;1Pc6DYyXLc7tYlivCev1iH93OD7iVGGKplirsVdirsVdiqVeU/8AlFdG/wCYG2/5MrirvNP/ABwb&#xA;r/Yf8nFxVNcVYX5tnE/maytlqRY2kk8ynpyupFjhYe/G3mB+fvhCoXFCI8pXZsvMd3YOaQarGLuD&#xA;/mJtwsUwqf54fSKqP5HOJSzbAqTJyg84SKQOGoWCslD0aymIkJH+ULxN/wDJxVOcVdirsVdirsVd&#xA;iqVeU/8AlFdG/wCYG2/5Mriqa4q7FXYq7FUDruovpuj3d7Eglnhjb6tCTT1J2+GGIe8khVR88VX6&#xA;Rp66dpdpYK5kFrDHD6h6uUUKWPuxFTiqVfmBqp0ryXrF4rtHN9WaG2kXqJ7ikEJ9v3si74q+dI40&#xA;jjWNBxRAFVR2A2AxVdirsVeq/kXqoMGr6M9AYZY72Dfqk6+m6qP8l4eRp/PirPNBLQ3er6edlt7x&#xA;prdTuxiu0W4Zj7G4eZR8sVTjFXYq7FXYq7FUq8p/8oro3/MDbf8AJlcVd5p/44N1/sP+Ti4qmuKv&#xA;OzcfXdY1XUOqSXLW1uT1EVp+5K/IzLK4/wBbChWxVCagtyqRXlmvK+sJVurVagc2SoeKp2HrRs8R&#xA;PYNXFXoOm6jaalp9vqFm/qWt1GssL0IqrioqDuD4g9MCUu8wlbe40rUjsLa8SGUjqY7ytsF+XrSR&#xA;Mf8AVxVOcVdirsVdirsVdiqVeU/+UV0b/mBtv+TK4qmuKuxV2KuxVJdUP17XNP0tfiit/wDcjfeF&#xA;IzxtUbeoLzfvF/4xHFU6xV5b+eer8bXStEjbe5la8uQD/uq3HFFYf5Usquv+piryjFXYq7FU98h6&#xA;4uiecdNvJDS3uH+oXR8I7plVTvsAsyxsx7KDir3O5/0TzXaXHSLVLdrOQ7bzWxa4t1H/ADze4JxV&#xA;OcVdirsVdirsVSryn/yiujf8wNt/yZXFXeaf+ODdf7D/AJOLiqzzXrEmlaLLLblf0hcEW2nIwqDc&#xA;S1CEr3VN5Hp+wrHFWJWNnDZWcFpDX0reNYkLGrEIKAk9z44UK+KuxVvQdYXy/fSW103HRL+UyRTH&#xA;7NrdSGrhuwinY8uX7MhNftjipZpqmnxajpt1YSsyx3UTws6bMvNSvJT2Za1B8cCofy/qUt/piPcA&#xA;JfwE2+oRAEBLmL4ZQAd+JPxIe6EHviqY4q7FXYq7FXYqlXlP/lFdG/5gbb/kyuKprirsVdiqH1HU&#xA;LXTrGa9um4wQryagLMT0VUUbs7MQqqNyTQb4qgvL9ndx2817foE1LUX9e5jBDekKBYoAw6+lGADT&#xA;YvyYfaxVNJJI442kkYJGgLO7GgAG5JJ6AYq+a/NWv/4i8yX2sqSbaYrDYA12tYaiLYgEcyzS0IqO&#xA;dO2KpXirsVdiq2WNJY3jcckcFWHiCKHFXsvk7zNN5s8pGzMgPmrQzDIRIeJmkgIaGfkKUS5ClJKd&#xA;KuvTqqz3TdQttRsYb23J9KZahXHF1YGjI6/sujAqy9iKYqicVdirsVdirHtB1nR7DyxoiX99b2jv&#xA;YWxRZ5UjLARKKgORXFUF5o82aJLpXp2UzaozXFnzi09WuQUa7jDK0kdY05LUfG64qlk41fVtSXU9&#xA;Rt2g9FWTT7AfGIEc/E7sNmmkAAYjZR8K9WZyqt9XuP8AfT/8CcUOMEwBJjYAbkkHFXCCciojan+q&#xA;cVae0kkRo5IS6OCroykgg7EEEYqp6cPMOiqI9KkMtkv2dNvA7xqB+zBMP3kI9jzVRsqDFLrnXNTg&#xA;1E6tFpl1ZXjII76FQbqwugv2D+4BuklUfCsv1fpsysAvEKmdl+aHlRwqanLJoVwwqYtVie0UdP8A&#xA;d0gEO9dhz5e2KpnZ+d/Jd9OlvZa/pt1PIQqQw3cEjszEKoCq5JJJAGKp1irsVdiqVeU/+UV0b/mB&#xA;tv8AkyuKpjcXFvbQvPcSpDBGKySyMFRR4ljQDFUuPmzyv+zq9m7dkjnjdifAKpLH6Biqm3meCQFd&#xA;PsL6/l34olu8CED9oTXQghK/JzXtXFUFcS21vdQal5t1GzsgjFtO095kSCNl2Mpkl9MzSjl14hUr&#xA;QCvxFVdd/mV5AtY+b+YLGU9oreZLmU/6sUBkkP0LirzPz9+Y995nifSNEhmt9CJIvbh1KzXa9owg&#xA;3ihb9rl8b/ZIVa8lWF/VLr/fL/8AAn+mKtfVrmpX0nqNyOJrQ/7WKt/VLr/fL/8AAn+mKu+qXX++&#xA;X/4E/wBMVd9Uuv8AfL/8Cf6YqqWi6tY30Oo6e09nqFvX0bmJSGAYgsjAgq6NxHJWBB+gYqzDSvzR&#xA;1/Trx7qfRy/1lw19FaBhbyuSA06xvykt5Av2ghlElPsqTyxVnOm/nN+X936a3V++jzyAn0tWhksg&#xA;KHvLKogqe1JDiqZj8zPy3L8B5r0cv/L+kLWv3epiqsnn/wAhyMFTzJpbseire25Pj2fFU+xVht/q&#xA;uo+TfK8M2qTWw03TYY4ZbqO3vJyqRR09SRLdJmRaJUsfhHjiqkn5i6aYGmk8waDbCN1hnjurhraW&#xA;GZwxEM0Uxjkil+Bv3cihhQ7bHFVsn5k6THevZt5i0H14klkuKXDMkKwOkcnryAlISHmVaSMCT0rQ&#xA;4q3L+Y+lxsiDzDoMskjQKkUFyZpP9KkSKFuERdgjPMnxkcRWpNN8VS7zH+Y2lS+XtQSHzBod409u&#xA;0SR2dw1zITcN9WjPCEyMFM0ipyI4gncjFURF+ZGk2MVpZ3nmLQbab03jPrXJRFktRGs0LyE+mkqG&#xA;ZKxswfvSgNFW2/NfQVukt/8AEehvzCkXKSyPajms7qHulrAh42kuzOOnutVWtQ/Njy/p93BaXXmX&#xA;QVnuVR4lSd5BxkMQRnaPkqBvrCMpciq1b7KsQqyLT9U1fUYjNp93pV5COFZLeR5VHqRpMm6Ej4op&#xA;UdfFWB6EYqiv+dq/5cf+S2Ku/wCdq/5cf+S2Ko2y/SHpH696Xq8vh9Dlx40HXlvWtcVRGKuxVIdN&#xA;0nzNYada2MWp2TR2kMcCM1jLyKxqFBNLsb7Yqifq3mr/AKuNj/0gzf8AZXirvq3mr/q42P8A0gzf&#xA;9leKu+reav8Aq42P/SDN/wBleKsJ1X80bnRtcvtK1qX9HrYokj3zaY1xC6SJNKjIlpf3FxxMVnNI&#xA;WaIBFQl+O1VXTfm9oUM08L+ZLX1bf1WlRdE1Nj6du0qTTLxlPOGJ7eRXlWqKVNWxVRtvzl0eXmsm&#xA;uRQTLeTacsLaLqEpe6hmEPoxNBPNHLI/JXWNGL8WBKjFVTSPzc0/V7ieDTtXW6lhCuEttD1K5d4X&#xA;giuFn4W80rpGyzhV9RVJYMANsVS/TPzLs5/Nup3CaxbiKaHRbC0n/Rl063Ml5DdahB6UaXLSIvoT&#xA;VdpeIBrXjSpVdcfn15ct9M+uza7Ekv1NL42X6GvTJSSCO4SIyi5+reoVnjX++48mA5b4qmcP5r2j&#xA;Rg3OqLaStLPDFBJoeoO0r296NPcQNBPNHOTcOi8YmZviFQN6KoXy7+dOla3DG6avHZSTvFHbw3ej&#xA;3itK831UKkRjuZEdg9/CpVWJ35f3dHKrP/q3mr/q42P/AEgzf9leKu+reav+rjY/9IM3/ZXirvq3&#xA;mr/q42P/AEgzf9leKu+reav+rjY/9IM3/ZXiq+G38yiVDNf2bxBgZESzlRitdwrG6cA078T8sVTL&#xA;FUt8yaDZ+YNA1DQ715I7TUoHtp3hKrIEkXiShYOoPzBxV59r35F2V/qkc1rql3FaXdxdnVAzwepF&#xA;aXcWoGSC0/0dx8c+qycjLyYKfhYELiqtb/kD5Wt7u1u4dV1RJ9PgitdLbnaH6rFb3i38Cxg2xD+n&#xA;OlQZedQSGrtRVI/+hc9Nn1aexurif/CTJLNxF2j3U17cPZSSysgs4hCsn1CjgTODsUEe4w2qaeZP&#xA;yc0hdMudU1DX9Y1B9M08JZRXc1t9XhW0khuU4RRW8SJyazjVytCy9fi3wKtH5BeTtXt7e+utQ1GR&#xA;plvZ1CSWqxKdWtlhm9NFtwoCgc0I35ksxYnFUfdfkR5Zl1W+1W01XVtLvr6aCczWE8MDRNb2stmv&#xA;osISyco7h+W9a+GKus/yH8qWdvYxW2oalHJp0qT2dx6luzpJELAI1GgKGn6Jh2K03fxHFVNfyj8k&#xA;v5P8npp88fo3lzPLeXMHq/WBF6hCww+rxTn6NvHHGSBSq7bUxVmeKuxV2KuxV2KuxV2KuxV2Ksc8&#xA;wfl35Q8wXE9xqti009ysaTyJcXEDMkMc8KpWGSP4THeTIy9GViGrtiqQaf8Akd5JjimbU4ZdQv55&#xA;LsyXi3F3b/6Pd3E85tVSKfisPG5ZXjWiSGrMtTiq/VPyV8lywXD6XZrZ6lLcm/gnmn1CaGG7eVJZ&#xA;LmOCG7teEx9MASROjDYV4jjiqlpn5D/l5baNFYXdlJcztaQ2ep3Ud1eWwvBDDHFWaOGcKVPoqwQ1&#xA;Cncb1OKqen/lb5Gi80ahpsenuljb2miXsdutzdBDPaNdQQM49X94Ejt4wFeo2rStTiqYz/kr+Wc9&#xA;i1hLo3K1eJYGj+s3QrGi2yKtRLy+zYQd/wBn3aqq+3/Jv8t7fWzrcOkFdTMwuDcG5um/erdLehgh&#xA;lKD/AEhA9ONO3TbFUE35NeV4Nd8v3WmWkVrpujXH16WB5LmaR7iC1S1tBFzlKRqqorytTk5jjrXc&#xA;4q9BxV2KuxV2KuxV2KuxV2KvKfOP5vanonm++sLWGGXStHWA3yPbzNJMfQlvb0RXnqx20b29nGsi&#xA;xMrPJuB4hVkH6c89W7aI98+mq3mC6itoNPit5y1sDG93NzuTcUmK21vIoIhT46HpsVUq8v8A5gaZ&#xA;5182+avJOoJZXWjiKWCzhik5TSwwubS+W5UMeNZGBioFqhrv1xV6La21pYWUVrbolvZ2saxQxLRU&#xA;jjjXiqjwCqMVYL+VX5oL52m1uJ2tK2U4l08WknMnT5ywtzOOT8Z6xN6i7UquwxVk2r6zeaf5g0Kz&#xA;4I9hq8lxZu1D6qXKW73URDcuPAx20oYca1479aqp1irsVdirsVdirsVdirsVdirsVdiqC1vVrbR9&#xA;Gv8AVro0ttPt5bmbenwQoXP4Liry/wAmfmd588xXsOjfV7GLUrmBbh7yW0ubaOzMUUUl3DLZzT+v&#xA;M0bXduI25xrIHLDZfiKozzF+YHnDSbkWYlsmaLVrbRbq9j0y9uiZZdPl1GWSKyt7lpmAjaBQodqf&#xA;GSSKcQrIfy+Nnr1lb+d7qyt4fMOoWzWFzcwchyt7W6lCLxYs0ZJ+Jo2+JD8DbriqUfmh+Yuu+VtV&#xA;tLbTo7d4W0+61CYT21xPzNvNBGIzNDIiWkZWdi1xMCiUFeuKvRjUr8JFSNj1GKpP5Q1q61jQIby8&#xA;jSO+SW5tL1YgRH9YsriS1mMYYsQhkhYqCSad8VTnFXYq7FXYq7FXYq7FXYqx1fy98oDVbnVHsTNd&#xA;XbyyzrPPcTQGS4i9CWRbeSR4Ed4f3ZZUB47dMVUf+Ve6Rbw2SabNdWz6feW97aGe5ur1I/QV4mij&#xA;S5lkEaPBNJHSPiBWvYYqpa3+XOh3Plb9D6XCLK4srC9stEufUmrbNe27wOzNyLSV58m58txy+0Ac&#xA;VY3pv5ReYFntI9V8yS3enqtymopG1zHLPb3PolbESNO7xwwtCeDK1eLMvHkS5VTvzj+XVrqKabda&#xA;PGLXUdJhktLcpPLbE2rW0sUcSyR8+LRSvHLG/ElWTYipxVB+Uvy11fTtc0/V9b1dtSnsbOJXDM0h&#xA;m1HjOs12zuAVpHdyQog/YC9ONMVehYq7FXYq7FXYq7FXYq7FXYq7FXYqgtb0XTdb0q50nU4jPYXi&#xA;encQh3jLKTWnONkcfQcVSY/lx5R9CONbaeOWKWS4W+jvbyO9MsyqkjPepMt0/NI0VuUhqFUdhiqj&#xA;c/ltoV1f3E109w9tLLa3kMUdzcwTxXtrbNZ/WFuoJY5yXtisbBm/ZrU1xVItU/Ki+/xJZXug6kNL&#xA;0SytYIX0gNclboxXM880U7LKlUuPrP7xmDsWFSGHJWVRmiflJpg0WwtfNN1Pr2o2cL2zXTT3MEbW&#xA;8giDWzxRyhJYT9XTkkgKswLcRWmKpTqf5Xea7zUNSEWrtBp11DqPCFbmYRyXV9cyvbTSQBOAazhn&#xA;IU1PIpF04AhV6B5a0OPQ9Et9NWU3DxmSS4uGUKZZ55Gmnl4ivHnLIzU7VxVM8VdirsVdirsVf//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:8A8E9C445FEFE411A29DAE1849F252AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8B8E9C445FEFE411A29DAE1849F252AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:898E9C445FEFE411A29DAE1849F252AF</stRef:instanceID>
            <stRef:documentID>uuid:9F8B2E12FBA6E4119CDED63FD7009D97</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>124.999993</stDim:w>
            <stDim:h>109.999993</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Bold.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-It</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-It.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Groupe de nuances par défaut</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blanc</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Noir</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>26</xapG:red>
                           <xapG:green>23</xapG:green>
                           <xapG:blue>27</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Rouge CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>226</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>26</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Jaune CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>237</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Vert CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>144</xapG:green>
                           <xapG:blue>54</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Cyan CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>158</xapG:green>
                           <xapG:blue>224</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Bleu CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>23</xapG:red>
                           <xapG:green>41</xapG:green>
                           <xapG:blue>131</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Magenta CMJN</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>226</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>122</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=15 M=100 J=90 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>190</xapG:red>
                           <xapG:green>9</xapG:green>
                           <xapG:blue>38</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 J=85 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>229</xapG:red>
                           <xapG:green>53</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=80 J=95 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>231</xapG:red>
                           <xapG:green>81</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>242</xapG:red>
                           <xapG:green>148</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=35 J=85 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>248</xapG:red>
                           <xapG:green>179</xapG:green>
                           <xapG:blue>52</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=5 M=0 J=90 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>234</xapG:green>
                           <xapG:blue>16</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>223</xapG:red>
                           <xapG:green>219</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>151</xapG:red>
                           <xapG:green>190</xapG:green>
                           <xapG:blue>13</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=100 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>166</xapG:green>
                           <xapG:blue>42</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=10 J=100 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>138</xapG:green>
                           <xapG:blue>46</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=90 M=30 J=95 N=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>47</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 J=75 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>98</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=80 M=10 J=45 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>160</xapG:green>
                           <xapG:blue>150</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=70 M=15 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>58</xapG:red>
                           <xapG:green>170</xapG:green>
                           <xapG:blue>220</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=50 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>10</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>180</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=95 J=5 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>12</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>131</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 J=25 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>19</xapG:red>
                           <xapG:green>35</xapG:green>
                           <xapG:blue>91</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>99</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>129</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 J=0 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>17</xapG:green>
                           <xapG:blue>126</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=100 J=35 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>161</xapG:red>
                           <xapG:green>13</xapG:green>
                           <xapG:blue>89</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=10 M=100 J=50 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>213</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>80</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=95 J=20 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>228</xapG:red>
                           <xapG:green>19</xapG:green>
                           <xapG:blue>112</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 J=40 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>203</xapG:red>
                           <xapG:green>187</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=45 J=50 N=5</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>163</xapG:red>
                           <xapG:green>138</xapG:green>
                           <xapG:blue>118</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 J=60 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>120</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>84</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=55 M=60 J=65 N=40</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=40 J=65 N=0</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>201</xapG:red>
                           <xapG:green>158</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=30 M=50 J=75 N=10</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>177</xapG:red>
                           <xapG:green>127</xapG:green>
                           <xapG:blue>72</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=60 J=80 N=25</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>145</xapG:red>
                           <xapG:green>94</xapG:green>
                           <xapG:blue>54</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=65 J=90 N=35</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>124</xapG:red>
                           <xapG:green>77</xapG:green>
                           <xapG:blue>38</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 J=100 N=50</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>103</xapG:red>
                           <xapG:green>59</xapG:green>
                           <xapG:blue>21</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=70 J=80 N=70</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>65</xapG:red>
                           <xapG:green>41</xapG:green>
                           <xapG:blue>27</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Niveaux de gris</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>203</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>152</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>N=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -274.264 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 274.264 li
341.749 274.264 li
341.749 0 li
cp
clp
[1 0 0 1 0 0 ]ct
210.38 234.659 mo
210.489 234.641 li
210.599 234.624 li
210.707 234.608 li
210.818 234.586 li
210.925 234.569 li
211.035 234.555 li
211.143 234.532 li
211.251 234.512 li
211.361 234.491 li
211.47 234.471 li
211.579 234.448 li
211.688 234.424 li
211.796 234.403 li
211.906 234.377 li
212.016 234.356 li
212.125 234.329 li
212.233 234.301 li
212.34 234.274 li
212.449 234.249 li
212.558 234.221 li
212.869 234.492 li
212.978 234.46 li
213.088 234.431 li
213.196 234.398 li
213.307 234.367 li
213.414 234.332 li
213.523 234.304 li
212.954 234.767 li
213.064 234.726 li
213.173 234.693 li
213.281 234.656 li
213.39 234.623 li
213.499 234.578 li
213.609 234.541 li
213.718 234.503 li
213.827 234.46 li
213.936 234.417 li
214.045 234.38 li
214.153 234.332 li
214.261 234.289 li
214.369 234.242 li
215.869 234.148 li
215.977 234.103 li
216.086 234.052 li
216.01 234.333 li
216.119 234.281 li
216.226 234.23 li
216.338 234.179 li
216.541 234.402 li
216.651 234.347 li
216.76 234.291 li
216.869 234.234 li
216.977 234.177 li
217.088 234.117 li
217.4 234.398 li
217.744 234.242 li
218.025 234.117 li
217.619 234.117 li
217.691 234.502 li
217.801 234.436 li
217.911 234.372 li
218.021 234.299 li
218.13 234.233 li
218.238 234.159 li
218.348 234.09 li
218.455 234.014 li
218.566 233.938 li
218.674 233.866 li
218.902 234.125 li
219.012 234.044 li
219.119 233.96 li
220.268 233.863 li
220.376 233.783 li
220.485 233.697 li
220.595 233.607 li
220.705 233.521 li
220.812 233.431 li
221.744 233.773 li
221.852 233.681 li
221.964 233.583 li
222.216 233.896 li
222.325 233.798 li
222.434 233.697 li
222.543 233.597 li
222.65 233.488 li
222.763 233.384 li
222.871 233.277 li
222.979 233.166 li
223.088 233.054 li
225.728 232.597 li
225.837 232.482 li
225.945 232.363 li
226.054 232.242 li
226.164 232.121 li
226.274 231.996 li
229.662 229.82 li
229.771 229.689 li
229.88 229.558 li
229.99 229.423 li
230.097 229.287 li
230.208 229.15 li
230.432 229.175 li
230.54 229.029 li
230.648 228.882 li
230.758 228.736 li
230.869 228.585 li
231.249 228.535 li
231.357 228.378 li
231.467 228.218 li
231.575 228.054 li
231.686 227.89 li
231.794 227.72 li
231.901 227.552 li
232.012 227.375 li
232.119 227.199 li
232.229 227.019 li
232.338 226.835 li
233.557 226.085 li
233.665 225.894 li
233.775 225.708 li
233.883 225.509 li
233.991 225.31 li
234.102 225.107 li
234.21 224.902 li
234.319 224.691 li
234.427 224.48 li
234.538 224.263 li
234.646 224.041 li
234.755 223.822 li
234.863 223.593 li
234.975 223.363 li
235.584 223.417 li
235.693 223.181 li
235.8 222.937 li
235.91 222.695 li
236.021 222.449 li
236.129 222.197 li
236.239 221.945 li
236.347 221.681 li
236.713 221.325 li
237.046 220.492 li
237.213 220.242 li
237.088 219.898 li
237.15 219.679 li
237.463 219.835 li
237.572 219.548 li
237.68 219.259 li
237.791 218.964 li
237.899 218.667 li
238.009 218.373 li
238.115 218.064 li
238.225 217.759 li
238.335 217.445 li
238.443 217.128 li
238.55 216.808 li
238.662 216.48 li
238.771 216.156 li
238.879 215.822 li
238.989 215.484 li
239.098 215.144 li
239.207 214.796 li
239.496 214.517 li
239.605 214.166 li
239.713 213.804 li
240.179 213.595 li
240.285 213.228 li
240.396 212.861 li
240.504 212.482 li
240.614 212.101 li
240.724 211.718 li
240.832 211.33 li
240.94 210.935 li
241.051 210.539 li
241.159 210.138 li
241.268 209.73 li
241.376 209.32 li
241.484 208.902 li
241.596 208.48 li
241.701 208.054 li
241.811 207.623 li
241.923 207.185 li
242.031 206.744 li
242.4 206.242 li
242.619 205.96 li
242.713 205.492 li
242.82 205.029 li
242.928 204.564 li
243.038 204.087 li
243.147 203.607 li
243.257 203.125 li
243.366 202.636 li
243.476 202.14 li
243.583 201.64 li
244.173 201.199 li
244.282 200.687 li
244.389 200.167 li
244.5 199.642 li
244.607 199.111 li
244.716 198.576 li
244.826 198.031 li
244.934 197.488 li
245.045 196.935 li
245.152 196.367 li
245.262 195.798 li
245.37 195.224 li
245.479 194.646 li
245.587 194.054 li
245.698 193.458 li
245.805 192.863 li
245.915 192.251 li
246.022 191.636 li
246.132 191.017 li
246.242 190.384 li
246.351 189.751 li
246.459 189.107 li
246.713 188.46 li
246.9 187.804 li
246.994 187.148 li
247.463 186.335 li
247.571 185.654 li
247.68 184.968 li
247.788 184.275 li
248.162 183.707 li
248.271 182.996 li
248.381 182.279 li
248.49 181.554 li
248.599 180.828 li
248.709 180.087 li
248.817 179.341 li
248.926 178.589 li
249.035 177.828 li
249.145 177.058 li
249.253 176.285 li
249.363 175.5 li
249.47 174.712 li
249.581 173.914 li
249.687 173.107 li
249.796 172.298 li
249.907 171.478 li
250.015 170.648 li
250.124 169.816 li
250.432 168.96 li
250.65 168.148 li
251.284 167.271 li
251.395 166.404 li
251.503 165.535 li
251.61 164.658 li
251.719 163.771 li
251.828 162.882 li
251.938 161.986 li
252.045 161.082 li
252.155 160.169 li
252.267 159.253 li
252.373 158.33 li
252.484 157.402 li
252.592 156.46 li
252.702 155.517 li
252.811 154.566 li
252.918 153.615 li
253.463 152.429 li
253.65 151.554 li
254.078 150.546 li
254.188 149.57 li
254.297 148.582 li
254.405 147.593 li
254.515 146.597 li
254.624 145.599 li
254.732 144.593 li
254.841 143.58 li
254.949 142.564 li
255.061 141.544 li
255.169 140.519 li
255.277 139.49 li
255.388 138.453 li
255.744 137.492 li
256.088 136.46 li
256.545 135.324 li
256.655 134.269 li
256.766 133.213 li
256.872 132.149 li
256.979 131.086 li
257.091 130.016 li
257.2 128.949 li
257.309 127.87 li
257.418 126.79 li
257.527 125.704 li
258.046 124.158 li
258.213 122.825 li
258.687 121.934 li
258.796 120.838 li
258.903 119.737 li
259.014 118.633 li
259.121 117.524 li
259.23 116.417 li
259.339 115.303 li
259.449 114.186 li
259.559 113.066 li
259.88 110.825 li
259.732 112.931 li
260.213 110.325 li
261.415 114.017 li
261.603 114.956 li
261.8 115.885 li
261.992 116.819 li
262.185 117.747 li
262.38 118.679 li
262.57 119.614 li
262.768 120.538 li
262.957 121.466 li
263.151 122.393 li
263.343 123.314 li
263.536 124.243 li
263.729 125.168 li
263.923 126.084 li
264.114 127.01 li
264.311 127.935 li
264.503 128.85 li
264.694 129.772 li
264.887 130.689 li
265.081 131.608 li
265.271 132.528 li
265.464 133.45 li
265.658 134.365 li
265.848 135.281 li
266.042 136.198 li
266.236 137.11 li
266.429 138.021 li
266.619 138.939 li
266.817 139.847 li
267.008 140.759 li
267.197 141.673 li
267.393 142.578 li
267.58 143.488 li
267.777 144.398 li
267.971 145.304 li
268.161 146.21 li
268.355 147.113 li
268.549 148.013 li
268.741 148.914 li
268.936 149.814 li
269.136 150.707 li
269.984 151.603 li
270.177 152.498 li
270.373 153.386 li
270.563 154.281 li
270.761 155.16 li
270.947 156.048 li
271.145 156.929 li
271.336 157.812 li
271.529 158.683 li
271.724 159.558 li
271.916 160.433 li
272.108 161.302 li
272.304 162.171 li
272.495 163.025 li
272.686 163.886 li
272.88 164.742 li
273.271 166.197 li
273.462 167.042 li
273.659 167.888 li
273.848 168.724 li
274.044 169.56 li
274.235 170.392 li
274.425 171.22 li
274.62 172.039 li
274.811 172.851 li
275.007 173.666 li
275.196 174.474 li
275.389 175.275 li
275.584 176.07 li
275.775 176.865 li
275.967 177.65 li
276.16 178.431 li
276.354 179.205 li
276.55 179.97 li
276.738 180.734 li
276.934 181.486 li
277.213 182.242 li
277.326 182.399 li
277.518 183.135 li
277.717 183.866 li
277.906 184.596 li
278.097 185.309 li
278.292 186.024 li
278.482 186.731 li
278.681 187.428 li
278.874 188.124 li
279.056 188.805 li
279.259 189.487 li
279.448 190.157 li
279.642 190.817 li
279.835 191.477 li
280.032 192.131 li
280.219 192.768 li
280.411 193.411 li
280.605 194.04 li
280.796 194.659 li
280.775 195.742 li
280.963 196.347 li
281.158 196.951 li
281.349 197.544 li
281.542 198.126 li
281.735 198.705 li
281.926 199.273 li
282.12 199.843 li
282.312 200.392 li
282.504 200.945 li
282.699 201.486 li
282.892 202.019 li
283.08 202.544 li
283.277 203.066 li
283.468 203.576 li
283.665 204.087 li
283.855 204.582 li
283.9 204.992 li
284.15 205.617 li
284.275 206.242 li
283.979 206.017 li
284.165 206.482 li
284.367 206.939 li
284.558 207.384 li
284.754 207.832 li
284.945 208.259 li
285.144 208.691 li
285.329 209.111 li
285.521 209.523 li
285.718 209.933 li
285.908 210.335 li
286.104 210.726 li
286.294 211.113 li
286.49 211.496 li
286.682 211.876 li
286.879 212.248 li
286.635 212.794 li
286.826 213.152 li
287.018 213.511 li
287.211 213.853 li
287.408 214.191 li
287.601 214.523 li
287.789 214.849 li
287.981 215.175 li
288.177 215.488 li
288.369 215.8 li
288.563 216.103 li
288.752 216.41 li
288.946 216.695 li
289.141 216.988 li
289.337 217.271 li
289.525 217.554 li
289.319 218.167 li
289.505 218.435 li
289.697 218.697 li
289.896 218.958 li
290.081 219.212 li
290.276 219.462 li
290.474 219.712 li
290.66 219.953 li
290.854 220.189 li
291.049 220.417 li
291.244 220.648 li
291.374 221.183 li
291.563 221.404 li
291.758 221.625 li
291.955 221.833 li
292.147 222.044 li
292.337 222.248 li
292.529 222.445 li
292.723 222.644 li
292.916 222.839 li
293.108 223.027 li
293.296 223.212 li
293.494 223.398 li
293.602 223.847 li
293.798 224.023 li
293.99 224.197 li
294.182 224.371 li
294.374 224.537 li
294.566 224.699 li
294.761 224.859 li
294.952 225.023 li
295.146 225.179 li
295.338 225.335 li
295.146 225.597 li
295.344 225.748 li
295.534 225.894 li
295.73 226.033 li
295.921 226.175 li
296.116 226.322 li
296.307 226.458 li
296.496 226.587 li
296.696 226.726 li
296.882 226.857 li
297.08 226.986 li
297.271 227.117 li
297.463 227.242 li
297.54 227.382 li
297.729 227.5 li
297.922 227.626 li
298.117 227.746 li
298.313 227.861 li
298.504 227.976 li
298.691 228.097 li
298.89 228.207 li
299.082 228.316 li
299.275 228.429 li
299.664 228.429 li
299.858 228.539 li
300.046 228.646 li
300.237 228.75 li
300.433 228.855 li
300.625 228.962 li
300.82 229.066 li
301.012 229.166 li
301.202 229.263 li
301.4 229.367 li
301.913 229.546 li
302.109 229.642 li
302.303 229.742 li
302.493 229.833 li
302.687 229.931 li
302.878 230.029 li
303.073 230.121 li
303.262 230.214 li
303.456 230.308 li
303.65 230.398 li
303.992 230.4 li
304.183 230.488 li
304.374 230.58 li
304.569 230.667 li
304.763 230.757 li
304.958 230.839 li
305.147 230.927 li
305.348 231.017 li
305.538 231.097 li
305.725 231.185 li
305.923 231.271 li
306.112 231.349 li
306.307 231.429 li
306.694 231.357 li
306.879 231.439 li
307.074 231.517 li
307.27 231.597 li
307.463 231.677 li
307.655 231.753 li
307.849 231.833 li
308.041 231.906 li
308.238 231.98 li
308.43 232.06 li
308.619 232.132 li
308.813 232.201 li
309.005 232.281 li
309.199 232.345 li
309.394 232.416 li
309.581 232.492 li
309.775 232.554 li
310.446 232.542 li
310.641 232.607 li
310.829 232.671 li
311.019 232.738 li
311.215 232.8 li
311.407 232.869 li
311.603 232.931 li
311.791 232.99 li
311.988 233.054 li
312.176 233.121 li
312.37 233.175 li
312.563 233.232 li
312.757 233.289 li
312.949 233.343 li
313.148 233.402 li
313.338 233.46 li
313.525 233.507 li
313.875 232.677 li
314.07 232.726 li
314.261 232.779 li
314.454 232.828 li
314.646 232.88 li
314.843 232.925 li
315.038 232.968 li
315.224 233.019 li
315.419 233.066 li
315.615 233.105 li
315.804 233.152 li
315.997 233.193 li
316.193 233.236 li
316.386 233.269 li
316.575 233.314 li
316.773 233.351 li
316.962 233.392 li
317.157 233.423 li
317.349 233.464 li
317.545 233.494 li
317.734 233.531 li
317.925 233.558 li
318.12 233.599 li
318.311 233.626 li
318.507 233.658 li
318.697 233.689 li
318.89 233.714 li
319.085 233.74 li
319.277 233.763 li
319.469 233.794 li
319.66 233.822 li
319.854 233.839 li
320.045 233.863 li
320.239 233.89 li
320.432 233.908 li
320.624 233.929 li
320.814 233.951 li
321.013 233.974 li
321.205 234 li
321.396 234.011 li
321.592 234.033 li
321.787 234.048 li
321.974 234.064 li
322.172 234.08 li
322.362 234.093 li
322.554 234.113 li
322.752 234.128 li
322.938 234.136 li
323.136 234.158 li
323.327 234.166 li
323.516 234.175 li
323.713 234.189 li
323.907 234.197 li
324.101 234.208 li
324.29 234.224 li
324.486 234.236 li
324.677 234.242 li
324.871 234.246 li
325.063 234.259 li
325.256 234.269 li
325.448 234.275 li
325.644 234.281 li
325.838 234.291 li
326.024 234.294 li
326.221 234.302 li
326.414 234.31 li
326.605 234.316 li
326.797 234.32 li
326.992 234.328 li
327.182 234.33 li
327.379 234.335 li
327.566 234.341 li
327.762 234.351 li
327.953 234.351 li
328.145 234.357 li
328.338 234.357 li
328.54 234.363 li
328.726 234.369 li
328.922 234.371 li
329.115 234.371 li
329.306 234.371 li
329.499 234.376 li
329.693 234.376 li
329.884 234.38 li
330.084 234.384 li
330.272 234.39 li
330.467 234.39 li
330.657 234.39 li
330.845 234.394 li
331.043 234.396 li
331.237 234.396 li
331.433 234.396 li
331.622 234.4 li
210.38 234.659 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0.5 cmyk
f
1 lw
1 lc
0 lj
4 ml
[] 0 dsh
true sadj
63.8267 234.686 mo
63.8267 257.112 li
0.760784 0.756863 0.623529 0.811765 cmyk
@
65.209 256.261 mo
63.854 258.895 li
62.4995 256.261 li
0.858823 0.85098 0.788235 1 cmyk
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 84 /T putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapH [67] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/WBXRIQ+MyriadPro-Regular*1 [84{/.notdef}rp /T 171{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf17.9204 249.29 mo(T)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D64C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB9425A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4EDA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E729DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC6337027CFBBA> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 108 /l putdup 111 /o putdup 112 /p putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [84{/.notdef}rp /T 23{/.notdef}rp /l 2{/.notdef}rp /o /p 143{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf21.8872 249.29 mo(opolo)[5.1123 5.29834 5.1123 2.19775 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AFADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8DE47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB3949583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD800440564510FEC150DF1BF6> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 103 /g putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [84{/.notdef}rp /T 18{/.notdef}rp /g 4{/.notdef}rp /l 2{/.notdef}rp /o /p 143{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf44.7202 249.29 mo(g)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B896187A> |-/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E703DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094DC5B241D2351AD29DD00EC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC469D5F7161571A32A96A021C1AB03ECA050447FC0A> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEBB38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A809> |-/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672FE0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C99CE7F0B78BC22FE4480BA1B895> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 32 /space putdup 97 /a putdup 99 /c putdup 105 /i putdup 109 /m putdup 115 /s putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p 2{/.notdef}rp /s 140{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf49.8794 249.29 mo(ical simila)[2.1792 4.17188 4.48828 2.19775 1.97412 3.6875 2.1792 7.7666 2.1792 2.19775 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC355A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C630D7D24526AEEFC04035142C31FA6B3B108962236> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 114 /r putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s 140{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf87.3892 249.29 mo(r)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf90.4712 249.29 mo(i)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B96A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367AB24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 116 /t putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 139{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf92.6504 249.29 mo(t)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FF6A82283623EEB25A9349C2751A0E315AAE13B4796C423913828FA716B5ABEF10D096130AD2A2329DF2C9C65ECC79B77A9BB791B3C887ED4EDF5DA91A1776E19A8D0D9ECECC26B8983788DC541C6EA7A67E7E> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 121 /y putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf95.8071 249.29 mo(y)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf205.032 248.908 mo(T)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf208.999 248.908 mo(opolo)[5.1123 5.29883 5.1123 2.19727 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf231.832 248.908 mo(g)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf236.99 248.908 mo(ical simila)[2.17871 4.17188 4.48828 2.19727 1.97461 3.6875 2.17871 7.7666 2.17871 2.19727 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf274.498 248.908 mo(r)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf277.571 248.908 mo(i)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf279.75 248.908 mo(t)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf282.906 248.908 mo(y)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf17.9204 249.29 mo(T)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf21.8872 249.29 mo(opolo)[5.1123 5.29834 5.1123 2.19775 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf44.7202 249.29 mo(g)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf49.8794 249.29 mo(ical simila)[2.1792 4.17188 4.48828 2.19775 1.97412 3.6875 2.1792 7.7666 2.1792 2.19775 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf87.3892 249.29 mo(r)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf90.4712 249.29 mo(i)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf92.6504 249.29 mo(t)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf95.8071 249.29 mo(y)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf205.032 248.908 mo(T)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf208.999 248.908 mo(opolo)[5.1123 5.29883 5.1123 2.19727 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf231.832 248.908 mo(g)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf236.99 248.908 mo(ical simila)[2.17871 4.17188 4.48828 2.19727 1.97461 3.6875 2.17871 7.7666 2.17871 2.19727 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf274.498 248.908 mo(r)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf277.571 248.908 mo(i)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf279.75 248.908 mo(t)shWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf282.906 248.908 mo(y)sh23.4746 234.016 mo
23.5825 234.005 li
23.6909 233.995 li
23.7979 233.985 li
23.9058 233.972 li
24.0127 233.96 li
24.1211 233.952 li
24.228 233.938 li
24.335 233.926 li
24.4434 233.912 li
24.5503 233.9 li
24.6582 233.885 li
24.7651 233.872 li
24.8735 233.857 li
24.9814 233.842 li
25.0894 233.829 li
25.1968 233.812 li
25.3037 233.795 li
25.4102 233.779 li
25.5181 233.763 li
25.6255 233.747 li
25.7334 233.729 li
25.8403 233.71 li
25.9482 233.692 li
26.0557 233.672 li
26.1636 233.652 li
26.2705 233.631 li
26.3789 233.614 li
26.4858 233.592 li
26.5938 233.569 li
26.7007 233.547 li
26.8091 233.525 li
26.916 233.503 li
27.0239 233.476 li
27.1323 233.454 li
27.2393 233.431 li
27.3472 233.404 li
27.4541 233.377 li
27.5625 233.355 li
27.6694 233.325 li
27.7754 233.298 li
27.8833 233.27 li
27.9927 233.24 li
28.0986 233.212 li
28.2075 233.181 li
28.314 233.152 li
28.4229 233.121 li
28.5283 233.089 li
28.6377 233.057 li
28.7437 233.025 li
28.8525 232.991 li
28.9585 232.956 li
29.0679 232.921 li
29.1738 232.887 li
29.2827 232.849 li
29.3896 232.812 li
29.4971 232.775 li
29.604 232.737 li
29.7119 232.698 li
29.8188 232.657 li
29.9282 232.615 li
30.0352 232.576 li
30.1421 232.532 li
30.2515 232.49 li
30.3584 232.445 li
30.4663 232.402 li
30.5732 232.355 li
30.6816 232.308 li
30.7886 232.263 li
30.8965 232.215 li
31.0039 232.167 li
31.1108 232.115 li
31.2188 232.063 li
31.3257 232.014 li
31.4341 231.96 li
31.541 231.905 li
31.6499 231.852 li
31.7563 231.797 li
31.8628 231.74 li
31.9712 231.682 li
32.0801 231.623 li
32.186 231.564 li
32.2939 231.502 li
32.3999 231.441 li
32.5088 231.379 li
32.6152 231.312 li
32.7241 231.248 li
32.832 231.182 li
32.9395 231.113 li
33.0464 231.044 li
33.1543 230.975 li
33.2612 230.904 li
33.3696 230.83 li
33.4756 230.755 li
33.5845 230.681 li
33.6929 230.604 li
33.7998 230.526 li
33.9077 230.445 li
34.0146 230.364 li
34.123 230.281 li
34.229 230.198 li
34.3379 230.113 li
34.4453 230.025 li
34.5532 229.934 li
34.6602 229.843 li
34.7671 229.753 li
34.8765 229.66 li
34.9824 229.564 li
35.0903 229.467 li
35.1973 229.369 li
35.3057 229.268 li
35.4146 229.167 li
35.52 229.061 li
35.6274 228.958 li
35.7354 228.849 li
35.8423 228.74 li
35.9502 228.629 li
36.0576 228.515 li
36.1655 228.4 li
36.2725 228.282 li
36.3809 228.167 li
36.4888 228.044 li
36.5947 227.921 li
36.7026 227.797 li
36.8101 227.669 li
36.918 227.54 li
37.0259 227.41 li
37.1343 227.276 li
37.2412 227.139 li
37.3491 227.003 li
37.4561 226.864 li
37.5645 226.721 li
37.6724 226.58 li
37.7793 226.433 li
37.8853 226.283 li
37.9937 226.133 li
38.1025 225.982 li
38.2085 225.827 li
38.3179 225.67 li
38.4238 225.509 li
38.5327 225.347 li
38.6387 225.185 li
38.748 225.017 li
38.8535 224.849 li
38.9624 224.68 li
39.0684 224.505 li
39.1768 224.329 li
39.2827 224.15 li
39.3926 223.969 li
39.5 223.787 li
39.6079 223.604 li
39.7129 223.414 li
39.8208 223.225 li
39.9302 223.033 li
40.0371 222.837 li
40.1431 222.64 li
40.2524 222.438 li
40.3594 222.238 li
40.4673 222.032 li
40.5752 221.824 li
40.6826 221.614 li
40.7915 221.4 li
40.8975 221.187 li
41.0059 220.969 li
41.1118 220.747 li
41.2207 220.524 li
41.3267 220.298 li
41.436 220.071 li
41.542 219.837 li
41.6509 219.604 li
41.7578 219.368 li
41.8662 219.127 li
41.9731 218.885 li
42.0811 218.64 li
42.1895 218.394 li
42.2949 218.142 li
42.4028 217.888 li
42.5098 217.631 li
42.6191 217.372 li
42.7251 217.109 li
42.8325 216.842 li
42.9414 216.573 li
43.0498 216.301 li
43.1553 216.025 li
43.2627 215.748 li
43.3726 215.466 li
43.478 215.181 li
43.5854 214.894 li
43.6929 214.601 li
43.8008 214.305 li
43.9102 214.007 li
44.0176 213.707 li
44.1255 213.401 li
44.2329 213.092 li
44.3403 212.781 li
44.4482 212.465 li
44.5537 212.145 li
44.6631 211.821 li
44.7705 211.494 li
44.8774 211.164 li
44.9858 210.828 li
45.0923 210.493 li
45.2007 210.152 li
45.3076 209.802 li
45.416 209.452 li
45.5225 209.098 li
45.6304 208.741 li
45.7368 208.376 li
45.8452 208.01 li
45.9517 207.641 li
46.0605 207.266 li
46.167 206.886 li
46.2754 206.504 li
46.3828 206.115 li
46.4907 205.724 li
46.5972 205.328 li
46.7046 204.925 li
46.8125 204.521 li
46.9199 204.111 li
47.0293 203.699 li
47.1348 203.279 li
47.2427 202.857 li
47.3501 202.429 li
47.4575 201.998 li
47.5649 201.56 li
47.6729 201.119 li
47.7803 200.672 li
47.8877 200.224 li
47.9956 199.767 li
48.103 199.307 li
48.2104 198.843 li
48.3179 198.375 li
48.4268 197.9 li
48.5332 197.423 li
48.6426 196.94 li
48.7485 196.455 li
48.8579 195.961 li
48.9634 195.464 li
49.0708 194.965 li
49.1787 194.46 li
49.2861 193.949 li
49.3936 193.435 li
49.5024 192.916 li
49.6089 192.394 li
49.7163 191.867 li
49.8237 191.333 li
49.9326 190.797 li
50.0381 190.256 li
50.1465 189.709 li
50.2539 189.162 li
50.3618 188.609 li
50.4692 188.051 li
50.5767 187.49 li
50.6865 186.925 li
50.792 186.355 li
50.9014 185.783 li
51.0078 185.203 li
51.1167 184.622 li
51.2222 184.036 li
51.3296 183.45 li
51.436 182.854 li
51.5449 182.258 li
51.6523 181.66 li
51.7598 181.058 li
51.8667 180.449 li
51.9751 179.839 li
52.0825 179.225 li
52.1904 178.611 li
52.2979 177.99 li
52.4053 177.366 li
52.5127 176.74 li
52.6206 176.111 li
52.728 175.479 li
52.8354 174.844 li
52.9443 174.206 li
53.0508 173.565 li
53.1582 172.922 li
53.2646 172.277 li
53.3735 171.626 li
53.4829 170.976 li
53.5874 170.32 li
53.6938 169.665 li
53.8037 169.005 li
53.9111 168.347 li
54.0186 167.682 li
54.1265 167.016 li
54.2339 166.347 li
54.3403 165.679 li
54.4487 165.007 li
54.5566 164.332 li
54.6641 163.656 li
54.7705 162.977 li
54.8789 162.296 li
54.9868 161.613 li
55.0942 160.93 li
55.2017 160.244 li
55.3096 159.555 li
55.417 158.865 li
55.4038 158.203 li
55.5894 158.782 li
55.7822 159.361 li
55.9751 159.937 li
56.1597 160.516 li
56.3545 161.088 li
56.5454 161.665 li
56.7339 162.237 li
56.9268 162.811 li
57.1157 163.387 li
57.3105 163.957 li
57.4971 164.529 li
57.689 165.1 li
57.8784 165.668 li
58.0684 166.241 li
58.2603 166.811 li
58.4507 167.375 li
58.6396 167.946 li
58.8345 168.516 li
59.0229 169.081 li
59.2129 169.649 li
59.4028 170.214 li
59.5942 170.781 li
59.7822 171.348 li
59.9731 171.916 li
60.1636 172.48 li
60.3516 173.044 li
60.543 173.61 li
60.7339 174.172 li
60.9248 174.734 li
61.1123 175.299 li
61.3081 175.859 li
61.4961 176.422 li
61.6836 176.985 li
61.8765 177.542 li
62.063 178.104 li
62.2559 178.665 li
62.4468 179.223 li
62.6357 179.782 li
62.8262 180.338 li
63.0181 180.893 li
63.208 181.448 li
63.4004 182.003 li
63.5977 182.553 li
63.7783 183.108 li
63.9688 183.658 li
64.1616 184.207 li
64.3491 184.757 li
64.5454 185.299 li
64.731 185.847 li
64.9238 186.391 li
65.1133 186.934 li
65.3042 187.471 li
65.4951 188.01 li
65.6855 188.55 li
65.8745 189.086 li
66.0684 189.622 li
66.2578 190.148 li
66.4448 190.678 li
66.6377 191.206 li
66.8301 191.728 li
67.0171 192.25 li
67.2129 192.771 li
67.3994 193.287 li
67.5913 193.802 li
67.7822 194.314 li
67.9688 194.826 li
68.1616 195.33 li
68.3491 195.832 li
68.543 196.332 li
68.731 196.831 li
68.9194 197.325 li
69.1123 197.815 li
69.3022 198.304 li
69.4927 198.789 li
69.6816 199.27 li
69.8726 199.747 li
70.0674 200.219 li
70.2529 200.69 li
70.4448 201.153 li
70.6387 201.619 li
70.8271 202.079 li
71.0151 202.533 li
71.2119 202.983 li
71.3994 203.433 li
71.5884 203.873 li
71.7798 204.313 li
71.9678 204.749 li
72.1646 205.179 li
72.3545 205.608 li
72.5342 206.028 li
72.7349 206.448 li
72.9214 206.862 li
73.1123 207.268 li
73.3032 207.675 li
73.498 208.078 li
73.6836 208.471 li
73.8721 208.867 li
74.0649 209.254 li
74.2529 209.636 li
74.4487 210.017 li
74.6343 210.389 li
74.8271 210.761 li
75.0161 211.127 li
75.2065 211.487 li
75.3975 211.842 li
75.5859 212.193 li
75.7778 212.544 li
75.9658 212.883 li
76.1563 213.224 li
76.3491 213.557 li
76.5381 213.885 li
76.7256 214.21 li
76.9204 214.531 li
77.1084 214.845 li
77.3032 215.161 li
77.4897 215.465 li
77.6772 215.765 li
77.8691 216.065 li
78.0601 216.36 li
78.2529 216.648 li
78.4365 216.934 li
78.6343 217.215 li
78.8232 217.49 li
79.0171 217.766 li
79.2046 218.03 li
79.4014 218.295 li
79.585 218.554 li
79.7749 218.809 li
79.9688 219.062 li
80.1563 219.31 li
80.3501 219.551 li
80.5371 219.789 li
80.7305 220.025 li
80.9194 220.26 li
81.1152 220.489 li
81.3008 220.708 li
81.4907 220.929 li
81.6792 221.151 li
81.8701 221.362 li
82.064 221.57 li
82.2539 221.774 li
82.4404 221.975 li
82.6313 222.176 li
82.8232 222.369 li
83.0137 222.561 li
83.2046 222.749 li
83.3901 222.937 li
83.583 223.113 li
83.7759 223.293 li
83.9678 223.468 li
84.1553 223.643 li
84.3521 223.811 li
84.5347 223.976 li
84.7246 224.138 li
84.9194 224.298 li
85.104 224.456 li
85.2969 224.609 li
85.4897 224.763 li
85.6753 224.912 li
85.8682 225.057 li
86.0591 225.198 li
86.2515 225.34 li
86.4443 225.477 li
86.6304 225.614 li
86.8228 225.75 li
87.0166 225.878 li
87.2065 226.008 li
87.395 226.133 li
87.584 226.255 li
87.7759 226.377 li
87.9663 226.499 li
88.1553 226.614 li
88.3408 226.728 li
88.5366 226.843 li
88.7266 226.953 li
88.9204 227.06 li
89.1089 227.167 li
89.2988 227.274 li
89.4888 227.377 li
89.6772 227.477 li
89.8701 227.577 li
90.061 227.677 li
90.2505 227.773 li
90.4404 227.87 li
90.627 227.962 li
90.8208 228.055 li
91.0088 228.146 li
91.2026 228.232 li
91.3911 228.318 li
91.583 228.409 li
91.7715 228.493 li
91.9595 228.573 li
92.1563 228.658 li
92.3389 228.739 li
92.5356 228.818 li
92.7246 228.899 li
92.9121 228.975 li
93.1079 229.052 li
93.2949 229.125 li
93.4854 229.202 li
93.6772 229.276 li
93.8701 229.347 li
94.0596 229.417 li
94.2446 229.493 li
94.4395 229.56 li
94.6309 229.627 li
94.8218 229.697 li
95.0127 229.764 li
95.2046 229.833 li
95.3901 229.898 li
95.5786 229.962 li
95.7715 230.028 li
95.9614 230.093 li
96.1553 230.158 li
96.3438 230.218 li
96.5317 230.279 li
96.7275 230.342 li
96.9131 230.403 li
97.106 230.461 li
97.2969 230.523 li
97.4854 230.58 li
97.6753 230.64 li
97.8647 230.7 li
98.0586 230.756 li
98.2437 230.815 li
98.436 230.872 li
98.627 230.927 li
98.8188 230.983 li
99.0054 231.038 li
99.1953 231.094 li
99.3892 231.148 li
99.5806 231.203 li
99.7715 231.253 li
99.9595 231.308 li
100.157 231.363 li
100.344 231.413 li
100.529 231.466 li
100.725 231.52 li
100.912 231.568 li
101.104 231.618 li
101.298 231.667 li
101.48 231.718 li
101.674 231.766 li
101.866 231.816 li
102.057 231.865 li
102.249 231.912 li
102.437 231.961 li
102.628 232.006 li
102.822 232.052 li
103.012 232.101 li
103.198 232.146 li
103.389 232.189 li
103.581 232.238 li
103.771 232.277 li
103.963 232.321 li
104.149 232.368 li
104.341 232.406 li
104.533 232.452 li
104.726 232.492 li
104.912 232.532 li
105.1 232.572 li
105.293 232.611 li
105.482 232.653 li
105.676 232.692 li
105.862 232.728 li
106.056 232.767 li
106.241 232.808 li
106.433 232.842 li
106.624 232.876 li
106.815 232.913 li
107.006 232.946 li
107.201 232.981 li
107.389 233.017 li
107.575 233.047 li
107.768 233.082 li
107.96 233.112 li
108.148 233.144 li
108.34 233.174 li
108.529 233.207 li
108.723 233.234 li
108.916 233.261 li
109.1 233.292 li
109.292 233.321 li
109.485 233.345 li
109.673 233.374 li
109.864 233.399 li
110.057 233.426 li
110.246 233.447 li
110.433 233.474 li
110.629 233.497 li
110.814 233.522 li
111.008 233.542 li
111.198 233.567 li
111.391 233.585 li
111.579 233.607 li
111.767 233.625 li
111.959 233.65 li
112.147 233.667 li
112.341 233.686 li
112.528 233.705 li
112.718 233.721 li
112.911 233.737 li
113.102 233.751 li
113.291 233.77 li
113.479 233.788 li
113.67 233.798 li
113.86 233.812 li
114.05 233.83 li
114.241 233.84 li
114.432 233.853 li
114.619 233.866 li
114.814 233.881 li
115.003 233.897 li
115.194 233.904 li
115.386 233.917 li
115.578 233.927 li
115.763 233.936 li
115.96 233.946 li
116.146 233.955 li
116.336 233.966 li
116.532 233.977 li
116.716 233.981 li
116.91 233.994 li
117.101 233.999 li
117.286 234.005 li
117.481 234.013 li
117.672 234.019 li
117.863 234.026 li
118.051 234.035 li
118.243 234.042 li
118.432 234.045 li
118.625 234.048 li
118.813 234.056 li
119.003 234.062 li
119.194 234.066 li
119.387 234.071 li
119.578 234.076 li
119.762 234.078 li
119.956 234.083 li
120.149 234.087 li
120.336 234.091 li
120.525 234.094 li
120.718 234.099 li
120.905 234.1 li
121.1 234.104 li
121.285 234.107 li
121.479 234.113 li
121.667 234.113 li
121.855 234.117 li
122.047 234.117 li
122.246 234.121 li
122.429 234.125 li
122.623 234.125 li
122.814 234.125 li
123.001 234.125 li
123.194 234.128 li
123.386 234.128 li
123.573 234.131 li
123.771 234.133 li
123.956 234.137 li
124.148 234.137 li
124.335 234.137 li
124.522 234.139 li
124.718 234.141 li
124.91 234.141 li
125.102 234.141 li
125.289 234.143 li
23.4746 234.016 li
cp
0.223529 0.160784 0.145098 0 cmyk
f
30.4678 238.035 mo
17.9434 238.035 li
17.9434 225.984 li
30.4678 225.984 li
30.4678 238.035 li
cp
0 0 0 0 cmyk
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-It Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-It def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Regular) def/ItalicAngle -11 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 67 /C putdef/FontBBox {-185 -250 1090 953} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 246 253] def/OtherBlues [400 407 259 266 -209 -198 -151 -144 -116 -111] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [65] def/StdVW [88] def/StemSnapH [65] def/StemSnapV [88] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/B <1C60D8A8C9B7B4A14E8B9E16C123C242340B58A0585AC5E18537FB197123920BE7EC0F418314675F08A6B1675F001C8CEC53958F83591508DDF3C4710E7AF095C494537AB98456CD548E7D8A3635A53F27A15F6A77C854F6142D6B0F5ED5FC6BEFB3046EDE32359787C280FDF0077664D5A0EA9835C6F27AA931810D900EF14C33A6085E23E4544B0401C086ABB90604B38F34E641EA5B66CA9589CC09D68934971C9AC9D7FF520008> |-/C <1C60D8A8C9B790A8364A8739C0A6FB0B1DA1E133A5F80CB11B02DF27239898E57FB65A28A6839C537CA29C7DB953774127D0E71CED496D1FF658DCC741C03989CDDA7D3054474FE176A0D1FFEE103988F997E71F48B8968931E7DA8F89EA2F3F4AB6613E5081EEF2B5169F0A86C9B61886CB28697AB3E37A798BD770> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WBXRIR+MyriadPro-It /MyriadPro-It findfont ct_VMDictPut/WBXRIR+MyriadPro-It*1 [66{/.notdef}rp /B /C 188{/.notdef}rp]WBXRIR+MyriadPro-It nfWBXRIR+MyriadPro-It*1 [13.9684 0 0 -13.9684 0 0 ]msf34.189 269.863 mo(BC)[7.24951 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CE3F6788F74B615B747D0C4950E0757D67CC4B6F86A79106B4F6AF8262CBC77CA155FEEB> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 40 /parenleft putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft 43{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [13.9684 0 0 -13.9684 0 0 ]msf49.1919 269.863 mo(\()sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenright <1C60D8A8C9B84E0A47D7FED609B36B98A489D0C883687FC8C4BD7FF8A57C9949E56F26DF53030280BC0E024A6F3F65DFBA65966BEA7D55AEB539EB378E> |-/comma <1C60D8A8C9B89DB7C9B475614983351570CC54B5F96756F115811851C31221DFA6DE8F8A57F629> |-/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2FCE13DD0FF> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 41 /parenright putdup 44 /comma putdup 65 /A putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A 18{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [13.9684 0 0 -13.9684 0 0 ]msf53.019 269.863 mo(A   ,A   \))[8.54883 2.96094 2.96094 2.96094 2.89111 8.54883 2.96094 2.96094 2.96094 0 ]xsh0.75 lw
1 lj
10 ml
76.9697 55.7544 mo
76.9697 9.86133 li
0.858823 0.85098 0.788235 1 cmyk
@
76.9697 55.8438 mo
125.813 55.8438 li
@
175.432 54.1055 mo
175.454 54.1055 li
175.48 54.1055 li
175.505 54.1055 li
175.53 54.1045 li
175.553 54.1045 li
175.578 54.1045 li
175.603 54.1045 li
175.627 54.1045 li
175.653 54.1045 li
175.677 54.1045 li
175.702 54.1045 li
175.725 54.1045 li
175.75 54.1045 li
175.775 54.1045 li
175.799 54.1025 li
175.824 54.1025 li
175.848 54.1025 li
175.872 54.1025 li
175.897 54.1016 li
175.923 54.1016 li
175.946 54.1006 li
175.972 54.1006 li
175.995 54.1006 li
176.021 54.1006 li
176.046 54.0996 li
176.069 54.0981 li
176.095 54.0981 li
176.118 54.0981 li
176.144 54.0981 li
176.167 54.0981 li
176.19 54.0962 li
176.216 54.0962 li
176.241 54.0947 li
176.265 54.0947 li
176.29 54.0938 li
176.315 54.0938 li
176.339 54.0918 li
176.363 54.0918 li
176.388 54.0898 li
176.413 54.0898 li
176.437 54.0898 li
176.462 54.0869 li
176.486 54.0869 li
176.512 54.0859 li
176.536 54.0859 li
176.561 54.0835 li
176.584 54.0835 li
176.608 54.0825 li
176.634 54.0825 li
176.657 54.0806 li
176.683 54.0786 li
176.708 54.0786 li
176.731 54.0767 li
176.757 54.0742 li
176.781 54.0732 li
176.805 54.0718 li
176.831 54.0698 li
176.854 54.0679 li
176.88 54.0659 li
176.904 54.064 li
176.929 54.062 li
176.953 54.0601 li
176.979 54.0576 li
177.002 54.0557 li
177.027 54.0537 li
177.053 54.0513 li
177.076 54.0493 li
177.1 54.0464 li
177.124 54.0439 li
177.149 54.041 li
177.173 54.04 li
177.198 54.0371 li
177.224 54.0342 li
177.248 54.0313 li
177.271 54.0273 li
177.297 54.0234 li
177.322 54.0215 li
177.347 54.0171 li
177.371 54.0142 li
177.396 54.0112 li
177.42 54.0044 li
177.443 54.0024 li
177.469 53.9985 li
177.492 53.9956 li
177.518 53.9912 li
177.543 53.9868 li
177.566 53.9819 li
177.592 53.9775 li
177.615 53.9727 li
177.641 53.9673 li
177.664 53.9629 li
177.689 53.958 li
177.715 53.9536 li
177.738 53.9487 li
177.764 53.9419 li
177.788 53.938 li
177.813 53.9321 li
177.839 53.9258 li
177.862 53.9194 li
@
177.862 53.9199 mo
177.887 53.9136 li
177.911 53.9072 li
177.937 53.9009 li
177.959 53.896 li
177.984 53.8887 li
178.008 53.8813 li
178.033 53.873 li
178.059 53.8672 li
178.083 53.8584 li
178.108 53.8525 li
178.131 53.8452 li
178.156 53.8364 li
178.181 53.8286 li
178.205 53.8198 li
178.23 53.8115 li
178.255 53.8037 li
178.278 53.7939 li
178.304 53.7856 li
178.329 53.7764 li
178.354 53.7681 li
178.378 53.7588 li
178.4 53.7495 li
178.426 53.7383 li
178.449 53.7285 li
178.475 53.7192 li
178.499 53.7075 li
178.524 53.6978 li
178.548 53.687 li
178.573 53.6758 li
178.599 53.665 li
178.623 53.6538 li
178.647 53.6411 li
178.673 53.6304 li
178.696 53.6177 li
178.722 53.605 li
178.745 53.5938 li
178.771 53.5811 li
178.796 53.5669 li
178.82 53.5542 li
178.843 53.5405 li
178.868 53.5259 li
178.893 53.5112 li
178.917 53.5005 li
178.941 53.4834 li
178.967 53.4688 li
178.991 53.4531 li
179.017 53.439 li
179.04 53.4219 li
179.064 53.4063 li
179.09 53.3901 li
179.115 53.3745 li
179.14 53.3579 li
179.163 53.3398 li
179.187 53.3232 li
179.212 53.3047 li
179.236 53.2871 li
179.262 53.2676 li
179.284 53.2495 li
179.31 53.231 li
179.335 53.2109 li
179.359 53.1924 li
179.385 53.1704 li
179.408 53.1509 li
179.433 53.1304 li
179.456 53.1094 li
179.481 53.0879 li
179.507 53.0659 li
179.531 53.043 li
179.557 53.021 li
179.58 52.9961 li
179.605 52.9731 li
179.63 52.9492 li
179.655 52.9233 li
179.679 52.9004 li
179.703 52.8745 li
179.729 52.8481 li
179.751 52.8213 li
179.776 52.7954 li
179.801 52.7676 li
179.826 52.7407 li
179.852 52.7124 li
179.876 52.6821 li
179.9 52.6533 li
179.924 52.623 li
179.949 52.5933 li
179.973 52.5615 li
179.998 52.5308 li
180.021 52.498 li
180.047 52.4673 li
180.072 52.4326 li
180.097 52.3999 li
180.12 52.3652 li
180.146 52.3315 li
180.171 52.2959 li
180.193 52.2593 li
180.218 52.2231 li
180.242 52.1865 li
180.268 52.1479 li
180.291 52.1094 li
180.316 52.0718 li
@
180.316 52.0708 mo
180.341 52.0313 li
180.366 51.9907 li
180.392 51.9502 li
180.415 51.9087 li
180.44 51.8667 li
180.463 51.8247 li
180.488 51.7813 li
180.514 51.7378 li
180.538 51.6924 li
180.563 51.647 li
180.587 51.6011 li
180.612 51.5537 li
180.637 51.5068 li
180.661 51.459 li
180.684 51.4087 li
180.709 51.3604 li
180.734 51.3105 li
180.758 51.2617 li
180.783 51.2085 li
180.808 51.1567 li
180.833 51.1025 li
180.858 51.0508 li
180.882 50.9956 li
180.907 50.9404 li
180.932 50.8853 li
180.956 50.8286 li
180.979 50.771 li
181.005 50.7129 li
181.028 50.6548 li
181.053 50.5947 li
181.078 50.5342 li
181.103 50.4741 li
181.128 50.4116 li
181.151 50.3491 li
181.175 50.2861 li
181.2 50.2227 li
181.225 50.1572 li
181.249 50.0928 li
181.274 50.0254 li
181.298 49.9585 li
181.323 49.8911 li
181.348 49.8223 li
181.373 49.7529 li
181.396 49.6826 li
181.421 49.6113 li
181.447 49.5376 li
181.471 49.4673 li
181.494 49.3921 li
181.519 49.3188 li
181.544 49.2417 li
181.567 49.166 li
181.593 49.0898 li
181.618 49.0112 li
181.643 48.9321 li
181.668 48.8521 li
181.691 48.771 li
181.717 48.6899 li
181.741 48.6069 li
181.765 48.5234 li
181.79 48.4385 li
181.814 48.353 li
181.84 48.2661 li
181.863 48.1787 li
181.889 48.0903 li
181.913 48 li
181.938 47.9087 li
181.962 47.8193 li
181.986 47.7256 li
182.011 47.6323 li
182.034 47.5376 li
182.06 47.4409 li
182.084 47.3438 li
182.109 47.2466 li
182.133 47.1455 li
182.158 47.0464 li
182.184 46.9443 li
182.207 46.8413 li
182.232 46.7368 li
182.256 46.6328 li
182.281 46.5259 li
182.305 46.4175 li
182.33 46.3086 li
182.355 46.2007 li
182.38 46.0874 li
182.405 45.9746 li
182.428 45.8604 li
182.453 45.7456 li
182.479 45.6299 li
182.502 45.5117 li
182.526 45.3916 li
182.551 45.2725 li
182.576 45.1509 li
182.6 45.0283 li
182.625 44.9038 li
182.649 44.7778 li
182.675 44.6509 li
182.699 44.521 li
182.724 44.3921 li
182.747 44.2612 li
182.771 44.1294 li
@
182.771 44.1299 mo
182.797 43.9961 li
182.821 43.8594 li
182.846 43.7236 li
182.869 43.5864 li
182.895 43.4463 li
182.919 43.3062 li
182.943 43.1636 li
182.968 43.0205 li
182.993 42.876 li
183.019 42.729 li
183.041 42.5815 li
183.066 42.4336 li
183.091 42.2837 li
183.116 42.1318 li
183.14 41.9795 li
183.165 41.8242 li
183.188 41.6704 li
183.214 41.5137 li
183.239 41.356 li
183.264 41.1953 li
183.287 41.0347 li
183.311 40.8721 li
183.336 40.7104 li
183.36 40.5459 li
183.386 40.3804 li
183.411 40.2129 li
183.435 40.0444 li
183.46 39.876 li
183.483 39.7061 li
183.509 39.5342 li
183.534 39.3608 li
183.558 39.1875 li
183.583 39.0117 li
183.606 38.8359 li
183.632 38.6582 li
183.656 38.4814 li
183.682 38.3022 li
183.705 38.1211 li
183.73 37.9404 li
183.756 37.7578 li
183.778 37.5757 li
183.804 37.3906 li
183.827 37.2056 li
183.853 37.02 li
183.876 36.8325 li
183.901 36.6455 li
183.926 36.4565 li
183.951 36.2676 li
183.976 36.0771 li
184 35.8862 li
184.025 35.6938 li
184.049 35.5005 li
184.073 35.3081 li
184.098 35.1128 li
184.123 34.9185 li
184.146 34.7222 li
184.172 34.5269 li
184.195 34.3296 li
184.22 34.1313 li
184.245 33.9336 li
184.27 33.7354 li
184.295 33.5347 li
184.319 33.333 li
184.343 33.1348 li
184.368 32.9321 li
184.393 32.728 li
184.418 32.5278 li
184.443 32.3242 li
184.467 32.1196 li
184.49 31.915 li
184.516 31.71 li
184.54 31.5054 li
184.565 31.2974 li
184.59 31.0933 li
184.613 30.8853 li
184.638 30.6772 li
184.662 30.4697 li
184.688 30.2607 li
184.711 30.0522 li
184.736 29.8408 li
184.76 29.6318 li
184.785 29.4209 li
184.811 29.2104 li
184.835 28.998 li
184.859 28.7842 li
184.883 28.5723 li
184.908 28.3579 li
184.933 28.144 li
184.958 27.9312 li
184.981 27.7163 li
185.007 27.501 li
185.032 27.2861 li
185.056 27.0688 li
185.079 26.8525 li
185.104 26.6343 li
185.129 26.4175 li
185.154 26.2002 li
185.178 25.981 li
185.201 25.7612 li
185.227 25.542 li
@
185.227 25.5425 mo
185.251 25.3223 li
185.276 25.1021 li
185.302 24.8809 li
185.325 24.6606 li
185.351 24.439 li
185.374 24.2178 li
185.399 23.9966 li
185.425 23.7729 li
185.448 23.5498 li
185.474 23.3286 li
185.499 23.105 li
185.521 22.8818 li
185.546 22.6592 li
185.571 22.436 li
185.595 22.2124 li
185.619 21.9893 li
185.645 21.7661 li
185.669 21.542 li
185.694 21.3188 li
185.718 21.0957 li
185.743 20.8711 li
185.768 20.6499 li
185.792 20.4268 li
185.817 20.2056 li
185.842 19.9839 li
185.866 19.7622 li
185.89 19.5435 li
185.915 19.3232 li
185.94 19.104 li
185.965 18.8843 li
185.987 18.668 li
186.013 18.4521 li
186.036 18.2349 li
186.062 18.022 li
186.087 17.8091 li
186.111 17.5972 li
186.136 17.3838 li
186.161 17.1763 li
186.185 16.9692 li
186.21 16.7637 li
186.233 16.5591 li
186.259 16.3564 li
186.283 16.1567 li
186.309 15.9575 li
186.332 15.7622 li
186.357 15.5654 li
186.382 15.3755 li
186.406 15.1855 li
186.431 14.9995 li
186.454 14.8154 li
186.479 14.6328 li
186.504 14.4541 li
186.528 14.2783 li
186.554 14.105 li
186.578 13.9355 li
186.604 13.7681 li
186.627 13.6064 li
186.651 13.4448 li
186.677 13.2891 li
186.701 13.1362 li
186.725 12.9868 li
186.75 12.8403 li
186.775 12.6992 li
186.799 12.5605 li
186.823 12.4268 li
186.85 12.2969 li
186.871 12.1709 li
186.896 12.0518 li
186.921 11.9331 li
186.945 11.8198 li
186.97 11.7109 li
186.994 11.6089 li
187.02 11.5093 li
187.043 11.4136 li
187.068 11.3223 li
187.093 11.2388 li
187.118 11.1582 li
187.144 11.0811 li
187.167 11.0107 li
187.191 10.9453 li
187.215 10.8838 li
187.241 10.8276 li
187.266 10.7749 li
187.29 10.729 li
187.314 10.6885 li
187.338 10.6519 li
187.363 10.6211 li
187.389 10.5942 li
187.413 10.5742 li
187.438 10.5557 li
187.461 10.543 li
187.486 10.5396 li
187.51 10.5376 li
187.535 10.541 li
187.56 10.5488 li
187.586 10.5635 li
187.61 10.5825 li
187.634 10.6055 li
187.659 10.6323 li
187.683 10.6675 li
@
187.683 10.667 mo
187.708 10.7056 li
187.731 10.7485 li
187.756 10.7949 li
187.779 10.8477 li
187.805 10.9028 li
187.83 10.9634 li
187.854 11.0298 li
187.878 11.1006 li
187.903 11.1743 li
187.929 11.2529 li
187.952 11.3364 li
187.977 11.4248 li
188.001 11.5151 li
188.026 11.6108 li
188.051 11.7095 li
188.075 11.812 li
188.101 11.9204 li
188.125 12.0313 li
188.15 12.1445 li
188.176 12.2632 li
188.197 12.3833 li
188.221 12.5093 li
188.246 12.6372 li
188.271 12.769 li
188.296 12.9053 li
188.321 13.0435 li
188.345 13.1836 li
188.37 13.3281 li
188.396 13.4746 li
188.42 13.6245 li
188.443 13.7764 li
188.468 13.9331 li
188.493 14.0889 li
188.517 14.249 li
188.542 14.4121 li
188.566 14.5771 li
188.592 14.7422 li
188.615 14.9116 li
188.641 15.082 li
188.664 15.2554 li
188.689 15.4302 li
188.713 15.6069 li
188.737 15.7852 li
188.763 15.9644 li
188.787 16.146 li
188.812 16.3291 li
188.836 16.5127 li
188.861 16.7002 li
188.887 16.8867 li
188.91 17.0752 li
188.936 17.2642 li
188.96 17.4536 li
188.983 17.644 li
189.008 17.8364 li
189.033 18.0298 li
189.057 18.2231 li
189.082 18.4175 li
189.106 18.6138 li
189.132 18.8091 li
189.156 19.0044 li
189.18 19.2007 li
189.205 19.3989 li
189.229 19.5972 li
189.253 19.7935 li
189.278 19.9927 li
189.303 20.1909 li
189.326 20.3887 li
189.352 20.5869 li
189.377 20.7856 li
189.402 20.9854 li
189.427 21.1836 li
189.452 21.3809 li
189.476 21.5791 li
189.5 21.7754 li
189.522 21.9751 li
189.548 22.1719 li
189.572 22.3691 li
189.598 22.5674 li
189.621 22.7651 li
189.646 22.9614 li
189.671 23.1567 li
189.696 23.3521 li
189.722 23.5474 li
189.744 23.7427 li
189.77 23.936 li
189.793 24.1304 li
189.818 24.3237 li
189.843 24.5146 li
189.869 24.707 li
189.894 24.8984 li
189.917 25.0903 li
189.942 25.2793 li
189.967 25.4697 li
189.99 25.6587 li
190.015 25.8467 li
190.039 26.0356 li
190.064 26.2231 li
190.088 26.4087 li
190.113 26.5938 li
190.138 26.7808 li
@
190.138 26.7808 mo
190.163 26.9658 li
190.187 27.1494 li
190.212 27.3325 li
190.237 27.5171 li
190.26 27.6978 li
190.285 27.8809 li
190.31 28.0605 li
190.334 28.2417 li
190.358 28.4224 li
190.384 28.6021 li
190.408 28.7808 li
190.434 28.9595 li
190.456 29.1372 li
190.481 29.314 li
190.506 29.4912 li
190.529 29.668 li
190.555 29.8452 li
190.579 30.0195 li
190.604 30.1938 li
190.628 30.3687 li
190.653 30.543 li
190.678 30.7158 li
190.703 30.8901 li
190.728 31.0625 li
190.752 31.2354 li
190.776 31.4077 li
190.8 31.5801 li
190.825 31.7524 li
190.851 31.9233 li
190.875 32.0947 li
190.897 32.2656 li
190.923 32.436 li
190.948 32.6064 li
190.972 32.7769 li
190.997 32.9482 li
191.021 33.1167 li
191.046 33.2876 li
191.071 33.4575 li
191.095 33.626 li
191.12 33.7944 li
191.145 33.9629 li
191.17 34.1333 li
191.195 34.3018 li
191.219 34.4697 li
191.243 34.6392 li
191.268 34.8076 li
191.293 34.9761 li
191.316 35.1426 li
191.341 35.3101 li
191.364 35.4785 li
191.39 35.647 li
191.414 35.813 li
191.439 35.9814 li
191.463 36.1489 li
191.488 36.3164 li
191.514 36.4834 li
191.537 36.6519 li
191.562 36.8169 li
191.586 36.9829 li
191.611 37.1504 li
191.635 37.3169 li
191.66 37.4814 li
191.685 37.6479 li
191.71 37.8145 li
191.735 37.9785 li
191.759 38.146 li
191.783 38.3101 li
191.807 38.4741 li
191.831 38.6382 li
191.856 38.8022 li
191.881 38.9678 li
191.906 39.1299 li
191.93 39.293 li
191.954 39.4541 li
191.978 39.6172 li
192.004 39.7793 li
192.028 39.9414 li
192.054 40.1001 li
192.078 40.2612 li
192.102 40.4204 li
192.127 40.5806 li
192.151 40.7402 li
192.177 40.897 li
192.2 41.0552 li
192.225 41.2124 li
192.25 41.3682 li
192.273 41.5229 li
192.298 41.6782 li
192.323 41.832 li
192.348 41.9849 li
192.371 42.1392 li
192.396 42.2896 li
192.421 42.439 li
192.446 42.5918 li
192.47 42.7393 li
192.495 42.8882 li
192.519 43.0366 li
192.544 43.1831 li
192.569 43.3286 li
192.593 43.4722 li
@
192.593 43.4727 mo
192.618 43.6182 li
192.641 43.7603 li
192.666 43.9009 li
192.691 44.0405 li
192.716 44.1812 li
192.739 44.3184 li
192.766 44.4561 li
192.79 44.5928 li
192.813 44.7285 li
192.839 44.8604 li
192.862 44.9946 li
192.888 45.1255 li
192.913 45.2563 li
192.937 45.3853 li
192.962 45.5122 li
192.985 45.6387 li
193.01 45.7646 li
193.036 45.8887 li
193.061 46.0107 li
193.084 46.1333 li
193.107 46.2529 li
193.133 46.3726 li
193.157 46.4888 li
193.183 46.6074 li
193.206 46.7217 li
193.231 46.8345 li
193.257 46.9468 li
193.28 47.0586 li
193.306 47.1685 li
193.33 47.2754 li
193.354 47.3838 li
193.378 47.4883 li
193.403 47.5942 li
193.428 47.6953 li
193.453 47.7974 li
193.477 47.8975 li
193.502 47.9976 li
193.523 48.0952 li
193.551 48.1909 li
193.575 48.2861 li
193.6 48.3799 li
193.624 48.4731 li
193.647 48.5615 li
193.673 48.6519 li
193.696 48.7402 li
193.723 48.8276 li
193.746 48.9136 li
193.771 48.998 li
193.797 49.0811 li
193.82 49.1636 li
193.846 49.2446 li
193.869 49.3232 li
193.895 49.4023 li
193.918 49.479 li
193.943 49.5552 li
193.969 49.6299 li
193.991 49.7026 li
194.017 49.7744 li
194.041 49.8467 li
194.066 49.916 li
194.09 49.9854 li
194.115 50.0527 li
194.14 50.1182 li
194.164 50.1836 li
194.188 50.248 li
194.213 50.3115 li
194.238 50.375 li
194.261 50.4341 li
194.287 50.4941 li
194.312 50.5527 li
194.337 50.6108 li
194.362 50.6665 li
194.386 50.7241 li
194.41 50.7778 li
194.433 50.832 li
194.459 50.8857 li
194.482 50.937 li
194.508 50.9888 li
194.533 51.0376 li
194.557 51.0869 li
194.582 51.1353 li
194.605 51.1831 li
194.63 51.23 li
194.655 51.2754 li
194.68 51.3213 li
194.704 51.3638 li
194.729 51.4087 li
194.753 51.4502 li
194.778 51.4927 li
194.804 51.5332 li
194.827 51.5737 li
194.853 51.6123 li
194.878 51.6509 li
194.9 51.6895 li
194.926 51.7256 li
194.949 51.7632 li
194.975 51.7998 li
194.998 51.8354 li
195.023 51.8701 li
195.048 51.9033 li
@
195.048 51.9038 mo
195.073 51.937 li
195.097 51.9702 li
195.122 52.0024 li
195.147 52.0347 li
195.171 52.0649 li
195.196 52.0967 li
195.22 52.126 li
195.245 52.1563 li
195.269 52.1851 li
195.294 52.2129 li
195.318 52.2417 li
195.344 52.2705 li
195.368 52.2964 li
195.392 52.3232 li
195.417 52.3496 li
195.44 52.3755 li
195.466 52.4014 li
195.489 52.4263 li
195.515 52.4502 li
195.54 52.4751 li
195.563 52.499 li
195.589 52.5239 li
195.613 52.5479 li
195.639 52.5708 li
195.662 52.5918 li
195.687 52.6143 li
195.711 52.6372 li
195.736 52.6592 li
195.761 52.6807 li
195.784 52.7017 li
195.81 52.7227 li
195.833 52.7432 li
195.858 52.7632 li
195.883 52.7856 li
195.908 52.8047 li
195.933 52.8242 li
195.956 52.8442 li
195.981 52.8623 li
196.005 52.8823 li
196.03 52.9009 li
196.055 52.9209 li
196.08 52.9385 li
196.104 52.9565 li
196.129 52.9761 li
196.154 52.9932 li
196.179 53.0103 li
196.203 53.0288 li
196.226 53.0469 li
196.251 53.0635 li
196.274 53.0806 li
196.3 53.0972 li
196.324 53.1152 li
196.35 53.1328 li
196.373 53.1484 li
196.398 53.165 li
196.423 53.1807 li
196.448 53.1982 li
196.473 53.2139 li
196.497 53.2305 li
196.521 53.2461 li
196.545 53.2627 li
196.57 53.2764 li
196.596 53.2925 li
196.62 53.3096 li
196.646 53.3232 li
196.668 53.3394 li
196.693 53.354 li
196.718 53.3677 li
196.741 53.3843 li
196.766 53.3979 li
196.791 53.4126 li
196.816 53.4268 li
196.84 53.4404 li
196.865 53.4551 li
196.889 53.4692 li
196.915 53.4829 li
196.94 53.4976 li
196.964 53.5098 li
196.988 53.5244 li
197.012 53.5361 li
197.037 53.5493 li
197.062 53.563 li
197.087 53.5762 li
197.109 53.5879 li
197.135 53.6011 li
197.16 53.6138 li
197.185 53.6255 li
197.21 53.6377 li
197.232 53.6484 li
197.256 53.6597 li
197.281 53.6724 li
197.307 53.6836 li
197.331 53.6948 li
197.356 53.7051 li
197.382 53.7168 li
197.405 53.7271 li
197.43 53.7378 li
197.455 53.7466 li
197.48 53.7583 li
197.503 53.7695 li
@
197.503 53.7695 mo
197.528 53.7778 li
197.554 53.7886 li
197.576 53.7964 li
197.601 53.8062 li
197.626 53.8164 li
197.651 53.8262 li
197.675 53.833 li
197.7 53.8403 li
197.725 53.8511 li
197.749 53.8589 li
197.773 53.8677 li
197.798 53.8735 li
197.823 53.8818 li
197.847 53.8892 li
197.871 53.8955 li
197.896 53.9038 li
197.922 53.9121 li
197.945 53.9185 li
197.971 53.9233 li
197.996 53.9321 li
198.018 53.938 li
198.043 53.9443 li
198.067 53.9502 li
198.093 53.9561 li
198.116 53.9629 li
198.142 53.9668 li
198.166 53.9722 li
198.191 53.9766 li
198.217 53.9829 li
198.24 53.9868 li
198.265 53.9907 li
198.288 53.9976 li
198.313 54.0005 li
198.338 54.0054 li
198.363 54.0088 li
198.387 54.0127 li
198.412 54.0171 li
198.437 54.0215 li
198.462 54.0254 li
198.486 54.0293 li
198.51 54.0313 li
198.534 54.0356 li
198.558 54.04 li
198.583 54.042 li
198.607 54.0449 li
198.633 54.0483 li
198.658 54.0513 li
198.684 54.0522 li
198.707 54.0542 li
198.731 54.0571 li
198.756 54.0591 li
198.779 54.062 li
198.805 54.064 li
198.83 54.0659 li
198.854 54.0679 li
198.879 54.0698 li
198.902 54.0732 li
198.928 54.0732 li
198.952 54.0742 li
198.977 54.0762 li
199 54.0781 li
199.025 54.0801 li
199.05 54.082 li
199.074 54.0835 li
199.1 54.0845 li
199.123 54.0845 li
199.148 54.0869 li
199.173 54.0879 li
199.198 54.0879 li
199.222 54.0908 li
199.247 54.0908 li
199.272 54.0908 li
199.296 54.0928 li
199.32 54.0947 li
199.344 54.0947 li
199.369 54.0947 li
199.393 54.0947 li
199.418 54.0957 li
199.442 54.0957 li
199.468 54.0981 li
199.493 54.0981 li
199.516 54.0981 li
199.542 54.0981 li
199.564 54.0981 li
199.59 54.0991 li
199.615 54.1001 li
199.64 54.1001 li
199.665 54.1001 li
199.688 54.1001 li
199.713 54.1011 li
199.738 54.1021 li
199.763 54.1021 li
199.788 54.1021 li
199.813 54.1021 li
199.836 54.1045 li
199.859 54.1045 li
199.885 54.1045 li
199.909 54.1045 li
199.935 54.1045 li
199.958 54.1045 li
@
199.958 54.1045 mo
199.983 54.1045 li
@
160.799 55.7573 mo
160.799 9.86475 li
@
160.799 55.8477 mo
213.322 55.8477 li
@
11.333 239.83 mo
11.333 85.3315 li
@
11.333 240.134 mo
131.98 240.134 li
@
15.5908 234.285 mo
15.6992 234.285 li
15.8062 234.285 li
15.9141 234.285 li
16.022 234.283 li
16.1284 234.283 li
16.2363 234.283 li
16.3433 234.283 li
16.4512 234.281 li
16.5586 234.281 li
16.6665 234.281 li
16.7744 234.281 li
16.8818 234.279 li
16.9897 234.279 li
17.0967 234.279 li
17.2046 234.278 li
17.312 234.277 li
17.4194 234.275 li
17.5264 234.275 li
17.6357 234.273 li
17.7427 234.273 li
17.8496 234.272 li
17.9565 234.27 li
18.0649 234.269 li
18.1719 234.268 li
18.2798 234.268 li
18.3857 234.264 li
18.4951 234.264 li
18.6011 234.263 li
18.71 234.26 li
18.8174 234.258 li
18.9253 234.256 li
19.0332 234.255 li
19.1401 234.252 li
19.2466 234.252 li
19.3555 234.249 li
19.4634 234.247 li
19.5708 234.245 li
19.6768 234.243 li
19.7856 234.238 li
19.8916 234.237 li
20.001 234.234 li
20.1099 234.23 li
20.2148 234.228 li
20.3242 234.224 li
20.4302 234.219 li
20.5391 234.215 li
20.646 234.214 li
20.7529 234.208 li
20.8608 234.206 li
20.9678 234.202 li
21.0767 234.198 li
21.1831 234.193 li
21.292 234.188 li
21.3979 234.181 li
21.5073 234.176 li
21.6133 234.172 li
21.7222 234.167 li
21.8281 234.162 li
21.9355 234.153 li
22.0425 234.149 li
22.1523 234.143 li
22.2583 234.134 li
22.3667 234.128 li
22.4746 234.121 li
22.5825 234.113 li
22.689 234.105 li
22.7979 234.098 li
22.9048 234.088 li
23.0117 234.08 li
23.1201 234.072 li
23.2271 234.064 li
23.335 234.053 li
23.4424 234.045 li
23.5503 234.034 li
23.6582 234.023 li
23.7651 234.013 li
23.8735 234 li
23.9805 233.991 li
24.0869 233.979 li
24.1958 233.966 li
24.3022 233.955 li
24.4102 233.94 li
24.5171 233.928 li
24.6255 233.914 li
24.7324 233.901 li
24.8403 233.886 li
24.9482 233.871 li
25.0566 233.857 li
25.1626 233.84 li
25.2695 233.825 li
25.3779 233.808 li
25.4858 233.792 li
25.5928 233.776 li
25.7007 233.757 li
25.8081 233.739 li
25.916 233.719 li
26.0229 233.7 li
26.1313 233.681 li
26.2383 233.66 li
@
26.2383 233.66 mo
26.3462 233.642 li
26.4531 233.621 li
26.5615 233.597 li
26.6685 233.576 li
26.7764 233.553 li
26.8833 233.532 li
26.9917 233.505 li
27.0996 233.484 li
27.2065 233.459 li
27.3149 233.433 li
27.4219 233.408 li
27.5298 233.384 li
27.6357 233.354 li
27.7432 233.328 li
27.8511 233.298 li
27.96 233.269 li
28.0654 233.242 li
28.1743 233.21 li
28.2808 233.181 li
28.3901 233.149 li
28.4961 233.12 li
28.605 233.085 li
28.7109 233.053 li
28.8203 233.019 li
28.9263 232.986 li
29.0352 232.95 li
29.1411 232.916 li
29.2495 232.878 li
29.3574 232.842 li
29.4644 232.803 li
29.5713 232.767 li
29.6807 232.726 li
29.7866 232.686 li
29.8955 232.644 li
30.0029 232.604 li
30.1108 232.56 li
30.2188 232.519 li
30.3257 232.474 li
30.4341 232.43 li
30.54 232.383 li
30.6479 232.336 li
30.7563 232.291 li
30.8633 232.244 li
30.9712 232.195 li
31.0781 232.144 li
31.1865 232.092 li
31.2935 232.042 li
31.4014 231.988 li
31.5083 231.934 li
31.6177 231.88 li
31.7231 231.826 li
31.8301 231.769 li
31.9385 231.711 li
32.0464 231.651 li
32.1523 231.592 li
32.2612 231.532 li
32.3677 231.468 li
32.4766 231.408 li
32.5825 231.34 li
32.6919 231.277 li
32.7998 231.21 li
32.9067 231.142 li
33.0137 231.075 li
33.1221 231.004 li
33.229 230.932 li
33.3369 230.86 li
33.4438 230.785 li
33.5522 230.709 li
33.6602 230.632 li
33.7671 230.555 li
33.8755 230.474 li
33.9814 230.393 li
34.0903 230.311 li
34.1963 230.226 li
34.3057 230.141 li
34.4126 230.054 li
34.5195 229.964 li
34.6279 229.874 li
34.7349 229.782 li
34.8438 229.688 li
34.9492 229.593 li
35.0581 229.496 li
35.1646 229.398 li
35.2725 229.298 li
35.3818 229.195 li
35.4878 229.09 li
35.5947 228.986 li
35.7026 228.877 li
35.8101 228.768 li
35.918 228.658 li
36.0249 228.543 li
36.1318 228.429 li
36.2402 228.314 li
36.3472 228.195 li
36.4561 228.073 li
36.5635 227.952 li
36.6714 227.826 li
36.7783 227.698 li
36.8853 227.568 li
36.9937 227.439 li
@
36.9932 227.439 mo
37.1011 227.305 li
37.208 227.17 li
37.3164 227.032 li
37.4233 226.892 li
37.5313 226.75 li
37.6392 226.608 li
37.7466 226.462 li
37.8535 226.312 li
37.9614 226.163 li
38.0698 226.01 li
38.1768 225.855 li
38.2847 225.699 li
38.3906 225.539 li
38.499 225.375 li
38.606 225.213 li
38.7148 225.046 li
38.8203 224.877 li
38.9302 224.708 li
39.0356 224.535 li
39.1436 224.359 li
39.2505 224.18 li
39.3599 224 li
39.4668 223.816 li
39.5737 223.632 li
39.6812 223.443 li
39.7891 223.253 li
39.897 223.062 li
40.0039 222.866 li
40.1113 222.668 li
40.2192 222.467 li
40.3271 222.267 li
40.4355 222.062 li
40.5425 221.851 li
40.6504 221.644 li
40.7588 221.43 li
40.8647 221.215 li
40.9736 220.998 li
41.0786 220.775 li
41.189 220.554 li
41.2939 220.327 li
41.4028 220.099 li
41.5088 219.867 li
41.6182 219.633 li
41.7261 219.396 li
41.833 219.156 li
41.9414 218.913 li
42.0483 218.668 li
42.1572 218.422 li
42.2632 218.171 li
42.3701 217.916 li
42.478 217.661 li
42.5869 217.401 li
42.6924 217.136 li
42.8003 216.871 li
42.9077 216.601 li
43.0161 216.331 li
43.123 216.053 li
43.2314 215.777 li
43.3398 215.495 li
43.4463 215.21 li
43.5532 214.922 li
43.6616 214.629 li
43.7681 214.335 li
43.877 214.036 li
43.9854 213.735 li
44.0918 213.43 li
44.2002 213.122 li
44.3071 212.809 li
44.4155 212.494 li
44.522 212.173 li
44.6309 211.849 li
44.7373 211.523 li
44.8457 211.194 li
44.9521 210.857 li
45.0591 210.521 li
45.1675 210.18 li
45.2739 209.831 li
45.3823 209.481 li
45.4893 209.126 li
45.5977 208.769 li
45.7041 208.406 li
45.813 208.039 li
45.9194 207.669 li
46.0278 207.296 li
46.1343 206.915 li
46.2432 206.533 li
46.3496 206.144 li
46.458 205.751 li
46.5645 205.356 li
46.6724 204.956 li
46.7798 204.55 li
46.8872 204.14 li
46.9961 203.728 li
47.1025 203.308 li
47.21 202.886 li
47.3184 202.458 li
47.4253 202.028 li
47.5327 201.589 li
47.6401 201.148 li
47.748 200.702 li
@
47.748 200.702 mo
47.8564 200.251 li
47.9629 199.796 li
48.0713 199.337 li
48.1782 198.872 li
48.2856 198.405 li
48.394 197.929 li
48.5005 197.452 li
48.6104 196.97 li
48.7158 196.483 li
48.8242 195.99 li
48.9312 195.493 li
49.0386 194.994 li
49.146 194.49 li
49.2534 193.978 li
49.3613 193.463 li
49.4697 192.945 li
49.5752 192.422 li
49.6841 191.895 li
49.7905 191.363 li
49.8999 190.826 li
50.0054 190.285 li
50.1143 189.739 li
50.2217 189.19 li
50.3291 188.637 li
50.437 188.082 li
50.5444 187.519 li
50.6538 186.954 li
50.7593 186.385 li
50.8691 185.812 li
50.9756 185.232 li
51.084 184.651 li
51.1909 184.066 li
51.2974 183.478 li
51.4048 182.882 li
51.5122 182.288 li
51.6201 181.689 li
51.7275 181.086 li
51.833 180.477 li
51.9424 179.869 li
52.0503 179.253 li
52.1577 178.639 li
52.2651 178.019 li
52.373 177.395 li
52.4805 176.77 li
52.5879 176.14 li
52.6953 175.507 li
52.8032 174.873 li
52.9116 174.234 li
53.0171 173.595 li
53.126 172.951 li
53.2324 172.305 li
53.3408 171.656 li
53.4502 171.004 li
53.5552 170.349 li
53.6626 169.694 li
53.771 169.036 li
53.8784 168.375 li
53.9863 167.71 li
54.0928 167.045 li
54.2012 166.377 li
54.3091 165.708 li
54.4165 165.036 li
54.5249 164.36 li
54.6313 163.685 li
54.7402 163.005 li
54.8467 162.325 li
54.9551 161.641 li
55.0605 160.959 li
55.1694 160.273 li
55.2769 159.584 li
55.3843 158.894 li
55.4912 158.203 li
55.5996 157.507 li
55.707 156.815 li
55.8145 156.117 li
55.9224 155.417 li
56.0298 154.716 li
56.1362 154.013 li
56.2441 153.31 li
56.3525 152.604 li
56.46 151.895 li
56.5674 151.185 li
56.6743 150.474 li
56.7827 149.761 li
56.8901 149.047 li
56.998 148.33 li
57.1055 147.611 li
57.2119 146.892 li
57.3203 146.172 li
57.4282 145.447 li
57.5356 144.724 li
57.6411 143.998 li
57.751 143.269 li
57.8584 142.539 li
57.9658 141.806 li
58.0723 141.077 li
58.1812 140.339 li
58.2886 139.605 li
58.396 138.869 li
58.5015 138.13 li
@
58.5015 138.13 mo
58.6104 137.389 li
58.7197 136.648 li
58.8262 135.905 li
58.9316 135.162 li
59.0415 134.415 li
59.1489 133.669 li
59.2554 132.923 li
59.3623 132.175 li
59.4717 131.425 li
59.5791 130.678 li
59.687 129.925 li
59.7944 129.174 li
59.8999 128.422 li
60.0093 127.672 li
60.1152 126.917 li
60.2236 126.166 li
60.3301 125.414 li
60.4385 124.663 li
60.5454 123.91 li
60.6528 123.159 li
60.7603 122.407 li
60.8691 121.658 li
60.9756 120.908 li
61.085 120.164 li
61.1904 119.418 li
61.2993 118.671 li
61.4067 117.932 li
61.5142 117.191 li
61.6206 116.455 li
61.7285 115.718 li
61.8369 114.987 li
61.9443 114.255 li
62.0522 113.534 li
62.1606 112.81 li
62.2681 112.092 li
62.3735 111.378 li
62.4824 110.669 li
62.5898 109.965 li
62.6963 109.268 li
62.8037 108.574 li
62.9126 107.886 li
63.021 107.203 li
63.1265 106.531 li
63.2344 105.864 li
63.3418 105.203 li
63.4512 104.548 li
63.5566 103.903 li
63.6665 103.264 li
63.772 102.636 li
63.8813 102.012 li
63.9883 101.401 li
64.0957 100.801 li
64.2021 100.208 li
64.312 99.6255 li
64.4194 99.0532 li
64.5259 98.4941 li
64.6343 97.9419 li
64.7422 97.4043 li
64.8496 96.876 li
64.9551 96.3628 li
65.0649 95.8599 li
65.1714 95.3711 li
65.2798 94.8916 li
65.3853 94.4282 li
65.4951 93.9761 li
65.6016 93.54 li
65.71 93.1157 li
65.8174 92.708 li
65.9253 92.3135 li
66.0327 91.9336 li
66.1392 91.5669 li
66.2471 91.2207 li
66.3555 90.8838 li
66.4629 90.5654 li
66.5693 90.2607 li
66.6772 89.9736 li
66.7847 89.7046 li
66.8931 89.4482 li
67.001 89.207 li
67.1055 88.9858 li
67.2148 88.7808 li
67.3223 88.5898 li
67.4292 88.416 li
67.5376 88.2612 li
67.646 88.1245 li
67.7524 87.9985 li
67.8604 87.8916 li
67.9668 87.8062 li
68.0742 87.7358 li
68.1816 87.6792 li
68.2896 87.6377 li
68.397 87.6216 li
68.5044 87.6162 li
68.6123 87.6274 li
68.7197 87.6558 li
68.8281 87.7031 li
68.9346 87.7656 li
69.0425 87.8447 li
69.1509 87.938 li
69.2573 88.0527 li
@
69.2573 88.0522 mo
69.3652 88.1802 li
69.4717 88.3223 li
69.5801 88.4785 li
69.6885 88.6572 li
69.7954 88.8481 li
69.9038 89.0527 li
70.0103 89.272 li
70.1191 89.5098 li
70.2256 89.7617 li
70.334 90.0244 li
70.4395 90.3042 li
70.5493 90.5981 li
70.6548 90.9077 li
70.7642 91.2271 li
70.8696 91.5581 li
70.9795 91.9082 li
71.085 92.27 li
71.1934 92.6431 li
71.3022 93.0273 li
71.4087 93.4263 li
71.5161 93.8345 li
71.6235 94.2568 li
71.7324 94.6865 li
71.8398 95.1304 li
71.9473 95.5864 li
72.0527 96.0498 li
72.1616 96.5234 li
72.269 97.0083 li
72.3774 97.5059 li
72.4844 98.0078 li
72.5918 98.52 li
72.6992 99.0415 li
72.8047 99.5723 li
72.9155 100.109 li
73.022 100.656 li
73.1274 101.211 li
73.2373 101.772 li
73.3457 102.341 li
73.4521 102.916 li
73.561 103.5 li
73.6675 104.085 li
73.7759 104.681 li
73.8823 105.282 li
73.9912 105.887 li
74.0977 106.498 li
74.2061 107.115 li
74.3135 107.733 li
74.4204 108.358 li
74.5298 108.988 li
74.6362 109.623 li
74.7441 110.258 li
74.8486 110.899 li
74.96 111.542 li
75.0664 112.189 li
75.1743 112.839 li
75.2808 113.49 li
75.3872 114.145 li
75.4971 114.802 li
75.6045 115.461 li
75.7109 116.124 li
75.8164 116.784 li
75.9253 117.448 li
76.0337 118.112 li
76.1411 118.778 li
76.2485 119.445 li
76.3555 120.112 li
76.4639 120.781 li
76.5713 121.447 li
76.6792 122.113 li
76.7866 122.784 li
76.894 123.452 li
77.0005 124.12 li
77.1094 124.787 li
77.2178 125.452 li
77.3232 126.121 li
77.4297 126.785 li
77.5396 127.447 li
77.647 128.113 li
77.7534 128.776 li
77.8623 129.436 li
77.9697 130.096 li
78.0762 130.753 li
78.1846 131.411 li
78.2925 132.065 li
78.3989 132.718 li
78.5063 133.372 li
78.6143 134.022 li
78.7227 134.671 li
78.8301 135.318 li
78.9365 135.961 li
79.0435 136.607 li
79.1528 137.246 li
79.2583 137.884 li
79.3657 138.521 li
79.4746 139.156 li
79.583 139.789 li
79.6895 140.417 li
79.7993 141.048 li
79.9048 141.672 li
80.0112 142.298 li
@
80.0112 142.298 mo
80.1187 142.92 li
80.2275 143.539 li
80.334 144.158 li
80.4443 144.775 li
80.5488 145.388 li
80.6587 146 li
80.7651 146.611 li
80.8735 147.219 li
80.9814 147.824 li
81.0879 148.427 li
81.1943 149.032 li
81.3042 149.632 li
81.4097 150.229 li
81.519 150.828 li
81.6245 151.422 li
81.7334 152.018 li
81.8398 152.608 li
81.9492 153.201 li
82.0547 153.789 li
82.1646 154.377 li
82.272 154.963 li
82.3794 155.548 li
82.4873 156.132 li
82.5957 156.713 li
82.7021 157.295 li
82.811 157.877 li
82.9175 158.457 li
83.0259 159.033 li
83.1313 159.611 li
83.2378 160.189 li
83.3477 160.764 li
83.4561 161.338 li
83.5625 161.912 li
83.6694 162.484 li
83.7778 163.058 li
83.8853 163.629 li
83.9922 164.201 li
84.0996 164.772 li
84.207 165.34 li
84.3154 165.911 li
84.4224 166.479 li
84.5308 167.049 li
84.6372 167.615 li
84.7461 168.183 li
84.8516 168.751 li
84.96 169.318 li
85.0664 169.882 li
85.1763 170.449 li
85.2837 171.014 li
85.3901 171.579 li
85.4976 172.145 li
85.6064 172.712 li
85.7139 173.274 li
85.8203 173.838 li
85.9292 174.401 li
86.0356 174.962 li
86.144 175.526 li
86.2505 176.085 li
86.3584 176.648 li
86.4648 177.207 li
86.5732 177.767 li
86.6821 178.328 li
86.7866 178.882 li
86.895 179.442 li
87.0015 179.999 li
87.1113 180.554 li
87.2178 181.112 li
87.3252 181.665 li
87.4336 182.218 li
87.5396 182.768 li
87.6489 183.321 li
87.7573 183.869 li
87.8643 184.419 li
87.9697 184.966 li
88.0781 185.511 li
88.1855 186.055 li
88.2935 186.6 li
88.4019 187.141 li
88.5093 187.681 li
88.6157 188.217 li
88.7236 188.755 li
88.832 189.291 li
88.9385 189.823 li
89.0464 190.35 li
89.1538 190.882 li
89.2632 191.406 li
89.3687 191.927 li
89.4766 192.45 li
89.584 192.97 li
89.6914 193.486 li
89.7988 194 li
89.9067 194.509 li
90.0151 195.02 li
90.1216 195.522 li
90.2285 196.026 li
90.3389 196.526 li
90.4453 197.024 li
90.5508 197.516 li
90.6597 198.006 li
90.7681 198.493 li
@
90.7681 198.493 mo
90.8765 198.977 li
90.9814 199.457 li
91.0898 199.933 li
91.1982 200.406 li
91.3047 200.877 li
91.4146 201.34 li
91.5229 201.802 li
91.6274 202.261 li
91.7339 202.717 li
91.8438 203.167 li
91.9502 203.614 li
92.0586 204.056 li
92.1646 204.496 li
92.2729 204.929 li
92.3804 205.358 li
92.4893 205.784 li
92.5947 206.208 li
92.7031 206.625 li
92.8105 207.038 li
92.9185 207.446 li
93.0269 207.851 li
93.1323 208.251 li
93.2422 208.648 li
93.3486 209.04 li
93.457 209.427 li
93.5645 209.81 li
93.6724 210.188 li
93.7778 210.561 li
93.8843 210.931 li
93.9951 211.296 li
94.1016 211.655 li
94.21 212.012 li
94.3164 212.364 li
94.4263 212.71 li
94.5317 213.051 li
94.6392 213.39 li
94.7466 213.722 li
94.8555 214.052 li
94.9609 214.375 li
95.0674 214.693 li
95.1768 215.01 li
95.2837 215.323 li
95.3911 215.626 li
95.4966 215.929 li
95.6074 216.227 li
95.7158 216.522 li
95.8213 216.809 li
95.9287 217.093 li
96.0366 217.375 li
96.144 217.651 li
96.2515 217.923 li
96.3613 218.191 li
96.4688 218.454 li
96.5752 218.713 li
96.6826 218.967 li
96.7905 219.219 li
96.896 219.465 li
97.0054 219.709 li
97.1118 219.948 li
97.2207 220.182 li
97.3281 220.415 li
97.4346 220.643 li
97.5444 220.865 li
97.6499 221.085 li
97.7563 221.303 li
97.8672 221.515 li
97.9756 221.723 li
98.0791 221.928 li
98.1875 222.13 li
98.2949 222.328 li
98.4009 222.523 li
98.5093 222.713 li
98.6201 222.902 li
98.7266 223.086 li
98.834 223.267 li
98.9414 223.446 li
99.0479 223.621 li
99.1538 223.794 li
99.2642 223.961 li
99.3726 224.126 li
99.4795 224.291 li
99.5859 224.449 li
99.6934 224.607 li
99.8018 224.761 li
99.9087 224.913 li
100.014 225.059 li
100.125 225.206 li
100.231 225.347 li
100.34 225.49 li
100.446 225.627 li
100.555 225.761 li
100.662 225.895 li
100.769 226.025 li
100.878 226.153 li
100.985 226.279 li
101.095 226.403 li
101.199 226.526 li
101.308 226.644 li
101.415 226.76 li
101.521 226.875 li
@
101.521 226.875 mo
101.628 226.988 li
101.738 227.099 li
101.844 227.207 li
101.954 227.314 li
102.06 227.419 li
102.167 227.523 li
102.274 227.623 li
102.383 227.724 li
102.491 227.822 li
102.599 227.917 li
102.704 228.014 li
102.813 228.106 li
102.919 228.197 li
103.029 228.289 li
103.134 228.377 li
103.242 228.462 li
103.35 228.55 li
103.457 228.634 li
103.564 228.718 li
103.673 228.799 li
103.779 228.88 li
103.887 228.96 li
103.996 229.042 li
104.103 229.119 li
104.209 229.193 li
104.317 229.268 li
104.426 229.344 li
104.533 229.417 li
104.642 229.49 li
104.748 229.561 li
104.856 229.631 li
104.963 229.701 li
105.071 229.772 li
105.18 229.838 li
105.287 229.906 li
105.394 229.974 li
105.5 230.038 li
105.61 230.104 li
105.717 230.169 li
105.824 230.232 li
105.931 230.295 li
106.036 230.358 li
106.147 230.419 li
106.255 230.482 li
106.361 230.542 li
106.47 230.602 li
106.576 230.663 li
106.683 230.72 li
106.792 230.78 li
106.9 230.837 li
107.005 230.896 li
107.113 230.955 li
107.223 231.008 li
107.329 231.067 li
107.436 231.124 li
107.545 231.177 li
107.653 231.233 li
107.759 231.288 li
107.869 231.34 li
107.976 231.394 li
108.083 231.446 li
108.189 231.5 li
108.298 231.551 li
108.405 231.604 li
108.512 231.657 li
108.619 231.706 li
108.728 231.755 li
108.837 231.807 li
108.943 231.857 li
109.051 231.905 li
109.159 231.955 li
109.266 232.003 li
109.374 232.047 li
109.481 232.097 li
109.589 232.144 li
109.696 232.191 li
109.804 232.238 li
109.912 232.284 li
110.018 232.327 li
110.126 232.374 li
110.234 232.415 li
110.341 232.46 li
110.448 232.503 li
110.558 232.545 li
110.662 232.588 li
110.771 232.629 li
110.877 232.669 li
110.986 232.71 li
111.094 232.75 li
111.201 232.79 li
111.309 232.829 li
111.417 232.867 li
111.525 232.903 li
111.631 232.942 li
111.739 232.978 li
111.847 233.014 li
111.955 233.048 li
112.063 233.083 li
112.169 233.117 li
112.278 233.151 li
@
112.278 233.151 mo
112.384 233.183 li
112.493 233.217 li
112.6 233.248 li
112.708 233.28 li
112.813 233.311 li
112.923 233.341 li
113.03 233.37 li
113.138 233.398 li
113.244 233.428 li
113.353 233.455 li
113.459 233.481 li
113.567 233.507 li
113.674 233.534 li
113.783 233.562 li
113.89 233.583 li
113.997 233.609 li
114.106 233.632 li
114.213 233.656 li
114.319 233.678 li
114.426 233.701 li
114.536 233.721 li
114.644 233.744 li
114.751 233.761 li
114.858 233.782 li
114.964 233.802 li
115.07 233.822 li
115.179 233.837 li
115.291 233.855 li
115.396 233.871 li
115.502 233.887 li
115.61 233.904 li
115.718 233.919 li
115.825 233.934 li
115.932 233.952 li
116.04 233.962 li
116.15 233.979 li
116.257 233.991 li
116.365 234.003 li
116.471 234.016 li
116.578 234.029 li
116.686 234.039 li
116.795 234.049 li
116.902 234.06 li
117.009 234.071 li
117.118 234.082 li
117.225 234.09 li
117.331 234.1 li
117.438 234.109 li
117.546 234.117 li
117.656 234.125 li
117.762 234.135 li
117.872 234.14 li
117.977 234.149 li
118.085 234.156 li
118.191 234.162 li
118.301 234.169 li
118.409 234.174 li
118.516 234.179 li
118.621 234.185 li
118.729 234.192 li
118.837 234.196 li
118.944 234.202 li
119.053 234.206 li
119.16 234.212 li
119.267 234.214 li
119.375 234.218 li
119.483 234.222 li
119.59 234.226 li
119.697 234.23 li
119.806 234.234 li
119.914 234.237 li
120.02 234.238 li
120.127 234.243 li
120.236 234.246 li
120.343 234.247 li
120.451 234.25 li
120.558 234.253 li
120.667 234.255 li
120.773 234.256 li
120.88 234.258 li
120.989 234.26 li
121.097 234.263 li
121.203 234.265 li
121.311 234.265 li
121.418 234.268 li
121.526 234.269 li
121.634 234.27 li
121.741 234.27 li
121.848 234.272 li
121.954 234.273 li
122.063 234.275 li
122.172 234.275 li
122.279 234.277 li
122.387 234.278 li
122.494 234.279 li
122.602 234.279 li
122.709 234.279 li
122.817 234.281 li
122.923 234.281 li
123.033 234.281 li
@
123.033 234.281 mo
123.14 234.283 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIQ+MyriadPro-Regular*1 [10.4764 0 0 -10.4764 0 0 ]msf86.5366 8.96729 mo(A)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043FB4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B51535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E91518EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B9A242BB0987762DC5FABDB70310B695148> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 66 /B putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B 17{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [10.4764 0 0 -10.4764 0 0 ]msf184.645 8.89648 mo(B)shWBXRIQ+MyriadPro-Regular*1 [17.6639 0 0 -17.6639 0 0 ]msf63.1001 85.2915 mo(A)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E8BCF65E1A153B8F64C14E4D433BE34E80499C2222430927749B4F85A3CF0F> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 70 /F putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B 3{/.notdef}rp /F 13{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 182.433 mo(F)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 178.148 mo(r)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIQ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909FC3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F25F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D7F57E818435DFAAB95E4B5> |-/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D57099036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18B95062C1F81D8B> |-/q <1C60D8A8C9B7E897EED043C74253B54ADC1CD15CC5D2369EED179E418749FCECA224FAD8A34EB9BD7877CC97BC141452C1C22D35DEC4354AEA53EC7F1B702A353EE3D0B6B3B48164FE3D7F142CEB2DFE49B221F1E445CD43E52605D76F9AD0357E0FCE05AB18BD03B9B30164C19713955B60B364B411D31A9471BA6FA77C647175A8A5ADCE0BBC58F86560C14B95155E265ED4AAA17097630979807FC1CE9546F9CDC26D3E> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94FF3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817E1CD6A7C5BE0B48DC194> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIQ+MyriadPro-Regular /Encoding getdup 101 /e putdup 110 /n putdup 113 /q putdup 117 /u putpop%ADOEndSubsetFont
/WBXRIQ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 20{/.notdef}rp /A /B 3{/.notdef}rp /F 13{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]WBXRIQ+MyriadPro-Regular nfWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 175.208 mo(equen)[-4.64648 -5.2207 -5.11035 -4.64648 0 ]yshWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 150.437 mo(c)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 146.116 mo(y)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 55.6694 mo(F)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 51.3848 mo(r)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 48.4448 mo(equen)[-4.646 -5.22119 -5.10986 -4.646 0 ]yshWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 23.6748 mo(c)shWBXRIQ+MyriadPro-Regular*1 [0 -9.27408 -9.27408 0 0 0 ]msf7.7627 19.353 mo(y)sh78.0239 54.1084 mo
78.0493 54.1084 li
78.0737 54.1084 li
78.0981 54.1084 li
78.1226 54.1084 li
78.147 54.1084 li
78.1709 54.1084 li
78.1953 54.1084 li
78.2188 54.1064 li
78.2451 54.1064 li
78.2695 54.1064 li
78.2939 54.1064 li
78.3193 54.1064 li
78.3428 54.1064 li
78.3682 54.1064 li
78.3911 54.1064 li
78.4165 54.1055 li
78.4409 54.1055 li
78.4644 54.1055 li
78.4897 54.1045 li
78.5151 54.1045 li
78.5396 54.1045 li
78.5649 54.1045 li
78.5894 54.1035 li
78.6147 54.1035 li
78.6377 54.1025 li
78.6631 54.1025 li
78.6865 54.1006 li
78.7109 54.1006 li
78.7363 54.1006 li
78.7598 54.1006 li
78.7852 54.1006 li
78.8096 54.0996 li
78.835 54.0981 li
78.8589 54.0981 li
78.8843 54.0962 li
78.9077 54.0962 li
78.9321 54.0962 li
78.9575 54.0952 li
78.981 54.0938 li
79.0063 54.0938 li
79.0293 54.0918 li
79.0547 54.0908 li
79.0791 54.0898 li
79.1045 54.0889 li
79.1279 54.0889 li
79.1543 54.0869 li
79.1787 54.0869 li
79.2021 54.0869 li
79.2266 54.0845 li
79.251 54.0835 li
79.2759 54.0825 li
79.3003 54.0815 li
79.3247 54.0806 li
79.3501 54.0776 li
79.3745 54.0776 li
79.3989 54.0747 li
79.4243 54.0732 li
79.4487 54.0718 li
79.4722 54.0688 li
79.4971 54.0679 li
79.5205 54.0659 li
79.5459 54.064 li
79.5713 54.062 li
79.5947 54.0601 li
79.6201 54.0576 li
79.6455 54.0547 li
79.6699 54.0537 li
79.6943 54.0503 li
79.7173 54.0474 li
79.7417 54.0439 li
79.7671 54.042 li
79.7915 54.04 li
79.8169 54.0371 li
79.8413 54.0342 li
79.8638 54.0303 li
79.8901 54.0273 li
79.9155 54.0234 li
79.9399 54.02 li
79.9629 54.0171 li
79.9883 54.0132 li
80.0117 54.0093 li
80.0371 54.0044 li
80.0625 54.0005 li
80.0859 53.9995 li
80.1113 53.9956 li
80.1357 53.9902 li
80.1602 53.9849 li
80.1851 53.9805 li
80.2095 53.9766 li
80.2319 53.9717 li
80.2573 53.9663 li
80.2827 53.9619 li
80.3071 53.957 li
80.3325 53.9517 li
80.356 53.9458 li
80.3813 53.9399 li
80.4063 53.9351 li
80.4307 53.9277 li
80.4551 53.9238 li
0.858823 0.85098 0.788235 1 cmyk
@
80.4551 53.9238 mo
80.4795 53.918 li
80.5029 53.9111 li
80.5283 53.9028 li
80.5527 53.8979 li
80.5781 53.8916 li
80.6025 53.8843 li
80.6279 53.876 li
80.6509 53.8696 li
80.6763 53.8613 li
80.7007 53.8555 li
80.7251 53.8477 li
80.7495 53.8398 li
80.7729 53.8325 li
80.7983 53.8237 li
80.8237 53.8149 li
80.8477 53.8062 li
80.8721 53.7979 li
80.8975 53.7891 li
80.9209 53.7803 li
80.9463 53.772 li
80.9707 53.7617 li
80.9941 53.7515 li
81.0195 53.7422 li
81.0425 53.7305 li
81.0679 53.7212 li
81.0923 53.7119 li
81.1177 53.7007 li
81.1421 53.6899 li
81.1685 53.6797 li
81.1929 53.668 li
81.2163 53.6572 li
81.2407 53.6431 li
81.2637 53.6343 li
81.2891 53.6206 li
81.3145 53.6089 li
81.3379 53.5957 li
81.3633 53.583 li
81.3887 53.5698 li
81.4131 53.5562 li
81.4375 53.5444 li
81.4629 53.5293 li
81.4863 53.5156 li
81.5103 53.502 li
81.5347 53.4878 li
81.5601 53.4707 li
81.5845 53.4561 li
81.6079 53.4419 li
81.6333 53.4263 li
81.6577 53.4106 li
81.6831 53.3936 li
81.7075 53.3784 li
81.7329 53.3618 li
81.7559 53.3428 li
81.7803 53.3252 li
81.8047 53.3091 li
81.8291 53.29 li
81.8535 53.2715 li
81.8779 53.2524 li
81.9033 53.2339 li
81.9287 53.2129 li
81.9531 53.1953 li
81.9761 53.1743 li
82.0015 53.1538 li
82.0259 53.1328 li
82.0503 53.1123 li
82.0747 53.0894 li
82.1001 53.0674 li
82.1245 53.0454 li
82.1479 53.0229 li
82.1729 53 li
82.1982 52.9761 li
82.2227 52.9512 li
82.2471 52.9272 li
82.2715 52.9038 li
82.2959 52.8779 li
82.3213 52.8501 li
82.3457 52.8232 li
82.3711 52.7974 li
82.3945 52.7715 li
82.4194 52.7422 li
82.4438 52.7144 li
82.4692 52.6865 li
82.4917 52.6572 li
82.5171 52.626 li
82.5415 52.5972 li
82.5659 52.5645 li
82.5913 52.5347 li
82.6157 52.5024 li
82.6421 52.4712 li
82.6641 52.436 li
82.6895 52.4038 li
82.7129 52.3691 li
82.7383 52.334 li
82.7637 52.2988 li
82.7871 52.2612 li
82.8115 52.2261 li
82.8359 52.189 li
82.8608 52.1514 li
82.8853 52.1128 li
82.9106 52.0742 li
@
82.9106 52.0742 mo
82.9341 52.0347 li
82.9595 51.9937 li
82.9839 51.9546 li
83.0083 51.9126 li
83.0337 51.8701 li
83.0571 51.8281 li
83.0811 51.7856 li
83.1064 51.7402 li
83.1309 51.6958 li
83.1553 51.6509 li
83.1807 51.6045 li
83.2061 51.5576 li
83.2295 51.5107 li
83.2539 51.4624 li
83.2793 51.4131 li
83.3037 51.3643 li
83.3276 51.3145 li
83.3511 51.2632 li
83.3765 51.2114 li
83.4009 51.1597 li
83.4253 51.1055 li
83.4517 51.0527 li
83.4751 50.9976 li
83.4995 50.9448 li
83.5249 50.8872 li
83.5488 50.8325 li
83.5723 50.7744 li
83.5967 50.7158 li
83.6211 50.6577 li
83.6465 50.5977 li
83.6719 50.5386 li
83.6963 50.478 li
83.7207 50.4146 li
83.7446 50.3521 li
83.769 50.2891 li
83.7944 50.2271 li
83.8188 50.1611 li
83.8423 50.0942 li
83.8677 50.0293 li
83.8911 49.9624 li
83.9165 49.894 li
83.9409 49.8247 li
83.9658 49.7559 li
83.9893 49.6865 li
84.0156 49.6133 li
84.04 49.542 li
84.0645 49.4692 li
84.0889 49.3965 li
84.1123 49.3218 li
84.1377 49.2456 li
84.1611 49.1699 li
84.186 49.0928 li
84.2114 49.0151 li
84.2358 48.9351 li
84.2603 48.855 li
84.2847 48.7754 li
84.3101 48.6919 li
84.3345 48.6108 li
84.3589 48.5259 li
84.3843 48.4424 li
84.4072 48.3574 li
84.4326 48.27 li
84.4561 48.1826 li
84.4814 48.0933 li
84.5049 48.0039 li
84.5303 47.915 li
84.5557 47.8213 li
84.5801 47.7275 li
84.6045 47.6362 li
84.6289 47.5405 li
84.6538 47.4438 li
84.6772 47.3486 li
84.7026 47.2485 li
84.7261 47.1499 li
84.7515 47.0483 li
84.7769 46.9463 li
84.8003 46.8442 li
84.8247 46.7397 li
84.8501 46.6348 li
84.874 46.5288 li
84.8984 46.4219 li
84.9248 46.3115 li
84.9473 46.2026 li
84.9727 46.0913 li
84.9971 45.9775 li
85.0215 45.8647 li
85.0469 45.7495 li
85.0723 45.6318 li
85.0952 45.5156 li
85.1196 45.395 li
85.144 45.2744 li
85.1685 45.1528 li
85.1938 45.0317 li
85.2173 44.9077 li
85.2427 44.7808 li
85.2681 44.6528 li
85.2925 44.5254 li
85.3164 44.3955 li
85.3398 44.2656 li
85.3652 44.1313 li
@
85.3652 44.1318 mo
85.3896 43.998 li
85.4141 43.8643 li
85.4385 43.7266 li
85.4639 43.5908 li
85.4883 43.4502 li
85.5127 43.3091 li
85.5381 43.1655 li
85.561 43.0244 li
85.5864 42.8799 li
85.6108 42.7334 li
85.6353 42.5859 li
85.6597 42.4375 li
85.6841 42.2876 li
85.7095 42.1353 li
85.7339 41.9834 li
85.7568 41.8286 li
85.7822 41.6733 li
85.8076 41.5166 li
85.833 41.3579 li
85.8564 41.2002 li
85.8799 41.0386 li
85.9053 40.877 li
85.9297 40.7124 li
85.9541 40.5479 li
85.979 40.3843 li
86.0034 40.2168 li
86.0278 40.0483 li
86.0532 39.8804 li
86.0776 39.71 li
86.1021 39.5376 li
86.1265 39.3647 li
86.1519 39.1904 li
86.1763 39.0161 li
86.1992 38.8394 li
86.2236 38.6621 li
86.248 38.4839 li
86.2734 38.3062 li
86.2979 38.125 li
86.3232 37.9434 li
86.3477 37.7617 li
86.373 37.5786 li
86.3975 37.395 li
86.4204 37.2075 li
86.4448 37.0229 li
86.4702 36.8369 li
86.4946 36.6484 li
86.5181 36.46 li
86.5435 36.2705 li
86.5679 36.0806 li
86.5933 35.8882 li
86.6177 35.6978 li
86.6431 35.5034 li
86.666 35.3101 li
86.6904 35.1172 li
86.7158 34.9229 li
86.7393 34.7251 li
86.7646 34.5288 li
86.7881 34.3315 li
86.8145 34.1353 li
86.8389 33.9355 li
86.8633 33.7373 li
86.8882 33.5391 li
86.9126 33.3369 li
86.937 33.1367 li
86.9604 32.936 li
86.9858 32.7324 li
87.0103 32.5298 li
87.0356 32.3276 li
87.0601 32.1226 li
87.083 31.9189 li
87.1084 31.7129 li
87.1328 31.5078 li
87.1582 31.3018 li
87.1826 31.0952 li
87.207 30.8882 li
87.2305 30.6816 li
87.2559 30.4727 li
87.2813 30.2627 li
87.3042 30.0552 li
87.3296 29.8452 li
87.353 29.6338 li
87.3794 29.4243 li
87.4038 29.2124 li
87.4282 29.0005 li
87.4517 28.7881 li
87.4771 28.5742 li
87.5005 28.3608 li
87.5254 28.1484 li
87.5522 27.9355 li
87.5742 27.7183 li
87.5996 27.5049 li
87.623 27.2881 li
87.6484 27.0718 li
87.6729 26.8555 li
87.6982 26.6387 li
87.7217 26.4214 li
87.7471 26.2031 li
87.77 25.9829 li
87.7954 25.7651 li
87.8208 25.5464 li
@
87.8208 25.5469 mo
87.8433 25.3257 li
87.8696 25.1064 li
87.894 24.8853 li
87.9185 24.6636 li
87.9438 24.4424 li
87.9668 24.2222 li
87.9922 24 li
88.0156 23.7769 li
88.041 23.5537 li
88.0664 23.3325 li
88.0908 23.1089 li
88.1162 22.8848 li
88.1396 22.6636 li
88.165 22.4385 li
88.1885 22.2144 li
88.2134 21.9922 li
88.2378 21.7681 li
88.2612 21.5444 li
88.2866 21.3218 li
88.311 21.0986 li
88.3364 20.875 li
88.3608 20.6538 li
88.3862 20.4307 li
88.4097 20.2095 li
88.4346 19.9858 li
88.459 19.7666 li
88.4824 19.5464 li
88.5078 19.3252 li
88.5313 19.1079 li
88.5566 18.8882 li
88.5801 18.6709 li
88.6064 18.4541 li
88.6309 18.2388 li
88.6563 18.0264 li
88.6812 17.812 li
88.7046 17.6001 li
88.729 17.3882 li
88.7524 17.1797 li
88.7778 16.9727 li
88.8032 16.7656 li
88.8267 16.563 li
88.8521 16.3599 li
88.876 16.1606 li
88.9004 15.9614 li
88.9248 15.7651 li
88.9512 15.5698 li
88.9746 15.3784 li
88.999 15.1895 li
89.0244 15.0024 li
89.0479 14.8174 li
89.0732 14.6367 li
89.0962 14.458 li
89.1216 14.2817 li
89.147 14.1089 li
89.1714 13.9385 li
89.1958 13.772 li
89.2212 13.6084 li
89.2446 13.4468 li
89.269 13.291 li
89.2935 13.1396 li
89.3174 12.9897 li
89.3428 12.8433 li
89.3662 12.7021 li
89.3916 12.5645 li
89.416 12.4307 li
89.4414 12.3008 li
89.4658 12.1748 li
89.4893 12.0537 li
89.5146 11.9351 li
89.5386 11.8237 li
89.564 11.7139 li
89.5874 11.6108 li
89.6128 11.5112 li
89.6362 11.4165 li
89.6606 11.3262 li
89.686 11.2407 li
89.7114 11.1611 li
89.7368 11.0854 li
89.7598 11.0146 li
89.7842 10.9482 li
89.8086 10.8867 li
89.833 10.8296 li
89.8594 10.7788 li
89.8828 10.7319 li
89.9072 10.6914 li
89.9316 10.6548 li
89.957 10.623 li
89.9824 10.5981 li
90.0063 10.5757 li
90.0298 10.5596 li
90.0542 10.5469 li
90.0796 10.5439 li
90.104 10.542 li
90.1284 10.5449 li
90.1528 10.5518 li
90.1782 10.5679 li
90.2026 10.5864 li
90.2266 10.6094 li
90.252 10.6362 li
90.2754 10.6694 li
@
90.2754 10.6694 mo
90.2998 10.7085 li
90.3242 10.7515 li
90.3486 10.7969 li
90.374 10.8496 li
90.3994 10.9072 li
90.4229 10.9673 li
90.4478 11.0327 li
90.4702 11.1035 li
90.4966 11.1787 li
90.522 11.2573 li
90.5454 11.3394 li
90.5698 11.4268 li
90.5942 11.519 li
90.6196 11.6128 li
90.6426 11.7124 li
90.6689 11.8164 li
90.6924 11.9233 li
90.7178 12.0337 li
90.7422 12.1484 li
90.7676 12.2661 li
90.792 12.3877 li
90.8145 12.5132 li
90.8398 12.6401 li
90.8652 12.7729 li
90.8892 12.9082 li
90.9146 13.0464 li
90.939 13.1875 li
90.9624 13.3311 li
90.9878 13.478 li
91.0132 13.6284 li
91.0366 13.7803 li
91.061 13.9351 li
91.0864 14.0928 li
91.1094 14.252 li
91.1348 14.415 li
91.1592 14.5806 li
91.1846 14.7461 li
91.209 14.9146 li
91.2344 15.085 li
91.2578 15.2588 li
91.2832 15.4331 li
91.3076 15.6108 li
91.3306 15.7871 li
91.356 15.9683 li
91.3794 16.1489 li
91.4048 16.3335 li
91.4292 16.5171 li
91.4546 16.7031 li
91.48 16.8887 li
91.5034 17.0781 li
91.5278 17.2671 li
91.5518 17.4575 li
91.5771 17.6484 li
91.6006 17.8403 li
91.626 18.0337 li
91.6494 18.2261 li
91.6748 18.4214 li
91.7002 18.6157 li
91.7246 18.812 li
91.749 19.0073 li
91.7729 19.2046 li
91.7983 19.4014 li
91.8237 19.6001 li
91.8472 19.7974 li
91.8706 19.9956 li
91.896 20.1943 li
91.9194 20.3916 li
91.9448 20.5898 li
91.9702 20.7886 li
91.9956 20.9873 li
92.0186 21.1855 li
92.043 21.3848 li
92.0684 21.5811 li
92.0918 21.7798 li
92.1172 21.979 li
92.1426 22.1758 li
92.166 22.373 li
92.1914 22.5708 li
92.2144 22.769 li
92.2397 22.9634 li
92.2632 23.1597 li
92.2886 23.355 li
92.314 23.5493 li
92.3384 23.7446 li
92.3628 23.939 li
92.3872 24.1323 li
92.4126 24.3267 li
92.4355 24.5181 li
92.4609 24.7109 li
92.4854 24.9009 li
92.5098 25.0923 li
92.5352 25.2832 li
92.5586 25.4736 li
92.583 25.6631 li
92.6084 25.8496 li
92.6328 26.0376 li
92.6572 26.2261 li
92.6821 26.4116 li
92.7056 26.5981 li
92.731 26.7837 li
@
92.731 26.7837 mo
92.7563 26.9697 li
92.7798 27.1533 li
92.8052 27.3364 li
92.8306 27.5195 li
92.854 27.7007 li
92.8784 27.8853 li
92.9023 28.0649 li
92.9268 28.2456 li
92.9521 28.4253 li
92.9775 28.605 li
93.001 28.7837 li
93.0264 28.9629 li
93.0498 29.1411 li
93.0752 29.3169 li
93.0981 29.4937 li
93.1235 29.6699 li
93.1479 29.8472 li
93.1724 30.0215 li
93.1968 30.1973 li
93.2222 30.3726 li
93.2476 30.5464 li
93.271 30.7197 li
93.2964 30.894 li
93.3208 31.0669 li
93.3447 31.2393 li
93.3701 31.4116 li
93.3926 31.584 li
93.418 31.7549 li
93.4424 31.9272 li
93.4678 32.0977 li
93.4922 32.2676 li
93.5166 32.438 li
93.541 32.6094 li
93.5664 32.7798 li
93.5913 32.9507 li
93.6147 33.1211 li
93.6401 33.2891 li
93.6636 33.4595 li
93.688 33.6279 li
93.7134 33.7974 li
93.7378 33.9668 li
93.7632 34.1362 li
93.7861 34.3032 li
93.8115 34.4727 li
93.835 34.6421 li
93.8613 34.8096 li
93.8857 34.9775 li
93.9092 35.146 li
93.9346 35.3145 li
93.958 35.4814 li
93.9834 35.6499 li
94.0073 35.8169 li
94.0317 35.9844 li
94.0562 36.1528 li
94.0815 36.3188 li
94.106 36.4863 li
94.1313 36.6538 li
94.1558 36.8198 li
94.1792 36.9868 li
94.2036 37.1523 li
94.2275 37.3198 li
94.2529 37.4858 li
94.2764 37.6523 li
94.3018 37.8184 li
94.3262 37.9824 li
94.3516 38.1489 li
94.376 38.313 li
94.4014 38.478 li
94.4258 38.6426 li
94.4512 38.8042 li
94.4731 38.9697 li
94.4976 39.1323 li
94.5229 39.2959 li
94.5464 39.4585 li
94.5708 39.6201 li
94.5972 39.7817 li
94.6216 39.9434 li
94.647 40.104 li
94.6714 40.2646 li
94.6953 40.4243 li
94.7188 40.5845 li
94.7441 40.7437 li
94.7695 40.9014 li
94.793 41.0571 li
94.8184 41.2163 li
94.8418 41.3721 li
94.8672 41.5259 li
94.8916 41.6816 li
94.9165 41.834 li
94.9399 41.9888 li
94.9653 42.1406 li
94.9907 42.2935 li
95.0142 42.4458 li
95.0396 42.5938 li
95.063 42.7432 li
95.0884 42.8921 li
95.1113 43.0405 li
95.1367 43.1865 li
95.1621 43.3315 li
95.1865 43.4761 li
@
95.1865 43.4766 mo
95.21 43.6211 li
95.2354 43.7622 li
95.2588 43.9048 li
95.2842 44.0449 li
95.3096 44.1851 li
95.3325 44.3213 li
95.3579 44.4595 li
95.3833 44.5967 li
95.4067 44.7305 li
95.4321 44.8647 li
95.4556 44.9985 li
95.481 45.1284 li
95.5054 45.2583 li
95.5298 45.3882 li
95.5552 45.5161 li
95.5791 45.6431 li
95.6025 45.7676 li
95.6289 45.8916 li
95.6533 46.0146 li
95.6768 46.1357 li
95.7021 46.2559 li
95.7266 46.3745 li
95.751 46.4917 li
95.7754 46.6104 li
95.7993 46.7236 li
95.8237 46.8369 li
95.8491 46.9507 li
95.8745 47.0605 li
95.8989 47.1714 li
95.9233 47.2798 li
95.9478 47.3867 li
95.9722 47.4912 li
95.9966 47.5962 li
96.0205 47.6992 li
96.0449 47.8013 li
96.0693 47.9019 li
96.0947 48.0005 li
96.1191 48.0972 li
96.1445 48.1948 li
96.168 48.2881 li
96.1934 48.3833 li
96.2178 48.4766 li
96.2407 48.5659 li
96.2661 48.6548 li
96.2896 48.7441 li
96.3149 48.8315 li
96.3394 48.917 li
96.3638 49.001 li
96.3892 49.0854 li
96.4146 49.1675 li
96.4399 49.2485 li
96.4644 49.3271 li
96.4873 49.4053 li
96.5107 49.4819 li
96.5361 49.5591 li
96.5615 49.6338 li
96.585 49.7065 li
96.6104 49.7783 li
96.6348 49.8486 li
96.6602 49.918 li
96.6846 49.9893 li
96.7095 50.0557 li
96.7329 50.1221 li
96.7573 50.1865 li
96.7817 50.252 li
96.8062 50.3154 li
96.8315 50.377 li
96.855 50.4375 li
96.8804 50.4961 li
96.9043 50.5566 li
96.9297 50.6138 li
96.9541 50.6709 li
96.9795 50.7271 li
97.0029 50.7817 li
97.0264 50.835 li
97.0527 50.8877 li
97.0762 50.9409 li
97.1016 50.9907 li
97.127 51.0415 li
97.1499 51.0908 li
97.1743 51.1387 li
97.2007 51.186 li
97.2241 51.2329 li
97.2485 51.2773 li
97.2729 51.3242 li
97.2974 51.3677 li
97.3228 51.4116 li
97.3457 51.4531 li
97.3711 51.4946 li
97.3965 51.5361 li
97.4199 51.5757 li
97.4453 51.6167 li
97.4707 51.6548 li
97.4951 51.6934 li
97.5186 51.7295 li
97.543 51.7671 li
97.5669 51.8037 li
97.5923 51.8389 li
97.6167 51.8721 li
97.6411 51.9063 li
@
97.6411 51.9067 mo
97.6665 51.9409 li
97.6899 51.9731 li
97.7153 52.0054 li
97.7407 52.0366 li
97.7642 52.0674 li
97.7881 52.1001 li
97.8125 52.1299 li
97.8379 52.1582 li
97.8623 52.188 li
97.8877 52.2173 li
97.9111 52.2456 li
97.9355 52.2734 li
97.9609 52.3003 li
97.9854 52.3262 li
98.0107 52.3535 li
98.0337 52.3784 li
98.0581 52.4043 li
98.0825 52.4302 li
98.1069 52.4531 li
98.1323 52.479 li
98.1558 52.5034 li
98.1812 52.5259 li
98.2065 52.5498 li
98.2295 52.5728 li
98.2549 52.5967 li
98.2803 52.6177 li
98.3027 52.6401 li
98.3281 52.6621 li
98.3535 52.6841 li
98.3779 52.7046 li
98.4023 52.7266 li
98.4277 52.7476 li
98.4531 52.7671 li
98.4761 52.7881 li
98.5015 52.8076 li
98.5259 52.8286 li
98.5493 52.8457 li
98.5728 52.8667 li
98.5981 52.8843 li
98.6235 52.9053 li
98.6479 52.9238 li
98.6733 52.9419 li
98.6973 52.9604 li
98.7227 52.978 li
98.7451 52.9966 li
98.7715 53.0142 li
98.7959 53.0317 li
98.8193 53.0498 li
98.8447 53.0674 li
98.8682 53.0845 li
98.8936 53.1016 li
98.9175 53.1182 li
98.9429 53.1372 li
98.9673 53.1528 li
98.9927 53.1689 li
99.0161 53.1846 li
99.0415 53.2017 li
99.0649 53.2183 li
99.0894 53.2334 li
99.1147 53.249 li
99.1377 53.2646 li
99.1631 53.2803 li
99.1885 53.2959 li
99.2129 53.3125 li
99.2383 53.3271 li
99.2627 53.3413 li
99.2871 53.3569 li
99.3115 53.3721 li
99.335 53.3862 li
99.3589 53.4009 li
99.3843 53.4165 li
99.4087 53.4307 li
99.4331 53.4443 li
99.4585 53.459 li
99.4829 53.4722 li
99.5083 53.4858 li
99.5327 53.5005 li
99.5571 53.5142 li
99.5801 53.5269 li
99.6055 53.5396 li
99.6309 53.5522 li
99.6543 53.5664 li
99.6787 53.5786 li
99.7031 53.5913 li
99.7285 53.604 li
99.7539 53.6157 li
99.7783 53.6274 li
99.8013 53.6396 li
99.8267 53.6523 li
99.8501 53.6636 li
99.8755 53.6753 li
99.8999 53.6865 li
99.9243 53.6982 li
99.9487 53.7095 li
99.9731 53.7197 li
99.9985 53.73 li
100.022 53.7417 li
100.047 53.751 li
100.072 53.7617 li
100.096 53.7715 li
@
100.096 53.7715 mo
100.12 53.7808 li
100.146 53.7925 li
100.171 53.7993 li
100.194 53.8101 li
100.22 53.8184 li
100.244 53.8291 li
100.268 53.8369 li
100.293 53.8442 li
100.317 53.853 li
100.342 53.8618 li
100.367 53.8701 li
100.391 53.8779 li
100.416 53.8848 li
100.441 53.8936 li
100.466 53.8994 li
100.489 53.9077 li
100.515 53.9136 li
100.538 53.9224 li
100.563 53.9272 li
100.589 53.9351 li
100.612 53.9399 li
100.637 53.9463 li
100.661 53.9521 li
100.687 53.96 li
100.71 53.9648 li
100.736 53.9702 li
100.759 53.9751 li
100.785 53.9805 li
100.809 53.9849 li
100.833 53.9897 li
100.859 53.9951 li
100.881 54 li
100.907 54.0044 li
100.931 54.0078 li
100.955 54.0127 li
100.98 54.0166 li
101.006 54.02 li
101.029 54.0234 li
101.055 54.0273 li
101.079 54.0337 li
101.104 54.0356 li
101.129 54.0396 li
101.151 54.0415 li
101.176 54.0449 li
101.201 54.0483 li
101.226 54.0513 li
101.25 54.0532 li
101.276 54.0552 li
101.299 54.0571 li
101.325 54.0615 li
101.35 54.0635 li
101.372 54.0659 li
101.397 54.0679 li
101.422 54.0688 li
101.446 54.0718 li
101.472 54.0742 li
101.496 54.0762 li
101.521 54.0771 li
101.545 54.0781 li
101.57 54.0801 li
101.595 54.082 li
101.62 54.083 li
101.644 54.084 li
101.667 54.0864 li
101.692 54.0864 li
101.716 54.0874 li
101.742 54.0898 li
101.766 54.0908 li
101.792 54.0918 li
101.814 54.0928 li
101.84 54.0947 li
101.864 54.0947 li
101.89 54.0957 li
101.914 54.0967 li
101.938 54.0967 li
101.961 54.0981 li
101.986 54.0981 li
102.012 54.0991 li
102.036 54.1001 li
102.06 54.1001 li
102.085 54.1001 li
102.109 54.1001 li
102.135 54.1021 li
102.16 54.1021 li
102.184 54.1021 li
102.209 54.103 li
102.233 54.104 li
102.258 54.104 li
102.281 54.104 li
102.305 54.104 li
102.33 54.105 li
102.355 54.105 li
102.381 54.105 li
102.405 54.106 li
102.429 54.106 li
102.454 54.106 li
102.477 54.106 li
102.502 54.106 li
102.528 54.106 li
102.551 54.106 li
@
102.551 54.1064 mo
102.577 54.1084 li
@
11.2261 55.811 mo
11.2261 11.8218 li
@
11.2261 55.9014 mo
63.75 55.9014 li
@
223.96 55.7769 mo
223.96 9.88379 li
@
223.96 55.8662 mo
276.482 55.8662 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIQ+MyriadPro-Regular*1 [10.4764 0 0 -10.4764 0 0 ]msf15.2095 8.98096 mo(A)sh247.156 8.76855 mo(B)sh12.3457 53.9312 mo
12.6055 10.7656 li
12.6611 10.8081 li
12.7158 10.855 li
12.772 10.9067 li
12.8267 10.9639 li
12.8843 11.0244 li
12.938 11.0908 li
12.9932 11.1592 li
13.0498 11.2354 li
13.1045 11.313 li
13.1606 11.395 li
13.2163 11.4834 li
13.271 11.5747 li
13.3267 11.6709 li
13.3838 11.769 li
13.438 11.8721 li
13.4941 11.981 li
13.5493 12.0903 li
13.604 12.2046 li
13.6636 12.3242 li
13.7163 12.4448 li
13.7725 12.5703 li
13.8291 12.6973 li
13.8828 12.8311 li
13.939 12.9653 li
13.9946 13.1035 li
14.0503 13.2446 li
14.105 13.3872 li
14.1611 13.5347 li
14.2173 13.6846 li
14.2725 13.8359 li
14.3296 13.9917 li
14.3833 14.1484 li
14.4399 14.3091 li
14.4946 14.4707 li
14.5508 14.6362 li
14.6055 14.8047 li
14.6611 14.9717 li
14.7163 15.1421 li
14.771 15.3154 li
14.8281 15.4902 li
14.8833 15.6665 li
14.9385 15.8457 li
14.9951 16.0254 li
15.0508 16.2061 li
15.106 16.3892 li
15.1616 16.5737 li
15.2168 16.7598 li
15.2739 16.9473 li
15.3281 17.1348 li
15.3818 17.3242 li
15.4395 17.5142 li
15.4956 17.7046 li
15.5503 17.8965 li
15.6064 18.0898 li
15.6592 18.2842 li
15.7178 18.4771 li
15.7734 18.6729 li
15.8267 18.8691 li
15.8828 19.0654 li
15.939 19.2632 li
15.9951 19.4595 li
16.0522 19.6567 li
16.1064 19.853 li
16.1611 20.0527 li
16.2183 20.251 li
16.2715 20.4482 li
16.3286 20.647 li
16.3848 20.8457 li
16.4409 21.0449 li
16.4951 21.2432 li
16.5508 21.4399 li
16.6069 21.6392 li
16.6621 21.8379 li
16.7173 22.0352 li
16.7734 22.2339 li
16.8271 22.4312 li
16.8848 22.6274 li
16.9404 22.8237 li
16.9956 23.021 li
17.0493 23.2153 li
17.1069 23.4116 li
17.1631 23.606 li
17.2158 23.8022 li
17.2744 23.9956 li
17.3281 24.189 li
17.3853 24.3823 li
17.4404 24.5757 li
17.4966 24.7671 li
17.5508 24.958 li
17.6064 25.1499 li
17.6631 25.3403 li
17.7188 25.5293 li
17.7729 25.7188 li
17.8301 25.9063 li
17.8853 26.0957 li
17.9414 26.2827 li
17.9961 26.4688 li
18.0518 26.6558 li
18.1074 26.8408 li
0.858823 0.85098 0.788235 1 cmyk
@
18.1074 26.8403 mo
18.1636 27.0259 li
18.2183 27.2095 li
18.2739 27.3926 li
18.3296 27.5762 li
18.3838 27.7578 li
18.4409 27.9419 li
18.4961 28.1216 li
18.5522 28.3018 li
18.6079 28.4824 li
18.6636 28.6606 li
18.7173 28.8394 li
18.7744 29.0195 li
18.8291 29.1973 li
18.8857 29.3735 li
18.9399 29.5513 li
18.9956 29.7271 li
19.0522 29.9023 li
19.1079 30.0796 li
19.1631 30.2539 li
19.2188 30.4282 li
19.2744 30.603 li
19.3281 30.7754 li
19.3853 30.9502 li
19.4419 31.1226 li
19.4966 31.2949 li
19.5518 31.4673 li
19.6074 31.6401 li
19.6631 31.8125 li
19.7192 31.9829 li
19.7749 32.1553 li
19.8281 32.3257 li
19.8843 32.4951 li
19.9414 32.6665 li
19.9961 32.8369 li
20.0527 33.0083 li
20.1064 33.1787 li
20.1636 33.3472 li
20.2202 33.5161 li
20.2749 33.6855 li
20.3301 33.854 li
20.3848 34.0244 li
20.4424 34.1929 li
20.4971 34.3608 li
20.5532 34.5293 li
20.6099 34.6987 li
20.6646 34.8672 li
20.7197 35.0356 li
20.7744 35.2036 li
20.832 35.3701 li
20.8857 35.5386 li
20.9419 35.707 li
20.9971 35.874 li
21.0508 36.0415 li
21.1084 36.2109 li
21.1631 36.377 li
21.2192 36.543 li
21.2734 36.7114 li
21.3306 36.877 li
21.3853 37.0439 li
21.4404 37.2104 li
21.4971 37.3774 li
21.5508 37.5425 li
21.6079 37.708 li
21.6631 37.8745 li
21.7192 38.0391 li
21.7739 38.2056 li
21.8301 38.3701 li
21.8857 38.5337 li
21.9414 38.6982 li
22 38.8623 li
22.0518 39.0273 li
22.1079 39.1895 li
22.1636 39.3525 li
22.2188 39.5161 li
22.2764 39.6768 li
22.3301 39.8389 li
22.3862 40.001 li
22.4409 40.1611 li
22.4976 40.3213 li
22.5532 40.481 li
22.6084 40.6406 li
22.6641 40.8003 li
22.7197 40.959 li
22.7759 41.1147 li
22.8296 41.272 li
22.8862 41.4277 li
22.9419 41.5825 li
22.9971 41.7383 li
23.0557 41.8921 li
23.1084 42.0469 li
23.1655 42.1992 li
23.2202 42.3501 li
23.2749 42.501 li
23.3306 42.6514 li
23.3877 42.7993 li
23.4443 42.9487 li
23.4971 43.0967 li
23.5532 43.2432 li
23.6089 43.3882 li
23.6646 43.5337 li
@
23.6641 43.5342 mo
23.7202 43.6777 li
23.7749 43.8188 li
23.8301 43.9614 li
23.8872 44.1006 li
23.9424 44.2422 li
23.9971 44.3789 li
24.0537 44.5161 li
24.1099 44.6523 li
24.1636 44.7886 li
24.2207 44.9214 li
24.2759 45.0542 li
24.332 45.1841 li
24.3877 45.3159 li
24.4434 45.4438 li
24.4995 45.5728 li
24.5542 45.6997 li
24.6069 45.8237 li
24.6665 45.9482 li
24.7207 46.0708 li
24.7764 46.1924 li
24.833 46.3125 li
24.8892 46.4321 li
24.9429 46.5493 li
24.999 46.666 li
25.0552 46.7813 li
25.1094 46.8945 li
25.165 47.0068 li
25.2217 47.1182 li
25.2778 47.2285 li
25.3315 47.3364 li
25.3877 47.4434 li
25.4429 47.5479 li
25.498 47.6528 li
25.5547 47.7559 li
25.6089 47.8569 li
25.6641 47.9585 li
25.7212 48.0571 li
25.7759 48.1548 li
25.8311 48.2505 li
25.8887 48.3462 li
25.9424 48.4399 li
25.9995 48.5332 li
26.0537 48.6235 li
26.1099 48.7119 li
26.1646 48.8003 li
26.2197 48.8872 li
26.2764 48.9727 li
26.3301 49.0581 li
26.3882 49.1411 li
26.4419 49.2241 li
26.4985 49.3066 li
26.5542 49.3843 li
26.6104 49.4624 li
26.665 49.5391 li
26.7207 49.6147 li
26.7769 49.6895 li
26.8315 49.7637 li
26.8892 49.835 li
26.9429 49.9058 li
27 49.9756 li
27.0557 50.0454 li
27.1113 50.1138 li
27.1665 50.1792 li
27.2212 50.2437 li
27.2778 50.3091 li
27.3325 50.3716 li
27.3887 50.4336 li
27.4443 50.4941 li
27.499 50.5542 li
27.5552 50.6133 li
27.6099 50.6709 li
27.6655 50.7275 li
27.7212 50.7837 li
27.7764 50.8389 li
27.833 50.8911 li
27.8877 50.9458 li
27.9438 50.9971 li
27.9985 51.0488 li
28.0571 51.0972 li
28.1099 51.1475 li
28.166 51.1953 li
28.2227 51.2432 li
28.2773 51.2896 li
28.3335 51.3354 li
28.3882 51.3809 li
28.4438 51.4248 li
28.4995 51.4683 li
28.5557 51.5098 li
28.6104 51.5527 li
28.667 51.5933 li
28.7222 51.6328 li
28.7778 51.6733 li
28.8345 51.7109 li
28.8892 51.7495 li
28.9453 51.7876 li
29 51.8237 li
29.0557 51.8604 li
29.1108 51.8955 li
29.1655 51.9302 li
29.2207 51.9629 li
@
29.2202 51.9634 mo
29.2778 51.998 li
29.3325 52.0298 li
29.3896 52.0625 li
29.4448 52.0942 li
29.5 52.1245 li
29.5557 52.1577 li
29.6108 52.1855 li
29.6675 52.2163 li
29.7222 52.2451 li
29.7793 52.2729 li
29.8335 52.3022 li
29.8887 52.3301 li
29.9443 52.3569 li
29.9995 52.3833 li
30.0562 52.4106 li
30.1108 52.4351 li
30.167 52.4614 li
30.2207 52.4868 li
30.2773 52.5098 li
30.334 52.5356 li
30.3872 52.5591 li
30.4448 52.584 li
30.4995 52.6069 li
30.5557 52.6309 li
30.6113 52.6523 li
30.666 52.6753 li
30.7217 52.6973 li
30.7778 52.7197 li
30.8345 52.7397 li
30.8892 52.7627 li
30.9443 52.7842 li
31 52.8042 li
31.0566 52.8228 li
31.1113 52.8447 li
31.1685 52.8638 li
31.2251 52.8838 li
31.2778 52.9038 li
31.334 52.9224 li
31.3896 52.9419 li
31.4453 52.9609 li
31.501 52.981 li
31.5562 52.9976 li
31.6099 53.0181 li
31.6685 53.0361 li
31.7236 53.0532 li
31.7783 53.0698 li
31.835 53.0889 li
31.8887 53.1064 li
31.9448 53.123 li
32.0005 53.1416 li
32.0571 53.1572 li
32.1123 53.1763 li
32.167 53.1929 li
32.2236 53.2085 li
32.2783 53.2256 li
32.3335 53.2407 li
32.3892 53.2573 li
32.4458 53.2734 li
32.501 53.2891 li
32.5566 53.3062 li
32.6118 53.3228 li
32.6699 53.3384 li
32.7231 53.3525 li
32.7769 53.3691 li
32.8354 53.3853 li
32.8906 53.3994 li
32.9463 53.4141 li
33.0024 53.4277 li
33.0557 53.4438 li
33.1128 53.4575 li
33.1685 53.4722 li
33.2241 53.4863 li
33.2803 53.5005 li
33.334 53.5151 li
33.3911 53.5293 li
33.4463 53.543 li
33.5024 53.5576 li
33.5571 53.5718 li
33.6123 53.5835 li
33.6685 53.5967 li
33.7236 53.6094 li
33.7808 53.623 li
33.835 53.6362 li
33.8911 53.6479 li
33.9458 53.6611 li
34.0029 53.6738 li
34.0571 53.6855 li
34.1123 53.6968 li
34.1685 53.7095 li
34.2222 53.7192 li
34.2798 53.7319 li
34.3345 53.7432 li
34.3906 53.7549 li
34.4443 53.7661 li
34.502 53.7769 li
34.5571 53.7871 li
34.6108 53.7974 li
34.6685 53.8066 li
34.7231 53.8184 li
34.7803 53.8296 li
@
34.7798 53.8296 mo
34.834 53.8374 li
34.8901 53.8481 li
34.9473 53.8564 li
35.001 53.8662 li
35.0586 53.875 li
35.1133 53.8848 li
35.1694 53.894 li
35.2261 53.9009 li
35.2788 53.9106 li
35.3359 53.9189 li
35.3916 53.9268 li
35.4463 53.9355 li
35.502 53.9414 li
35.5591 53.9502 li
35.6147 53.9565 li
35.6685 53.9634 li
35.7246 53.9722 li
35.7793 53.978 li
35.8369 53.9834 li
35.8906 53.9917 li
35.9468 53.998 li
36.002 54.0039 li
36.0571 54.0083 li
36.1133 54.0166 li
36.168 54.022 li
36.2256 54.0269 li
36.2803 54.0317 li
36.3364 54.0386 li
36.3916 54.0425 li
36.4468 54.0469 li
36.5029 54.0527 li
36.5576 54.0566 li
36.6128 54.0615 li
36.668 54.0654 li
36.7251 54.0684 li
36.7798 54.0728 li
36.8354 54.0767 li
36.8906 54.0811 li
36.9463 54.0854 li
37.0024 54.0894 li
37.0576 54.0913 li
37.1138 54.0952 li
37.1685 54.0981 li
37.2236 54.1021 li
37.2822 54.105 li
37.335 54.1079 li
37.3911 54.1099 li
37.4482 54.1133 li
37.5034 54.1143 li
37.5591 54.1172 li
37.6143 54.1191 li
37.6699 54.1216 li
37.7256 54.1235 li
37.7817 54.126 li
37.8359 54.1279 li
37.8921 54.1299 li
37.9478 54.1318 li
38.002 54.1338 li
38.0581 54.1348 li
38.1133 54.1372 li
38.1704 54.1382 li
38.2241 54.1401 li
38.2808 54.1421 li
38.3364 54.1421 li
38.3906 54.1445 li
38.4468 54.1445 li
38.5029 54.1465 li
38.5581 54.1484 li
38.6128 54.1484 li
38.6694 54.1509 li
38.7241 54.1509 li
38.7813 54.1519 li
38.835 54.1528 li
38.8916 54.1548 li
38.9468 54.1548 li
39.0015 54.1548 li
39.0591 54.1548 li
39.1157 54.1558 li
39.1689 54.1567 li
39.2246 54.1577 li
39.2822 54.1577 li
39.3374 54.1577 li
39.3931 54.1577 li
39.4478 54.1577 li
39.5024 54.1587 li
39.5605 54.1597 li
39.6157 54.1597 li
39.6699 54.1597 li
39.7251 54.1597 li
39.7798 54.1616 li
39.8384 54.1616 li
39.8921 54.1616 li
39.9482 54.1616 li
40.0029 54.1626 li
40.0586 54.1641 li
40.1147 54.1641 li
40.1704 54.1641 li
40.2271 54.1641 li
40.2817 54.1641 li
40.3379 54.1641 li
@
40.3379 54.1646 mo
40.3916 54.1646 li
@
179.724 234.018 mo
179.868 234.018 li
180.016 234.018 li
180.159 234.018 li
180.307 234.016 li
180.452 234.016 li
180.599 234.016 li
180.744 234.016 li
180.891 234.016 li
181.035 234.016 li
181.182 234.013 li
181.327 234.013 li
181.474 234.012 li
181.618 234.012 li
181.765 234.012 li
181.912 234.011 li
182.057 234.009 li
182.202 234.007 li
182.349 234.007 li
182.494 234.007 li
182.641 234.007 li
182.787 234.005 li
182.933 234.003 li
183.078 234.001 li
183.224 234 li
183.369 233.999 li
183.517 233.998 li
183.662 233.996 li
183.811 233.995 li
183.955 233.993 li
184.1 233.991 li
184.244 233.989 li
184.393 233.989 li
184.538 233.985 li
184.683 233.985 li
184.828 233.981 li
184.974 233.98 li
185.12 233.977 li
185.267 233.975 li
185.412 233.97 li
185.558 233.969 li
185.705 233.966 li
185.852 233.962 li
185.997 233.959 li
186.143 233.957 li
186.287 233.953 li
186.436 233.948 li
186.58 233.944 li
186.727 233.94 li
186.869 233.938 li
187.018 233.933 li
187.163 233.929 li
187.311 233.923 li
187.457 233.919 li
187.604 233.914 li
187.748 233.909 li
187.893 233.904 li
188.038 233.897 li
188.185 233.891 li
188.332 233.885 li
188.477 233.879 li
188.623 233.874 li
188.769 233.865 li
188.915 233.861 li
189.06 233.851 li
189.206 233.842 li
189.352 233.835 li
189.5 233.828 li
189.646 233.82 li
189.791 233.81 li
189.937 233.802 li
190.083 233.793 li
190.227 233.784 li
190.376 233.774 li
190.522 233.763 li
190.669 233.753 li
190.813 233.741 li
190.959 233.731 li
191.104 233.719 li
191.251 233.708 li
191.396 233.696 li
191.54 233.682 li
191.688 233.67 li
191.833 233.657 li
191.98 233.642 li
192.124 233.627 li
192.271 233.614 li
192.418 233.597 li
192.564 233.583 li
192.71 233.569 li
192.854 233.55 li
193.002 233.534 li
193.147 233.518 li
193.294 233.501 li
193.438 233.482 li
193.586 233.464 li
193.73 233.445 li
193.878 233.426 li
194.024 233.407 li
194.168 233.385 li
@
194.168 233.385 mo
194.313 233.366 li
194.461 233.343 li
194.606 233.32 li
194.753 233.299 li
194.898 233.277 li
195.044 233.253 li
195.19 233.228 li
195.335 233.206 li
195.48 233.181 li
195.628 233.155 li
195.772 233.128 li
195.919 233.102 li
196.066 233.074 li
196.212 233.047 li
196.357 233.017 li
196.504 232.988 li
196.649 232.959 li
196.796 232.928 li
196.942 232.898 li
197.088 232.867 li
197.23 232.835 li
197.378 232.8 li
197.523 232.768 li
197.671 232.734 li
197.818 232.7 li
197.96 232.664 li
198.106 232.628 li
198.252 232.59 li
198.398 232.554 li
198.546 232.514 li
198.691 232.477 li
198.836 232.436 li
198.985 232.396 li
199.129 232.354 li
199.275 232.312 li
199.421 232.269 li
199.568 232.227 li
199.713 232.18 li
199.859 232.137 li
200.005 232.089 li
200.152 232.043 li
200.296 231.996 li
200.443 231.947 li
200.588 231.899 li
200.734 231.845 li
200.88 231.795 li
201.024 231.744 li
201.172 231.687 li
201.318 231.634 li
201.465 231.581 li
201.613 231.523 li
201.755 231.466 li
201.901 231.408 li
202.047 231.347 li
202.193 231.288 li
202.341 231.225 li
202.487 231.162 li
202.632 231.099 li
202.777 231.032 li
202.924 230.969 li
203.069 230.9 li
203.215 230.829 li
203.363 230.761 li
203.508 230.69 li
203.652 230.618 li
203.798 230.542 li
203.946 230.467 li
204.091 230.39 li
204.238 230.314 li
204.383 230.232 li
204.529 230.151 li
204.677 230.07 li
204.82 229.986 li
204.966 229.901 li
205.113 229.816 li
205.259 229.726 li
205.403 229.635 li
205.55 229.544 li
205.695 229.451 li
205.844 229.357 li
205.989 229.26 li
206.136 229.161 li
206.279 229.061 li
206.428 228.959 li
206.571 228.855 li
206.717 228.75 li
206.862 228.643 li
207.01 228.534 li
207.154 228.422 li
207.302 228.31 li
207.446 228.196 li
207.593 228.08 li
207.74 227.959 li
207.885 227.841 li
208.029 227.717 li
208.178 227.592 li
208.32 227.466 li
208.468 227.336 li
208.615 227.207 li
208.761 227.074 li
@
208.761 227.074 mo
208.908 226.939 li
209.052 226.8 li
209.199 226.662 li
209.345 226.521 li
209.49 226.376 li
209.636 226.23 li
209.782 226.084 li
209.927 225.932 li
210.074 225.78 li
210.221 225.625 li
210.365 225.467 li
210.51 225.31 li
210.657 225.147 li
210.804 224.982 li
210.949 224.818 li
211.097 224.647 li
211.239 224.478 li
211.387 224.303 li
211.534 224.128 li
211.68 223.952 li
211.824 223.769 li
211.971 223.586 li
212.115 223.401 li
212.264 223.212 li
212.408 223.022 li
212.555 222.829 li
212.701 222.634 li
212.847 222.436 li
212.991 222.237 li
213.138 222.032 li
213.283 221.829 li
213.432 221.62 li
213.574 221.409 li
213.722 221.196 li
213.867 220.98 li
214.014 220.762 li
214.159 220.542 li
214.304 220.317 li
214.452 220.09 li
214.597 219.862 li
214.742 219.629 li
214.889 219.394 li
215.033 219.158 li
215.181 218.917 li
215.327 218.672 li
215.474 218.427 li
215.617 218.178 li
215.763 217.929 li
215.909 217.674 li
216.058 217.415 li
216.202 217.155 li
216.349 216.893 li
216.497 216.625 li
216.638 216.355 li
216.784 216.083 li
216.931 215.807 li
217.078 215.527 li
217.226 215.246 li
217.371 214.961 li
217.516 214.67 li
217.663 214.38 li
217.809 214.083 li
217.954 213.784 li
218.099 213.482 li
218.245 213.175 li
218.392 212.865 li
218.537 212.553 li
218.683 212.236 li
218.826 211.915 li
218.975 211.592 li
219.121 211.263 li
219.266 210.933 li
219.414 210.598 li
219.559 210.257 li
219.704 209.916 li
219.849 209.569 li
219.997 209.216 li
220.143 208.861 li
220.291 208.501 li
220.436 208.139 li
220.58 207.771 li
220.727 207.399 li
220.871 207.024 li
221.019 206.642 li
221.164 206.258 li
221.31 205.872 li
221.458 205.476 li
221.601 205.078 li
221.749 204.677 li
221.894 204.27 li
222.038 203.859 li
222.184 203.442 li
222.333 203.023 li
222.475 202.6 li
222.622 202.171 li
222.769 201.738 li
222.916 201.3 li
223.061 200.856 li
223.207 200.41 li
223.353 199.956 li
@
223.353 199.956 mo
223.497 199.501 li
223.646 199.039 li
223.791 198.572 li
223.938 198.102 li
224.083 197.625 li
224.229 197.144 li
224.374 196.66 li
224.52 196.17 li
224.665 195.677 li
224.813 195.178 li
224.954 194.673 li
225.104 194.167 li
225.249 193.655 li
225.396 193.137 li
225.541 192.616 li
225.687 192.089 li
225.832 191.559 li
225.979 191.022 li
226.124 190.485 li
226.27 189.94 li
226.416 189.392 li
226.563 188.836 li
226.711 188.281 li
226.854 187.72 li
227.002 187.156 li
227.148 186.586 li
227.293 186.011 li
227.441 185.435 li
227.585 184.855 li
227.731 184.266 li
227.877 183.676 li
228.023 183.082 li
228.166 182.487 li
228.315 181.884 li
228.457 181.279 li
228.607 180.67 li
228.752 180.06 li
228.896 179.445 li
229.04 178.826 li
229.19 178.203 li
229.336 177.58 li
229.481 176.949 li
229.627 176.316 li
229.771 175.684 li
229.919 175.043 li
230.066 174.403 li
230.212 173.758 li
230.357 173.112 li
230.502 172.461 li
230.648 171.81 li
230.794 171.155 li
230.943 170.497 li
231.085 169.835 li
231.232 169.171 li
231.374 168.507 li
231.521 167.838 li
231.671 167.168 li
231.816 166.495 li
231.961 165.821 li
232.106 165.141 li
232.253 164.463 li
232.402 163.782 li
232.547 163.097 li
232.69 162.412 li
232.838 161.724 li
232.983 161.032 li
233.131 160.339 li
233.273 159.648 li
233.422 158.95 li
233.568 158.251 li
233.711 157.552 li
233.857 156.851 li
234.007 156.147 li
234.152 155.443 li
234.299 154.736 li
234.443 154.026 li
234.588 153.316 li
234.732 152.604 li
234.879 151.887 li
235.027 151.171 li
235.169 150.454 li
235.318 149.734 li
235.466 149.011 li
235.607 148.291 li
235.757 147.565 li
235.902 146.838 li
236.048 146.11 li
236.19 145.38 li
236.339 144.648 li
236.482 143.913 li
236.633 143.18 li
236.776 142.441 li
236.923 141.703 li
237.068 140.966 li
237.215 140.223 li
237.36 139.48 li
237.507 138.735 li
237.652 137.989 li
237.8 137.242 li
237.946 136.492 li
@
237.946 136.492 mo
238.091 135.74 li
238.235 134.989 li
238.382 134.237 li
238.527 133.481 li
238.674 132.726 li
238.822 131.968 li
238.965 131.211 li
239.111 130.452 li
239.26 129.691 li
239.402 128.933 li
239.55 128.171 li
239.697 127.41 li
239.842 126.647 li
239.988 125.884 li
240.135 125.12 li
240.277 124.358 li
240.424 123.595 li
240.571 122.833 li
240.719 122.07 li
240.864 121.309 li
241.009 120.545 li
241.153 119.786 li
241.299 119.024 li
241.447 118.27 li
241.594 117.512 li
241.739 116.758 li
241.886 116.007 li
242.028 115.256 li
242.176 114.508 li
242.323 113.761 li
242.468 113.018 li
242.613 112.279 li
242.761 111.545 li
242.906 110.812 li
243.053 110.083 li
243.197 109.362 li
243.344 108.64 li
243.49 107.926 li
243.635 107.22 li
243.78 106.515 li
243.927 105.818 li
244.073 105.125 li
244.219 104.442 li
244.365 103.766 li
244.514 103.095 li
244.656 102.432 li
244.804 101.777 li
244.948 101.13 li
245.094 100.493 li
245.242 99.8604 li
245.387 99.2422 li
245.532 98.6313 li
245.681 98.0303 li
245.823 97.4385 li
245.972 96.8584 li
246.118 96.291 li
246.263 95.731 li
246.406 95.1855 li
246.556 94.6514 li
246.698 94.1289 li
246.847 93.6201 li
246.993 93.1221 li
247.139 92.6367 li
247.282 92.168 li
247.43 91.709 li
247.574 91.2676 li
247.719 90.8374 li
247.868 90.4229 li
248.014 90.0225 li
248.16 89.6372 li
248.306 89.2661 li
248.451 88.9126 li
248.597 88.5737 li
248.743 88.25 li
248.888 87.9404 li
249.032 87.6504 li
249.183 87.377 li
249.326 87.1172 li
249.472 86.873 li
249.618 86.6489 li
249.764 86.4399 li
249.909 86.2466 li
250.055 86.0703 li
250.2 85.9136 li
250.348 85.7729 li
250.493 85.647 li
250.639 85.54 li
250.785 85.4526 li
250.934 85.3789 li
251.076 85.3228 li
251.22 85.2803 li
251.368 85.2642 li
251.514 85.2593 li
251.662 85.272 li
251.81 85.2979 li
251.954 85.3477 li
252.1 85.4121 li
252.247 85.4902 li
252.392 85.5845 li
252.538 85.7012 li
@
252.538 85.7012 mo
252.683 85.8311 li
252.83 85.9766 li
252.973 86.1348 li
253.121 86.3149 li
253.267 86.5073 li
253.41 86.7153 li
253.559 86.9375 li
253.702 87.1797 li
253.851 87.4355 li
253.996 87.7031 li
254.144 87.9839 li
254.285 88.2832 li
254.436 88.5962 li
254.58 88.9214 li
254.725 89.2578 li
254.872 89.6113 li
255.018 89.978 li
255.163 90.3574 li
255.309 90.7471 li
255.458 91.1514 li
255.603 91.5679 li
255.746 91.9941 li
255.893 92.4302 li
256.039 92.8804 li
256.185 93.3423 li
256.334 93.8145 li
256.476 94.2935 li
256.622 94.7847 li
256.771 95.2886 li
256.913 95.7983 li
257.061 96.3179 li
257.205 96.8481 li
257.352 97.3877 li
257.497 97.9321 li
257.646 98.4858 li
257.788 99.0479 li
257.936 99.6162 li
258.083 100.194 li
258.227 100.777 li
258.374 101.368 li
258.52 101.962 li
258.667 102.566 li
258.812 103.175 li
258.958 103.791 li
259.101 104.409 li
259.25 105.035 li
259.394 105.664 li
259.538 106.296 li
259.688 106.937 li
259.833 107.579 li
259.979 108.223 li
260.125 108.872 li
260.271 109.526 li
260.417 110.184 li
260.563 110.84 li
260.708 111.504 li
260.854 112.166 li
261.001 112.833 li
261.146 113.501 li
261.293 114.171 li
261.441 114.841 li
261.587 115.516 li
261.729 116.19 li
261.876 116.865 li
262.021 117.542 li
262.167 118.219 li
262.315 118.896 li
262.46 119.573 li
262.604 120.249 li
262.75 120.928 li
262.897 121.605 li
263.045 122.282 li
263.188 122.959 li
263.334 123.634 li
263.48 124.312 li
263.629 124.987 li
263.772 125.659 li
263.917 126.333 li
264.063 127.006 li
264.209 127.675 li
264.358 128.342 li
264.504 129.012 li
264.649 129.677 li
264.796 130.343 li
264.94 131.005 li
265.085 131.668 li
265.232 132.328 li
265.375 132.985 li
265.521 133.639 li
265.67 134.295 li
265.816 134.947 li
265.963 135.596 li
266.105 136.244 li
266.254 136.889 li
266.399 137.533 li
266.544 138.175 li
266.692 138.814 li
266.835 139.453 li
266.983 140.086 li
267.129 140.719 li
@
267.129 140.719 mo
267.274 141.351 li
267.421 141.98 li
267.566 142.606 li
267.712 143.233 li
267.857 143.854 li
268.003 144.476 li
268.149 145.093 li
268.296 145.71 li
268.441 146.326 li
268.588 146.937 li
268.733 147.548 li
268.882 148.16 li
269.022 148.766 li
269.17 149.371 li
269.316 149.973 li
269.463 150.578 li
269.611 151.177 li
269.758 151.778 li
269.9 152.375 li
270.046 152.971 li
270.194 153.566 li
270.338 154.158 li
270.487 154.751 li
270.632 155.341 li
270.778 155.932 li
270.924 156.521 li
271.067 157.106 li
271.213 157.693 li
271.361 158.281 li
271.505 158.865 li
271.654 159.448 li
271.798 160.031 li
271.942 160.612 li
272.088 161.194 li
272.236 161.775 li
272.383 162.357 li
272.526 162.934 li
272.675 163.513 li
272.819 164.092 li
272.963 164.67 li
273.112 165.247 li
273.258 165.823 li
273.403 166.397 li
273.55 166.974 li
273.695 167.549 li
273.844 168.125 li
273.986 168.699 li
274.133 169.273 li
274.279 169.847 li
274.424 170.418 li
274.571 170.992 li
274.716 171.566 li
274.862 172.136 li
275.009 172.708 li
275.154 173.279 li
275.3 173.848 li
275.446 174.419 li
275.593 174.988 li
275.737 175.558 li
275.883 176.126 li
276.028 176.695 li
276.179 177.261 li
276.322 177.827 li
276.467 178.393 li
276.611 178.958 li
276.762 179.523 li
276.907 180.085 li
277.053 180.648 li
277.199 181.209 li
277.345 181.767 li
277.487 182.329 li
277.633 182.884 li
277.781 183.443 li
277.928 183.997 li
278.073 184.549 li
278.217 185.102 li
278.366 185.653 li
278.512 186.203 li
278.656 186.75 li
278.804 187.294 li
278.948 187.84 li
279.095 188.382 li
279.24 188.921 li
279.386 189.459 li
279.531 189.996 li
279.678 190.528 li
279.824 191.059 li
279.973 191.586 li
280.115 192.113 li
280.265 192.637 li
280.408 193.16 li
280.553 193.676 li
280.698 194.192 li
280.844 194.704 li
280.991 195.215 li
281.14 195.72 li
281.284 196.226 li
281.429 196.725 li
281.574 197.223 li
281.72 197.715 li
@
281.72 197.715 mo
281.869 198.207 li
282.012 198.694 li
282.161 199.176 li
282.307 199.658 li
282.449 200.132 li
282.597 200.605 li
282.743 201.074 li
282.89 201.539 li
283.036 202 li
283.182 202.458 li
283.328 202.911 li
283.473 203.357 li
283.616 203.803 li
283.764 204.243 li
283.908 204.68 li
284.056 205.112 li
284.199 205.54 li
284.347 205.962 li
284.494 206.382 li
284.638 206.796 li
284.786 207.208 li
284.932 207.613 li
285.078 208.014 li
285.224 208.415 li
285.369 208.806 li
285.514 209.194 li
285.661 209.576 li
285.806 209.957 li
285.953 210.331 li
286.098 210.702 li
286.243 211.067 li
286.391 211.428 li
286.536 211.783 li
286.685 212.136 li
286.824 212.481 li
286.973 212.824 li
287.119 213.161 li
287.266 213.496 li
287.412 213.825 li
287.558 214.147 li
287.703 214.468 li
287.849 214.787 li
287.994 215.093 li
288.14 215.401 li
288.286 215.704 li
288.435 216.002 li
288.581 216.294 li
288.725 216.581 li
288.872 216.866 li
289.016 217.147 li
289.161 217.422 li
289.31 217.693 li
289.457 217.96 li
289.602 218.224 li
289.744 218.482 li
289.891 218.738 li
290.039 218.988 li
290.183 219.235 li
290.324 219.475 li
290.477 219.714 li
290.62 219.951 li
290.766 220.182 li
290.916 220.407 li
291.062 220.63 li
291.203 220.849 li
291.354 221.065 li
291.498 221.277 li
291.644 221.486 li
291.79 221.691 li
291.933 221.891 li
292.082 222.088 li
292.225 222.281 li
292.375 222.474 li
292.522 222.661 li
292.665 222.843 li
292.811 223.024 li
292.954 223.203 li
293.103 223.377 li
293.248 223.547 li
293.396 223.714 li
293.54 223.88 li
293.687 224.042 li
293.831 224.201 li
293.978 224.357 li
294.12 224.512 li
294.27 224.662 li
294.417 224.81 li
294.563 224.954 li
294.706 225.096 li
294.853 225.236 li
294.998 225.374 li
295.145 225.508 li
295.292 225.642 li
295.438 225.772 li
295.584 225.899 li
295.731 226.023 li
295.877 226.147 li
296.02 226.267 li
296.164 226.386 li
296.312 226.502 li
@
296.312 226.502 mo
296.459 226.616 li
296.605 226.729 li
296.748 226.839 li
296.897 226.948 li
297.04 227.054 li
297.186 227.159 li
297.336 227.261 li
297.481 227.363 li
297.626 227.464 li
297.776 227.56 li
297.918 227.657 li
298.065 227.75 li
298.21 227.843 li
298.355 227.935 li
298.501 228.027 li
298.648 228.114 li
298.793 228.202 li
298.94 228.288 li
299.087 228.372 li
299.231 228.455 li
299.377 228.537 li
299.522 228.618 li
299.672 228.698 li
299.814 228.777 li
299.961 228.854 li
300.107 228.93 li
300.252 229.006 li
300.397 229.082 li
300.547 229.155 li
300.691 229.227 li
300.839 229.298 li
300.983 229.37 li
301.127 229.439 li
301.275 229.508 li
301.421 229.577 li
301.567 229.646 li
301.714 229.71 li
301.858 229.778 li
302.005 229.842 li
302.148 229.908 li
302.294 229.972 li
302.439 230.035 li
302.589 230.098 li
302.734 230.161 li
302.878 230.222 li
303.025 230.283 li
303.174 230.344 li
303.315 230.403 li
303.464 230.463 li
303.607 230.523 li
303.753 230.582 li
303.901 230.638 li
304.047 230.697 li
304.192 230.752 li
304.34 230.81 li
304.486 230.866 li
304.631 230.92 li
304.775 230.977 li
304.922 231.032 li
305.068 231.086 li
305.211 231.139 li
305.359 231.192 li
305.506 231.245 li
305.65 231.298 li
305.798 231.353 li
305.94 231.401 li
306.089 231.454 li
306.234 231.502 li
306.381 231.553 li
306.526 231.604 li
306.672 231.655 li
306.817 231.704 li
306.968 231.75 li
307.112 231.799 li
307.256 231.848 li
307.405 231.894 li
307.548 231.941 li
307.696 231.987 li
307.842 232.033 li
307.988 232.078 li
308.135 232.121 li
308.276 232.167 li
308.423 232.208 li
308.568 232.253 li
308.718 232.296 li
308.863 232.338 li
309.009 232.38 li
309.155 232.421 li
309.298 232.46 li
309.445 232.501 li
309.593 232.542 li
309.737 232.579 li
309.885 232.617 li
310.031 232.656 li
310.178 232.693 li
310.322 232.727 li
310.467 232.764 li
310.613 232.799 li
310.76 232.834 li
310.904 232.869 li
@
310.904 232.869 mo
311.05 232.901 li
311.197 232.935 li
311.342 232.967 li
311.489 232.998 li
311.634 233.03 li
311.783 233.06 li
311.926 233.088 li
312.071 233.121 li
312.217 233.15 li
312.367 233.177 li
312.508 233.204 li
312.656 233.231 li
312.801 233.257 li
312.947 233.285 li
313.095 233.307 li
313.239 233.333 li
313.387 233.356 li
313.53 233.377 li
313.676 233.402 li
313.823 233.426 li
313.967 233.447 li
314.117 233.467 li
314.262 233.487 li
314.408 233.507 li
314.554 233.528 li
314.699 233.546 li
314.843 233.565 li
314.99 233.583 li
315.137 233.599 li
315.284 233.616 li
315.428 233.631 li
315.575 233.648 li
315.719 233.662 li
315.864 233.677 li
316.012 233.693 li
316.158 233.707 li
316.303 233.719 li
316.454 233.733 li
316.597 233.746 li
316.739 233.757 li
316.889 233.769 li
317.036 233.779 li
317.182 233.79 li
317.325 233.802 li
317.475 233.81 li
317.618 233.82 li
317.763 233.831 li
317.906 233.838 li
318.055 233.848 li
318.203 233.855 li
318.347 233.865 li
318.494 233.871 li
318.638 233.879 li
318.784 233.887 li
318.929 233.891 li
319.078 233.9 li
319.224 233.907 li
319.369 233.911 li
319.517 233.916 li
319.658 233.921 li
319.805 233.927 li
319.95 233.933 li
320.097 233.938 li
320.245 233.944 li
320.391 233.947 li
320.536 233.953 li
320.684 233.955 li
320.825 233.958 li
320.971 233.962 li
321.119 233.966 li
321.267 233.969 li
321.412 233.97 li
321.555 233.975 li
321.704 233.979 li
321.847 233.98 li
321.994 233.983 li
322.14 233.985 li
322.289 233.989 li
322.433 233.989 li
322.578 233.991 li
322.726 233.993 li
322.871 233.995 li
323.017 233.998 li
323.161 233.998 li
323.309 233.999 li
323.453 234.001 li
323.6 234.003 li
323.746 234.003 li
323.892 234.005 li
324.037 234.007 li
324.184 234.007 li
324.332 234.007 li
324.478 234.009 li
324.62 234.011 li
324.771 234.012 li
324.912 234.012 li
325.059 234.012 li
325.204 234.013 li
325.351 234.013 li
325.496 234.016 li
@
325.496 234.016 mo
325.646 234.016 li
@
160.826 239.659 mo
160.826 82.958 li
@
160.826 239.968 mo
340.166 239.968 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIQ+MyriadPro-Regular*1 [17.6639 0 0 -17.6639 0 0 ]msf245.757 83.7729 mo(B)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.395 182.778 mo(F)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.395 178.432 mo(r)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.395 175.45 mo(equen)[-4.71289 -5.2959 -5.18262 -4.71289 0 ]yshWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.395 150.325 mo(c)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.395 145.942 mo(y)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.396 56.0142 mo(F)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.396 51.6685 mo(r)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.396 48.6865 mo(equen)[-4.7124 -5.29541 -5.18262 -4.7124 0 ]yshWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.396 23.5635 mo(c)shWBXRIQ+MyriadPro-Regular*1 [0 -9.40625 -9.40625 0 0 0 ]msf157.396 19.1802 mo(y)sh30.4873 234.286 mo
31.3755 87.8467 li
31.5659 87.9927 li
31.7549 88.147 li
31.9478 88.3237 li
32.1372 88.5171 li
32.3306 88.7197 li
32.5176 88.9414 li
32.7065 89.1768 li
32.8999 89.4321 li
33.0879 89.6963 li
33.2793 89.9707 li
33.4727 90.269 li
33.6582 90.5786 li
33.8506 90.8994 li
34.043 91.231 li
34.229 91.5815 li
34.4243 91.9438 li
34.6157 92.3159 li
34.8032 92.7012 li
34.9985 93.0996 li
35.1846 93.5107 li
35.376 93.9336 li
35.5703 94.3638 li
35.7559 94.8105 li
35.9434 95.2656 li
36.1396 95.73 li
36.3257 96.2041 li
36.5171 96.6895 li
36.708 97.1846 li
36.9014 97.6899 li
37.0884 98.2007 li
37.2837 98.7251 li
37.4697 99.2568 li
37.6597 99.7939 li
37.853 100.344 li
38.043 100.898 li
38.2314 101.461 li
38.4214 102.029 li
38.6113 102.604 li
38.8008 103.188 li
38.9951 103.778 li
39.1831 104.375 li
39.373 104.974 li
39.5654 105.58 li
39.7563 106.194 li
39.9429 106.81 li
40.1353 107.429 li
40.3247 108.059 li
40.521 108.688 li
40.7061 109.322 li
40.8936 109.96 li
41.0879 110.602 li
41.2788 111.244 li
41.4688 111.894 li
41.6582 112.544 li
41.8452 113.199 li
42.0415 113.851 li
42.2339 114.511 li
42.4175 115.171 li
42.6099 115.833 li
42.8032 116.496 li
42.9907 117.16 li
43.188 117.826 li
43.3735 118.491 li
43.561 119.16 li
43.7568 119.83 li
43.9395 120.496 li
44.1353 121.164 li
44.3262 121.834 li
44.519 122.503 li
44.7056 123.173 li
44.8945 123.843 li
45.0874 124.509 li
45.2769 125.179 li
45.4668 125.846 li
45.6606 126.513 li
45.8462 127.179 li
46.0391 127.843 li
46.23 128.508 li
46.4204 129.168 li
46.6094 129.829 li
46.8022 130.489 li
46.9907 131.144 li
47.1777 131.802 li
47.3726 132.458 li
47.5591 133.109 li
47.7539 133.763 li
47.9429 134.409 li
48.1353 135.057 li
48.3242 135.701 li
48.5107 136.346 li
48.7056 136.99 li
48.8984 137.63 li
49.0811 138.266 li
49.2778 138.901 li
49.4697 139.537 li
49.6606 140.166 li
49.8481 140.795 li
50.0381 141.423 li
50.2285 142.048 li
0.858823 0.85098 0.788235 1 cmyk
@
50.2285 142.048 mo
50.4248 142.673 li
50.6104 143.294 li
50.7979 143.91 li
50.9927 144.531 li
51.1777 145.142 li
51.3735 145.759 li
51.561 146.37 li
51.7539 146.976 li
51.9448 147.583 li
52.1333 148.19 li
52.3242 148.791 li
52.5127 149.394 li
52.7026 149.993 li
52.8945 150.591 li
53.082 151.189 li
53.2739 151.784 li
53.4648 152.375 li
53.6572 152.969 li
53.8433 153.557 li
54.0371 154.148 li
54.2266 154.735 li
54.4136 155.317 li
54.6094 155.907 li
54.7979 156.486 li
54.9868 157.069 li
55.1787 157.653 li
55.3711 158.231 li
55.5571 158.812 li
55.7485 159.39 li
55.9424 159.966 li
56.1274 160.544 li
56.3223 161.117 li
56.5127 161.693 li
56.7007 162.265 li
56.8945 162.84 li
57.082 163.417 li
57.2769 163.986 li
57.4658 164.558 li
57.6553 165.128 li
57.8462 165.698 li
58.0347 166.27 li
58.2285 166.84 li
58.4185 167.404 li
58.6069 167.974 li
58.8018 168.544 li
58.9907 169.109 li
59.1797 169.677 li
59.3701 170.244 li
59.561 170.809 li
59.7495 171.377 li
59.9404 171.943 li
60.1323 172.508 li
60.3179 173.074 li
60.5098 173.638 li
60.7017 174.201 li
60.8921 174.765 li
61.0791 175.329 li
61.2749 175.887 li
61.4624 176.454 li
61.6514 177.013 li
61.8442 177.574 li
62.0317 178.132 li
62.2236 178.692 li
62.4131 179.251 li
62.603 179.81 li
62.7939 180.368 li
62.9868 180.922 li
63.1763 181.478 li
63.3682 182.032 li
63.564 182.582 li
63.7456 183.136 li
63.9355 183.686 li
64.1289 184.236 li
64.3159 184.786 li
64.5127 185.328 li
64.6982 185.875 li
64.8901 186.421 li
65.0811 186.962 li
65.2715 187.5 li
65.4634 188.04 li
65.6533 188.579 li
65.8418 189.115 li
66.0366 189.649 li
66.2256 190.177 li
66.4121 190.707 li
66.605 191.234 li
66.7979 191.757 li
66.9834 192.279 li
67.1812 192.8 li
67.3672 193.317 li
67.5601 193.833 li
67.7495 194.343 li
67.9365 194.854 li
68.1289 195.359 li
68.3169 195.862 li
68.5117 196.36 li
68.6982 196.859 li
68.8872 197.354 li
69.0801 197.843 li
69.2686 198.333 li
@
69.2686 198.333 mo
69.4604 198.818 li
69.6489 199.298 li
69.8398 199.775 li
70.0337 200.248 li
70.2202 200.72 li
70.4111 201.181 li
70.6069 201.648 li
70.7949 202.107 li
70.9824 202.563 li
71.1782 203.012 li
71.3682 203.463 li
71.5547 203.901 li
71.7485 204.341 li
71.9351 204.778 li
72.1323 205.208 li
72.3208 205.636 li
72.5005 206.056 li
72.7012 206.476 li
72.8892 206.891 li
73.0801 207.296 li
73.2705 207.704 li
73.4644 208.106 li
73.6514 208.5 li
73.8389 208.895 li
74.0327 209.284 li
74.2202 209.665 li
74.417 210.045 li
74.6021 210.417 li
74.7949 210.791 li
74.9834 211.156 li
75.1743 211.516 li
75.3638 211.871 li
75.5527 212.221 li
75.7456 212.573 li
75.9331 212.914 li
76.124 213.252 li
76.3159 213.585 li
76.5054 213.914 li
76.6943 214.239 li
76.8882 214.56 li
77.0757 214.875 li
77.2695 215.188 li
77.4561 215.495 li
77.647 215.793 li
77.8369 216.093 li
78.0283 216.39 li
78.2192 216.676 li
78.4048 216.962 li
78.6006 217.245 li
78.7915 217.519 li
78.9834 217.794 li
79.1719 218.058 li
79.3691 218.324 li
79.5537 218.583 li
79.7412 218.839 li
79.936 219.092 li
80.124 219.338 li
80.3179 219.581 li
80.5044 219.82 li
80.6982 220.053 li
80.8857 220.289 li
81.0815 220.519 li
81.2686 220.739 li
81.4595 220.958 li
81.647 221.179 li
81.8389 221.39 li
82.0303 221.598 li
82.2212 221.802 li
82.4092 222.003 li
82.5986 222.206 li
82.7896 222.397 li
82.9814 222.589 li
83.1719 222.779 li
83.3579 222.965 li
83.5508 223.141 li
83.7432 223.323 li
83.9341 223.498 li
84.123 223.672 li
84.3188 223.839 li
84.5024 224.004 li
84.6919 224.167 li
84.8877 224.327 li
85.0718 224.484 li
85.2656 224.637 li
85.4561 224.792 li
85.6431 224.941 li
85.8345 225.087 li
86.0264 225.227 li
86.2192 225.37 li
86.4121 225.507 li
86.5967 225.642 li
86.7915 225.778 li
86.9834 225.908 li
87.1738 226.038 li
87.3618 226.164 li
87.5527 226.285 li
87.7422 226.407 li
87.9351 226.527 li
88.124 226.642 li
88.3086 226.757 li
@
88.3086 226.757 mo
88.5044 226.872 li
88.6953 226.981 li
88.8867 227.088 li
89.0757 227.197 li
89.2651 227.302 li
89.4561 227.408 li
89.646 227.507 li
89.8389 227.606 li
90.0273 227.706 li
90.2183 227.801 li
90.4087 227.9 li
90.5938 227.991 li
90.7886 228.083 li
90.9751 228.174 li
91.1699 228.262 li
91.3574 228.347 li
91.5513 228.437 li
91.7383 228.522 li
91.9277 228.602 li
92.1226 228.686 li
92.3076 228.766 li
92.5024 228.846 li
92.6929 228.926 li
92.8789 229.003 li
93.0757 229.082 li
93.2612 229.154 li
93.4531 229.23 li
93.6436 229.303 li
93.8384 229.375 li
94.0264 229.447 li
94.2119 229.521 li
94.4058 229.589 li
94.5986 229.656 li
94.7886 229.727 li
94.98 229.794 li
95.1709 229.861 li
95.3584 229.926 li
95.5464 229.991 li
95.7393 230.056 li
95.9287 230.121 li
96.1235 230.186 li
96.3115 230.247 li
96.5 230.307 li
96.6948 230.372 li
96.8809 230.431 li
97.0747 230.492 li
97.2642 230.551 li
97.4521 230.609 li
97.6426 230.668 li
97.8325 230.73 li
98.0283 230.786 li
98.2119 230.843 li
98.4038 230.901 li
98.5947 230.956 li
98.7861 231.013 li
98.9731 231.067 li
99.1626 231.122 li
99.3555 231.176 li
99.5483 231.231 li
99.7393 231.284 li
99.9258 231.336 li
100.124 231.391 li
100.312 231.442 li
100.497 231.495 li
100.693 231.549 li
100.878 231.596 li
101.072 231.647 li
101.264 231.696 li
101.449 231.747 li
101.641 231.795 li
101.834 231.845 li
102.023 231.893 li
102.217 231.94 li
102.405 231.991 li
102.597 232.036 li
102.789 232.082 li
102.98 232.13 li
103.166 232.175 li
103.356 232.219 li
103.547 232.266 li
103.739 232.306 li
103.93 232.351 li
104.116 232.396 li
104.308 232.435 li
104.5 232.48 li
104.692 232.519 li
104.878 232.561 li
105.068 232.601 li
105.26 232.64 li
105.451 232.68 li
105.643 232.72 li
105.831 232.758 li
106.022 232.795 li
106.211 232.836 li
106.4 232.871 li
106.592 232.905 li
106.781 232.94 li
106.975 232.975 li
107.168 233.01 li
107.356 233.046 li
@
107.356 233.046 mo
107.542 233.076 li
107.737 233.111 li
107.928 233.14 li
108.117 233.173 li
108.307 233.204 li
108.498 233.236 li
108.69 233.262 li
108.883 233.291 li
109.066 233.321 li
109.259 233.349 li
109.452 233.375 li
109.642 233.402 li
109.832 233.428 li
110.024 233.455 li
110.214 233.475 li
110.401 233.502 li
110.596 233.526 li
110.782 233.55 li
110.975 233.571 li
111.166 233.595 li
111.358 233.616 li
111.545 233.635 li
111.734 233.654 li
111.927 233.678 li
112.114 233.697 li
112.309 233.714 li
112.495 233.733 li
112.686 233.751 li
112.878 233.765 li
113.069 233.78 li
113.257 233.798 li
113.448 233.816 li
113.638 233.829 li
113.827 233.84 li
114.018 233.859 li
114.21 233.871 li
114.398 233.882 li
114.585 233.895 li
114.781 233.911 li
114.971 233.926 li
115.161 233.933 li
115.354 233.945 li
115.545 233.957 li
115.73 233.965 li
115.928 233.977 li
116.113 233.985 li
116.304 233.996 li
116.5 234.005 li
116.685 234.01 li
116.878 234.021 li
117.067 234.027 li
117.253 234.035 li
117.449 234.042 li
117.639 234.047 li
117.829 234.056 li
118.018 234.064 li
118.211 234.07 li
118.399 234.075 li
118.592 234.078 li
118.78 234.085 li
118.971 234.09 li
119.162 234.094 li
119.354 234.1 li
119.545 234.104 li
119.729 234.109 li
119.923 234.111 li
120.115 234.116 li
120.303 234.121 li
120.493 234.123 li
120.686 234.127 li
120.872 234.129 li
121.066 234.133 li
121.253 234.135 li
121.446 234.141 li
121.634 234.141 li
121.822 234.145 li
122.015 234.145 li
122.214 234.151 li
122.397 234.153 li
122.589 234.155 li
122.783 234.155 li
122.968 234.155 li
123.162 234.159 li
123.352 234.159 li
123.541 234.161 li
123.738 234.164 li
123.923 234.167 li
124.114 234.167 li
124.303 234.167 li
124.489 234.167 li
124.687 234.169 li
124.876 234.169 li
125.07 234.169 li
125.257 234.172 li
125.445 234.175 li
125.637 234.175 li
125.825 234.175 li
126.015 234.175 li
126.207 234.175 li
126.398 234.175 li
@
126.398 234.175 mo
126.587 234.177 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIQ+MyriadPro-Regular*1 [17.6639 0 0 -17.6639 0 0 ]msf26.106 85.2661 mo(A)sh323.888 233.871 mo
324.06 233.881 li
324.234 233.893 li
324.407 233.902 li
324.578 233.912 li
324.754 233.921 li
324.926 233.933 li
325.102 233.94 li
325.277 233.953 li
325.444 233.962 li
325.621 233.972 li
325.796 233.979 li
325.968 233.989 li
326.139 233.996 li
326.314 234.005 li
326.486 234.01 li
326.656 234.021 li
326.834 234.03 li
327.004 234.036 li
327.179 234.042 li
327.35 234.051 li
327.521 234.058 li
327.698 234.067 li
327.868 234.07 li
328.044 234.078 li
328.212 234.083 li
328.392 234.091 li
328.56 234.094 li
328.736 234.101 li
328.911 234.108 li
329.082 234.113 li
329.255 234.117 li
329.426 234.123 li
329.602 234.125 li
329.771 234.129 li
329.942 234.135 li
330.12 234.14 li
330.289 234.145 li
330.461 234.151 li
330.638 234.153 li
330.815 234.157 li
330.983 234.162 li
331.161 234.164 li
331.331 234.169 li
331.498 234.171 li
331.679 234.173 li
331.851 234.179 li
332.026 234.181 li
332.202 234.183 li
332.369 234.188 li
332.545 234.19 li
332.717 234.192 li
332.888 234.195 li
333.064 234.195 li
333.24 234.198 li
333.412 234.2 li
333.582 234.203 li
333.759 234.206 li
333.93 234.206 li
334.105 234.208 li
334.271 234.21 li
334.448 234.214 li
334.617 234.214 li
334.796 234.215 li
334.973 234.218 li
335.137 234.218 li
335.313 234.218 li
335.484 234.221 li
335.66 234.221 li
335.832 234.221 li
336.003 234.223 li
336.18 234.226 li
336.351 234.226 li
336.526 234.226 li
336.698 234.229 li
336.869 234.229 li
337.041 234.231 li
337.217 234.231 li
337.394 234.231 li
337.564 234.231 li
337.735 234.234 li
337.911 234.234 li
338.082 234.234 li
338.259 234.234 li
338.431 234.234 li
338.605 234.234 li
338.778 234.237 li
338.947 234.237 li
339.122 234.237 li
339.294 234.237 li
339.466 234.237 li
339.641 234.239 li
339.816 234.239 li
339.99 234.239 li
340.16 234.239 li
340.336 234.239 li
340.508 234.239 li
340.68 234.239 li
340.851 234.239 li
341.03 234.239 li
341.198 234.239 li
0.858823 0.85098 0.788235 1 cmyk
@
341.198 234.239 mo
341.374 234.242 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: MyriadPro-Bold Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Bold def/FontInfo 7 dict dup begin/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def/Weight (Bold) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 121 /y putdef/FontBBox {-163 -250 1256 989} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 489 500 650 661 711 721 242 248] def/OtherBlues [438 443 260 266 -209 -198 -153 -147 -127 -120] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [112] def/StdVW [152] def/StemSnapH [112] def/StemSnapV [152 161] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/parenleft <1C60D8A8C9B830DBD04DF69CE04655A35C01D6FEEB1AB5429F10EAF2A77F38C1EC4DD8101E42880B1B13902388D9A5818DCBEB92F6B4F367D7173E6DD05C> |-/parenright <1C60D8A8C9B830DBD04DF69CE0764A4A50D1FCDEAF66BA536984A0BF57310D24331CC1494FDCF29908F287A133A88208BEE616714C632A587EA8CF4EE2274E> |-/y <1C60D8A8C9B7B07F0BB44E341970E343D9CADF3339ADC30CA1B27F9C4503CABE459C32DD3D76D51C1B63499603C4AF1266550CD6F2C01EEA4A9FB245944E4590044FACB58BA7BA710148605DB61A6A63D013E0A78A59CADD1B1D581B111E6DB756219B76AA8667F44946> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WBXRIS+MyriadPro-Bold /MyriadPro-Bold findfont ct_VMDictPut/WBXRIS+MyriadPro-Bold*1 [40{/.notdef}rp /parenleft /parenright 79{/.notdef}rp /y 134{/.notdef}rp]WBXRIS+MyriadPro-Bold nfWBXRIS+MyriadPro-Bold*1 [5.31362 0 0 -5.31362 0 0 ]msf93.0142 10.3208 mo(\(y\))[1.66846 2.77881 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Bold AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWBXRIS+MyriadPro-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/x <1C60D8A8C9B7B4A1684D51786DE0F452C1BFBC9C0D4979C900CD10160EADAEB1F830BF74353A2C1839ABD05D0BAAE50CF30380F1C41089C40B7125E2BEC3BCCCB1A29051C1CF4D6F7134D938F08F1AC7C3B400C6AEEA518E647A6168E119436CFD1167C0AC2E> |-systemdict /gcheck known {setglobal} if end {end} ifendWBXRIS+MyriadPro-Bold /Encoding getdup 120 /x putpop%ADOEndSubsetFont
/WBXRIS+MyriadPro-Bold*1 [40{/.notdef}rp /parenleft /parenright 78{/.notdef}rp /x /y 134{/.notdef}rp]WBXRIS+MyriadPro-Bold nfWBXRIS+MyriadPro-Bold*1 [5.31362 0 0 -5.31362 0 0 ]msf21.731 10.6147 mo(\(x\))[1.66846 2.75781 0 ]xshWBXRIS+MyriadPro-Bold*1 [5.31362 0 0 -5.31362 0 0 ]msf191.206 10.6797 mo(\(x\))[1.66797 2.75781 0 ]xshWBXRIS+MyriadPro-Bold*1 [5.31362 0 0 -5.31362 0 0 ]msf253.082 10.7832 mo(\(y\))[1.66797 2.7793 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf35.0347 87.6577 mo(\(x\))[2.3833 3.93945 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf73.02 87.9077 mo(\(y\))[2.3833 3.97021 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf254.172 86.8813 mo(\(x\))[2.38379 3.93945 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf62.105 271.858 mo(\(x\))[2.3833 3.93945 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf81.8716 272.109 mo(\(y\))[2.3833 3.97021 0 ]xsh1 lw
0 lj
4 ml
250.563 234.939 mo
250.563 257.366 li
0.760784 0.756863 0.623529 0.811765 cmyk
@
251.943 256.515 mo
250.59 259.147 li
249.237 256.515 li
0.858823 0.85098 0.788235 1 cmyk
f
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIR+MyriadPro-It*1 [13.9684 0 0 -13.9684 0 0 ]msf221.825 270.116 mo(BC)[7.25 0 ]xshWBXRIQ+MyriadPro-Regular*1 [13.9684 0 0 -13.9684 0 0 ]msf236.828 270.116 mo(\(B   ,B   \))[3.9668 7.57031 2.96094 2.96094 2.96094 2.8916 7.57031 2.96094 2.96094 2.96094 0 ]xshWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf248.843 272.116 mo(\(x\))[2.38379 3.93945 0 ]xsh268.609 272.367 mo(\(y\))[2.38379 3.96973 0 ]xshWBXRIQ+MyriadPro-Regular*1 [9.31232 0 0 -9.31232 0 0 ]msf18.2666 65.3774 mo(T)sh22.2334 65.3774 mo(opolo)[5.1123 5.29834 5.1123 2.19775 0 ]xsh45.0664 65.3774 mo(g)sh50.2256 65.3774 mo(ical simila)[2.1792 4.17188 4.48828 2.19775 1.97412 3.6875 2.1792 7.7666 2.1792 2.19775 0 ]xsh87.7354 65.3774 mo(r)sh90.8174 65.3774 mo(i)sh92.9966 65.3774 mo(t)sh96.1533 65.3774 mo(y)sh177.324 64.9956 mo(T)sh181.291 64.9956 mo(opolo)[5.1123 5.29883 5.1123 2.19727 0 ]xsh204.124 64.9956 mo(g)sh209.282 64.9956 mo(ical simila)[2.17871 4.17188 4.48828 2.19727 1.97363 3.6875 2.17871 7.7666 2.17871 2.19727 0 ]xsh246.789 64.9956 mo(r)sh249.862 64.9956 mo(i)sh252.041 64.9956 mo(t)sh255.197 64.9956 mo(y)sh0.75 lw
1 lj
10 ml
251.345 54.3506 mo
251.367 54.3506 li
251.394 54.3506 li
251.418 54.3506 li
251.443 54.3496 li
251.466 54.3496 li
251.491 54.3496 li
251.516 54.3496 li
251.54 54.3496 li
251.566 54.3496 li
251.59 54.3496 li
251.615 54.3496 li
251.638 54.3496 li
251.663 54.3496 li
251.688 54.3496 li
251.712 54.3477 li
251.737 54.3477 li
251.761 54.3477 li
251.785 54.3477 li
251.811 54.3467 li
251.836 54.3467 li
251.859 54.3457 li
251.885 54.3457 li
251.908 54.3457 li
251.934 54.3457 li
251.959 54.3447 li
251.982 54.3433 li
252.008 54.3433 li
252.031 54.3433 li
252.057 54.3433 li
252.08 54.3433 li
252.104 54.3413 li
252.129 54.3413 li
252.154 54.3398 li
252.178 54.3398 li
252.203 54.3389 li
252.229 54.3389 li
252.252 54.3369 li
252.276 54.3369 li
252.301 54.335 li
252.326 54.335 li
252.35 54.335 li
252.375 54.332 li
252.399 54.332 li
252.425 54.3311 li
252.449 54.3311 li
252.474 54.3286 li
252.497 54.3286 li
252.521 54.3276 li
252.547 54.3276 li
252.57 54.3257 li
252.596 54.3237 li
252.621 54.3237 li
252.645 54.3218 li
252.67 54.3193 li
252.694 54.3184 li
252.718 54.3169 li
252.744 54.3149 li
252.768 54.313 li
252.793 54.311 li
252.817 54.3091 li
252.842 54.3071 li
252.866 54.3052 li
252.892 54.3027 li
252.915 54.3008 li
252.94 54.2988 li
252.966 54.2964 li
252.989 54.2944 li
253.013 54.2915 li
253.037 54.2891 li
253.063 54.2861 li
253.086 54.2852 li
253.111 54.2822 li
253.137 54.2793 li
253.161 54.2764 li
253.185 54.2725 li
253.21 54.2686 li
253.235 54.2666 li
253.26 54.2622 li
253.284 54.2593 li
253.31 54.2563 li
253.333 54.2495 li
253.356 54.2476 li
253.382 54.2437 li
253.405 54.2407 li
253.431 54.2363 li
253.456 54.2319 li
253.479 54.2271 li
253.505 54.2227 li
253.528 54.2178 li
253.554 54.2124 li
253.577 54.208 li
253.603 54.2031 li
253.628 54.1987 li
253.651 54.1938 li
253.677 54.187 li
253.701 54.1831 li
253.727 54.1772 li
253.752 54.1709 li
253.775 54.1646 li
0.858823 0.85098 0.788235 1 cmyk
@
253.775 54.165 mo
253.8 54.1587 li
253.824 54.1523 li
253.85 54.146 li
253.872 54.1411 li
253.897 54.1338 li
253.921 54.1265 li
253.946 54.1182 li
253.972 54.1123 li
253.996 54.1035 li
254.021 54.0977 li
254.044 54.0903 li
254.069 54.0815 li
254.094 54.0737 li
254.118 54.0649 li
254.144 54.0566 li
254.168 54.0488 li
254.191 54.0391 li
254.217 54.0308 li
254.242 54.0215 li
254.267 54.0132 li
254.291 54.0039 li
254.313 53.9946 li
254.339 53.9834 li
254.362 53.9736 li
254.388 53.9644 li
254.412 53.9526 li
254.438 53.9429 li
254.461 53.9321 li
254.486 53.9209 li
254.512 53.9102 li
254.536 53.8989 li
254.561 53.8862 li
254.586 53.8755 li
254.609 53.8628 li
254.635 53.8501 li
254.658 53.8389 li
254.684 53.8262 li
254.709 53.812 li
254.733 53.7993 li
254.756 53.7856 li
254.781 53.771 li
254.806 53.7563 li
254.83 53.7456 li
254.854 53.7285 li
254.88 53.7139 li
254.904 53.6982 li
254.93 53.6841 li
254.953 53.667 li
254.978 53.6514 li
255.003 53.6353 li
255.028 53.6196 li
255.053 53.603 li
255.076 53.585 li
255.1 53.5684 li
255.125 53.5498 li
255.149 53.5322 li
255.175 53.5127 li
255.197 53.4946 li
255.223 53.4761 li
255.248 53.4561 li
255.272 53.4375 li
255.298 53.4155 li
255.321 53.396 li
255.346 53.3755 li
255.369 53.3545 li
255.395 53.333 li
255.42 53.311 li
255.444 53.2881 li
255.47 53.2661 li
255.493 53.2412 li
255.519 53.2183 li
255.543 53.1943 li
255.568 53.1685 li
255.592 53.1455 li
255.616 53.1196 li
255.642 53.0933 li
255.664 53.0664 li
255.689 53.0405 li
255.714 53.0127 li
255.739 52.9858 li
255.765 52.9575 li
255.789 52.9272 li
255.813 52.8984 li
255.837 52.8682 li
255.862 52.8384 li
255.886 52.8066 li
255.911 52.7759 li
255.935 52.7432 li
255.96 52.7124 li
255.985 52.6777 li
256.01 52.645 li
256.033 52.6104 li
256.059 52.5767 li
256.084 52.541 li
256.106 52.5044 li
256.131 52.4683 li
256.155 52.4316 li
256.181 52.3931 li
256.204 52.3545 li
256.229 52.3169 li
@
256.229 52.3159 mo
256.254 52.2764 li
256.279 52.2358 li
256.305 52.1953 li
256.328 52.1538 li
256.354 52.1118 li
256.376 52.0698 li
256.401 52.0264 li
256.427 51.9829 li
256.451 51.9375 li
256.477 51.8921 li
256.5 51.8462 li
256.525 51.7988 li
256.55 51.752 li
256.574 51.7041 li
256.597 51.6538 li
256.622 51.6055 li
256.647 51.5557 li
256.671 51.5068 li
256.696 51.4536 li
256.721 51.4019 li
256.746 51.3477 li
256.771 51.2959 li
256.795 51.2407 li
256.82 51.1855 li
256.845 51.1304 li
256.869 51.0737 li
256.893 51.0161 li
256.918 50.958 li
256.941 50.8999 li
256.966 50.8398 li
256.991 50.7793 li
257.016 50.7192 li
257.041 50.6567 li
257.064 50.5942 li
257.088 50.5313 li
257.113 50.4678 li
257.138 50.4023 li
257.162 50.3379 li
257.188 50.2705 li
257.211 50.2036 li
257.236 50.1362 li
257.261 50.0674 li
257.286 49.998 li
257.31 49.9277 li
257.334 49.8564 li
257.36 49.7827 li
257.384 49.7124 li
257.407 49.6372 li
257.432 49.564 li
257.457 49.4868 li
257.48 49.4111 li
257.506 49.335 li
257.531 49.2563 li
257.556 49.1772 li
257.581 49.0972 li
257.604 49.0161 li
257.63 48.9351 li
257.654 48.8521 li
257.678 48.7686 li
257.703 48.6836 li
257.728 48.5981 li
257.753 48.5112 li
257.776 48.4238 li
257.802 48.3354 li
257.826 48.2451 li
257.852 48.1538 li
257.875 48.0645 li
257.899 47.9707 li
257.924 47.8774 li
257.947 47.7827 li
257.973 47.686 li
257.997 47.5889 li
258.022 47.4917 li
258.046 47.3906 li
258.071 47.2915 li
258.097 47.1895 li
258.12 47.0864 li
258.146 46.9819 li
258.169 46.8779 li
258.194 46.771 li
258.218 46.6626 li
258.243 46.5537 li
258.269 46.4458 li
258.293 46.3325 li
258.318 46.2197 li
258.341 46.1055 li
258.366 45.9907 li
258.392 45.875 li
258.415 45.7568 li
258.439 45.6367 li
258.464 45.5176 li
258.489 45.396 li
258.513 45.2734 li
258.538 45.1489 li
258.563 45.0229 li
258.588 44.896 li
258.612 44.7661 li
258.637 44.6372 li
258.66 44.5063 li
258.685 44.3745 li
@
258.685 44.375 mo
258.71 44.2412 li
258.734 44.1045 li
258.759 43.9688 li
258.782 43.8315 li
258.808 43.6914 li
258.832 43.5513 li
258.856 43.4087 li
258.881 43.2656 li
258.906 43.1211 li
258.932 42.9741 li
258.954 42.8267 li
258.979 42.6787 li
259.004 42.5288 li
259.029 42.377 li
259.053 42.2246 li
259.078 42.0693 li
259.102 41.9155 li
259.127 41.7588 li
259.152 41.6011 li
259.177 41.4404 li
259.2 41.2798 li
259.224 41.1172 li
259.249 40.9556 li
259.273 40.791 li
259.299 40.6255 li
259.324 40.458 li
259.348 40.2896 li
259.373 40.1211 li
259.396 39.9512 li
259.422 39.7793 li
259.447 39.606 li
259.471 39.4326 li
259.496 39.2568 li
259.52 39.0811 li
259.545 38.9033 li
259.569 38.7266 li
259.595 38.5474 li
259.618 38.3662 li
259.644 38.1855 li
259.669 38.0029 li
259.691 37.8208 li
259.717 37.6357 li
259.74 37.4507 li
259.766 37.2651 li
259.789 37.0776 li
259.814 36.8906 li
259.839 36.7017 li
259.864 36.5127 li
259.889 36.3223 li
259.913 36.1313 li
259.938 35.939 li
259.962 35.7456 li
259.986 35.5532 li
260.011 35.3579 li
260.036 35.1636 li
260.06 34.9673 li
260.085 34.772 li
260.108 34.5747 li
260.133 34.3765 li
260.158 34.1787 li
260.183 33.9805 li
260.208 33.7798 li
260.232 33.5781 li
260.256 33.3799 li
260.281 33.1772 li
260.306 32.9731 li
260.331 32.7729 li
260.356 32.5693 li
260.38 32.3647 li
260.403 32.1602 li
260.429 31.9551 li
260.453 31.7505 li
260.479 31.5425 li
260.503 31.3384 li
260.526 31.1304 li
260.551 30.9224 li
260.575 30.7148 li
260.601 30.5059 li
260.624 30.2974 li
260.649 30.0859 li
260.673 29.877 li
260.698 29.666 li
260.724 29.4556 li
260.748 29.2432 li
260.772 29.0293 li
260.796 28.8174 li
260.821 28.603 li
260.846 28.3892 li
260.871 28.1763 li
260.895 27.9614 li
260.92 27.7461 li
260.945 27.5313 li
260.969 27.314 li
260.992 27.0977 li
261.017 26.8794 li
261.042 26.6626 li
261.067 26.4453 li
261.091 26.2261 li
261.114 26.0063 li
261.14 25.7871 li
@
261.14 25.7876 mo
261.164 25.5674 li
261.189 25.3472 li
261.215 25.126 li
261.238 24.9058 li
261.264 24.6841 li
261.287 24.4629 li
261.313 24.2417 li
261.338 24.0181 li
261.361 23.7949 li
261.387 23.5737 li
261.412 23.3501 li
261.435 23.127 li
261.459 22.9043 li
261.484 22.6812 li
261.508 22.4575 li
261.532 22.2344 li
261.558 22.0112 li
261.582 21.7871 li
261.607 21.564 li
261.631 21.3408 li
261.656 21.1162 li
261.681 20.895 li
261.705 20.6719 li
261.73 20.4507 li
261.755 20.229 li
261.779 20.0073 li
261.803 19.7886 li
261.828 19.5684 li
261.854 19.3491 li
261.878 19.1294 li
261.9 18.9131 li
261.926 18.6973 li
261.949 18.48 li
261.975 18.2671 li
262 18.0542 li
262.024 17.8423 li
262.049 17.6289 li
262.074 17.4214 li
262.098 17.2144 li
262.123 17.0088 li
262.146 16.8042 li
262.172 16.6016 li
262.196 16.4019 li
262.222 16.2026 li
262.245 16.0073 li
262.271 15.8105 li
262.295 15.6206 li
262.319 15.4307 li
262.344 15.2446 li
262.367 15.0605 li
262.393 14.8779 li
262.417 14.6992 li
262.441 14.5234 li
262.467 14.3501 li
262.491 14.1807 li
262.517 14.0132 li
262.54 13.8516 li
262.564 13.6899 li
262.59 13.5342 li
262.614 13.3813 li
262.638 13.2319 li
262.663 13.0854 li
262.688 12.9443 li
262.712 12.8057 li
262.736 12.6719 li
262.763 12.542 li
262.784 12.416 li
262.81 12.2969 li
262.834 12.1782 li
262.858 12.0649 li
262.883 11.9561 li
262.907 11.854 li
262.933 11.7544 li
262.956 11.6587 li
262.981 11.5674 li
263.006 11.4839 li
263.031 11.4033 li
263.057 11.3262 li
263.08 11.2559 li
263.104 11.1904 li
263.128 11.1289 li
263.154 11.0728 li
263.179 11.02 li
263.203 10.9741 li
263.228 10.9336 li
263.251 10.897 li
263.276 10.8662 li
263.302 10.8394 li
263.326 10.8193 li
263.351 10.8008 li
263.374 10.7881 li
263.399 10.7847 li
263.423 10.7827 li
263.448 10.7861 li
263.473 10.7939 li
263.499 10.8086 li
263.523 10.8276 li
263.547 10.8506 li
263.572 10.8774 li
263.596 10.9126 li
@
263.596 10.9121 mo
263.621 10.9507 li
263.645 10.9937 li
263.669 11.04 li
263.692 11.0928 li
263.718 11.1479 li
263.743 11.2085 li
263.768 11.2749 li
263.791 11.3457 li
263.816 11.4194 li
263.842 11.498 li
263.865 11.5815 li
263.89 11.6699 li
263.914 11.7603 li
263.939 11.856 li
263.964 11.9546 li
263.988 12.0571 li
264.014 12.1655 li
264.038 12.2764 li
264.063 12.3896 li
264.089 12.5083 li
264.11 12.6284 li
264.134 12.7544 li
264.159 12.8823 li
264.185 13.0142 li
264.209 13.1504 li
264.234 13.2886 li
264.258 13.4287 li
264.283 13.5732 li
264.309 13.7197 li
264.333 13.8696 li
264.356 14.0215 li
264.381 14.1782 li
264.406 14.334 li
264.43 14.4941 li
264.455 14.6572 li
264.479 14.8223 li
264.505 14.9873 li
264.528 15.1567 li
264.554 15.3271 li
264.577 15.5005 li
264.603 15.6753 li
264.626 15.8521 li
264.65 16.0303 li
264.676 16.2095 li
264.7 16.3911 li
264.725 16.5742 li
264.749 16.7578 li
264.774 16.9453 li
264.8 17.1318 li
264.823 17.3203 li
264.849 17.5093 li
264.873 17.6987 li
264.896 17.8892 li
264.921 18.0815 li
264.946 18.2749 li
264.97 18.4683 li
264.995 18.6626 li
265.02 18.8589 li
265.045 19.0542 li
265.069 19.2495 li
265.093 19.4458 li
265.118 19.644 li
265.143 19.8423 li
265.166 20.0386 li
265.191 20.2378 li
265.216 20.436 li
265.239 20.6338 li
265.265 20.832 li
265.29 21.0308 li
265.315 21.2305 li
265.34 21.4287 li
265.365 21.626 li
265.389 21.8242 li
265.413 22.0205 li
265.436 22.2202 li
265.461 22.417 li
265.485 22.6143 li
265.511 22.8125 li
265.534 23.0103 li
265.56 23.2065 li
265.584 23.4019 li
265.609 23.5972 li
265.635 23.7925 li
265.657 23.9878 li
265.683 24.1812 li
265.706 24.3755 li
265.731 24.5688 li
265.756 24.7598 li
265.782 24.9521 li
265.807 25.1436 li
265.83 25.3354 li
265.855 25.5244 li
265.88 25.7148 li
265.903 25.9038 li
265.928 26.0918 li
265.952 26.2808 li
265.978 26.4683 li
266.001 26.6538 li
266.026 26.8389 li
266.051 27.0259 li
@
266.051 27.0259 mo
266.076 27.2109 li
266.1 27.3945 li
266.125 27.5776 li
266.15 27.7622 li
266.173 27.9429 li
266.198 28.126 li
266.223 28.3057 li
266.247 28.4868 li
266.271 28.6675 li
266.297 28.8472 li
266.321 29.0259 li
266.347 29.2046 li
266.369 29.3823 li
266.395 29.5591 li
266.419 29.7363 li
266.442 29.9131 li
266.468 30.0903 li
266.492 30.2646 li
266.518 30.439 li
266.541 30.6138 li
266.566 30.7881 li
266.591 30.9609 li
266.616 31.1353 li
266.641 31.3076 li
266.665 31.4805 li
266.689 31.6528 li
266.713 31.8252 li
266.738 31.9976 li
266.764 32.1685 li
266.788 32.3398 li
266.811 32.5107 li
266.836 32.6812 li
266.861 32.8516 li
266.885 33.022 li
266.91 33.1934 li
266.935 33.3618 li
266.959 33.5327 li
266.984 33.7026 li
267.008 33.8711 li
267.033 34.0396 li
267.058 34.208 li
267.083 34.3784 li
267.108 34.5469 li
267.132 34.7148 li
267.156 34.8843 li
267.181 35.0527 li
267.206 35.2212 li
267.229 35.3877 li
267.254 35.5552 li
267.277 35.7236 li
267.303 35.8921 li
267.327 36.0581 li
267.353 36.2266 li
267.376 36.394 li
267.401 36.5615 li
267.427 36.7285 li
267.45 36.897 li
267.475 37.062 li
267.499 37.228 li
267.524 37.3955 li
267.548 37.562 li
267.573 37.7266 li
267.598 37.8931 li
267.623 38.0596 li
267.648 38.2236 li
267.672 38.3911 li
267.696 38.5552 li
267.72 38.7192 li
267.744 38.8833 li
267.77 39.0474 li
267.794 39.2129 li
267.819 39.375 li
267.843 39.5381 li
267.867 39.6992 li
267.891 39.8623 li
267.917 40.0244 li
267.941 40.1865 li
267.967 40.3452 li
267.991 40.5063 li
268.015 40.6655 li
268.04 40.8257 li
268.064 40.9854 li
268.09 41.1421 li
268.113 41.3003 li
268.138 41.4575 li
268.163 41.6133 li
268.187 41.7681 li
268.211 41.9233 li
268.236 42.0771 li
268.261 42.23 li
268.284 42.3843 li
268.31 42.5347 li
268.334 42.6841 li
268.359 42.8369 li
268.383 42.9844 li
268.408 43.1333 li
268.432 43.2817 li
268.457 43.4282 li
268.482 43.5737 li
268.506 43.7173 li
@
268.506 43.7178 mo
268.531 43.8633 li
268.554 44.0054 li
268.579 44.146 li
268.604 44.2856 li
268.629 44.4263 li
268.652 44.5635 li
268.679 44.7012 li
268.703 44.8379 li
268.727 44.9736 li
268.752 45.1055 li
268.775 45.2397 li
268.801 45.3706 li
268.826 45.5015 li
268.85 45.6304 li
268.875 45.7573 li
268.898 45.8838 li
268.923 46.0098 li
268.949 46.1338 li
268.974 46.2559 li
268.997 46.3784 li
269.021 46.498 li
269.046 46.6177 li
269.07 46.7339 li
269.096 46.8525 li
269.119 46.9668 li
269.145 47.0796 li
269.17 47.1919 li
269.193 47.3037 li
269.219 47.4136 li
269.243 47.5205 li
269.268 47.6289 li
269.291 47.7334 li
269.316 47.8394 li
269.341 47.9404 li
269.366 48.0425 li
269.39 48.1426 li
269.415 48.2427 li
269.437 48.3403 li
269.464 48.436 li
269.488 48.5313 li
269.513 48.625 li
269.537 48.7183 li
269.561 48.8066 li
269.586 48.897 li
269.609 48.9854 li
269.636 49.0728 li
269.659 49.1587 li
269.685 49.2432 li
269.71 49.3262 li
269.733 49.4087 li
269.759 49.4897 li
269.782 49.5684 li
269.808 49.6475 li
269.831 49.7241 li
269.856 49.8003 li
269.882 49.875 li
269.904 49.9478 li
269.93 50.0195 li
269.954 50.0918 li
269.979 50.1611 li
270.003 50.2305 li
270.028 50.2979 li
270.053 50.3633 li
270.077 50.4287 li
270.101 50.4932 li
270.126 50.5566 li
270.151 50.6201 li
270.174 50.6792 li
270.2 50.7393 li
270.225 50.7979 li
270.25 50.856 li
270.275 50.9116 li
270.299 50.9692 li
270.323 51.0229 li
270.346 51.0771 li
270.372 51.1309 li
270.396 51.1821 li
270.421 51.2339 li
270.446 51.2827 li
270.47 51.332 li
270.495 51.3804 li
270.519 51.4282 li
270.543 51.4751 li
270.568 51.5205 li
270.593 51.5664 li
270.617 51.6089 li
270.642 51.6538 li
270.666 51.6953 li
270.691 51.7378 li
270.717 51.7783 li
270.74 51.8188 li
270.766 51.8574 li
270.791 51.896 li
270.813 51.9346 li
270.839 51.9707 li
270.862 52.0083 li
270.888 52.0449 li
270.911 52.0806 li
270.937 52.1152 li
270.961 52.1484 li
@
270.961 52.1489 mo
270.986 52.1821 li
271.01 52.2153 li
271.035 52.2476 li
271.061 52.2798 li
271.084 52.3101 li
271.109 52.3418 li
271.133 52.3711 li
271.158 52.4014 li
271.182 52.4302 li
271.207 52.458 li
271.231 52.4868 li
271.257 52.5156 li
271.281 52.5415 li
271.305 52.5684 li
271.33 52.5947 li
271.354 52.6206 li
271.379 52.6465 li
271.402 52.6714 li
271.428 52.6953 li
271.453 52.7202 li
271.477 52.7441 li
271.502 52.769 li
271.526 52.793 li
271.552 52.8159 li
271.575 52.8369 li
271.6 52.8594 li
271.624 52.8823 li
271.649 52.9043 li
271.674 52.9258 li
271.697 52.9468 li
271.723 52.9678 li
271.746 52.9883 li
271.771 53.0083 li
271.796 53.0308 li
271.821 53.0498 li
271.846 53.0693 li
271.869 53.0894 li
271.895 53.1074 li
271.918 53.1274 li
271.943 53.146 li
271.968 53.166 li
271.993 53.1836 li
272.017 53.2017 li
272.042 53.2212 li
272.067 53.2383 li
272.092 53.2554 li
272.116 53.2739 li
272.139 53.292 li
272.164 53.3086 li
272.188 53.3257 li
272.213 53.3423 li
272.237 53.3604 li
272.263 53.3779 li
272.286 53.3936 li
272.312 53.4102 li
272.336 53.4258 li
272.361 53.4434 li
272.386 53.459 li
272.41 53.4756 li
272.435 53.4912 li
272.458 53.5078 li
272.483 53.5215 li
272.509 53.5376 li
272.533 53.5547 li
272.559 53.5684 li
272.581 53.5845 li
272.606 53.5991 li
272.631 53.6128 li
272.654 53.6294 li
272.679 53.6431 li
272.704 53.6577 li
272.729 53.6719 li
272.753 53.6855 li
272.778 53.7002 li
272.802 53.7144 li
272.828 53.728 li
272.854 53.7427 li
272.877 53.7549 li
272.901 53.7695 li
272.925 53.7813 li
272.95 53.7944 li
272.975 53.8081 li
273 53.8213 li
273.022 53.833 li
273.048 53.8462 li
273.073 53.8589 li
273.098 53.8706 li
273.123 53.8828 li
273.146 53.8936 li
273.169 53.9048 li
273.194 53.9175 li
273.22 53.9287 li
273.244 53.9399 li
273.27 53.9502 li
273.295 53.9619 li
273.318 53.9722 li
273.343 53.9829 li
273.368 53.9917 li
273.394 54.0034 li
273.416 54.0146 li
@
273.416 54.0146 mo
273.441 54.0229 li
273.467 54.0337 li
273.489 54.0415 li
273.514 54.0513 li
273.539 54.0615 li
273.564 54.0713 li
273.588 54.0781 li
273.613 54.0854 li
273.638 54.0962 li
273.662 54.104 li
273.687 54.1128 li
273.711 54.1187 li
273.736 54.127 li
273.76 54.1343 li
273.784 54.1406 li
273.81 54.1489 li
273.835 54.1572 li
273.858 54.1636 li
273.884 54.1685 li
273.909 54.1772 li
273.931 54.1831 li
273.956 54.1895 li
273.98 54.1953 li
274.006 54.2012 li
274.029 54.208 li
274.055 54.2119 li
274.079 54.2173 li
274.104 54.2217 li
274.13 54.228 li
274.153 54.2319 li
274.178 54.2358 li
274.201 54.2427 li
274.227 54.2456 li
274.251 54.2505 li
274.276 54.2539 li
274.3 54.2578 li
274.325 54.2622 li
274.35 54.2666 li
274.375 54.2705 li
274.399 54.2744 li
274.423 54.2764 li
274.447 54.2808 li
274.471 54.2852 li
274.496 54.2871 li
274.521 54.29 li
274.546 54.2935 li
274.571 54.2964 li
274.597 54.2974 li
274.62 54.2993 li
274.645 54.3022 li
274.669 54.3042 li
274.692 54.3071 li
274.718 54.3091 li
274.743 54.311 li
274.767 54.313 li
274.792 54.3149 li
274.815 54.3184 li
274.841 54.3184 li
274.865 54.3193 li
274.89 54.3213 li
274.913 54.3232 li
274.938 54.3252 li
274.963 54.3271 li
274.987 54.3286 li
275.013 54.3296 li
275.036 54.3296 li
275.062 54.332 li
275.086 54.333 li
275.111 54.333 li
275.135 54.3359 li
275.16 54.3359 li
275.186 54.3359 li
275.209 54.3379 li
275.233 54.3398 li
275.257 54.3398 li
275.282 54.3398 li
275.306 54.3398 li
275.331 54.3408 li
275.355 54.3408 li
275.381 54.3433 li
275.406 54.3433 li
275.429 54.3433 li
275.455 54.3433 li
275.478 54.3433 li
275.503 54.3442 li
275.528 54.3452 li
275.553 54.3452 li
275.578 54.3452 li
275.602 54.3452 li
275.626 54.3462 li
275.651 54.3472 li
275.676 54.3472 li
275.701 54.3472 li
275.726 54.3472 li
275.749 54.3496 li
275.772 54.3496 li
275.798 54.3496 li
275.822 54.3496 li
275.848 54.3496 li
275.871 54.3496 li
@
275.871 54.3496 mo
275.896 54.3496 li
@
208.436 234.542 mo
208.554 234.542 li
208.674 234.542 li
208.791 234.542 li
208.911 234.541 li
209.029 234.541 li
209.148 234.541 li
209.268 234.541 li
209.387 234.541 li
209.505 234.541 li
209.624 234.538 li
209.743 234.538 li
209.862 234.537 li
209.98 234.537 li
210.1 234.537 li
210.22 234.536 li
210.338 234.534 li
210.456 234.532 li
210.576 234.532 li
210.694 234.532 li
210.813 234.532 li
210.934 234.53 li
211.052 234.528 li
211.171 234.526 li
211.289 234.525 li
211.407 234.523 li
211.528 234.522 li
211.646 234.52 li
211.768 234.519 li
211.886 234.517 li
212.003 234.515 li
212.121 234.513 li
212.242 234.513 li
212.36 234.509 li
212.479 234.509 li
212.598 234.505 li
212.716 234.504 li
212.835 234.501 li
212.955 234.5 li
213.073 234.495 li
213.192 234.494 li
213.313 234.491 li
213.432 234.487 li
213.55 234.484 li
213.669 234.481 li
213.787 234.477 li
213.907 234.472 li
214.025 234.468 li
214.145 234.464 li
214.261 234.462 li
214.382 234.458 li
214.501 234.454 li
214.621 234.448 li
214.74 234.444 li
214.86 234.438 li
214.978 234.433 li
215.096 234.428 li
215.214 234.421 li
215.334 234.416 li
215.454 234.41 li
215.571 234.404 li
215.691 234.398 li
215.81 234.389 li
215.93 234.385 li
216.047 234.375 li
216.166 234.367 li
216.285 234.36 li
216.406 234.352 li
216.524 234.344 li
216.644 234.334 li
216.762 234.327 li
216.882 234.318 li
216.998 234.308 li
217.12 234.298 li
217.239 234.288 li
217.359 234.278 li
217.477 234.265 li
217.596 234.255 li
217.714 234.244 li
217.834 234.233 li
217.952 234.22 li
218.069 234.207 li
218.189 234.195 li
218.309 234.181 li
218.429 234.167 li
218.546 234.152 li
218.666 234.138 li
218.785 234.122 li
218.904 234.108 li
219.023 234.093 li
219.141 234.075 li
219.261 234.058 li
219.38 234.042 li
219.499 234.026 li
219.617 234.006 li
219.737 233.989 li
219.855 233.969 li
219.976 233.951 li
220.095 233.931 li
220.212 233.91 li
@
220.212 233.91 mo
220.33 233.89 li
220.451 233.868 li
220.569 233.844 li
220.688 233.824 li
220.808 233.801 li
220.926 233.778 li
221.046 233.752 li
221.163 233.73 li
221.282 233.706 li
221.402 233.679 li
221.52 233.653 li
221.64 233.626 li
221.76 233.598 li
221.878 233.572 li
221.997 233.542 li
222.116 233.512 li
222.235 233.484 li
222.354 233.453 li
222.474 233.422 li
222.593 233.391 li
222.709 233.36 li
222.829 233.325 li
222.947 233.292 li
223.067 233.258 li
223.188 233.224 li
223.304 233.188 li
223.423 233.153 li
223.541 233.115 li
223.661 233.079 li
223.781 233.039 li
223.899 233.001 li
224.018 232.96 li
224.14 232.92 li
224.257 232.878 li
224.376 232.836 li
224.494 232.793 li
224.614 232.751 li
224.732 232.705 li
224.852 232.662 li
224.971 232.614 li
225.091 232.568 li
225.208 232.52 li
225.328 232.471 li
225.446 232.423 li
225.565 232.37 li
225.684 232.32 li
225.802 232.268 li
225.922 232.211 li
226.041 232.159 li
226.161 232.105 li
226.282 232.047 li
226.397 231.991 li
226.517 231.932 li
226.636 231.872 li
226.755 231.812 li
226.875 231.75 li
226.994 231.686 li
227.112 231.624 li
227.231 231.556 li
227.351 231.494 li
227.469 231.424 li
227.588 231.353 li
227.709 231.286 li
227.826 231.214 li
227.944 231.142 li
228.063 231.067 li
228.184 230.992 li
228.302 230.915 li
228.422 230.838 li
228.54 230.756 li
228.659 230.675 li
228.779 230.594 li
228.896 230.51 li
229.016 230.425 li
229.136 230.34 li
229.254 230.25 li
229.372 230.16 li
229.491 230.069 li
229.61 229.975 li
229.731 229.881 li
229.85 229.785 li
229.969 229.685 li
230.086 229.585 li
230.207 229.484 li
230.324 229.379 li
230.442 229.274 li
230.562 229.167 li
230.682 229.058 li
230.8 228.947 li
230.92 228.834 li
231.037 228.72 li
231.157 228.604 li
231.277 228.484 li
231.395 228.366 li
231.513 228.242 li
231.634 228.117 li
231.75 227.991 li
231.87 227.861 li
231.99 227.731 li
232.109 227.598 li
@
232.109 227.598 mo
232.229 227.463 li
232.347 227.325 li
232.467 227.186 li
232.585 227.045 li
232.704 226.901 li
232.822 226.754 li
232.942 226.609 li
233.06 226.457 li
233.18 226.304 li
233.3 226.15 li
233.417 225.992 li
233.535 225.834 li
233.655 225.671 li
233.774 225.506 li
233.894 225.342 li
234.014 225.171 li
234.13 225.002 li
234.25 224.828 li
234.37 224.653 li
234.489 224.476 li
234.606 224.293 li
234.727 224.111 li
234.844 223.925 li
234.965 223.737 li
235.083 223.546 li
235.202 223.353 li
235.321 223.159 li
235.44 222.96 li
235.559 222.761 li
235.678 222.556 li
235.796 222.353 li
235.917 222.144 li
236.033 221.933 li
236.153 221.72 li
236.272 221.504 li
236.392 221.287 li
236.511 221.066 li
236.628 220.841 li
236.749 220.615 li
236.867 220.386 li
236.985 220.154 li
237.105 219.918 li
237.223 219.682 li
237.343 219.442 li
237.463 219.197 li
237.582 218.952 li
237.699 218.703 li
237.817 218.454 li
237.938 218.199 li
238.059 217.939 li
238.176 217.679 li
238.296 217.417 li
238.416 217.15 li
238.531 216.879 li
238.65 216.608 li
238.77 216.332 li
238.891 216.051 li
239.011 215.77 li
239.129 215.486 li
239.247 215.195 li
239.367 214.905 li
239.485 214.607 li
239.604 214.308 li
239.723 214.006 li
239.842 213.7 li
239.961 213.389 li
240.08 213.078 li
240.198 212.76 li
240.315 212.439 li
240.437 212.117 li
240.556 211.788 li
240.674 211.458 li
240.795 211.123 li
240.912 210.782 li
241.031 210.44 li
241.149 210.093 li
241.27 209.741 li
241.389 209.385 li
241.51 209.026 li
241.628 208.664 li
241.745 208.295 li
241.865 207.923 li
241.982 207.548 li
242.103 207.167 li
242.222 206.783 li
242.34 206.396 li
242.461 206 li
242.577 205.602 li
242.698 205.202 li
242.816 204.794 li
242.934 204.383 li
243.053 203.966 li
243.175 203.547 li
243.29 203.125 li
243.41 202.696 li
243.529 202.262 li
243.649 201.825 li
243.768 201.38 li
243.887 200.934 li
244.006 200.48 li
@
244.006 200.48 mo
244.123 200.026 li
244.244 199.563 li
244.363 199.096 li
244.482 198.626 li
244.602 198.15 li
244.72 197.668 li
244.839 197.184 li
244.957 196.695 li
245.076 196.202 li
245.196 195.703 li
245.312 195.198 li
245.434 194.692 li
245.552 194.179 li
245.671 193.662 li
245.79 193.14 li
245.908 192.614 li
246.027 192.083 li
246.147 191.546 li
246.266 191.009 li
246.384 190.464 li
246.503 189.917 li
246.623 189.361 li
246.744 188.805 li
246.86 188.245 li
246.981 187.68 li
247.101 187.111 li
247.219 186.536 li
247.339 185.959 li
247.456 185.379 li
247.576 184.791 li
247.694 184.201 li
247.813 183.606 li
247.93 183.011 li
248.052 182.409 li
248.167 181.803 li
248.29 181.195 li
248.408 180.584 li
248.524 179.969 li
248.643 179.35 li
248.766 178.727 li
248.884 178.104 li
249.003 177.473 li
249.121 176.84 li
249.239 176.208 li
249.359 175.568 li
249.479 174.927 li
249.598 174.283 li
249.717 173.636 li
249.835 172.986 li
249.954 172.334 li
250.072 171.679 li
250.194 171.021 li
250.31 170.36 li
250.43 169.696 li
250.546 169.032 li
250.666 168.363 li
250.787 167.693 li
250.906 167.019 li
251.024 166.345 li
251.143 165.666 li
251.262 164.988 li
251.384 164.306 li
251.502 163.622 li
251.619 162.936 li
251.739 162.249 li
251.857 161.556 li
251.978 160.864 li
252.094 160.172 li
252.215 159.474 li
252.335 158.776 li
252.451 158.077 li
252.57 157.375 li
252.692 156.671 li
252.811 155.967 li
252.93 155.26 li
253.048 154.55 li
253.166 153.84 li
253.283 153.128 li
253.403 152.412 li
253.524 151.696 li
253.64 150.978 li
253.762 150.258 li
253.882 149.536 li
253.997 148.815 li
254.119 148.089 li
254.237 147.363 li
254.356 146.634 li
254.473 145.905 li
254.594 145.172 li
254.71 144.437 li
254.833 143.705 li
254.95 142.965 li
255.069 142.227 li
255.188 141.491 li
255.308 140.748 li
255.426 140.004 li
255.546 139.259 li
255.664 138.513 li
255.784 137.767 li
255.904 137.017 li
@
255.904 137.017 mo
256.021 136.265 li
256.14 135.514 li
256.259 134.762 li
256.378 134.006 li
256.497 133.25 li
256.618 132.493 li
256.734 131.736 li
256.854 130.977 li
256.975 130.216 li
257.091 129.458 li
257.211 128.696 li
257.331 127.935 li
257.449 127.171 li
257.568 126.409 li
257.688 125.645 li
257.805 124.883 li
257.924 124.12 li
258.044 123.357 li
258.164 122.595 li
258.283 121.833 li
258.4 121.07 li
258.519 120.311 li
258.637 119.549 li
258.758 118.794 li
258.878 118.036 li
258.996 117.283 li
259.115 116.532 li
259.231 115.78 li
259.352 115.032 li
259.473 114.285 li
259.59 113.542 li
259.709 112.804 li
259.829 112.069 li
259.947 111.336 li
260.067 110.608 li
260.185 109.886 li
260.305 109.165 li
260.424 108.451 li
260.542 107.745 li
260.66 107.04 li
260.779 106.343 li
260.899 105.649 li
261.018 104.966 li
261.137 104.291 li
261.258 103.619 li
261.374 102.957 li
261.494 102.302 li
261.612 101.654 li
261.731 101.018 li
261.852 100.385 li
261.97 99.7666 li
262.089 99.1558 li
262.21 98.5547 li
262.326 97.9629 li
262.447 97.3828 li
262.566 96.8154 li
262.684 96.2554 li
262.801 95.71 li
262.923 95.1758 li
263.039 94.6533 li
263.16 94.1445 li
263.279 93.6465 li
263.398 93.1611 li
263.516 92.6924 li
263.636 92.2334 li
263.753 91.792 li
263.871 91.3618 li
263.993 90.9473 li
264.111 90.5469 li
264.231 90.1616 li
264.35 89.7905 li
264.469 89.437 li
264.587 89.0981 li
264.706 88.7744 li
264.824 88.4648 li
264.942 88.1748 li
265.064 87.9014 li
265.182 87.6416 li
265.301 87.3975 li
265.42 87.1733 li
265.538 86.9644 li
265.657 86.771 li
265.775 86.5947 li
265.895 86.438 li
266.015 86.2974 li
266.133 86.1714 li
266.252 86.0645 li
266.371 85.9771 li
266.492 85.9033 li
266.608 85.8472 li
266.726 85.8047 li
266.847 85.7886 li
266.965 85.7837 li
267.086 85.7964 li
267.206 85.8223 li
267.324 85.8721 li
267.442 85.9365 li
267.563 86.0146 li
267.681 86.1089 li
267.801 86.2256 li
@
267.801 86.2256 mo
267.918 86.3555 li
268.038 86.501 li
268.154 86.6592 li
268.275 86.8394 li
268.395 87.0317 li
268.512 87.2397 li
268.633 87.4619 li
268.749 87.7041 li
268.87 87.96 li
268.989 88.2275 li
269.109 88.5083 li
269.225 88.8076 li
269.348 89.1206 li
269.465 89.4458 li
269.583 89.7822 li
269.703 90.1357 li
269.822 90.5024 li
269.94 90.8818 li
270.059 91.2715 li
270.181 91.6758 li
270.299 92.0923 li
270.416 92.5186 li
270.535 92.9546 li
270.654 93.4048 li
270.773 93.8667 li
270.896 94.3389 li
271.011 94.8179 li
271.13 95.3091 li
271.251 95.813 li
271.367 96.3228 li
271.487 96.8423 li
271.605 97.3726 li
271.725 97.9121 li
271.844 98.4565 li
271.965 99.0103 li
272.08 99.5723 li
272.201 100.141 li
272.321 100.718 li
272.438 101.301 li
272.559 101.893 li
272.677 102.487 li
272.797 103.09 li
272.915 103.699 li
273.034 104.315 li
273.15 104.934 li
273.272 105.559 li
273.39 106.188 li
273.508 106.821 li
273.629 107.461 li
273.748 108.103 li
273.866 108.747 li
273.986 109.396 li
274.104 110.05 li
274.224 110.708 li
274.344 111.364 li
274.461 112.028 li
274.58 112.69 li
274.7 113.357 li
274.817 114.025 li
274.938 114.696 li
275.059 115.366 li
275.178 116.04 li
275.294 116.714 li
275.413 117.389 li
275.532 118.066 li
275.65 118.744 li
275.771 119.42 li
275.89 120.097 li
276.007 120.773 li
276.126 121.453 li
276.246 122.129 li
276.366 122.807 li
276.483 123.484 li
276.603 124.158 li
276.722 124.836 li
276.843 125.511 li
276.96 126.184 li
277.077 126.857 li
277.196 127.53 li
277.315 128.199 li
277.438 128.867 li
277.556 129.537 li
277.675 130.201 li
277.794 130.868 li
277.912 131.53 li
278.029 132.192 li
278.149 132.852 li
278.266 133.51 li
278.386 134.163 li
278.507 134.82 li
278.626 135.471 li
278.745 136.121 li
278.861 136.768 li
278.982 137.414 li
279.102 138.057 li
279.219 138.7 li
279.34 139.338 li
279.456 139.977 li
279.577 140.611 li
279.696 141.244 li
@
279.696 141.244 mo
279.814 141.875 li
279.934 142.504 li
280.053 143.13 li
280.171 143.757 li
280.29 144.378 li
280.408 145 li
280.528 145.618 li
280.647 146.235 li
280.766 146.85 li
280.886 147.461 li
281.004 148.073 li
281.125 148.684 li
281.24 149.291 li
281.36 149.895 li
281.479 150.498 li
281.599 151.102 li
281.72 151.702 li
281.84 152.302 li
281.956 152.899 li
282.074 153.496 li
282.195 154.09 li
282.313 154.682 li
282.434 155.276 li
282.552 155.866 li
282.671 156.457 li
282.79 157.045 li
282.907 157.63 li
283.025 158.217 li
283.146 158.805 li
283.264 159.389 li
283.386 159.972 li
283.503 160.555 li
283.62 161.136 li
283.739 161.718 li
283.86 162.299 li
283.979 162.881 li
284.097 163.458 li
284.218 164.038 li
284.335 164.617 li
284.452 165.195 li
284.574 165.771 li
284.693 166.347 li
284.812 166.921 li
284.931 167.499 li
285.05 168.074 li
285.171 168.649 li
285.287 169.223 li
285.406 169.797 li
285.525 170.372 li
285.644 170.943 li
285.764 171.516 li
285.882 172.09 li
286.001 172.661 li
286.12 173.233 li
286.239 173.803 li
286.357 174.373 li
286.478 174.944 li
286.597 175.512 li
286.715 176.083 li
286.833 176.651 li
286.951 177.219 li
287.074 177.786 li
287.191 178.351 li
287.31 178.917 li
287.427 179.482 li
287.55 180.047 li
287.668 180.61 li
287.787 181.172 li
287.906 181.734 li
288.024 182.292 li
288.141 182.853 li
288.26 183.409 li
288.381 183.967 li
288.5 184.521 li
288.619 185.074 li
288.736 185.626 li
288.857 186.177 li
288.977 186.727 li
289.094 187.275 li
289.215 187.819 li
289.332 188.365 li
289.451 188.907 li
289.57 189.446 li
289.688 189.984 li
289.808 190.52 li
289.927 191.052 li
290.047 191.583 li
290.167 192.111 li
290.283 192.637 li
290.405 193.162 li
290.522 193.684 li
290.641 194.201 li
290.759 194.716 li
290.878 195.228 li
290.998 195.74 li
291.119 196.245 li
291.236 196.75 li
291.354 197.25 li
291.473 197.748 li
291.592 198.24 li
@
291.592 198.24 mo
291.714 198.731 li
291.83 199.218 li
291.951 199.701 li
292.07 200.182 li
292.187 200.657 li
292.307 201.129 li
292.426 201.598 li
292.546 202.063 li
292.665 202.524 li
292.783 202.982 li
292.903 203.435 li
293.021 203.881 li
293.138 204.328 li
293.258 204.767 li
293.376 205.205 li
293.496 205.636 li
293.613 206.064 li
293.733 206.487 li
293.854 206.907 li
293.971 207.321 li
294.092 207.732 li
294.21 208.137 li
294.33 208.539 li
294.448 208.939 li
294.567 209.331 li
294.685 209.718 li
294.805 210.1 li
294.923 210.481 li
295.043 210.855 li
295.161 211.226 li
295.279 211.591 li
295.4 211.953 li
295.519 212.307 li
295.64 212.661 li
295.753 213.005 li
295.874 213.348 li
295.994 213.685 li
296.113 214.02 li
296.232 214.349 li
296.352 214.671 li
296.47 214.993 li
296.589 215.311 li
296.707 215.618 li
296.826 215.925 li
296.945 216.228 li
297.066 216.527 li
297.186 216.819 li
297.303 217.105 li
297.423 217.39 li
297.54 217.671 li
297.658 217.947 li
297.779 218.217 li
297.9 218.485 li
298.018 218.749 li
298.134 219.006 li
298.253 219.262 li
298.374 219.512 li
298.491 219.759 li
298.606 220 li
298.731 220.239 li
298.848 220.475 li
298.967 220.707 li
299.09 220.931 li
299.208 221.155 li
299.323 221.374 li
299.446 221.589 li
299.563 221.801 li
299.683 222.01 li
299.802 222.215 li
299.918 222.416 li
300.04 222.613 li
300.156 222.805 li
300.279 222.999 li
300.399 223.185 li
300.516 223.368 li
300.634 223.548 li
300.751 223.727 li
300.872 223.902 li
300.99 224.072 li
301.111 224.239 li
301.229 224.405 li
301.348 224.567 li
301.466 224.725 li
301.585 224.881 li
301.701 225.037 li
301.823 225.186 li
301.943 225.334 li
302.063 225.478 li
302.18 225.621 li
302.299 225.76 li
302.417 225.898 li
302.537 226.033 li
302.657 226.167 li
302.776 226.296 li
302.896 226.423 li
303.016 226.547 li
303.134 226.671 li
303.25 226.792 li
303.368 226.911 li
303.488 227.027 li
@
303.488 227.027 mo
303.608 227.14 li
303.728 227.253 li
303.844 227.364 li
303.966 227.472 li
304.082 227.579 li
304.201 227.683 li
304.323 227.786 li
304.442 227.887 li
304.56 227.989 li
304.683 228.084 li
304.798 228.181 li
304.918 228.275 li
305.036 228.368 li
305.154 228.459 li
305.273 228.551 li
305.394 228.638 li
305.512 228.726 li
305.632 228.812 li
305.751 228.896 li
305.869 228.979 li
305.987 229.061 li
306.106 229.142 li
306.228 229.222 li
306.344 229.301 li
306.464 229.378 li
306.583 229.455 li
306.701 229.531 li
306.819 229.606 li
306.941 229.679 li
307.06 229.751 li
307.18 229.823 li
307.297 229.894 li
307.414 229.963 li
307.535 230.033 li
307.654 230.101 li
307.773 230.17 li
307.893 230.235 li
308.011 230.302 li
308.13 230.367 li
308.247 230.432 li
308.365 230.497 li
308.484 230.559 li
308.606 230.623 li
308.725 230.685 li
308.842 230.747 li
308.962 230.807 li
309.083 230.869 li
309.198 230.927 li
309.319 230.988 li
309.437 231.047 li
309.555 231.106 li
309.676 231.163 li
309.795 231.221 li
309.913 231.277 li
310.033 231.334 li
310.153 231.39 li
310.271 231.445 li
310.389 231.501 li
310.508 231.556 li
310.628 231.611 li
310.744 231.664 li
310.865 231.716 li
310.984 231.769 li
311.103 231.823 li
311.223 231.877 li
311.339 231.925 li
311.46 231.978 li
311.578 232.027 li
311.697 232.078 li
311.816 232.128 li
311.935 232.179 li
312.054 232.228 li
312.176 232.275 li
312.294 232.324 li
312.411 232.373 li
312.533 232.418 li
312.649 232.465 li
312.771 232.511 li
312.889 232.557 li
313.008 232.602 li
313.128 232.645 li
313.243 232.692 li
313.362 232.733 li
313.481 232.778 li
313.603 232.821 li
313.722 232.863 li
313.84 232.905 li
313.96 232.946 li
314.076 232.985 li
314.196 233.026 li
314.316 233.066 li
314.435 233.103 li
314.555 233.141 li
314.674 233.18 li
314.793 233.217 li
314.911 233.251 li
315.029 233.289 li
315.148 233.324 li
315.268 233.359 li
315.386 233.393 li
@
315.386 233.393 mo
315.504 233.425 li
315.624 233.459 li
315.742 233.492 li
315.862 233.522 li
315.98 233.554 li
316.103 233.584 li
316.219 233.613 li
316.337 233.645 li
316.456 233.674 li
316.578 233.702 li
316.693 233.728 li
316.813 233.755 li
316.932 233.782 li
317.051 233.809 li
317.172 233.832 li
317.289 233.858 li
317.409 233.88 li
317.526 233.902 li
317.646 233.926 li
317.766 233.951 li
317.883 233.971 li
318.005 233.992 li
318.123 234.011 li
318.242 234.032 li
318.361 234.052 li
318.479 234.071 li
318.597 234.089 li
318.717 234.108 li
318.836 234.124 li
318.956 234.14 li
319.073 234.156 li
319.193 234.172 li
319.311 234.186 li
319.43 234.202 li
319.55 234.217 li
319.669 234.231 li
319.787 234.244 li
319.91 234.257 li
320.026 234.27 li
320.143 234.282 li
320.265 234.293 li
320.385 234.303 li
320.504 234.314 li
320.62 234.327 li
320.742 234.334 li
320.859 234.344 li
320.978 234.355 li
321.094 234.363 li
321.215 234.373 li
321.336 234.379 li
321.453 234.389 li
321.573 234.395 li
321.69 234.404 li
321.81 234.412 li
321.928 234.416 li
322.05 234.424 li
322.168 234.431 li
322.287 234.435 li
322.407 234.44 li
322.522 234.446 li
322.642 234.452 li
322.761 234.458 li
322.88 234.462 li
323.001 234.468 li
323.12 234.471 li
323.238 234.477 li
323.358 234.479 li
323.474 234.483 li
323.593 234.487 li
323.714 234.491 li
323.834 234.494 li
323.952 234.495 li
324.068 234.5 li
324.19 234.503 li
324.307 234.504 li
324.427 234.507 li
324.546 234.509 li
324.667 234.513 li
324.784 234.513 li
324.903 234.515 li
325.023 234.517 li
325.142 234.519 li
325.261 234.522 li
325.379 234.522 li
325.499 234.523 li
325.616 234.526 li
325.736 234.528 li
325.855 234.528 li
325.974 234.53 li
326.093 234.532 li
326.212 234.532 li
326.333 234.532 li
326.452 234.534 li
326.568 234.536 li
326.69 234.537 li
326.806 234.537 li
326.926 234.537 li
327.044 234.538 li
327.163 234.538 li
327.282 234.541 li
@
327.282 234.541 mo
327.404 234.541 li
@
325.971 234.395 mo
326.111 234.406 li
326.254 234.417 li
326.395 234.426 li
326.534 234.436 li
326.677 234.446 li
326.817 234.458 li
326.961 234.464 li
327.104 234.477 li
327.24 234.487 li
327.384 234.497 li
327.526 234.503 li
327.667 234.513 li
327.806 234.52 li
327.949 234.53 li
328.09 234.535 li
328.228 234.545 li
328.373 234.554 li
328.512 234.56 li
328.654 234.566 li
328.793 234.576 li
328.934 234.583 li
329.077 234.591 li
329.216 234.594 li
329.359 234.602 li
329.496 234.608 li
329.643 234.616 li
329.779 234.619 li
329.924 234.625 li
330.066 234.632 li
330.206 234.637 li
330.347 234.641 li
330.486 234.647 li
330.629 234.649 li
330.768 234.654 li
330.907 234.66 li
331.052 234.665 li
331.189 234.669 li
331.33 234.675 li
331.474 234.677 li
331.619 234.681 li
331.756 234.686 li
331.9 234.688 li
332.039 234.694 li
332.176 234.696 li
332.322 234.698 li
332.463 234.704 li
332.606 234.706 li
332.749 234.708 li
332.886 234.712 li
333.029 234.714 li
333.169 234.716 li
333.309 234.719 li
333.452 234.719 li
333.596 234.722 li
333.736 234.724 li
333.874 234.727 li
334.019 234.73 li
334.158 234.73 li
334.301 234.732 li
334.437 234.735 li
334.581 234.739 li
334.719 234.739 li
334.864 234.74 li
335.008 234.743 li
335.142 234.743 li
335.286 234.743 li
335.426 234.746 li
335.568 234.746 li
335.709 234.746 li
335.849 234.748 li
335.992 234.75 li
336.132 234.75 li
336.275 234.75 li
336.415 234.753 li
336.555 234.753 li
336.694 234.755 li
336.838 234.755 li
336.982 234.755 li
337.121 234.755 li
337.261 234.758 li
337.404 234.758 li
337.543 234.758 li
337.688 234.758 li
337.827 234.758 li
337.97 234.758 li
338.111 234.761 li
338.249 234.761 li
338.392 234.761 li
338.531 234.761 li
338.672 234.761 li
338.814 234.763 li
338.957 234.763 li
339.099 234.763 li
339.237 234.763 li
339.381 234.763 li
@
0.768627 0.752941 0.623529 0.811765 cmyk
WBXRIQ+MyriadPro-Regular*1 [17.6639 0 0 -17.6639 0 0 ]msf267.091 83.7729 mo(B)shWBXRIS+MyriadPro-Bold*1 [7.59092 0 0 -7.59092 0 0 ]msf275.506 86.8813 mo(\(y\))[2.38379 3.96973 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/WBXRIS+MyriadPro-Bold*1 uf/WBXRIS+MyriadPro-Bold uf/MyriadPro-Bold uf/WBXRIR+MyriadPro-It*1 uf/WBXRIR+MyriadPro-It uf/MyriadPro-It uf/WBXRIQ+MyriadPro-Regular*1 uf/WBXRIQ+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Thomas Guillerme) ()%%Title: (Fig3.eps)%%CreationDate: 4/28/15 5:35 PM%AI9_DataStream%Gb",KM*_ltoC2JUH&&m^M?h7n4Yu"^:.8#Vn6X(q$kUO33Hj$3'E.Ycp;ObGY-+@a&7jch_@F70Tr,HuW9Ut*HEsnWmZ2^sG42Zj%s*HWlj\7sX]11Wam+g%;_tN\@R&j,gI*XXC>/@Fk1N,>UHk7V]YR7gI=jX2&DiVG<DmV[k2oFUYddQf5_ps.r9;@i'dPun-NVo9M%e*6mt06\>Zj&hLk^GgbE:VI7kN>Am.Goe#e4,j8?\J9a7N$\PdI]!oJZSOd*l*S@ZpRs*S\9mml-`m%Ih8UiR'1J:&m?P`Z:@%/S%],qM`o8XD*f\Vh`Hng9\_HcUeJN%o"cF=U,_b@u!7Md*VnU\.s5OX9#&ZdPmdY'>ST"K=g?a\Fs;=IlK[qtlV#^lF7iSSP0bV-_X%*hN<,cN)>)c^Qkl]A9]<dV4Y,8M/E_$;f2o$ascZ'7[%Y0L8ic`AE*s[c?LO/B]IZJ`Gi4<tp<!H.V]sJ`5>4,bf5PB06#!f!j%C%pI>,?&Zrlm]1Io^)N8jns+BF;>mF1F?J[TbJo@+Mq"_E5%USe],FX$p,G=a+qQ6us5S?Z%e%c\RA20j/WPWO_E#=Uc;>ZpSW86pE%k']T[!ZGo6^4aRU(3Qj(')$MG0BKE>gd&Z$33G]nA*#;c[IY`((:O<f!B\+2W^B]Oe>Noh@U\o##NXVD8o+sjL[Eru)P+A3@*id[%7/!^p:]JKB'`?V`!WPq?Kh7=p@8F!-E*_QsKZ>bR:NiDO>-CrjGEE`X<(l<a\d&/uoFL2Sr[a[,oC5E??-Wq;T?$n-3!<KW0HZ,1%iLo^RQo?V3=DG7]!B_589*9EDX8p_X4.SjGenC(6@I`Rf=?e?SEOB'AKl5;2.Lh6:#WsgA4uqh[Ihs&$*GXJnaIA,NPV$sqOICp/%VP.n]-M2/TduMsmlT.1c5$.)Lh*0BVa6NA@h*)9Z9NB,4FW=E+(!!n'X)WA$%Z2hT?l0ZKYhm@X-ld>J(;mA5CffC6G<4]]Gg[Ge%$Ci(NTgcH<C[H=RPm0JRC_=+5c2J"TR_tmtEAV@9_JWk&>bj+<mL$Z,W"g?f9=<d1YgXF1jYZ1s1EL_o]l@#.It%cO`U7s`S3'`3%J+j2MK+LkeHQdk+2MTIr#QN]h%=kM95EE]*:9rFMX&f`0DKZq(q%:-;h/%2+JSoT141O*.4cD`>R[p\;+*GGQ;=k[,"DEG]$-mpC%!b/H;,%?cNZ`.<>@NTlkf7G.\_lin`)&\`B,3;#pVu/&s'<p$dZ],Bf(JV+/)u]#/cle4s`e1uFWSAqKh"!+T/lt/K_h8bO5gRC_%kbm<)#*H9Qp=Xn))!V.E5G7<*W';=)Mr]bl(lQsST1d*?2*JGf/^4L92ra28TdstVV(J^S'uS)`hP(oAW5a`TRMYUpKp3JcgVm91%,"/of*$E"Kpm9ML9t;E\9@JpH'p$AJ_o?*>m52g-fSBE3G[,&CTNuHE-:Om1BQ&)#H=So5'HWELO^b?AC\H04=O$<*;VY2Mq7GYN%C;nX28VZ]JV2df!E]<elX1obEIQ7_L@9=JDU`#:3bf6TKW;1LhJ@<Url&lkf6AcHLdgY?/.82&X^iHZ;^cCB:EMEVcLgmu?!0Uja%,pn\7>@[n6-Xd,Q+90EM^56;*`8[`Okd9%K#=Y""(f\#_:'U[J\-YL.%2_S`rW0\S'Xt[4@3_C#"1JOk&k,LN%(p'0"<.3?7M5F7%C=iPkdP;iNY<a6.0C0^6H-7qHEX-dahThJUI_W3jUu0=PTW,Q1Y'[CugVCP%>]W\:n;4ohh&4,*#D<$NA>=@qcRm>*amT_dfK%/o%m=,2JIj;`+&q5DM)p/I]r`s3E:MtOphbFj8r#f>fN/'q!h1!*@35>RsgF+0C%8V9nd3OcbBUHgD*"PE8Pk]Tc3neJ1Nkhk(3B]L\%6hLu5'L:drrm&!iquIu`;U80&nU-_(1ISn+UL)Ep/^/k4BclQ\+`i6e"#W$(?%NNUU:X"0H;PKO_b("^!,4@!Rjn2M7b(</Rs]I0%hdC./J?8;b,/HM&pVTIuT42"rWR;i2TnWIcN@4k!O/a,XAr$XHQ()O%5Jp7rj91V2chVOEQTO=p\uOp!*i(;WmhQ1]ST/uj>I].V%Ud%70d0+42HZ'0,o22h.H_f-SJ^ThQdkfYe6.V')c!+P$NNT'blT07"g&;ZZ(t?pg\>Z+\6@*5)/(31oQ[?!X%o@h-IBj3sjkkPa%[/Bes*ph[3s(SiK#iIY6!=(2bjia;jF*DX/rg8FW3/22S__V@hA<`(2;)@L7Bn?OE?./mU(RQMTCf\c[=gng_Zn0D/*6YaCj]d:9%ZH?4eW`mrC<O:u!@9YX7gpXFMgUBh!frit-]4TY8e$0nIE?*RBNopO?aXK:dVs;d%\negQ$\#)`cFN8O^)OR.[utg5DG:tb'UGtW%$Vn;]HkD0t.#Wt]MOLJjL1bgukBO-W4O<W4!(t?`HPNaLe\&J3pnfU.Du3;TGC8!Y51K1P5O_<p)+qlOqDH#/_#+9jJ/JN6!5f2[%PD8'#IXjYZTF@Y0<2%g7e4[#L\IpGf$'q5pQXE!'(j/E7?iVLg?%Os\r$b"45cL&a;!Om'foQ@Q[1%tkJ&>IOb-3:*[k,ZU#96uO%G$C7lb4nnd;MA"!f?<go:oaY^WE9m;k)+d;G;#\mV5R&ZoehH(P/`6PZ4-sd/MsStg,2H?UpuuE,khp>-]4CNk,tGiD[/#>,OLI-%m3VFHB9;#10gOEo+:#E!huVsA8+FD@-e*0o)3>kT@#-d8PVc$(VU0-&R6pFsO?>g6JUC>:!F&+7R*$>MA.<".P%9T1A<'j3*/Z[k%aW&#33QW2RA-ue&WalEF#\JWIo`IeW8jr(<BUbeMdheuVoG*5]XD",&7(/u>R&S;OrYhW6MUH)HL`MW3QiBj!pE[^&RPWJ?h'M06%mQ!^^,5rk`Pphad-ZOYVJH&,e5b,XLTp1c-^^NMLJlr/C_Nmm3Cr)(HXFVRJKSJWL*3]Z'#Vc[m9#N8399<T-O=(WWJ)JWV+Z+>(%]EOg_]]s0Z-&tEc%<@>?-\[^>_5oMrHlU8)aJ1#7O>i:TOXiRVa8nXP4/0SXOX#DROS>cjG:%:!$bR5TQW8UK9W;)Ua\'WDF^Q:1%(rce-WH^9;U@#QQ@":KT]FL16JW;ojXpUZRJrM?i5F5#CfYJ?i>RuWo.G%rgG/XV;.9.j_>(pWoYLdR_C:s[1\Ps)iEBN/^\*hc5%\lC]T7]g!teZ-#LXUJqg!9Wi;XLU1n,cF^!CIY^<X];FP$:t10E_R&)P?/L'<ufk?<n48iPreP<Kg*],Erc/cYWZ7<$8uQ'ZXSG!%WIZn*J5du68:;>YJ5JBNG<cW!ap&-H)@3/H9W8..o3ng.fTZle0FO\E&_)A3X2)/T@,M##_LprhJ]Vb:GV_$]5LcLaXM?G;j^?nl%=?Q[haap:q@"T=>Iqu:U.^0(LYT\DHR0&]0OaG[O%+rZZ+@QJ-FpSH7"*k"\aT5:j+>AKMEhN]eWrNT%5Y3'].=eE.d+/7*)bqDa%9GM)4)<`,4q'/-C3PZ(>n,tG=>mF5,"YM5KZNRMi4cj;/E0(NVAD2c<#Hk'.Dj>mo!oPmGUnS6EB*81%Q=8?q+032BA[D"bB^=i1%/7m"4WVdUU9"H3LF$Ghj8ClSjdP[aK&N0;G<!BhmS)3nfFt.WaqS)oGqL6W%r@3MB7,f:Y@G\KNZ#bK):4?o\490$8TOT_*0G(OR%>M>!$b/9`12UbIphsd^Pea=EhAa)?8lO6S66;Pj9:CXh3#!=/(c-XF/7G;C;gEqh7^#\6-=#-bEGf1$t-$Q"C<'roOXt"TI7k>ZO%[O0!@jsKf1J\b("jN-K)keubO8kG:51-Mp+1-Vpk:3+)o]c,Z.=JVjIG-Ka2ZH3!$MV51a.:FZHb>ST\=la^>LQd37UgI/#hH4'/%?K?-P;L*o:SWc6<:&.hueDr4jbZFW\20uB>a@W)YlcKO/ejG'2=/8Fk;adp3Y`uNQ!f]q=,+pG7nNao4&2>;#YQ+o\A?hta!L!\H%?s,Tpd,=P;+GR+bA5PutYNV\dFdXf'R1WW&R*tcji^W%EYWCq2P+)ZG;GF8gjCcaN6.#.SAAflDIEQ.(+Wa",HqX#_dC5Y</e&Oc%P0nrQp+a\,,Ti5_bda:%SgO<&Ogg2HVCt(gni>+`"M[liSB1A&@0^m>9c8>_U_bM=>TKg)=O"*"6cKQ#3mr2ImmuKDc6KG]HI'NL%3q]!_FB))//12)Z,tMb^'d9PC</-MY>Ec*d;2,VH7AUmD!(-@7$5-@7/Jf92Ak5p)QZBei91:=)<1>253`12!;Ls-lM*f<eE\4*m%L)Q=LoOCd]X.pnDL9s_@1A4_52G-Dm5KHS+UdUL\)N`627aN,h[Fd;I.D7Ic-:Ju0=/s]1WCUNr/Aj.5j%H_uPGX=9I^`QMl&3_F%8akF[Qeh.&SCV5M._hf(D4n2AF%as4%AZ!P5Fs>k(0;<-U5P$?*`0+N`JdE"GJGD"%*qm-4A3Z_OCs5GL,^*?.]uuY.a9GhPb<Ls%"'JO@g7W85f5ab(TbaNii(B9A>!g2$5G3*DOlYr)SV;F5Q-OCmS`Q<q3Y[_L-1dFAK>;r?[*r9G[U)s'?8)X8Ej2f2).KSD\-b`*%.$d1sPVN^XqDVrqPFKDY.%Oe7->_.9_E=AG:ru*O,F+e.R";C\0PSTRD"NCG*nfe?V64Y-MNLj"3Z7:#ZBN[rAigmuBY%DfAr$U:%it85#=E7%#ku>/aKpm$3eeEfc@f]295#@'`<#^fj,RS"%(u't(Z#_sh9qfbPGW&!t.?I,p9O$1N>_FR@g@fSK^-*@qVDre*<->07%'Q!p5FAVo%@a7kll@Wgklfli"%qb17'e<%R:s@5.iBN(X3Z2hTP$Hm*(1fmq3j;U]MA19/)0!\h%]lUB1eG(L0Pk#kjTq]BHl;jW%!-MEJ!NFRid[ID:,setm0/]J]e'o#,.fK4D1n)V9^S_]85MqeC\'Wtqq>2Ma:c8Q^5H!:cG5TJT5:`sjEf[$=Btn##rOE64T3Znh%pd(gtI!sM9W&(92Y<71HUF8Nq#gEOMPb9Eh8Tq[CDPGWKM-3`N'#gXQF%,&DL(,%Yd[1&&#*#"51gRn5aajV'J>#l'"q$eGNaorc%TF"MJ`>5]E(0DA1TLqdZ%M"j1#$?Lh+Lh[=NWVs`J35E74Xgde#BZQ_^%Y&\YW?DSDJHRU;]<9LoX(fDZ`@'125).gMTAB*(.^S`%8qNcS.Sci#(_k*M=N4Fd]Ni>!$WLYh@iH-<i:mLF33"\Hce!.HMKFB"Q^b5Id'>0;bDqQC7n5^9D9T7&=45J,)?7c,K?_h1&.4&/%Y`$A(^-!QZ-%uo2"kGhoLH9_\.0%Y]UStke$O+M7ik^qPQ>+\PPnqTo=@ikkjA.4*Jje"4JeVn2LdZ5m`CUb*<g:8<W=NU8(f;a4%';ZHpeO378N1;eAUQYN]@`;+W03/4BS@40Iil$_F-s!F:M5$hg%fZk#YsO`V)1nar?`&-jB-%_X3XX0s'>blS"(4f5!Lu=j4Q@PD%Vb_o.kJ5R<!UP['hdep$aou25MXgbA/-&Tho=Fej^SFWiC<C.opdd>eSdR(l%s-8uDKLt%EJuD"&2Nn"aS2NN+#iO\C!o(ZbkohE%02(>27[;t&UJg'J<nTg9EWeujf;(SgV'`'l?mI6CnlKDp:`f,4HHf$=,#'@PF[?<pj[%r_9H<BqR[=[9D,_;`/bP6TJrECE8MZa`%ad=;69"&l,.k:L+jV(:t=]^/JPb$kWZP6t28s2"`90o$/Pd+Ys_eor4f9D%qNepeD#F?mPltRDR7PZm"U<Tr!"a(7"K%?'9<f1'0%BWGZW8hit/Ua0Y[P-R(sBPI0$GfW,'Y,N@s@`n`2`L9]kS@!:q`CUb&;1pQ.XSD=K6OtITX"6u`/B^tdQa$g.U;4^3rMBu*A\LU1%>G.!hk^[9^BOd6#L0a&B-9A5j(0aOf]F>nBNnhIm,FceBS#OFd\T?*Ybh8"]F6"H:lDrS4f8Gp.jC3V_j<I+];6o8[K27^1bVJ/?%j^LOUWK,3p@SJ<FABF'EKk,1!'lg6uV[@7qSD:e_Jr*Ad<QYtdEnRIkUS/rd5>CR$rCg?o3aq!b^Tqqt!bF8_K/n,=a0AH%dP[9L%:mS6dTC\Hbkp-?JNF+a)ZcG6"Q.I>S#,]8C.$@8)jGP=B(4u%>91VQu.)VdsdcW/Q3HqoRA#U66&o#.\\V(BL:1#?lLfB,IfBe=K%BgY54-t8$hVl/p9+2JTIpQHbjq<+ek38]R-p-YO@J<#4-5pBk!l+fl<)tUL4##XYG[5CN-QXd$U$E,p6TG$MPH7Z95f?mE8M<!do%d;q/W]a\EUc9e-^ZhcJb"'`l]+#VD_B]O1p;)D@HGFWa*Oc-bkm(O@k5N<E;W]oAi:HdTkST(6lM'$Z'Uh-nV7OK1@`9B`Ok(?F#%DKn0a^bL,Y6%P<"fVaTa^#Um.FFGAC,JIX1%a-\U:t^L_OI$CCeYCHX_%ZdslI13VAs:U&F4jPgV#s^1@uUEd\fH-DoPE,oK/P2n%m%heg2RsYa=a;3s;%M*?>XInUCm5^/s!(,gA[Qkq3.6/L#nfEhG_lupDluk];C?(e;i9LrMa"-lU=7)R>(YubVim.=QW$CjYu6ur%Ep?$bglgei)@#kVjg5[T^#UMl,2Z[Hk<r9]0"I4s;CCXt*R:2akW67B9K*a;9jI3KIJ#r4GBJ.s@Y.?M`H]'1aZ3,U,)Dj^bGfMW%:/7_I:a1o5$Qj]C;@-kj\0OiQk[K@\)\fn(_Uh09eW?:`q[r+B89@4PD[b#>Om&6)9mM><=i=:j%3O6'$YFd-KPuorg:dpd/J:7l%k7dfO3nLR8>=Y^SijpWP680(l3`YP2-)\$Oc7+poe/:TcUNdu@(Fp\1gdH.VP1)q;[Q7cQQfLq?j%d,Z>]Q@%3`2aWSL2MDpkq2a%8qq&W)l]aq4e=\C4&p;VEdLiT(3&8R.RFlhWOPV0CeZQioBF!6iqX0i1.o;6G`I(^<"N0/lbNhD%"s0C_ls6dJe'cQ,K_F%<oB>N%JMdR4hSNOa+=MJh+a!_W%n'PA_?bQ#T3r*El`+#=(^6#'Yg;9\#^elF/a]3=#g:Ki:tPDnBLLa<6B8j&!X"3k=YR7^[GY2=S8i?Y%>!$V.=9TN+a&cdE`j/Y^=,gPQ'L5sMQQKL>;n^>.r%6OFnI!-Pr2B5U^k$"2@3\blCp+*ZVlL&+`Xq]UZRZB-#aDeGf)@a-aApS,%_c%ueT&mg-8M"Un?)4&\8B_.,a5p#mE.hjn9C]]OBJcUN$"VcjM'hD]>"&.6+-a;dd@/Q"E&Fj7LpcFf_iI(UD-%hkL+bY\gjd\d%]U<&(c`X6[f@7-BlIe&fm$dcH6TB?\S6](>Y,Q'ce?`rUferHhRef-Q;ubQ/o^f5iJ%LbR:%Qa`o[3:7odoFinfc5_:9psb/F+S)%3m"[&ZE05uiS5[%Z;.^,P:Z#Fb<!bN:9psb/F2@I=u*]QQ//#moC`mtn9IiRRl\/U4jDEuDGt2WWO(@/QgZhTpAVJdrG*4"0RNh'%pAVJdrG1*`f<Y.SAaa!LhS6L4mpAut:\G"Ulj_7npN0s'duf&Sa/fQQn*)O3n*.p-V^))1NqrXFNd#Phj`\qP,gX:Am5_\TIR.'-%kMaqooDSN?1G:u:nf@)d`24p:N=gX(qeCSjdMNDlrF_L9rVKBsd=G(PE`6@d0jV6g$t[T=4t,iq]s2*p?L69NjI_Lkj!Oj+Q$;dp%o'bESq3H]KI]fhqFQIFp-,0b99jg`3%/H6`IeVpd/QuP51'Y9mOh;fE0s(F9N?sh2&ci+GI$,&O^on\A?o/,Xs37g]a&43T`7rI#%<lYf'#4u`cO'5X@XW=rHj@Cg9#e%gd<l"tD-qD61&=\\sGd9iOJ-O4S&@^GbJrRfcaC/7+(J?a'@DI&pm)gpT!AKsoCdnuj.QFqg%S$@.c@'Q#<;-kML-AfK!^#:gG;hf:<X?A^(e"F[a*>$14r+&Su_6e&d__u!Ya"Q)^,V7_o)D'aRa7Ee)1mmS3ltR2ZbYt<,@KZQ\%j?uLEW(-"W>/1R]fjS1kE$P#>"gfu1])g>H5rKqnN'[5i9B0+@VSQ^n:[t>lrYQ1B4D'3LV9dUFH%25-V<!G`V*k<b%4gZ</hnin%b^oh1QNlId!o%jqJ[jh('Pp?17Esn=?63_@qUCdiHd'p2bo"MN">9'IDKd!3CGq/HItUL`(nk1VWI:jmmgP).G^:9,k,JZ'W:;p2%I.=Vq/I47%Qk9]A%98E"(;hj/:k^5M[9?V3@"IF^TZn<EJ4bFhDoN\j!Q>tK@QK9$0:H@[KJEEA1Wt=':hCoi6pjQ5%hEc(!%*?p%h2T76U=dh82Q*oD,lh@V5d6uM"C"9'Pn_iCbnp_@('H1^W8SFeXC7:"OJ'BAYYYO+HsPI*85KKCN$)""HF.lrZRMPL]3]@^'=1g;%AmIfWEFI&C,XPMO$?F/MVT^3?Bn?W=qXKYgCiETh5<pgQAK%onJQNJ%``c,i`LB>d"U(PT_6a2a+qlifi\'VI\I*qa'aR`WCl)ud%2V?q?.*uQ7";:qtQoIDiS-"R*4LIaC(n_.D,NQ,'kXFe4[#7H\:KT%$)!nnP^n8rZGToaO/&F`5Zk*N#B/pAaXp/`4+;XR<Z'NjH%nYXcGnO*oD1R_))@`h6=N&S$\Uic^n^]ITZCt#[6fObQ3g13"jFrDpgp8^8TD9RUN>LejVS[PQh)F=BOmm3'-,Yj^DB(q8Poe:gd%N@1SZ"Vu$'9'IUlHm^AiI?sRRml=IhK9UN^_-t,#Y\j"J8[nn$6nr@2#(f;:?'tP%XQ;9@X=4YQ7BT+o%QHu$e+k>'aepNJ_0C4C%Ga;_/HAugpb"HCh^j5*4cH)@1s4;b^`jpae1u0+6^<d4'1`KI,<lVTh!LAKk?p.OU<*9CB!Qbq)2^cC+9OA-i,a't!)G)T;*!`d(%D,S4B'1u?)YXq.7K#i`pX)-HWg44i]J2T^S%S.#XTEoZGJB.\8Woa!aZlRWA-cZBJ_)9M>GdoY+%P`RR-_Q4s"e^i][$@97G9qGU%QcB<,m(!6H]*=u"ZQ'(g2U`7`"G/u26"a+r#L#:5$B-,V]H1213%t>Z^l#?S";[lTFTJ2)R0c6VR\o,Gl!fC)6@e41iN!Q`jUXW/%?D\$hRB.q"H3)@qgF$rcBgCrV"9<UqLhaeuFQWo<_tE#I"$kcVb?(`[qmb]"BU^?0(:>CG7Bim19\$L8"t:,9rs\OR=r>_=)=$@e%VlB!.Wid.WrtbA=$5f-opE)A0ASlNo%3DRD`bK"JK\+"]/Hmtb_^%`e0EULp;J.+peA<?[#fTC:)Q*iDP$!G?JjuR?#D1Sj1KOjR%):D*TJ[m2Q#Q]lh!?KcL)&VkY@P`)A^gb=XI%)JAd>AQuRKI>-L'%1Rc-?3=V'gdH8Q'[_>7\l#\\5iH*RBf#j4fo`/.4]TE-pAj%"I"d30JoE#I/l<YgUi#,m/p0-6l6_`\77%^mg-lc!>&EZJF1;iYQBjkj+*`jCl;+ln17@#1[o4PX;*.VA'e[PB4derer^`:>#uRE%@(a?(Y'"GE#RKHePE;4NJL1[N2.9Q\(r6]#B?]%*Geo\f*&V'?1Mhc^EI;(Ki@n)93.VXn[a97fZ9,p=U"jZtX%#?Y$U?/E(!uMF%2$0X.b'B&GL*;%(KKq>qZuN%AksUcCe]%W@i@7/:I9`c[4ZI>p'/PG*!^sQC1D$-%0Rtm-L1R3"X1Fm<n;<uO=$Y['/V_-#&Hk!"%)W=dT>E>Qn!H$dET]<?In<(56!<#Y[9``-P"G;,:T5$$%*!%Y/eEnR"e$rAr^gt,&m3)VLXu!R,?].YZ"#ZHJ8qA,3@BLE,+nE4A%lJ;\s80b?UX_^,;<HX#]H+^/Q'[Sg\G^oLeC)B6E=F/_`MuXt+)^^IhGQ_DQnu>g9RK5J)bQ8V>,%)ZAV*$#rN)W2dAHXUoN9_B7%nM]$\L8/mN:"g*Bb0a$u3#el3RMH8qP@Z*ci6GSBmODG*B&F?/+Ag7!@<dfMD?nCR_!$fY)akX"A=j7!)l*G\R&E/u9kG1q?j!QI%nU:LV2Y1id>n8bU.iM'$!Vdn:j_0,9K`Zikk1)r_6(NS8"R3pND6AaG-_YqC\-@(=bLZ%_K1W*k$hb09n;7OniW5_>O`YS7ee%s&%q(,qL6L>fcPU9HCRFeoXU6+(2NCCX0"pI-j4[\[Te$Bb81#hJVgC&pr!6jFN-:2/&Z5I*S$@s3#6-Qo<=?UN)T]MoqR`r(=m*W:b%=MV4V"@1ED4>r2k_R^k3=;HEUb]Q(dd/lWd/;AS+;N$:dhbY,b/TUqA+/io\[c<$Tg>(Oo,Kt:X-/JXg3NUZu:f/eQfU]as@#m2o%f(Cl9"A*Y7#"n=!\-/9:#khp?/dVL\Jr)!?<S+NInc9;tU!H?]jFI?apY=E:#UfiYeO;9MJ=%k//#,%jLRcX?j1F)LUtC7#9u^p`%m2=:U,Uu8*'ppO?"G15u"==4&Xa:+Mp'?ZQg[LIg%:I44]pLB@5i4?afI@LF`$d8>C21cS)Q#S^)kTH(KYVR/"U%0hCeC+U7NbB+%R2`T?/6n-BQjW%Z2Q_0']>?HD.$un8dnR_g"=2G.BUOI-7@FF2YhRiuMm\<P.dgaZ(P'4OP_a;/$j</2\7u"1W"hRrb:DN*Ztff!%aXuX"-P-]n/aga>'bGV9lS<f+`1=cpHG\4P1]Ug:jdA4;,6VDEGsX20"qK6b*h98_5m3Xh&YohE"IN\o^o16I&D^g4MO$+#5pZ%-%cm!!''^CV2U;G=_[7f[b"LJ6NiIt8]!ME=Kd/Y04<E2=dWN(uam1<u>1=3EQ"Hju8/K.k"['cD.b((=.5W3k[VU&Q`JsBnuDR,oI%TV'G_B]'G;!RUNk#25Z30aP5?bkI'Hp(ot7Rg"RH@0H3BMlU#FpZ2^!mt+A:BO1!X_Al6YA:Y)H(XW<5>p1m'Ag:BhMZ>Y`p0^/O%nHdo8YDgL(OHpfmf<Q(1V;uH/"rL>Ogg8[n!_&lbGXLn5Sq6.4i*`H)&\,IVTKr[>5]`I(N<E^#dV)+gO+R0m8I2DsePaoN[oabG%B4-q>2K',`,\8E$Xa0F_+J>G&9Os#)f_+9/M1@5R1Q",UMZH))00B;;b7+G%'3>Li9a);eQ<ZVabQ.:"5oq8&Ll#jAR.:$5hFjHb%A&-R;(i9u6F7aS-Qp`V8&KbLr"pSTM#_'E"YpZMj!(OTGf/pgt*YG]e61$u<36[-DB*$B,S'L+,Mt".S#jk>Anc=Pl1u&i)6u/B<%U6Lei5/>VMmb^n41sdD?fU`2<a]o+@c]8V?XAN6YhU5V'TPmRj4(*LLJJRGL(**2a(3elNG$K,&:o\r?V/4]=1FPX^FjYY;5gs-K%3[C@0BQHo?#J%N"Zq==jh(s/O;,B@aJL7BgenD!-#Q^Oc0ES[o4ZjbI*TIF2:Ha>H0@c=:1]kl&<7ZdZ>63qiCj#oiq$Q?]/4o=D%KLUKkT.pAQWPH4e0GP""=q?[1D<=pj8j-,eJlbULU@U)6Vn#@_.0)i'NAO*2kkZjSUq8nuC_12^Jare+niA$?KoB(EN'6jDU-rt9%drc,ZD%@k$b\rM^'EO"]YEQ!?6Rg9-`0(qA$5OqJY7Y.\.jM9."#)UUgH5Hr(1JNMJg4+8GgA;m"J3FlbOH&BqMl>GT#N6BMoE6h%/TePUZ8,_6W;naaK68XbiY.D`(besFG:.tO>AlRSk.6rVUNQl2+["NnCb?%1`eGipKgDhA?n/\p:e."F^.U?q!%jgQ@Icfe!<^o/%2G5',YC-hK<%>[O^iZgb\_s'PeVr.?g1/',)q*r`nZX3#V0AK."+#K!GnU1bCu-q-G3r)Wh.3a%A/Rf_TH.]%cI$l&#!.rYoO9^+%lN8,Y0\HR8'H;9Xb_R8%7gLZ8f7nt[oWPZeVd)"15OV!c#,VVJ*#>j&B(aOJ@LJZb?2t15d0f8cGWlC4S*:KGM2jjUd2G^k*.U5B%N5!ZE^lLL0T(9>kkd\:kU`LkUD)pH%7Kf81r7DKZ8-=kQHV45]:tl+NEpE@q&PR-k,4N#0&+leO(=Q,C%_us)G[)^>M1\g:\<&).%$KrA]i'W!K&I>L'4?qa9#d&TQ<`EAXCiN(`aTsk"k7U.!10@b);TNNjUi3$uqV')Q<\]IK6kNf;O*l@66<JJa[an&Q;"W+m6@pgY%Gc6%@ft2!9fjP+n'F+%h`<H?3l3Z\>k.]4/D0,3nO+N-!,6H4YKheE6alio$A$N*"A!jNa@k]E6aYSmB&(U^hP#A!0N&10aHp^CO%d%t^rFa^V,==W?Hmo3S\"!`AOg>c#YZF#h3o*$O\-&t(gLr4=s>786fo8m!/2\/$:-G6RsV*ji^XJ7Tq?sk\!Zl+NnD4?(KlZ6'a%7jX3g&89+#H$M;9#f+\?H+Ba\J3\5e-3mqX==jOKkR2eA[Uadpd^(d*aI05l.2!iQ=.sgajB3f(TG;<2lS#8qOUIIDQ9++/TVVl3%D(Yr1c@l4eW%2.[!ZI3Yij0fnUME<("EgRcU!T*I!Z:Nn[CP?CNHcNL!D,)KCXHs`%n/b<+;0L_fb`5ib0j4;+oknE4$KeKH%?IB%Lfj[4KGJ^<WPC765[@/n&$s<`@6d>]&f<=9Q$`S)j`ug:kMm9[qcoIV-NI^#1#d'Se4uI^1Q9*a!TR0`'n@i.KK_-aID)qr`^36F%+&?"G>O1i_+b1Sg[>NfJ^.\Rf`?@GVCT;p("Q%5h%KrbH5D\hWa34S*nQodu&HZooPhddq_]P9Bn4c_!RXie-/\RVcXIL1KR&0`U%^qr>UdnBq5TPgEVKM7K&ReX!L$85#n$6rA5=QTJp:rXTOrLa_SJh9A2#QV*9bER9<#&Sl\*tInP3`?*Q4Q;<s^^/Rd`Dpk6!Yrrl%FSJWsH,-=gNtl=2ChUkTdFO(qd$aH(!6A(MZ'0M7>GgTTdMRp.*dB'1@)ml$JTbf/*:7&7K5-k_bX[l0;/rm&8E;0l+3/,:gcl/#%@qU@p3g2!0N)bUXI6).aR(=:/k$qq<0)1f&#U;7Ye'2aB'uOK\SKZ.EL3@IjBNS.Od1gDPlaj57C<DAA0L`tD*G2QY%@ielje+]b%'b8uCRcU1m9:M=F'GBq*;+5(,7jm<[QsLn2,<;!_[hAE'C#;t]$YH0d]YB\8'f[p^TGcT0)chf1PA@J)a+m'63q%pD_cN>fD*ld8%3a*%6IInfEl]28n#3U4[]/r7ek%hB+5aKOH6H8Mo\Z=%;Kg)b,SD*RB+WVt$9Wan_gRDNb8l;.B"_a5A>)JDQ)Bagi493QE1]k+:%^h6WE2@,8M[_kXAFkEa<'t<pRhA1YL,m?UW"UR5W<^>Or@n]H"UnD4CJV%]:JU(4@#GA/1?-`agJY5@7_J8p6A**=iTl\K\e?l5#%Ns?R_*6/D.p.jPbnB&FfBFX'qV-oV,r#dH/*="(.MBQ!-F/"[TfG2>aJLDe-BJ)GJl3[Zg)A>V?E(hb>.UkmQ#^0>$96mb@^hg([%IJa[b?A>MX`U5hiF_=RM#JhbM1:iK`n*mVrg#M<1GpEi'T)h!jNZs:81aZ<7%[56!fuc*B7=3!Ni*BM5"+@W!TPbkTZ\60''@\ok%Ne*TJ4Gd@s@NlePGZiiOP^)kW2\.HYTW1#DSuE!?9JY1lVSq$lJ3B15-ciP:TJ.%jNdr)l&@""u`9X`.ZJF0/fJ*t!(,%bU-]G\<%4\NIgp#/OT`2ke\B`KjAB561P&etH'bT^62gKT7Wk,M7*J@FH=X0?)f=ESjiDI5jEnJ`Ro+k@e*=TC0S=3H76DaSlr/0()]+Ig\D%-'J+Z+k()3kpfAd+Qft.W]8NeKQ_8gU9VhJ*G--Dg^#^5^Q?0P).pAuIZe;87A0n4c5C^Z-mXAPaUq%$#OC#'d6R4[@J)YIi*ea>%JA/!-_,=N2TP(ibN/3/&e0-!4QNTe/N=8#bOJ?P&_alJnnsCW[WiEpI3C#>e!r;a%#%62sGsj8&\PukF]Xu:HQG>b^/di[C;$aOV%1=^,jiTo_[0DDoVko3:sku'2:h_oa)@/beq)MNBHl5pJYd6S"[P"TqOPDBcH?'?:N$Casq3g_ROKYWHK;CRMm!i(E^\^_GAA2hkn%\,a=![bC?l#.Dm`'[p"JV;%d[QR?m%a5lsb,YA)#*K6+)<W[uWXTio?+i0]@,=j@6TYoKA`0g\4e\EPWK\'b`?!Tc@YU`gFbEsc3%3?K$uM8S-UT+*P:G6X_B:Y&Kg4`tE'KNqJK[SV4bX"[Y,OCq",<IC"t'FC#o.9afK)8Ro_*?oVcNPGn\VMj`sBDlJC@lONoC_Cc3%4q:3(^Z<QD"ChnJWtY9U]W?Y&^Yq8c090^*1+4Au;HiiVY/p"*YRVtW8t^+-(TI.\*SWG$1BjE]SI<KfZ353,?7C4&$BJ9=;%YVd%S!!Q@`H(2Y?VLF>MS<I*)Tl$F@*eHm"hg[l:N08CY@+_%!kbGO#`O99hsq>Kl@Q"=USo6OoH=;YMU8rEL-B/S9YFOZ369YtTHC*h%Z^<_(EVVZq>@n]!W-h?--#Z3RUJR44?[2il#]f&D+c*E?A.4QM%VIH5`0!DkJsO2,R9iaVR*3/0C(j49,S1#VE;Jd)3bANE^6QT.%8`kA>_MtDFaJI([e<t%lkbCGg`.H9l8PMW'9uJkGqE4t>7I>)C$-9\*MLeB=F::_i[h<AB>0R4c;1ssdTsnEu&H\Smct<6;8l'+'%/rr88#[_qEN55+].$JT?B`2=:TF2bF=-?dK^u_?-!"ULa(e#Dn+b5(iT?c/Fi&1/JYOSB\#Lt\RcpR2149X1.G4ZDnF;8,eS'lbJ%e)3^l^lRU=85k'N?r2nE^f9>)aJDR4<<5R]RBAmF_B="9D6ki#-qh\F1dck?%YnJ?'jd']+Q,XuMDn@Y_);>)iD``o(/pXa&f_dO%Eg+m^0-b(2R3W#2]N`X+NYL<35S<4DBGJ(Q\t6qKg?QNZeTU^[Q*46>1h'&"JKc6="Z$b2G6k9K;gfsd!U..c!@i$dX.#&Dr5Ree%7M+bd?Ul/8!"dIY3"ab@_Up^<WO'_e-Nn&JP*6mQV?08EBB7>?&2-f_S5*pb1^'JH^%=i6,1u$.AG!G:JhejVM\R/3o8uW:"3>\.%qRf=g!'hYZ:Q0"*@eQG.Ve#uLVs3c#,T5hnTW>8G3GO'':ea]Ak;Y;l[J705-0!'iiHQ7gf1I0Qnr,h,'=h@A>hA_%;enpJ0PIO;%-NWDVin1VI\M9*WLc>HY/EDo"<[2QD5?Rd$9O(?$FB#&j7\I,L6a:2+'RVLK;O@7dJ\FPs250"=f2EoU^(g\Em+p%i,RG5-CK5)X%.TY%X8M%od1k5)=g=e;KYfks,B7*]Q),=os(ejGO#k7BuG=Iu8'$(m4^`&#>)OUc;^7llgRYGc*jrtY(:lS%9DNor2q%AES=/Dqn%DBPbn&5_knQ(h-4.!;bK29d8,L_em<dL%t,6.;j>]aA5sjm.Mg:TgLsA&Tk.WPFhX.jmq5`aH5eDU8Z?8dMZ]k)uoJYcXaliT[HA%";"oFWl>cV4*WFph1Sb&noPAB*BBdEdWZF7"1CKh,r09tQt$LN[Ks%TL9Rk_I[aS3!_R*kC8(gUAtU*1Fq!gHGo\4VOFcO/E^)^!%6;N<Zak(W;n/7SqYc40nf:B]m;@H07"HD$`pFn.`X@[QbY-ZZhRKW38g0+McBL+(URu@ac=`B>T<bH@aaJUjQC-IY>Z+XS0dAA-N%.M9ba\*Bn/O_:W\CiuEV6XQFc#0-HT(sc-+JSH&_Uh8lZ3&Lg@JqiIX(ABic#i_9H-sp)<5uF,nX7C$,kZXRP,Nf\LXO\(J0qJ)m%iEd8mZ(o[2co9<f6D_Q[QHRJ5MWgF\XU[ER&]$R'Xr=BhnXDS@;k\-!c5cJuTX%g>Z62*V8L>gT=SQnR4uNjTVPD&>#!SU]W@:A6%LX/j-A[g;+iS[(0p-NVe?\o$)^16aaW&%V]#DL9E<V26qP[.Td93j4C4j>l#fm.[5D=AmWpg=5tS@X@YB9Y925`9gl+%,%m]F\hk%U2pX/6t#O?U,>>(2Y,pSSk<(7H>9<4"bG,;pca[3-^L5//>M*;[Xp:VA1ec0<i#j@hLGhB*B7KMKYEOd3HSZh40a4on;4ZMYGPI-%_[QTM*]"X?+7a7h`jIda_8=eA.4-bA5lcL"?bHMlcaX!(F%Q_:io:"Ql@'tbnVmg*BeTU21anQ*!h4I.0T_h,M_ZD).MITn&rZ\P%Psinn&qRlnbLC1-1;V&kM5`c8FKCk,ln_JQ:;@804`j='HO5Z'MII$_'?>IFN:P2G5-qY]Bd!"7/S2Y#b-.!H^:l7fht<gX0=i67%oD<_;m+@8K&-"dc7uV;5C!T/)>,W=WdMOS'aBCW[_Md8`?mu7E.Et>tgs(U:Qp:!-p@Qo.%a<i(R#c'Qe$ib\CF8'5#>`&\P:=eV%_hLqPZUq\XT]^U5C&*E)Q@a!Q\8"GZ[W<!=@SY.U="+TeoKm,99X\$MD;=ctWX6:j@HoZdJU/!_3r'5i\r>1ICqa#eGF'kdZj8'r%f(W&4K>8FB^'7O$0EN9>a,7$U^sZJhN&c1@JT$t1dJXc%2GC0JP&'P>9f+E'WIu;Hp/Z8WLbBn*d4GQ,+26EM5/IU#(;*@[6r6.l%$@#t]L++(tf's%Q(+Q>A'3!(cl`5RRE9$pB)X.("GgB!Q7G-"1,[72Fg<g'ERr\4e,j"n=QHn[!oq<_hk]0i'EgjJAoP7$7o(3cM%ToKbMX[#s%U/M/`DH*^YgNMr]fZMF)5Ydu5DgK'hl1*nt)<`Smd5U"..:_crnkq<:s&lVu41oL7mQOd<'Y?\M(Jl!&Q9N')UAN+L%?1/m=W,mBR2]^^A7%hAs-nf<HORMgFnl@WW#L]r7;ebJ%N7^t'Z-&MepUmf%$*=ON><390hsd;u.@*`\8"`I%ZXQugnEgs^:b%=J%B'hj]L0-KBhtHa).4^]4DYr/)[Ii8V"KHEZA4%LA?cu?L^$ru`b)r#^6CSC*$mmPQeM5]3Qjin!%KID"O4I;KO1)7<%'5gVD6"$]%'$N7mNI'Dh[B(uFiQH1&?Gu&VKb`f]0q8B[GfSDJ.>qZ>o"@-#pY=Q`ZZOC@_#[bQCuBY)%@0gC^CDZ<YnG.`C2`@S;YJ>4]O^4P%^3iJcPfSa$%-3>V#]0>u5[b"[70JXbF)ECmhpt);7q]mS=IAI2Hht-@QHoS%g<J)9:naR#R/`k$U/?;])=6X8,#R:Of/Ga=6cXD!%SJLYJ;(O_`19`dW&<GOCl4sC(V\&\j/0#_e;!7V;+]D54/Cj68!#%0HWO]9eFa6Wjb@"*f_=/l.=D!4KfchP/*sB9=WA5L_VWuOZ%9-MC3kpip8o6BB5U&qor0gooK3ZYL/"/Fm6[crIVGGWT)prJ=jgSPFQU.<5[QqBj,Og4l%\W7F,d##F+8h9u`SY=(_nG"u#Nu.TT%dag'o&TlWAl3MWJTMg/4jcrCf>m?c\1o[#O#]>>k$1YD:YL46;8LZb!d/bT)[1_[aSC-:a)&X)4;""fc,cf"2I[@n/k:i8s8H]qM%aN5X?5*cj:1BPGr3a9SsCgC$g'X5V"?1/TjEE/lsCQerRD[u>@LQlpe"a5%V03Wu(Os%AflFtU,F<h4*)sC@L\J1t/.PM6TI>\bG%6(m[mkgq*`3c5hI"cHId2trS?l,IYCZ;G\SImka:d^SK]ZH]ui%eON]E:l+,XR>I8'_L(KNWc9YJmS(Nla7A/q>6K0"e#WYg3NLe%hX1B4>Z$!pYNC_GT56^Y[mL!pD)XuPI]kL$o!J^<q;oB'SK9msJRK#Aqr:O5]TKt"/!^Bl`^GgK;7k9qKKX^#jbk(k;=k:s)1=LO%n_(3^(eZgY`>?42'>Q\[[s+4@qIcQZVRf9+qs\:kp"K1%7'$f,iTdo8Gtrjs>GItC;c:#Qq2EbJk=b*NI$s;Gr1/-TIp]uR8fN,R%cH/pncV-EmFpi&V1D?k]bGWeGrtI@]jo2dAK!CU<k:D!;UB;sfT^$3XRT>8'[o:La?Gto<4P1a"_Ho#l]0+S"jgoCq(GMnso,35!%E@8HhkN]fg`.5UdG#%po@9=V)T>s4LoR_.YeM!PgQ$.JeEHeHDCA\sHhk9Kd^O0M(rm%H*C7_2\U\P@1mG2quL']3\UldoT9Z6kO%7&C@gR,e["j5T.c,Q8#bk#bfoHfo?^>jYtU?d<ILrUHNu4r?+ONnVbMe!a]G(GMi[`YZmqIhE50U])D/I%gf][VIAkmR_o\*i7OH%5@X]AGWE8%@Pp9hY@ZSI4O,DIp?$E;$f^P6RCDp_nFd=r%5<Aq:]'Nfk3pR.^R$tcZ^C/eC8$j%H^VL4\U0aVQaqI2];JmYk7Y@Q%k%/W.<bA#QHol^+mcF!6aoa?s2uij>nDF6bUilep^MfhE5-p@ICh:t,[E%NuKWG,n_Da*:^R'75E\F:HhC`81P!pi&9:*U=D7)Hb%;/0OMLc4L]rnuk9hru53=WgN.&rO(i(WK)9C<sFmbCj"Fb^ShH8KI5)R&rSW'&ai!r>FUKo=am";?u#^krnUgQODU7>6bDNE3qn-%r3Dp1mAIG4(.E\KT$c?:YOn!&c39SthW/%f;pj)T^=fLLkm:t"U>IRIlq8_?;pT.F`HQVs2#$1`QU_deB!5XLd7J8jWS5,dBINON%?0/$4l\1n#YS/p-M%#nlprb&\4S:Gc[ncL9_[Fp\eb8L.dqFKlYW$mV3*@A8e852ce44cli>nb<]GF&NcB^:Lcg!C$TePXZaiJPF%TDE4J5,OmUr06%<kNWkN>LhsKT!7ul'R@0[g?Vr[l&^3\F"\Q^bIKX"%]M&KiM]`cs(jW55Vr2lnOAG$*HNn?_uHQn`?)BJSQR_&%3qH&0K0d8AIPS5"Y<R:!r71R_NXAAaaAHG$PD#b.o,Hp5p![-SrJR%6C>uV?koD3UpX`VGWTURJ00r2P<i4TcHp30Z\q"KBeS)AE%U\:>Eh5R?h"U(':l0$T5Nk=?Co,cmIM`(=lF6g2[@H3lk'$[T4kVSn3,k]re#/>Otl"u=qosjmsEXHLeQu$n2/kMhimPZ]aW^liW%0cghZNF'.O56&dGr&@*h9:$'NIR\DI&7$'$BZ8;\@4p@.\t$krbtFB3PC?!m0#)"[`,dQH0)mH\bg_4//0/>+81mPjq,SYYl-a"g%cY2_Mpa&Of\NJ"_[5"5K_rS.GQj_8.=ZXb@qHT87FQq4^da)Upea)<kLG?,WQpm*\btFB5PC>uB0-.??R%KTQ1Y:eSMj)CA_cE7l%5qe%K:VsqVLb#u#,(,.C^PiLaN=%o=SJ;MtKV(2R$gN-0hqM8efW4#d8#02@Rk5bNar";%23gA>]HD,F\s+kBc/+_L8[TG4ReSO/%[FCDdUfo+q19!1p;QVk@%l6R)'57gsd_\<M]_qLtU1Fss-!FoVAJ-SYBUM7mI#1nmoZ)'p'D?mpp\6>#=A(gQs3Q$t[VaH/)t1PS%D,O.ngG]*%D.C/Dn6<A6R+$Y7ldcL%,<"`B\i%B!k5K/*2S*`d+=R!=WS]FmII.f1DIL;'CVOrIqb@n[PAumKc$M)'V2Q@(DU<*E%DI*H4?f',L5nCi`9](r?.,prHD]lP(!b*KbG?O"DbV-SqgPM^b$<r!eTJ0T[[rsUu<lnp:>Vf)hh?DLsVr)Epa=47ZG8e`d[60$:%-]M_boOZQ$b[;fGRH;.8e\894<6&]*csF<]-Gf2MdH^a3\P1cDgPN?=D^:^,:igOHS2\1$5!c=C]-mPc44W'hk=+78g'7lCoIp)F%'HoEq[,tZ0>pdT>ofZ)>_b.[&*&W',RI4%d?TuHDNnWahGrp9#!maqG8G^si-_()*8Z'4!3#iG=)U356[eIuk)U0q!P(]<ADM^90%'L8!IGA1AGB\KFg\FI=WG<EcOUTXX?-RD[*4!X+-+#=(i@kB>(X[+Ab2q;pA7:ZnD(o2c:<"aG,XM*RafGo)RK<9.YR.-hPI/cbO%M<R%,NHDbjYFf??8]?=arI*,_L#4T-W*s9F0"rdE@.mK1/nO1nJ(e/];,TB[QfcCrU1B`d(+fIiHHj&RR"`cI9dk,;U[:PJ4>V*L%,f6W;o=:1lQSP0e[D?m2:.@Nc,$8u:S_W7HC;qW1c8A&9H$;Q%,5,8;,lQ"Q^5.d+(ple'h/JU-f4VZNe"+8/n=4_$3@h?ieN%ge%R<-oHh?K?geX:k1RHhF9WcN1>d,1$/3MT-[+G)6*gRs&-H<gMSr4E%]&0kH2Dd?(be)7&XpV//%52XA"p>)QkIbAq3St9?`h50"&%T'iHP]!r!l1r\'9/tQ=??";-k=?#nsY"eeh+_di)5Ga\b>l=^E]g_k9[EEsrn.M0bfdf8KG:RN9qYRq?,cpU<?T"/'(Rb$,A#s4E%a1,dpJAGRI,\Yt=[a"j>ibe[U+(t:&k$=uuWI4:g)H,I.>SPl\/TPdd[ua``J(Gr%[P*6m?6=iQH@'Vq6:3tE)_K?\nu/gcIN91I%TP<Ld*tHB&^RQkaQ=t>ZYMpJpRa2d@RTqm+.sQ=as52b@#8s.>+J5)%'ld9gW"]p0m,40"h*Iep4@o!:'(a$03-L1r?Ud-E)__06%HSFMb9^?tJk-B6Q]SQi\3EPKfI_&?X*+.m`Uh,jm3QhCTW:S".$E2CmhKJebYd9ZWJR`T4_T"J(DJH5;8G@K9Rl/dVQVT41G+LOk%1^L_l5>qqlR-$D4._-ms$_Y,"2qKT*Dn>GAOb`tgi%t:;K*SC9!8j;dorB_UFoH-'3G4ig_dV%3b[`_1r<l.8:-GT-H#K@6+5r86%i^I/;kHZ0Nc="Pgg)&[5[).H=Dh_>p%Dn=50riMaWE>'c5!S8Cdn$*ig1[nJU\8t"2#cJdh;A?tepHZEeSL8Xj%eVs1<4#CC\#[3%2E^62e'G2MkVSq(chhbQf\E2*^O0WB%BgW5\F6>9r+W-sCir&3;5;b22AXGbcbA?l^"[sThf*h>;DkfLX.E[<d,Yc!V1!jPV2OqP%VUnp_nbm_K#W$qK`M,nV99o_Z/L#T!j[/Y^VQW]>HOj'K*iA9e9JbnZ`AurQ-M<iK--n>slmV[VO-4/QI]n$UZ=HJIB2(0D8tNaR%F+9E*=W.g7/RrWEp<J\ZZfC*4q"W&5<H`b[*?S(JfgQr(j5Fu&FVHes50f1LZfC*4q"P(_&$k6U+!6nQd,X.(^CY-W,f6Y?F#E,I%iA-r@V[eS6)UA8oa/@YingT"o4.Z@XC$1n4,Oe[;54OWJo?*mTib"ZaU.lDF]?$WaD:Q&35oB=H5g4sum9ZiAfO+N^h=$#l[6`GK%lOOoI_pl$<U2^thNH;F>>S`=BU2`DDC0<B2&Yj?P(meArmUE7IdnbDAfD&^b4!'sa/Kf%rE;a.hGTugN_@HJu;og?;ikj\<e[G*&%2fX=Q<&RF84P``>`tsQn^Yue((FA]qWF@`a2_btfk%N$(L)8c&bW<r$ht1NbR:dBp]E$FQS07"S8#0`>jGsR<AT=2tMqb0Y%E30`%&4_InZFJ/Tf$*,3=kk?^gLP;n/8gZjD6g[rO/C<98MS;<:g"@pS&V\->h^e:2:\SG0$7NL^#hJpQG#LmhLn4n4kae\c\q0BSj\r'%-$&FM_)K(KBYNTEV0QuKqR8<*q0OpG;e422Rur.Dfm>M1h>(?fo?t<rlC0?NGupZF=ur)>S@aX%\aI\u3L/jSL"2`PF1a`Dg<JJ5%29PtPW:N[P^8[Z#A(:K?:*4YHf,%1nDe2Q6nqTN+3GNZ-p=ngV:"2/ab&C.kqQ54GhjCi#*_lJKc25UooB3*d?Z#NR;C=0d2hkah%&;"H[28>q_+%iu1j*]kC\@Vp-jNe]!o&<@r+NnA0e/gKn3>@Ohl2kbi[Q?9=0[XKp[)1ot5Fl5\*Xqo$o[AqfZ^fGc7]+](Sf.4M%gE?G&R*'!_Nm4k$'9gVF8[E6]T0'@sXMt3C1?hR@)srXjqr8/;p*(O6?-8D:);O"-G7LrQZ(JR<(I-Pe3lY'$%QOmB:L0%O#?Uru%nU_Y@oN/X^6Vb4mrQAi\@\o\oqRFg>`,]IXaZ73.fM):YJ=2W[p3->HHGA)0pRg`\g`D30nYgFEm\LFFVEVCiS=n,<Hr9AZI(AZ*%W@Z`GFY@\Aoa_OeiM_,12pu8`a[tb<e4Qp+>8Nuqdn_7&5&U=IJ_PWHm[j[:n<bPK#qqKJVVRiV=M=R_d0rn9iTSH9YD]+.o:)ej%d-ke>q9;lsps,c'I7@lESu)NQQc+r.B:-hh445Y1/7eQ`lFHi]!c=%dIQP/LT@lSgBjJlFOr7skmri#\>V^67i3H[jT6]J@]-PHM%en:<OkK-NE/dMBMM.DqT;sV`JnWd`OKXcuM"6Y@V5Q/n+!mori%3S:bq>i#V59oP=]<"#JRN]lD=:!5!FTuWIiGjFgeKA\Q`-%!D%Te=gIDjKX-Gr%T!8*tc;bd`VW^q<M*f*"5QJ0:8(2L"#GBkLL/(>rq_l)('"S>W1,0U)=X84g`WAp`Q4(>$Xe)Y<!D?,F++aPn+Z%CCOorNCDPmragq%Un:0nf9eY-S&I8I;3GR3N@_4e[rDl;'#le@R+#N_2(m&[.k]<:.eNV7p<Ld>b^pc3b7W5@`Et'[C3^TR^"PHH%bN;qG"lkc\`]:GrQG(7_>$u*b[lFC%__ld.iA=Wu,*MA,&V9NpLrq@+AI`)0n7<):k4&=3LG-&PR5oX&mI4E4Y>Vs%/mmn&gr8p\%;GSt;pbIm`oCt)%n+9:/O)O^mbiJ:GPr;<GYL[K'cOW;o6M@#EHeX';^A)Z$^ub'ih2=M=4ZuY%jJ/8!h>MdM[p8D"qgZkcn4(^E%Qf.nqJ*"\U)#:;(;=K;$3H!\%\<cF`H%S`*Yt`uZiI_D`_[c7@)c5EkO'dBf59@Xr:B:5An)U,%hn:u>/]@WN\)J?=;",IZb58X-%(+dWDq/-g]#6iRrh>Cl&`<u_\r\+N,('WpH6ZB]HlP(>b&X-VC0A(j9'%hr9Y4$`AX@=t%7"Z"j97+I6UVs$6g07l<$AP82MoKii%QV7*B2p_@GSY*?t#8Gt:]uUBQjW"$IY7dJ)@V3meP1eTo/&FU@3=p'f)G$[9MTM1XXO@pSSVDbo<5lopbPcl;=f9m(mt;4km1sOr%2*r?a`,<LAhnj.m4k]7^iSQ6O(4a$GlL0N(nmFRBb!0V4)Md8o^GT]@7elhd4?]c&3h>sfjZBE0].gX%I_4&Gjk]jVW2OIJP&Br#%Z:A$a7XbNJ44gTqLQ-J\GU$Rg@D]YiKD`QL4_)\i.6VA>Cr-EYm[uiEVol1]A7E*D&^jRn#@On9M]RbPQDstNo1h$d"XQDg&-"mD%=EuJ0Icpn9H3/`T_=t,CF2c25ra.ha#Afmk;GSX%ijTSpqUfM+:HBX`-(3m%P\M>R4P'o[';_(-_ajL[S#.Q0gmK8e"?nRBr$3Gg%mp!+h3ir(ePq0un6@]'fTtAbuc<J#p=JOa<mLR1eO@r=G`\N!JPaZaMCZuDlEodQ<k,C[Q.6\_G;,t.iXjPFmd6.DSUN0ksDT5lh%qT%PrRoo6&B5=1*hG.6P0W4p6H._J9ghB>paD,I)q=NudaE<`JQd=c[@q\uJ6a(Na[i9tIPdsci^"0\V3b')uL>TAn'><@nI(d?t%<sb?dCUB@:q'F"r[kOI]3/nfB9l%$N_m&iIf\:/K;Q_?<\a#i;P2A97[/,:.O9:C&7m*>4c2!-+MQkH@T)aY1aF[Thiq:E>:hR7#%lC?$g.ol\pR,[_A!Q..e&*.M%:Tn!=VEG;//CP>SK-LB@/HYu:mVC,T%'1Z>!/:Iq/@*@2B:Xh&c6.#QmWWttD,KB`Ykof--Gi0e%nJOfqf!f_'_2q]-E3(`*Ytc5)"R>,g+OS,/jNiq%6Z`YaVgk3^E#H=Geou);Cd75DO-VG6Ic`2%`S03XF,WIG>I(tqlM9#Gru<l8%U\A+s$E(AcoC(6EV:5oaStRU/Q3O`<l0*1'rH=qLJl+"1[(W)iEP1`YJWFlg^Kj".j`f%gPCNTMJ;*b^Dr-S6nG7XF$#jdoH$YU'%:lSeFSpe(K?%1K4c6cd#2[Fg#Nu[rrS0Qgd#6)UQ5'A<54@Y6"T(g9\?mS!^oTW5#XLWmLlrXO4N+c@&UIU;`0@@k-?5[4\4j0)m%n]5LpEW[=BiHU*A(c5Jcob+]>*"ts]$_9LgE`a4sY^sa^4mYg"XaFjTi_9NRiq\GAZ\U@FCmJ0nXG[JJifJkg:,l!"KjIc^Cj<Jf%dH])!3mj=d!;Uu:7N;foE'0="Oi=@e/TA:YaUBFXG%&MsORp)"](m^t9`m;j>qjEn_FNahJkt5V/j5.Ba<t@2:KR3`fF1"\+>2OT%>S/G]YFCM9&sXN;/Q!W?q@K@kjfi3m,$&cQD4(e$UEZe?L_I\e+srglHrRPSmq[C%/EJU4M`QeN_)>"_Y9<#e,l&<<6uH`6^sb(f%g-DTUg%D'q-51XGp#=10>;)VYQ%XpfB4i(h;dsorII\!!ilZ3F&Q?d.C/!)REEs2Q"\\Mq&.4+_H]E&imSk/Wk[L&sW$i#`b<aS:%A"js:nqf4]/lO!)f!\__1$'tf5G#f-oD4q%Y6\b`8Z:=b2Nfg=+9,lVX:uX$ZK%nU9YEDAGe.,A+@klA.=W'I?)jf7C@Fof3%i%:%c/^UuUfKd[\T/BWNCop3*hBb;prdUj-7ueK(9Lmgq:5&ZI1p%HMeOcB+sCQsWCDgd'7CTe`[A:cO7(#c)/s0c_8<TGp9tm4TdHmq%^PsGp:*:l4Ag(p4S`&<0\%uN[MirlpG\1i@*P=p0-9%;)?WnhqeI\uGmWh5H#>gnHNHQ5:9faE5f`niO>?D%TQ1e2*M\+Ui(i;4G%<HN:6NqBihN:E0>OJ4^#/re@<VTE5Zl]c-\>qrH$iie_]5g!;N<1:OeRM62uWs_^[5>]XGD3`2[fij3UM'I(d>eK)@-,FAo*==B<%SG;5dE0QC+'4rS3=b9:aG,+$7G,)sE_;St5M47rgQ^^P`EW1(5dtu1F4V+$maO47YAu9P,1'i^MC$qKp<1B4OE&W*@C,)Qe*h,&Y%CkWmh=u.SuNa>hK[NT&@/M!1t*'It]Uc;@-KU6(GRgh<MfoeR%RV6N_gAE++jf(rsf>CCcEO6.e0ED^Ak2ADEe:K-L7r]bFnqD$c%?/(=kiPeaXJn,!Bs"kTF]lW3A+`VgjG&t'!@4C7d@1=.iq$ndfMU,a`C)bW\M_%riQ7Lo+lLKDLatHirrTA.H!"UX<C%qW*#@,lB%>RYd#%.,($&&CphQZHfH;)m54.3Bk`_nU'XI+.-,%DG#.lPg%DV&X;tgq!M1?EQ*hK7En=U1;qoFPtW-";WKU@OU-s:StND*P;6V%rFab"s.+(^q85LFLnU>U*5WkDAB6B>0&j^++D@El5JVet,g_T10)X?)oHJPe561e=k!&WGF/+QaTd>X6lU..<I]O&Qlh4F&HERQk%e=<tqG$01>ln$Hq-f8_N8!BVM%cX(#fOa155?gN4s"AQ23,tZ\O3d5`c(Nd/Nk=5p<?%\;*gH3Pnr0Y0EFotJ*C'MlbX5ufr'n`N%59IiT^jj@$FEA-Tm4`j#Du!RT\G'WG0O-^"aB>-/6X>?UcT.HF,8hj->0tgaom:?5!Q5eOdr-:_kG;M-;/je7(H\i![`lWG;p5]<%@j`6ZQ'41WIdu,VM#?/@&mn;O=P?D*s#(pUVd]LEWObV>IJ(q9>90bN0Lt0qRcEA*hn<,`p@J&uFkFK;5O(A`@VONcVsfP7F5M-2%.u/-_G3SMSY;t1R(VC33ST])%A[1>W"\UfjT5pM\=+)+S>S9OcTe:@l[UWbhpq1>2NMpo2V(Y2AjJ5Ja@+`2=hP@l]RF%:YSr?aT%I.,k$r1-H[>kD9C,/IF2f^Fm:*7tZ17U(N=U!-\(G?1Wrb^o&G169lCjUJ3tfDVA9/p[fZE7AQP.J1=6#ek@"='I0JOG:AVPnE$>%,i'SMmpH?;&)0;f2`g?RQi(IjB@rX1FUXVt&#aA*aI`mX@6"$<bkM,G#:C?<)1K7bIm!#'HXV@O'@0Whj.+8en8C0n9`!_\icr^6%@lOf#.t<;u;1F\bDdYKBj>NQBdd4>:o$'@e["%6Di?=!dhGTPp3jHYI_Tp'=W7l0-p7%$OHC@4sI+ibnF^`MQ@&"XD)1T;Weg'm7%H9KJ7dk'Atp0mT%INOc"gA%MgEdglC'@QDB3'>>JQcmeUT1mDQ57aIH3(j$2"9!5Ch`QW>cQ<YnitJ7dN<JgSn`U**Hl]n>?/(?Y%<b!i;ml(G&=R6M/a+Wt=pKFh:UHtY64D>5n[Md(\>PV_)Ipks6LP%9Sg\lZ_+0O^-rn002fKdcb)B6K&FnGaY"<k4!0C8hQkA.3n%W3P7"NB"IL:fdlA_;uN+j>S$k_f=]jb]!5OQupO?T)\Zu;^UDhIgLJ8nGVU@0[oOAoe)AZ)Wd`Eb2h]hFfsLkUXbf@Y\mrq4>GCF%8UloH6.u`Wlm?Au3b]Cn64-b3TQa.F,@;@MqO/'n?RZ9O-]Je,^p)W8G@EKPbVL]CSjscM>h[hJ$t/5E`GfJ&%gu8'K7nT3kT5Ld%->&RB^0RjNr[ZKWdr9V=X9d!3e73#e-Yg=UC,_3^#Q99u-]E7u\n8(V+1<M3Y2QI(?Ju#--drQhb;@$T-]K1JKk8s%+-u/N0_og@%WM_?GkFgXHWuDSR&qs-[rVjop,]#3TGZOf@Im:\:O((fF)kMl<4]uPj;nH.LoC,C7Q&Q71XbOpMps?RdFm\"e40S'Y?Yd<grQ)^]%[8L<Q4Qmig*qla!WaE<MI(dsG'SaA\(Ct<@lK\5(#PXfLpK'<R\Gg#e0Q)40Re=U+1*,PX@193/We\'Chq-ID'Q1)2\U?5<+$R,j%\Y\u,bprn!oOq2fI/%N!rJhQZ<8)Qb262GJots^6D78:dIpTOs[-G>Q0WKSJ?Zt;/gb*aHS&<[ocKOKC4`PULY<'G5.Y$_gJ!F6<%*Z0t3V]u#o$P'h9ceeUtg8u&qT&"+nhWk"243.$gl`7oipK$t\d^[$hTQQ?#P)E??\@4>u*k[!aPrn<&f;f/<UJ^-oHYXsoj5[O^%e(jl6Icp_'=+gg54KNoir6U3pf037p=rUPc/,lI(904Y*HSgK/NRg(u'RX)ueZ:XaB?QPbB5d04C!")4X8MV`a'7kplS%OgE.%96%b=>Wpesak'0n*lpWZ>ms;9u+:Cj:U+miPWc+!.i4SYc58<sH/5(md.)Y'n=[hcO64FCaR#`7iE/l_RqZHM?"H-Yl/Sqo@O$k7raW%G%o=Y0Q.u8RMo\BqIoX:QHd#_HEV.[[G%bt)aId%akc'DgL7YQD0K[uD`3s5.iW]8^8g!!g`b$Uj.3]+c`?\&gq**_okr=6^\V92%^"6J?$/H7RY9HQpM-&\>&(g&Pq=o\H;69T![:u#sY<Jp$)gAI8YM=Fc^g7.-p`Qi_._-j8s0iG-I_Ks.IRegto;_MOW`O)i4q]X:%NO8egqqAQ&mp>Ci<P<m,=5eFIpWct.e'ehjP'XooDl`6)?D(3lOWM=8BE72ch<.lhF<o)D;QfH0V65Qjqi5nO4uH!FePEZS#K=`U%CQ6@,hofL/`Nrs!l1Kt_<i*H74kOIu?N9qPoe<jSG2DTRd:0g)Xgb]$o@D*jo=D;/YC:f*=)!-s`O1?ddUBh0E79ID]_BhFT""Pn%J,[aVmc2aHk0:s>lAaA)=rUd]idIL!kbR_7f):qpcSV>B_JcNZm>cWGm62GJ:JYh:ARk&AKQoYi_PhWckA4-f\Y\$7f$^8bn]q*5%;?(.^Q7R"<j.1K2\Du`=>NL>'@?O[5Q&QHC#sk)&s(FBXWs!L#YLB8k#Go+(VW=++[nbL<es?mg(J;]<h7(sph`oniJL$RLN1U>`%IJMU=NQRB.IU'Lm=f=i\$6.nt+!o-+Xb@b+%\'JF%An=A7cj-<2Y>Rh0:nNC\(7TO)JhY)]M.8_m6PUNp3n]T,f+Kq\<:&Gm657?%!XWp$W0TC"*)@NUX;S)5i/Mp\S#0d8ecY*WC!IT5f5GJLf'690X``sdK9%OnV.a0hX6)^]<cu*]=P8!L"\um]q!tl[Zs*BPEjP[X%eEW>]]pJ]Gma:@X!QF)')So#4G5nOA^UE.8.m6*V\dm!A?Rq%=Rn"_UDc@7M585g*rXh`<g<8(Y=bK-IO5KE[p%?57Y>N)bXR8/?%Y=^I6R_r[LCSg4+mlLHGcH7.Vd3;!Z]gU3DO,Q0^j5lJJrQYLd3@<M<5/5d,Y6jEUR'8K.rGc]MmcRZ6VO;Z9S@guT%UjV@cDg"+%a'3<u_ZQ"Qc)Ya8*-^8)G!8*iW2DrGj8,=%Plaq\p_'C<k-_MjG.^o1)=KW6;ct"!(]_/5KBDGVU/lYk=s)O`@dqt?*]L5?O%*>t%N5s,Fmhq22`k)"gj3BGjoA*dj@#&<Bd)&S\P4@b\h#KXP]*H#;%10W$-pbc@$i"gGiMW:tKI<ejkfn1gGiSepGR)EaWpn>+S[u[M%fLtiV7i$#&"g.,%T;i-:+Gb%5"(LNGps2u$)ERN]kdUeEh[$[@5;[78MYQJX5Aud1&ejFO7AHP+Z;V[iSS)u^:(R?On`HB1Rs4V+%*^)q!4Z\%3+9$NjPC.`U.6mUCK9Ht3UP;Qb`GjV<.kB936%,+m`c%P7FG7El78W=BiP(b]*rKNS>NL1DT!=ll/b)J5carZi)EQ:m%>1!VXj9&R:q*5QLU3)p4Vq^4ja+i*GC:\)5e^KI99ZKc\T3Ou[B/Sl@jY8pZf\fM'5Z0fm%J7M6Pt?Fe9SEj+BbfrkG3-ZDJ*^Xd%Yt?')BFM"JSTjuBo/ucAf8^&r6_;qq'0J+^?`%`(BU=g._Kp.(D":NXT5:2-)d@]t.3p9nHr;MG\8b;74%i<.'0hI;QlnMJ#JHAL%0Rpm@S6To9<5"1Sl"cI[OcZ.YCLV<1/i3iWMYUFI3>UrBCg(TIip*F%&3G\"gN80DEq7uNIj?W7S#+r-O*gQmlesHU=pJ)5?O*DK%Qn!l\ooDo*XOaT1/0#Pdri4;Af#mGh2HGmj?X8'\G&jGX@;ij14T9_f/;]`OkDm!sp*Sg#hlTu/]Lb--lJ]mFqrf9"jh8?Ij,_:"%83"6$eb,9\Q\3H.q"`\0j2[e8nHkKT_UA$^F_cEg_dFR6d]T#)jd(#DE_EH/NR$COQ&kV;jR_AL2r:Yo?GAV%2/hq!bMot<&p)gP%o)<&T]NKRu1Mq=XNItnIPR78C&!B.8f=29&r%:>E6)WR(3!7-8#F_deMbfrE;8R=TJ?.bFS`UfaD4/[.r#X0\fuY[j_jNYT3OO;/%`T!SH&''fbk][AdLPc9hQB%5UqYF&lH4e8A,%P>tFm*!+0ZWTT[gqcc+6V:u-jDc>&-&Rl/rT%Grl..saNrGph(1cpH9[SLM"0\[%ktP<Y\18u\rgn@>W,@"R)AC;k(;J@Gke6>!mZt:f4FRPW?O6OME[YSrFL7Y6KXe!?^k6Yt*57n]^*\Skrr25&X8:b!.>7*]ljh%"%RdfS8keYAZqa#1:c$>aG]6T-lGiu[)['\:b^BJHb5F]p\pU@6s(KU\&-"3HSpLX\hFmPV3F0XRC?`b=HEFfl>]XPr2Ip[`j(*8g'%TA0K$E;RGugLCu3Z4AXUA*`QJk`KJ$A$skS(eCMoM%G@hfC.5g-tk_LrPSN%=6m9NpnP52FFE/MgV4Q^q-J.6;>Jo=3p93%`gcBp%2:1l_V:)]J4"i><Z)o([qIHX,mU%c_j73,WZ$B724;_siK=!e*KUM3(>C0t:XKN-=7k^C_-a2r2oXUeUj8Rb&FKR.65u?6jiSHUE%5:enVZ=2U=0t`[B_7L5S@.!KAI^&-c0!n:@[!$eEnCs^nop[mX4!:V2JTH+Ke]TOqG'[Jun(kKoKQFQQn*GPfXhT1*le:XOXdqAK%^Yk=:o9aV`'gI#S;LLC3q/JI1>cHQ>.%K//$"WT)HhQm87-U/gJ7n4TN$t_)CI^,:C&9jC]s3.HmKHD!Io'higS0"und[47g?6T]%^>)VD+A3.1ZR_]ZH2$%TK?E57XKlU;=.[u]]\+?k*ksF67)Z]uT=1c%DK%\c0?_+1&$FeKWg/?@8[GPkYM:X)*/7GBX1Re7q!hOd%f'2.:Z.pcj2Z`;@0/>UiT>'gPfChBZ]n<"#?<R;5rihnsdMhFBEumkXnbWs#7'M5'kHMC%I+qEM0N)ApPG&YdY;ZuCV4O4D,W3&-%SF#(:CLQVJf)?`C->NX(E,_T']Oh"<EgD>j+95dEA.,@(mAoPsm_?84h<;<)Q/.e1$`.Jp[gu-XGAl"R/3S7HQ&j2@+E",s%/+SD%]('\0-CPn"AL3G`GBThmhVZ$?qbDS.lErS$"'DaIa8c*]p!N>ijiFr/G/W@f0lTPMgY0L43uCmgG)MnPTLPOaCU\2=K=H4p>+P#F%5HMWtI5KA8DZZ%3YDCS<rH[)P/Z^3=>ea`a]R+Tffe>/Z.Kea-4rkWE[]_oB![caj;SDqhiQZ(89@S$$XhF2<qdWeEYkh=qQT)UU%c*a[18o*C@)oj^m\bbr;X^/QpIqsXHFNr6o>CZ[G41]\Xl[9r`F,GaU%RH:@JJBEqj1]d:T^oJ\o)8c9W5GCHQ$6UoIsqkq?N2"O%%M^ao!6b9)7%QS:Tg1o8niR]IDZ01E44VWR)]?JLN$#3/W?1DRlrVoUrU'_s4'SQ<]oE"*A49t<Xa]jeG]HV;93\I)a6RO&'A/R)%b?KtmcLUg>,oECN?8$Tm>>M:)_8g$PD)f*bZ(Ae0_=_*\q]F[ZqF=aK-Wig,9:J?J5GH!3T^Ha:puL:;@8CBpi4)b@/U>2(6SobV%WX$k)O%E0HYs,g(YE[lcegp'AcZ;_iJ%oc:P_.n7BmQW(btmXYG;gH544R2E1a%XYrjKQ;.Qgu1:Bl0NY],8gB&0sGBa%Zkr31Tk%k$09G8nMBBc^b<3-f&#$]E\u!5JLKNUWI&!TWAUmN8tl/QFCa\]!hV/@!<U.I8;sD<t!>Y/*j63597e'F80BLr)W8deB+'6Y+JA<%B"8;\0<t<(42mua_oLOF06QKsQfI&U\GG^4E*0fe?a&:rnb^`Bi5IXIbMB:ImV.,qp)>Eaj1".1200Y2S?i?Qg2=0AYWKA0^1J@,%UL%=5D@GEPHiPYmnbV2/LJd`;5:B36fDr;@i=.nQHX3fpgp^'tTD'Br_9'Kms8Mjn)`4k^*ZnB(gfk-%`!?L"^md"7%Q2tJqXR,A%'fq\2TT",$%I\\[1SF9?8Ju7">e]1/K=+cg'0Z+ig+pi038+%edGqi_E](QIfaNI.X^V]m0tdHcgjASkfmD&Q"Ia"0n-Z[\&!`YG%O<s('5Z'7d,dW)QH_3Gck'CXBj4r;:Wm4=oC1ub_cT^5.+-i_'/$3"6IFj?WMm6+U&d/B?mKGh,?ZT=ZXsM1;T/!^QSY,1(p@DG.%KYfp4amp,Z=5=cuK>Bur;1.&[pWs;:pNBHbJ1-V"ZX0Fl;6T5%J44\H[G+8p;TZ@1(UFZ^+4LK8ip33\`T1g$BN%&me`gHVWtZJq%?X[Z$$W-*IgfCEc$=>c1Mm\I.[WUJjbmh7*Sk<@H_?nZ1_3Em<aDm%',lE-707)m094fK1P]K01/r4D_8!Ug&QHs:JIf%Qb<$tYb%K60bS*mM/2`uiih?fO-LKoR<W7MU9.cDD4:s.'Ibdc[7thU;@SHZ<,b8+@s;aZ*A0C9iV21"Cu@phfXafMFb[q0'B4iVjEjl9Zs0%TSk(=26=8o3/mu2rl!j]D)H;#$(r^eL30%UcfMb%(q*4:caBuccaSVP=3W+,i3GKm2KiYNma)RF/Y?$AceO5;>Ml>(nV@F7oj7J!%@%WrXhN-,'XO,+9@;DXA80#ampfAVYpKB-qlg#!&%mi-l.s+^eqqp_gH.r4V`n^1-Hd;S=o6Oqr3`eqs^LD5h7!c0*;SWA.rc6dZ%]&&$"IJKA9e=q0GY=)pY&A9`Ae&6b#e.pE?YA1J^/)&uaJ(HKhHQ=`Vr>Wdh0:iKS"1i.Jh(hMCa`NGB_#df,=9"=rCK@?_8#'NK%'KuS@0TJ)Y>f*0"k\"4ZIa2QqS,Ul216F4Kb&7fs,I"G5$COP1=D>6#7q/Q+rO(,.fNg)!54t&dRCEZ%9^m7`AGeTRQKZVB=Vc?k%Z!2nn*o@^`^:U.4]>^M(Ip?/,D\`8%#fZk9X;VjOn_C=_<LK/nT,%BQA;VZKG^C^(-&O3M;Mda*;1Z]r\5-?o+0WK@neY&Ve8tPS%>/-Cg$K7f)*QVKq"5..+(.Y9CEa?>[]LJMWd6_[W18cDld(/>=)N#p!O]_2sEBXq">ZK7Zg%7=R2Os]qStH#=!"\)jM=lZ=XMJo@%Zf:eZhG5Nn6F9qDiW;i(,?-2eS1>YtU1b<Qq_]"Sop/KFnt2Z$IO^i!ak[qN8u7T0>bca26>!E/.-"IEX,`g=!OQ6mFJ:u.>R:m7%4B].8kpo//fC+pTI1UADcsdaCU&NqQVD__\jrN:!b*a%^B?^tXd^t(TOGW]bAeB,sqa%(GNp_Eom5VhkCuiECFFuCE%I(Oq1"tlY%h9+2:\:jRCo'td$]!2!g+E;m<W?lW[g24mbDl(Y:8\>aCs25S-lfCgXCE;Ra5FeIGb"HI?L]+[Pe\?JoY'JcuAF[>"^BHaK45)rk%NN,5-/>ccH/!&tq`iYo=E:"(geQQO)cfd5@.@dimOnM0Hmj]pP$`.g7?QrLH>P"L$fVg1DS(3l[HA-N>9tq3kYJohMg+P7:cn4r#%euN021HKq1QK;otc@H?&)no97[6fY?iG2*WDJ+QNPmNE2g?D>e^0_E?@6f$)BHVdfFFpb[Lu3sYFHKkR\?SlS[.%.B4aoNP)J`;A%/[V%sBIR8TL?0XSbgEC`Hk0#e\I56^>:q(%jB<kUn!uZ-AJFE!\rXT\&AkR53k@T!jHDfahW?SH#6+OU2Z%:*7E=$coHQ4#<4d\q%d^r-okYs27cpcm)q7gtP^/TeIXC/!A"lNoZ,&0N=[>RXoFL<"dbf2.>-*-q(okM-E$8CGKp4G1a=C7'f984O*^]+kPhI"TK>(c/8%0+gZ+U0b6R.=KJ(1E`O80XA9n,U$_R:tB89/_h0CBft7rYM]>n-U6YcYI3=#n9=C!cWArml;O!j4D$KO:_;YZ%N!]Bg6dJ"oN'SE%pMY:&IK85A['eJ*E2\(RXS].#l'nbE#ucO/on9^$c2/#@6VCfkUSSR2<cPN%J!et:mm!G?,Ih&2$!)BM3cG#1/EDWIs8Dt6cs-IT%PVS$l1\8h?<a7-N3<h"[4F]Tq]Y%%thU+):^V9\dP5</_TD=PdH&s/ks7A861p#m?f0<3:A[.T*`G5AK2ui&*(4YP#ec5Vus'tS+%kcrh=TC9bcr<8W[^],ka+T'>H?ZWL$fbb#*H-_C5ARi(BJ"VPQ^EIAGH=$PM8>V0]^t8IJ,?d?nkRCr#9/J(`Zmic:GCKQSboa<u%n#nrAk[O+C*`2K]g6jRBd)fJ/pm,DHVD2g[g^C(8T.t(pp*[L<R!:hi=78d4]='(!7?'5I)F7s)T0F=[>`rklnl<-30,A6Trej&8%+JE2:)uQ7JJa5]JFmqY\@YZg$E%999iS!AZ0`78ZYT_tid<Z)Hl;gC22*-T%nTo7<TA7**s-)AL:4urs=?YeR6=Z+6:ST<-[$J_4%[J=hL]GfHp"EFs?aRXSt;/G(m-CXZpIU8A`UrN[t0O:?83$j`gVJNcPd@-W@]YNX?>'qQWr1AntVu.;a3ZHj#"$Er_%F5K7=-]Bk%L5D%baQ>Do6,gt*56N/S+l14IYFs3%\reh)]A9.))&acdbeu$*cNZ4p<.6$\5?"q'<)P*;1R[=278ftCkA-6QK]7*]R#EtpnUJeX%%M0kf4ITM#p=+^O(#aJBBk_"bG-.2bVU^*=n["UsTn>+e2Q`FJLq/_F4+<+NB^)%E\rQ;0;r1%06RLi>._eZqq_VJ-XkAkT_^Nnk%2=6L(i=s1ronR=/YA3cED-^[QNT$?V(M:Fq+ObmP"C(PV&s7$nXbs^J`+E/bKXU*@.AWS.*:874J$?$7bDbuN)gH^5!aNRn.lNC.%TlNIMI^TYo[EOQZSm8A>RG@R7DOch.:)9-0Z;=;9k+8_C-:cG@O[[O`IFZQ'NJRS3H?!LQ,R":=lam7#2Hi`.2^[j*S2;+g(OFH#%M!\j$H*-!sXqf%@MgLD-_RRY2B1t<bmT\g`2=ZH8SZ.sJ9mHB>>eM],Hi_s,r-p<9Wtgc@7SgauT@A.(MJoe[AC5277Hlg-2q)\b%2-[3#F'Q1JZ5pAL1k&-.q:>h[mdrRlA6#"Gs4=/ta0GpdRl<XbfdbN\K@[WjI"c3SeDSqjan]4u/ogY)s83D,7YeabS0?(%rq/YV%;Tfqtj'7U&nJcRJCU'2K<VRReU[XUl4d\@B&MEi\,%:E18eV.q8oq=0cVA$9^#i$DKkLF,JZfosa50dVD9_=c@Y3_V4:,NX@g!>%%V4I,O?q_Z\\f8J,j7VJ]o0#!N%)J^o1F*3SqR$r3noCuiGZAud]HS_1j/LGZ>Kt$C'o5ePM1Pt>OR*cU/"u@(o+\ouN?'IX=7h5S%j(8"Fn@ASGJ%+P*pSUo0R@GAs"mu@^X%Dk&Zt(,S7V1qQ^lP37%@<\<op5$HK+mTWoF1"K[ZVB(1jKeuJXD7""jP0.%o0p*Khdh*%4qKihOnh)`Sm<dm11j>*`It*@MBDj&hhq!,#p'l>Rc%?%>8'-$&oQH>Z49[\\M82t6XgKW=6XJMHk+7`DYr^+/+<ssXmkL2V7g"t%lq3a(.:pt,5:+X8#H>daD@CJ9/`4;Y\BM/(nNdUTpRo>3TK"TNo&%C5LEFBYG_hA<#\(cbBo5m"b0=JIlIB.2TkAUQ7VgaPnC2bF%rgF43R6G7+)nC`i?Ug%cm[<=cg1X++1E0nm9j@7kKd(@<cf!i$-Gig#ERfAH:@hL;M<6V[^POWo/T3L-E*lL`0V'FK_:_s"+8M>>%NhJk=M$QB#_iO=D?h>$oc4,bJ&/0!BfmGZDe8NU0P`eG`Ob`9*;g087&7=l1RLFLMZ()`f?hf2[_9h]SZbP=%Yc%T_,L"gmIm6jU%Oas&Fs83-_Sg7NelR=VUN6E5TT6e\=nHN-\[I\^Ja<^b1oJWnus.Pj*1_F3F$q3T,I3uB4=A(CqPgSn3X;*IqF"1ea!iJUeGjle(%;k)=5>a2CrJ%]ER8rjhMf#%t(9o":V?*:jr=:L#mfBD$"FuDIkrd8&s/c!FP98:JfF)W)E(V!k]iKIZ/NWjosEp?ke$&!j/d8#h%%QikTYjIT1Bj6?9589H,A'cu:5\B5?/]^V<kHhc\%d7ctDaMj_aJc*b<6:Cr]Ij"d"@Gs-lR^l+uiWkh0Dtnr`2LiCh<F/Srcc0rX%3sJ6!:Ag=_A:*i*ViP\*SY:k;kAWE`\^-5`GBTU!#2e:pSDG+u%C;T>qL<\QMQYWr9AFSFJ,Yt5)UGNJ]N:7`lcrS.^M9Fr\ZN6.%c7@l&b%E]>N\s_\fC`tQ[KJk$6=g%`8O$L&;jI5Pr[lEAQeq:3o5BI,DgeB6?BfF_0k]0`cFkVI($.MK6;!MCq5+)S/=mBUqmB*T%qB:g.ZX0c$osZaLF#cNr#r8o_1N;dl^u4XNXuY<]#,^@b1Xo%Q_+7dW&'a(MK8Y.PWkXhr>-(S;`6te\54J8BH9PiA'(&"LM#Np!%1krI"(GS"-Ee>npen;;IEW_2"!2^gJqb3q1K#LqWNZVY_P(/$fh<Bs&R<;SuoOONg)a$pCTCjjPjrRL_c(;*,<_pG%Q\n27]_Fp7%\hb3"BO40c%GXI7R'[r`OoCIp"Rbo]+0XmO)S9NE=*gE$4'\hahb@JC<mbW,'(:fIN+T!Rj=RLcBd9'e'gJNid<UjsRlPMm4XZ/a%<i<"5kO==PEmf<alBJ;Gq2A(HnRI@?,^K6LdN31Gn4;*49:)(l4fU*_Y4MC*:UAOHnY.7NMUk5LXf'^+G4d2l^NuD*/a1]n4hX@p%X=LaLTW^d#W_Qu.dO.&hgC''4[AqX?7/[L;9)FO1Wj:*Oe^Md=Vpf@+'^O(O,Ig[-9>.@Cd.NfEVhrL<Pt/Gb,c+Q-FC;6$WPc,=%?6k9Q]=1O3CTM;IDF!N0)LM($9(TW;VpW>2WhlXMgaVSEor>_Q:3tgA\Q5V-mHLUIdqSa4p%d&gCNYNc"a)o(lG;X&bm?S6;ao$f%Ri#g]]%S,/o6dHgOB6R<nn6A:,OX(?U8s?I28r\d1K5_6U7kNc<i:rQ69(s$V0\r.L\n>WVc[-BNt\.lg5m9>G,H(Tl[MN@GM;sh%(Htl44j?a*:-C/r'^eTd=Q@Hhq%ZQeFSZQCY"$,Mm7uDqq:W[!c`?=Fon'fhnbg&b9Q9q)lKsb$^D`ZoWLNT:UYTX>FnKO(9GU3K%Xg-_6>=Z8qhMg_i)nf"mWS;g4U?WHc_KFVX<CasMV^K_aT?]Zj\t+9Y@^DLuViOF7C&Jcu>>/h6B-5=co2Ln'lu^_crTJF9Ea8j=%W_T6(riGgmlMGcuZd[u<kf?nO$<9s$l!O+Wq&:VLI&@Y/V`HZKqp*iTos+?0j2lQcb-?,gB7IJuSHcQ@RaK0ZRr44g;5`*tf(HIj%BDG:]q#KgspVN!AM(X)rf4eqa2jL*k\6AWJ:?XOI/X)VH@AN"EWmeatj!]p_-13Ze[mMWB(gKPVSoL[p8\3\XG'^GtN@-s;.A\*M%W]4ADrJN^R3H:t\(6dftlm#fq4&'(:<>0beQp4r!f@t[8MCW&5d<?*;C#)Q*Y/)F_IA?Q4)cFIVJ%D6rd9CVVI#:t?*@SOEBh?Q6%jpBT$nK^71hL#3h<.Fc9G''YZC#YkTIT1_F?i;81mlfuc48CcUH?;A'1@G%=m\^Or-h*=4F?f4fc<j=h5<V6":)Z0c-6)ABVS<mY%m)ARc;LQ/!GX)/b^AUA?V:D25>$!r"TAENKJsIj7.\EtMf-KA*rV#Vg-(WTbo[u)qSEPFeE.)OTQ4;Zr5Auq;V=(8=T=*HNmo/lX%Q_uQX`jS*M1""dIm^K)YPH0`#Vf&EEq<6G&0mC%XS]l5kh.#qF[,.]L-Ze9?l[0&;P,`-m_Pkr?;q:&^lcXFBs0NckW'7nDY5=-'%T>(+so"6^d1T'\frk<>(s)p6O"+bR9=a]=m^J)m7%qWTDF+)/)Ze?h)ZFZ9d"g^2i6P>lQ"(X0:>f2UVr3,5k<dJ?PE=6C@M.i8t%&r,jnga`\OF*5EGZ54ZM)dh&Hq&PSZAj+e$jNJWTR`S<'Umq;P+@G_f%i[U/^R'o3hf7^?47OKIG#SWT-`"?JjkU+rbj2*#Vt&g-%rpoA@]@6!%?FNk/N??\7BZ1u8n!'icS6bB&$5_i(YLAoh.ApIA8DU"%^2t[eFQR`g9:`5Hhr[),;cYch\_iThEMW7\WDfmXqZcVr%.QU!3S7Qe(`O:CoVt"9$*/;n@P]mLFIF@Ks:%(-Ch^MY;>+P6<37n^Z>%<7J5&A__a.qB<ejj9F^3ZlRO^'D;Fe05Wa1q-Pi@Eg3%^'UBP\9u3/miU"+j2\pPlJ9#8F0RZQhso-hKZ<pljJCthd=(_;_sI#+?FX8-DoE)#pJjM%idlb&P^_\ZhUsdT?U-B'[juMm?Y1aq%kf$9W;N6kNr!p8:rLnfGf=2/NZO3lJFJ#VFp`I??K'r[id"7`[o_+sP6%d?5\VCmU6S.q'OgfVT-3!,MokgOd%R"'J?L#sX6,EoA%1A&`f$hU>9Us>T>QlSrbkJa]B";bt;"NonuC;jF1qu\k</Uq(8?Ks>sPcoZ'Pt$6EZuruH`fm<hP.ua$0?JOZPKl;hQ.fi6%R9`T%kA50unTgX.j+A4JN"H$9>!^.(>of?:hm#.)5JP6<,NL`t;LSEHP=<37$a<qDG,T5_$lYo>V2q'G;[sV[G#qAgBo$kD8c)+<@u?gW%J,H]2oD8'='Vg#(-gs4i9^+akd[bT;a^chhO)J7p%'.O)A[N<)6*qQ\a6#uXJ`811-IC"o*kbK4XGR[mo01!*OScl?*TqP#T"@;0%W?nt^:F5_sBb#!!A8,_IG>u+-L/g-]F58^FC<.%NLA1-#]LX=kNCpb%PbX[SK\cRkDf,1tlK)VD3Zq]7KD#d1"n-!j+<EoG5(E::%dEC?GFI"AcUrOjS#,h.]1GP-n/cE*`AFZNomUYYsdVb!jBM>la[$)6fcG+eq`\i?hB70">SP5**mf!XHnsBp\kofnK#fpHa>MB58%\DCt)[@Fn,Uf^IgJJM4*@W1]E1d7"Q3d]ob;LBeY]nC`^I'fkg^0.U&=mHO&5g;7daHdU==;&7hP/Z#^CbNo3DKa'_M&mMWB6(,$%0cB;9WkF4qR>6dQ[=ik2]"W<SPD1CN8b_Stl:O(=0j3=dFR^9^dO*l"]dqEUr;2k]FPJD2.s/Y]-bMQ*Od0j`=IA@NMA?&/)(HC;%eusPmNLQ*uj?4EnqD!FPLW`"oapZ2*HRU.qHt*7g,K@kKH*,A`)&o\oS2$j.ZTM_j"iqjlg+lnl3IN'HWuXk%.erheq_V9lTV4]Q%GsO6_]/QXE*0Vi(g8AtT5I0ZUQL92tX;T/c1j<^])\?oOn:&QOB4l2E-8dtTh,6Bt\[?Z6S%93='uPbO'_K_0q(h'_\gF$6779jA%o2SJ[!7?_'FN`M&`8oR_pp2V[;$!4<lEpYqlN[f`+W&Rk>hhJ&L4jhU:Vnk(&c/U9HbO6g")Xq?XM20Dl.42t+$'Y&WN12MMi[e4%i0B>)$NS4*,Rf^ge&GsH/X$Nl-5HTIm!\j&H&Tf,YV><nY!D3sOD4:V4bcGqd=dV>XW?H&D!:05\rMiHE5.bW4utS^gA>e>_>\Nf%:);4hf:"79oSo=kMaq#,=kjH09KmfdqMZgH<p9:DqM8ojh<*Q?Ztk`D4=!D1KU1=<X*u!.Q`QL.jL_8<i,sufF-eEr)L%8sl=S4m%-QZGTIG#ocD`D"u%ZW[-qGU_D41I5r559i^fCMRqYEeBJh=g_*9Y>IlR34=KfZ3F_pC!E,1LHbH'^5=-@!:Nt4'<m;'V5N*.UDgJ%X3tZ'BK?fHo*uRf1+gdl>HLL2cCIWN_s_*@)+a]6CqcP2839/3.9X=igQEnra*C6`qY&b.D1).>>fJk]FIt5@l?c<:5RoR\-gVl<%db@V!3*^-j>VS;eAu+mkGITK43^$aac&V(`1V8Ee>uo=mPZJk.X#tG##)iofO(:%[SN=/[To@hU9^MB%)=u[LlF)oE(Q0G-Xt^B8%X-U6F@IA&f`lJX^O\CL>ZZhK4YF=mEVi:/6[\GZ)M;LcD'Be*&pB5N=J2Jd`U6*Jtg9Gbg_2RX6HsC0=#beY!</OU^Zu$Tb"[T??%Ub$#;X"=nf:*2!)b`<p`FT_*OKIt7>FJn\>mO+Gq62e`3fs8rc&oIU3gQH79c[[<u-K=j1a,_REn@PkllXPdKY[2O?BROBIk&=2Y%&L;%+-]+]_Q1^W#%2',PRS'=AG4ncpQ6_p-mt,=fIu+B3llUSnm2/6DJgE),52[O+FsEHI/`hR%=jZ`dTpC]?1WDeq";E&cH+&+\%n@q*fY_r>>`Ug,ZL9,'#ATZ)@eT+OLJ[Zt<;.DO[;B[R/?M27<FnC=+@D7<a6=rq2J-B?2<1kR$$"MhPWG8Wk$?oSBmHb@7^o_Dl%e67uYo6-?aGB<Ma?8M[A[\p<4NpVB0#1U+*qHmo+rEd0/a%*i9hA5#)/V,j=P@Fa)i@V$XYB:Y]I'CuMT)(U1KrXRXSSg/a2+oPR%SQcNVfhoLc[fUd4T!oPS8#bD3@Gso7+h.u@mm9U_4T=bi)fFPe,?^O=l37-1?T8Z_qQs=`_iioB$Lj8__pHp;7Os*;O\]PM+Sp8*%\"g-1bKl4fgZ*CVhb/7'27s9NZ;rtq7-ZBHHSr0dcru0\cFH75[#CjC9gi(*'>Wj3YGAQN`1:^n]Mq?=3aAA\CT/<)Hsn7LZJNR=%PjW.pn2sG+RZY:EhM`VI9!cEhjk+*\(YTXndYQ_8lXC/sNuDM(:>6dN4="U['%U"j*=O.YjO2k?7+:<;dlHas6h"pn(obrT0RYBp%-,LZG5@!auR6/".I?oe6Il&_bILWgB/?b/)A`O9V%'.ZMOW=LAY,YsX608qE3-<.K3]%UV3-<.K3nRqcE9N5uFAOg=%M#$aK+?cl%2K7l=)0?@T4WM'#:?;nqD78A?*'.R6*O#_7i6Z1\.P^.3m:'uDSM>a,pL45[/mubn;d'sKF6GGo/2@F#UlUpbkS/PX",>K_Vl%nN%9ec)59H^0mcK(8_4hVSOi3o8:03(s(a?,#_.r+HQq+?r8]akk>D,7fdl53ksm:+dpSkf74G2;/8MKc_"KFBd=R,=8k;3We!UW/74%=Jk*l3$[S03TBS.4BL;#Km_;nQ<q[hq.Scu13t5]AWHMF=sV?)adT44"VGS3SHr16;CI?7n`bQi/@ga_S]2XAX_NL'C(NGW*L[sj%@nLoC+sANt#,RlLepJ!hZ&J%H&[p)kP0D!bq?F@q[&Bg4eIW-eY[W>d,rUC#mosU%$,N@F,;p4tf8TMr-F:]L;PR;[h!(6?'35c5%Bo-:KnbB\KX@%'L)4E*V/6f*7.9pLRNl03(;WT5khsII1Zb&].l<7qhki>^L^c7llT*Ju.G$3bnrU%Zc;8\Y^fngUHj]LKKd\iu,%P@/K4BcRVp-i8(gV[aJA'MXea1W@-CUBkISV$BqWo1mNi9<QJu0fi$c1T#!4(5=5T$:d8gR42/T1YhL9B2%Pth/gS0Bqj\WKdGI@%1T#9l18VTK8-sBQ8AKO7-5W(&]B/Y?2RDmMkO'.%HoVXMU"@*COW!bQH"Mdfr-1+^h$mk(:Vsp\(jiFq@Ui3/!R)BI9c+3Cj!H`(%Q=4MBLJ,A0VGt)H=,?Gq;ku=4p9=UTS,(_rSIQ)R:4(a]9EpM(R#tm8i'1m?\g^G9fhTW\aRjcdb3uHKN2PI)dNeF.njh/lHUhWs%aYY;lJt0:!d:Yjae@57VqH/s>`(T9aPKE[mABhf_8(-*\&FDSUDu-%0)8hJF$X!&B#d:V[7n,/N=E/g-]TRN,$#_PNH&<6IOt?0A%oMUu;15].2kO&UoHXsip[Wl=d>fQ"KkW*Yi6aojMNC!k14m+(2G44XW;;:uMrB2p7!NuO8_ZC:lU.7\B/\&Pc#"WEB7d?$3]I9aL%7\B;/18a5:+Qn-]\/_M1cuV$hW;5`gV,Wc8=BRPuNKYd6Cq^uN2BFXT-ZRhr)p'4IiQrn2g"WJN$n^j(_=Wm!brUB'l[Am2R(ddd%!e!`P?-m3lRdo[EJ7`p8WgHk#Nn6'I\7f(*6qh$1-YV6g8X4ZNl^V<><:=9X(Ff:.r1\7o!0d-=_dQbcM\0S\+)]-s@i"lZ\gV5r%q/H6%/BIU*V?g1+pi(a^g1J:j3%A4eXd9XL?9[.&)G9dbSU<EA]VB&Mq/BkI!qt`n.G$uml*HWcVeM(RKlqpf[Qh)>/i_T>Of0]@%'5=CLP$fJP('L!qo<Z42AG9(+cs<W&8F4t=Zk>3"IDU.uGU-IpaRh4BNX\Z7%4$QY#2WUZ!P(ri#I"9ull\?D8GD[n+eCj3q?ruX%K_"Cm)TV>ZIg[197l%9b^;k2se4hHg/&uamiF#4[9fCSB@D7Tc73fsJ*SGs_42f00hg39/fKt7m7*'7#drt@^!paCGdXt\@VZ\p&%L*egTQ*&FMh"G.Wq91h'PEA/5A>IXD3rh[uA(F1%]K7?\Ho*#iOV0EIa%$dVQN7-;cQ5R@j0(V)<+s;^7OmoHp1L0f.s<UETcLEq%d#pu%MsJ7c6pGCc238E:[jRtk%.EmML@R^!p/2*8bXO'%Nq&M^HM4/Ol*$#9<&gBcbhR0pP6tsQY2#!D\!;U0+B1<`YCaGe3!90t%Tm\gQ;@IhJYa%H+M"pV>McDXV#d9q_Q,=q\&S]/fRYh]&'F>c#d$SEW]3TNGXX(e"JdZ<OqLC8QA!EN#M/q.3VrGCYPFL++oVe5h%8%'W^-><IVo*\RYJm/-CCOce'k0DlL?T7"Bj`pK#Xeec"_qK8$U'e<U2kG'W3hI6gmV@I@b'eD4-oU):X`>jQ/XK+m2A@=E=pd<a%lV%&r]Z3Uc`DWtdcr^u^^)lolB?A?hKm\4ra_n$*o<-mE/F,.dk&C-%)<X>IGBRUeG+1pB42jXr'tA600ac'<O7bP^2X%Lh9$'+o%Ej;8Y?TPD,]2b'NT[^>NePK76mDs'B/rgDlZjUHSJ^!Af*lBUZI/Fr`Hdj:P4W#m>cieh;1$f\-f=INa47fqL?Dhl)H@2''qOL[5%*pU>cHh,(GNcaUW%5,+j'cgDjHi+htcdRQnSZ8:A,O\i47NX][/Ok.)giNDDfnjJmU1](CPcOb2W@q3qh_>/m<is1BI^W]R([cu?%e/i[aWnM6_?cVH`pm'?r.ta0D"/d'q4Cm$D9pOd[)Kk-5EiK[qQZO_!=nfcr</;]\L29CE-_poNT0Xn^?1>5((N,Q`Ek:;[Xnu^2%CkQnXk-YCa.B!Al7S$n/\:0s5o2;2r(*YMg]+PgN;qDf?T1ueM+3"AO:<O,DeDdih9rGt,e&r9.4.B!g-`D;sp0uKBCG%(8HSHU"%flUE3GQXc?Nbl;oBc4&Fo8i:]VUK:;,X[AF2P%9^BfDMV.o)kP/+$`nBlWCG+sVH@l*U@>lF_*5Zg"iEm@8sM:,\Z/E[,jUm:+OY%ETsp9UO0?3Zn?2H/T#(Jl**0aB%(IrT3*hg2E%,WqWX]IG%]9<2.^)mfIEB9Qnr1fS'L#PmDu0RSh[k1FM#kd'fMVKKr*j4ftjQ7%]&@pP[>eu`XTeo-VgWABX_<P,#(AcpSJIPe_g:.&9rCE%;b'=NB@CR7kqqgp4kXp\PG.Q,gVB]81'"d-msDD*FE.rW.&@AW%)<G3%Mo#VpBNe'bUgM)6@/sbpDb&g9YPqt^dOo@<=/Vg!fNbW*7(XS2VbOs:_0*W@dPal@316Y$"lU4.#RX&&B8r8+H6iVi5[%Gg)47`+%8g6%p]p,A!b=8\B"f*i<0F%,Z:j.+gA;[j`dNZi_XgQ:q@S]lpPJZIn:,$7e/=f+O(--0bGR8Ma.mfNV@[T;F#pU.qgM:I&K/-tX%OV-g`!"ro=A6e>9mfDBRbR31n?070kUUY6141Pir>Nh*/X/'+b:<%_206ChMGdM;AOQVMGpM&ZHro?2"[VZSPAK.]*qf-o.d'>ie%rTS9h'rWq**YRj9[,QW!h_P^+&Euk"bmm'pTg"9bR$@ja6[dU\"V;QqNgB!,@jdaHfRe$d:s[0'24k/;VJ;)n2`Ht-]Vg5KD4T=e%NJ9chaoi5MN.sYnRGu8Cd86br1.8T+YSkVJ>F:KKLI,r1g?HCaX&%Bn/m"V_fla^s#o$R*S$;`_@<4%_DTn&A.n2s!Lp^==TF(6T%qm$8iA,@#sQ4Vm9D+TDKr9i"(b%oO,P1=n::a1;dm>rqSnJ&,jbpo,L)!^qndhZO&A3RH)8SBu8\SiJinNk%E6m#ZIL5;t&rVhgF%L+VQJrosX<M@ll;69@)9$/jOjZW]6D$9EjO)%NcW<Vsd(#3uk-?U3WghA?nDa?B%i<4Glr.lD(sm<B%>i/555<YJQE1Y0RnI+qQX%NapZ/HOS.Kgf^S?[g/Nr=Xe:hA#N\l:4nm$_@NnRiQegelY[I*8@+`eqe:OhmGkAY4h*/M(,]^&ju>mG*N:dZ`7cdR$-`/#<RQG*%fN$CoGK=iZgT`(a[<"`$41=W=]+gYbB%i8/(KQ.=367Ie:bIfjhl_*r7:_a,%+F(kehKjF9btUuYGJ2pAklh[-8BeO_a"*(b_4!3%_$DjeSVm=]!ZG"k9>jZY1Y\1m1@6AJPp@V%:\Mh?P?iH(8n-fI8fb`*=rH/'jGG,D<Oa9M0bGmil=>`V0*AgGY2um"<\YY>@?ok6%=d,.uPhfe<N%d=k;[G6l)om)o`GjX1LRG58b<620;56a/&aLE<p%\_-"tAlkr,P'+7*Ks8ijeP#+BXFp6G#HJo`N3<,C<_lUs#T*%ldk$p*7%hjQ$hNT3kKVH`6iMr$]`tcpK3n>T%m1s]6LPq=6;U,IoDHucLO,DVZIqMNJ4FNFu-Xi];h*<f[Al:JIWdIVbb06rB7&m%V+aq;n0l$mpFguCP3D_5oLO4f>+K+5$0M4==fnt"FkD`Cqmr>ERZm6A%LLJG_k"s8N$tW=(GU>%gtIs296CA?(!G"fbs-TT3X#i-%:[jQFn[EL?[o9<Xc<TRT)F&C6cRR8(%ouEB)]<a$5De]M>/*26=*6"CI7lI4e4Ok]4ek&im2Q"!X4;YnJa>_ZT"sMTnMe0)hOd"O%+aT/#;d.Le>Z'1<e?_AF,\Soo?>QXi22T=8LoQ_80j(2Nqrt8"i$T9n3^VIERad^coCY]FTSbICdR$7%lr'f3R6u`$.7m.&=7;Em%$<-dS<OS&:?9?L;lZ1rjgB4S3Ep%1:Ag-gm<HOp7\kAr,R0@_P71;I<@GRn<:[Z%k1I5^FfhKT^P:Gd-@=1\N2=U#bV;X@X-+Vm7%H!Z:SSJ7nHA3)Jj.=FFc`UgAh^hN?-Z\=B=M6#oOcE@p_ea8eS]9s;1m3Y-aCD.fVY\Htb3%b`S#o&,]NMP`D[M7g@<d2bUX5YC*%o^cp'+M2KEXKCZn*`fCiQ8NCc!=Nl(,daRVEQ3A\1TP(K=.FG4#6$>'BLF)`3j+TcAkaOEbsiXt>h_@*bs)Vi4,n;47MDjL]0_]m%O:$K\ALG]hJQF/o]*0>P9Wfr2,8d2SbAOr@%h;beP&8gWfV:!e/sFC<a!sNJk<O>>/cNqpDWEl;e]&?-FKG%mmn<mQoD*Z@`nr/A%!h.ZPd9f*Q[V&W"-gD7]#-"c1I[(cYNL<eonYk-K#*#U"Q2P==PflEX825.!a,HG;e$1`>S`lhD@p=%`Q$+RJ1$^AU;XG%I9&#a;%8BLstA_#Fa"\?c:jKuX,=b,8mVp,6A,#k\M!0&uY>&gfQ=Fa"@Vp>Cn`5*(m!-PI\4flLq/3m)CTE`HZ!XmArp/=CKAZop8"\?c:%<85ItmX;N6[9$3hM\Xog/BXl&U`QB]T=.h;m\5(=F.m#0;*ODI2@j&WO,kP-\1!tEI:Sh*nsRut[](YsH2Ym6MXnm&$Lgr5h3[-Y%`f(h;=k1iqge]RaE^Q8Hocqcl[81'mp!@Nr%AcqRD[2f\%X%`YGGVsPhsS%KP]cq`]g;q6Te+ae1Tp#@T,YpV>sIALIc=,ZZ`]po%6ccJ'>jYkLO,1nh;]-.[WdaO9AY6P_`^A5G?0kJ@Du2t.7X;.[XQsL]+C0Z#`O^MEbN(M(C/-rI,YVA>>gV'eqAGg[BX"CnM=4d&%chO6poWeA\qW/-dqH;-0V-V^!f[SGA6!LDUVh:GtX8:LGO3\$U4)%tbZ?goqf(Ci%lDMkU\pI^IA)aR:,B\dQIekU#W9U;#?%Am+%V66F+%#tt$qT3\K]@'V+W9ZsnHel06T5djq_+IT+Y3/jOqABC<eVr!`lh[UU>H5B8Q02nK\phX4kch%hTD@0LUTU5/<Bk9lpe8iP%&_H't[B?.-(%q+MM9V_kf?ZEECkT6f>H$k#XNC&tfY-VIC%37_6[5pX8_f<?AUGd`X;jT[\phZhAdoHj:3HNDi6$qWIXBW*,6hkL%eDmmopcqhDS*KO3OI1j02f.+=,;7$F/Re@Ol_d%WOB(t;0o#D%lR1RrgK"2qA>O.noeTWiYYWAq\phY6%aI4N6X;od(9WpKI(Q_(%(%q>1H+:e2UL@?p<fbQV$Wfu)DV+R9SIEhEolK=D2mgkUd]_qKR,uOY>sDhDQe!as93jblTTb[;BpZD[HL&FJocqNc7o\*dfPEM>%>:O:0''IB@mb:KZrD\AA<Rl"PoUo18cZhsY.Y-kjf?[PRP\&@tX0/'L+]a%:mo.hVCFU'!rNu5Pi_3B^>sC-+U-3YtaE<kulM;B"%oeU+0lC?2&\phYP=E>7U*J@N$F6/<n>S$Qu3nejd)tBWI/+rVVNCE*cIJYg>m2?)q<O>2'2t:pIRhNo!Q-1dkXqP,Qj1Fk3DTM<6%RM[Mp5*(WnH)<n>Fk3T.Z[QtiCSg,$4Ihs=Oh8pBpCQhnS1!,t1JE(DS<<'R1<QcV>.*/;;sL[WpP-D1T$hP6C:p,QO+71%ETcA,%`hM@^$a*V&[,LGEs+51epN,hcLkVVQA@H^uDMM<==Jm3g0(hF*q:Sb,If":O5E#KsGip_-[maZ2no8d-CO`4r13\Y%hYZn+9)Q8$%KqJ..oCaa(3FTVo\Ei7Mg%>6V*Buq.O7P2Xp+a$4f>#&2EJ=S5Js1KY]a84O:P#O2g*Ncm12Tn]\@]4R4f>rnFn2uO4s%]kle(:W%66lV=#I9K=D4'^dNWe(j7qB#V>b!i[nD@_m)5?&UT&+Z\WT*Pj$1B1+J:r63J'YLF?S$;&>*FXf_r3oahRHW;p;Epf<cOpRhQ^^B%EI;hWSNHXM7;?]eqYGF6207&n8_OfuU!CF213s.L[I+Rf,W^jklY?_<5pu7AqX;BiWNn0W`s3(@U+H+@Ac>``d#_AYRKoY]`EcQJ%>3_nB.mLG%)hCt)Gu8C^DjQ0ElfDjR[a]./?M`8dT9mU-Smip.4V+@JWVahdD1775DO-o`cgRgORpVikXsTa,%X]URe2S:+>_UXe%F+m+dr*FKr`V/]d-r@UfCVXk%kSIT7T^N(F"$[S@XKW.&75eJf-&aaP9TI'.*oT'3MnR2FDA&n_=Mg,AQt$X>50YDM7lH2'7/,BP%$N4*;$X]u(C/q.#7*RWg5UGXjX*GZ/-6;`kNJ,o"qrAip2Il7ZW/`J,W"YPU+,/bt$km^PK8BGXAbf@(J<kU[0Dtsui678^kA]tk%m<^4tj(C[Rj0-jupd#`u3i!]B"UZl;'=ndUZ1%c']VBDVOmg,YQ[W'>PLi&:T?9e`l.O$'4ZuB4Gr^V4,&FV!4Ukt:GU1/61X.je%g+I+=)jc!./C7TWa"Z6K?l@u4l@e\]U0n42LZC82q!s,;kiELFhn@H>psi`aR(dYlmABJIg73D%na3>5@9)B`''!cW1:TK&bH;U6%4'D(_9<la\ah7UpT6r4srLLS_>h/`)"U3q\V>\S"r='.rpMkk`,(h$hCp30'CuCS+6JO'"+Zt<Ljg#;=iGD!8p:%!^acd7=b:Uu>%^9Lmi1G%HCQMXC%#:co>[mC(NVfGuA+DH\OZ(:ror/FJk=9+S5?Rqf)`uCj)F'[0*!:!1f*kW";)a0&LY53eP>qGcWGkW*62G<:P%\>CIB8)_Pdd=n&Q8UYM*ar=YgVk:^QI-`Sr)7pI-T2?\BmaBY+!rSHUV\8CrNuX\STXZV8kW:`-<fJe6<<,`+`l9lA+,7UVDFAU%%,RmB$.W.]9*M$@e!'5Vo+SG=WSn('0,(aCXP(2Ru!QuQ=(4*aZcWXG8Hr%u8HLb583r5h,4J41+b^r0BSC@6FLC5.AEXTj##kb9+%(uJHrYI%R-doAh]o``];ffH<18U3j;d<[`E<?go)=r&G37a40@8]GuFg>E\nStd=V3'MRrNYq5#cd02"h]\P(Jdc&&\64.+\LZ-g%n-R"DrLm-MIIPs"SpbgX!"e5]HdVi@XMWco9"/!blo:M#`p@&'08$FO&b>nA(8(1M[^^WM#D@r<XD::JGX^EQW4"E^nkfRSkja+f%/OfXGX?2V\U\S^AWRfnd`mUgXcqoTs0pVWY*a,M\&fqcd$%80)am^GVqk29M=*AQ%b8$lN4EoTMi4C`\dW8D[cCYl`j47eK,AK7)%?/[=8%1d/Se9o]fThthEVk6/L?M\?@?958aCoO*As&d3<$2264&oEOIAttV%eh*]`Ss8\gBBD>I*pf,jFub\\l^a(\h/J)?GJ&QQ%cYMnB,[9p<Mp,ksLE4^l,O_mZ6#1Bu>bl^QDf=DeQ,[S\flt=\lIcDTX]%KocZ_c\0Uu.\@!@_$%=4D>V[rS-P-g\qj-tbLbW`f!%nOtRk-/3.MW-77hjX<VB[4+kY2R=S_4jUI/LLbTP[Cos3)D;rmi.4?\ZRrsA%JotF6]Jbk7='!J9\7Ht)X/qhG9BJ)0s$"Z2V:kJ%lKjMU/NR<o,apGpqu]&'FYpT:<C>c\UiFDY[rNdSb,$(]Q?jGEj1=7a4n-LY@6/M97Or`<``j(H2S+Z]5.\3T6h!"pPY'LMS4h:<%Qgc&@jZYsD)!a$rhq'Q7p'L*4?Mf\Bp$T2/$N-:8H#S-KU0<1;P'O4eT>Ohfkd35+%LC>098D=ph5a=PId.V[9f%F)FP?;!RH!F2%R>f=n2kj8eEfS063U9dN3jcrKp14;c5a*(6qe9J?cHc2%Xm%C24[sl'Jde*=6BQRCIkYiqRV;X4=m#P23AWi!%dW-E!M/IA!@_b*%2152GCC[D(Y?+?^hIhjS`?UOFkZ4*0X/DU%TMYl."h8HAZpqHWm]\,3oA_t)SB86o>C'==LV6Ka7O;I$p(I5`]2Nf[Ib,`J(h8Km%<FA0($dpro1EG-mo[-ri*69:[Q&a<:(L'>_ioNZ%>M:N_K2FJoM)8GLD(!\5CS0Wk)V2m-%S*a2aL$E@_Zm),cY7c55RBWd5:+k=%a;=1p<!?$=*;+mta0JBFQqT_K]gTK@N*3YfWh',YgGoj)\HX)>l&Tqi',e/GQ;&"Bp=\[Ze'jLl*=F$43L99X.Ts&XFu#5/8:$h+%REAT\A3.eT#:UDpUlV'2;KQlf7U#ZhWU;H2Bofs!)t'72g&bt6U0"As8BWKO2DG!$Hh3e\B'_&c9a:0dmP*T6ThEWFlG.PbTTOO=%fF;c3F2SqXDL56=`A#]rq/mH\bqG1g8Y_cehoh`[IU23<jN@8sZS-uD,+X?:Yt/urfd`qGJIGb1>@u9]`^P--MFu"NZ.9g@hMnu!%6\0+hOOPlYSRF)o,W:Oh!%5W'93HE@l]lOu=,/L['('PO+b-I^]Z3%s6g0$A5OMtS1te13(&U;Z`k*!*\<%U?rVTNB4WJ;Q^T!Xe%Vm9K;(Ol/q!9`u('C&2MFN0dgYgP(C^117/U`qWLF\<2%D"H"A.3`PZY2.WBa\dTN,lA+Xm)?]maEt's`VpdgLtK`mr9rcLptoHo%GsD<8YU>j_Zboc^q&Y&gERn08K4*2++64qG3OqOsRFCUG'rd1_6MA@I1&&NK=8tr8euAUrE<H&a0!KT0ELs3is20_bT[aD!^hY%3%0=m]GOO*L;k5m3Rcc&"n&'F6q5%.X)Ul/k`*lV2QE>EOSGA]Z5q1+ja9DNqp)WQ_Lk2+gWEA$<')ih>P2,RL`M/a#*ElX7U=+DWh%L%%Bo&L%Ib2t,h'pP?!6BUtV)`Tf[#2qm_[4678fTYD'6oYj:@5iOOY>fI/f,F,edd^6*4_QA;=XCO;dhZ.%8!=`W4(+/LcAVi?o%#D^Kq$(Tt#T4)+q!,;M[fP\UjV^%Z%JDO]`g\\h:7W6;2)\JU,!MUA,2#$S)ABZ4u0pSWRFjg/!L@Q^YAP0/F1!.6@SMY&pX*UNd%Sc/=<bgWc^aa34'-bRq6*DknmPjcEX-nbPkA"JcXC+#HM@X<f`]R2u9[tOZTl6e%\ZP,<`s#Eb`jaY!VF7L.8*2V^eHO0;?jaRcX%o#Bsud>\"LAQmr6j.mf9]+M()jV!;c`&e.ukP8F]p?,uM9$.*\%EMmeZD?S81-J4M?Xt(t.V=X2`lgA+.M8Gh9PHb5BIM!o/AKMm%9Q>gLm<4lf]EA:jnOiU/[WXi[.RN:TqA15J5h?bfri/-t6,P_V$NZ$`-3$M!m=TSn31u=M]-IKeAr\IGS/(g+)LKa5`1;Qmi"8-9%F.(UW<0q.,5d^*B@iP"6bHi"kcGJfE]IU>-mZ>GOItXR"+X$jX\;!3m_L"5S>[.<3+%Z4n0\6]o4%W=ljER4%oM8QQf,mf'QDm=i%S=\\Bp>+$PgW)28,9%NH_S\#0<n0Zh8.3,peH<?i4q&cu#MG$[.Q6cbbX5!ij6'qq(\b>#Q`4N/<q+>:/'V5Ja[[]_GA&O:d#4#V%qu13"@aHVRO+oNtE9qM\Hm%di8TTHUb4Ie#^Tiq//4\J%@BG9Kkh2"-44h0#E[U692W*s/^(R5tj)nd'8N*!.h<,#jS7_\G/'Jhh%b>$;3#Ru+71l^+K#*_)YT"E/cp#<[.Jr*FB6o$BX#\h4rMmE&Dk67[*@N0^m"i%ieWHZh1+]eN'oKfK3p]H=j&T+"FT`DDd@=VPB%IIPVf'fh/&AXmrNfat'?Y7PH+p/'E#@S?,B$th#ig-0r]*jqg1g"\cH%4fX>?Lq9TM_=T"WjW_#Sok,dJ!q6<KN`o>$\7,T[CG2+%Dg.h`&<E/&a7?I+a0gYCRUJZ[:DGLH3&6101<AnK2'?*JMkaQOjWT,6?QJHrd#2qmkF2]eEqq/#.`U^6?-#qt>u(MQYU6Y"BRI%^%gd)RJJk0m="Qf7>q$l?ZA4D'^]L.RG/S1&D"Wg56JKDZRcFOo/?&>HN>96D2iVS=qBekO"d3LV@1`kh2jOgEqC`nol*f',(i_K'n%qCMiRbT1]1)3-Dh_o(4GocB))"))B>P$5^:0?XkcIZLp=[]s#tZ4i!$Vgtt8)imd@;>juM_Qo8UkU+(\1Fs2b>I[F2p\W(V`q]Nm%.L'q6BN6u?re&<Q*c@&EUeLUs*l9\CUVJJJP:UPo_kCN_@PS=5HrLp!fQYiM-j:pLSIjp(bZ=ik#`N`U_7ed4SY1C_EAbUWn>NCX%"GLc4qhgn4WqG&GK>T+W47;'\$*TapaXN<*]EgStp2Z#%#NI>9quE\:N<&bLI?F8^EJ&E2c6FI_BJD.%Q&2p:[5W[1f^md5%kVu.%]F'T.Bdk,UhA`S[Yj[&NBIq+u&I.X=5$,Ba9t1RV=#jHX+d0t>[)YYhU7Z1O&f$&naU@P7X!K#c]iRf_Pr".amIY0fjh$Xeh/!1F%^pPq2OXYB>oJ9/uo5p#4Jn\/J2ggYg`uqlIkkJ\O&.Ym9d0i#1RqaXPqdk<djje(P/u.l/!f-ZPRC>,jju1jl*b<oFMQFF9%4LZL%c4MdV$DEkiT974"/\n.02l!.Ma\`1EqO0RQNK[lKqO0S$)EoeYqO0S$R_r^<YM#\Q_,uZg21)\fn0]1>C\qd\>_WD*NbkMpBkV:5%/T$KLG(BioK\IW1_u39*LG_A(>Jk]7"+>$)D%3i[$Kk>Cd+@X3f#3B0NkRu]XWcB;Z6_Qmb&H8V3q/P+dWs:LJSaZ1R.ssH/QV:;%aEkNm1VWX.R?PaeCf>ppODI!2j8^)86aD]OU=Hb;#OF^=%XPHPhU-ahc+u+6`^hTKNlIeWq.(Z5-CZPjA=LKU9=LP:%]M$p?+)b:%YXP\;2Tar7YsgqbNb/9F(q)'OPZAEb/S\S"8K97$>L^6#j7&AcCf0N(%5PDKQu-qT-[@WW6u$66kMg.t/XYO>1I2KNNP29jW:nF(%UP*56$aEbQf<0eX<B-F7rk7ba6ea3L,W4\SVBGN?Mr6\iJVI)+IB7ack$Zd3Mo7';45pTGZ0J3aiD<`<!W]gu087cHZ-%gs6thM%%15'<iD-h<jaq]F@ULdVR1EbG9?lkU:n-i@NQ>O'TMQI=@k12Za@'e17!aRHh"OY]<)b8=l#1b'Si(R)<lS+Cl[:p[)#p%M][)@p#%29=6.g8H?(`:9(RReK'u`nWt>"5:]]mONfa?6O[59DZ9FO$?*\71d%+0j-M$E2%dYA-%C;9W[J'<H*%pisECpHgs@Ym>fSThsWPj%%YjMG\c1%uNX))9W_3hga?j;=!R^c+`>[/q3S?>TCAG)j-TlG3';;HQn:-1\;.Ea:r6EJac85X%^3JLE3*pm*@*4FXP?LWtfo(I3%iPpH[F(l2a#,E)4Y(#h,o(B]:=X=,=;4h_kA*NC@!6LA>H!%Y?j8Ef*>jT'uIgW+'bmE6Df^b)O9kNh9II5mloNUla\&V.o@*)-V%N'`BBgIjS_hM:X<53^/J^IX#T>!b-=lUT9YM5Qc.[qP66SDmg7G[Nr:oU3t]/5(SCg'Pn1=3_)DoJkP.hK%Cij.i(TcR=p40LdD]%n;Qb1dKp_WM$$M/MCMT:i3l6ZC>iY5JVtr1:U@]+V'Ah#ACdfd9'8P\Uemmob24`cHH6lf<0=mM@hh<`j$jgA&E=6;3!CG!H5P2S%ASYAhha%T.-8OWZi]^FW[CoC+D@^)kU.?uG]4cR:(0T"t&gY,MK0G#N'>!17++stL#bq=V,TDV*`M@,cmf9`&"<(8Xe@7@9"2WMG%)4!QQ5Tc5G3FlBd+mTl)!,9g3P%Zmg7EIj)[3XkG$sUBH[aFNWL][&qKC%n`\Gd[L1_t!2/XVaM11jt751<ZC=KQakKl:oLA;b)g%MJ^A7o?ZA^a)lEUIU)QmO%QnRgq>9U+r`ac*#^'ok9'V?eNs5YZqAYWZ0V8<<SD:]3s<ad:lu)V4+rIqAQN&mj\)mt/+b$0<;t%1%6kWW7=p4b1#rVPjQFqN_=%[qTj0R[YdS`G9EZ&rD<SBFc'pV"+df=40@qibd90eGeknf12&c=!rF[.OKd3+XH0a56_FDai;8mf^#%,[B'D!'V8^K;7,-1H:DKAadS=/O7Nf1u$d%Q%7[+V:t%_&mbT(%Y%ht,f_j4^cnU"aNrtW7!i(L0)jXHWdF!H5K'IhnP/K/"[u[c%+N8'T-57m4N2RDBX:,$0F)JA23IJ.3:06fRqN'4''21Ea.IB"W"B4`-m60\:;m+7L$'UBp[MC3\@*1JFVbKGZh2m0r5IQ'g5W<63%E7l'bi9h+%?pTsAqb9+9jV)7"46>[TfltjNVHgRMG+E`,.HgCAq4oO.r5?E+/f+Nl:6ngDG6ABgmWZ/Ni]pPT=HKD%#R@ZX`PSgm%PSM6_mD`?=8KlUD7LH90'g]jT>sU79PQkG6h_4[R/Lm$>X,_&/d\9WBJG"9iV.JDVGR1-7FanE?DVLElebt?455UT\ec!VS0W%GM%N_PDh>@chb"V2HVT`*u-Hg(H8P!gd`"3[rW=C_F+Q0tsLpuVE!a"NgsXA,4Eo3(Lnk)9];oa.,r;S/CEWf@(YW6(g.^]PFimQ2k_%-6FXmV$h,0q=9I\PS][83k/ER8HL3.;'a)03CL?B1GODe"]?>9E1@$7LJdJVg1gC\0W8Uqeo5IKA=Z+%GT+JL18D$J!Y+?J(!-=W%ToRZEjWfdL@ZH#kS:Ybpks4)AF"rrpLJr:1Dr?PY'C;.JLS6WX\j)<pni)=4iP&EH)d!C@B\#Y_''fr#.dq^H\5*g,W.S#%h$A?G%ir?TAeps3;H\iNb'R:Xl5Ahq,'p).j^VX-2Z'taFY4^:h_9=nH0S?u97eV9X#,.\_FKd^fgtg1LOVG=K+Y01bK2XYLQ6Ne\3dB[F%Qb*Q3O1d+PF[/Ve+=LP$Q;'M>iikZ?E\1#!cjq*RL364qPOLKR3=9;WDf2/br$\jt:]8$NrZ=UObPiI/qDJsfT-A):"GRBo'O'Dc%PtX[0/oH+\Gu%7V<<`=`E`b_RPe!=nafWCCk3'E2[D.D(qk8+]0Vdc%LRs8!0q?o"4NeV8/19MM?6UJI#-S+6B)JijMu%"2ZZ.%O%Mat(K65hk?[LH:]%htAiJKVc2i,dr6rl$lmEe@AFSd]7+$kVMFn'[c6*G.%I@pu5Li#BP(!tD]qH)Trk"ZAAiYtrJ,0<dqsi;ENL%H@\4_!R<dLA[W82cWJgEVa4hu?atI9V7%C3n8QY;3IYu/>sFX9?dGhuN'cTu#sM]icYatAP-%'/0=oO`N/6+HhF/@M_H,+1nLi7'%(RG!`&ni2JB"Z=#nu#IWXt?f*I"q5P!44-[d%^+]30b.^[-KkVJ/BBj9FJ+QeYLgDL"S+uT&*k$Qt&TA[Yk5rXD?rI_aX;>fLB3D%`F4ESne/Udr!:aE+>6Oj?Jj1r^[_6!r7!4i9"qK5FMHaU<op6*n#j6JqRNUGc]d2U;tI%f]e.KU3<'G,"YM+OJ\Z+PUoM>*Zt$:q%]0M]601aCOIa6C3A?Yo5Uep?h/tjRhF#G+WdJ"_^kiK(28e>1B>jYuC"X)"qaPhbs?R/,Aq"YH^I?>KM%[ToH(IL[m?q:]FZ8O]E%d#8tRD':n@UmQl7BFDooJGI85BT(g*NW?0Rl0NLfp*+5^f`L=X4HT;+RW<5X*m"4&q-LH".G5nMA6P;ZJDM)6bMqs4_g#N6/ITS(%?\$s.0]b&aajQt@Q;h'@R]tD>'25qRhqrk1$)UtsoNHE`=`S`n=dptS]IZ(U"?*hC+X:9J(XM$J-Y0"l0N.IKCl)KZl.0%7ZG<G%%JC:/i=[9hD5\X)p/7L0P?DU)eZ:J,eD,jb=pF"[)LP<M'-$Hd.%"H=l-^X3gFbBPaLVInP@0%LN5hh_p7,cl4atVk74Pu*Z.p1/_%[V.cAYYe+WBnaCV3!G*)1O+6b6/H&IbNJVc.N$<uY'<E!$@f*2<[nqC`_$P;b9c%#)Kc0W%+LJ?3flLMIiW'?!]?IB3/?pCjT?L`%Vs$o`n;+&!YG^Rar18N4rI^gpEV)O0&/!jXAY(eMBn/&]_4PEe9n$OQQ@@"uKd9OD`DiD-.f*>[-2M$>4bUOmbT>0\!o&iB[h;IV%4)_fXTM/t)I(mh2^Qag?Mojb8)=/Ms)>ibf=uWn7V06moT2hlAi3(3G@On/(3dP>X5gGl@Y,WU`UGtXmhIDZ5AVt+^L"!uf+]g&r%\CtuarA^=`R9Bti?kqUq2%?.q,rq:0GuFND+igkaIuoLeotS/KZGO"cPYXUepapEdO4J7N$]$?f$Q-ta5-`M3[$.s]k&Ps^)WuJ0%A"IV2c>gu;Zs\#@3/K-O8\3^.F``EW5ntIZi-a_Dn,L\#?L7'b!N!fl&?%h7Zr[0<oMB:X!g6s[W3,Db/Zf#Z"`7hC#.DW!0fauA%S:)l?01e/4fEWp3;<XnI._WE-oV1@];jinKHj8ECX=:lYRWti*469U'7`85^(0(md),Ye@V\5?.X:gtel%[@p'f'p^lHF>B/.#)%%JXW(Tj/tH-U*i4s8t;b@r>,XW.3ha0LA[%4941!tPc?u$Xr[f.!k^G7&ZF&>_uNlG82nDR1n)Pq:+9A#HZgeECKYC_bSe7pY$-j3%Tg,9%rbY'[lZZ'J'qX7S>]$tG/=L=Y-D+(MG7!l_;>>IC.a06B>pHW*qB?JdRd;EV`>[%X+W"t'M`'th6OrNVQ]jELW?-sTL[2aO%H7[Y:WB;H*T"gCfJo)=/<knLY-.VUbP0t`.UMm4)J@7Y^7:a0'(O2\%/-L-4^M#1Q*3Pi'oiraLa8m)C/DEG/BSgNIaYl>]`KoL]%bsr%T<V''=h=d1Ph1[d^:Re=!da?np6V-bC[KDhj%p8u5R\Y3rY4(@.)8XRLp6]@Gc;^;E2q@B^JBCD]Xj$s`,&0qd5+Q53he\;B%Kq1rP8u@D":aV,*qRsZ"k.gNG.FD)G8Q1FIS^\d192ph.+AJ.uB1/7@iaA$k1u>]FV4GH[jc)(K^$@Z\J*FP^jU>B8SYCVhhDmsF%d$6D31[N!A'k\rSkrD+"G%M`,-OANA<G*uqh?UJVpHH.KkBMB$-5eQ.6Qdn_*!D=s]cK*aIiIS<Z.%a1j_n)I9X2RsVKE&^GnbJC%$^4j^MHg9Bj+ZSsKu;l'V(2iKq9:N8$!Oas4pRm@mS5tbGlPJO\*s896/%WpS.;$/Z5G_a0lkp$S8?2?:(Eu/=.#(WauQZB%[.C2%(dmRkG.8#%%`_M.BC(`=E'34lQgpm+':BSV5p)?f/4C3^8`k*(%YoRuJqWD]7Wsmhd^2N@ZJ[lX^XAiS=a4i$J]W:;eN[9'(7!#d%dk0rd>#b5D\gn;b[&ECgL[-'TMsC:`\254Xq^8/NR)kH<8_Hl"QEu.uN4s/*dR9/:.?So[:$lQ<21LSr/m@F(&FAO/p'GcR52Ie<%6*ijR9$hBq]@kAq7HRaBUaX&+&U?Ud(*FQ$Hq,rDMMcr[qt?3c<)`u\JqtWr"Q*<1=LBXs5t+5XIS7Ck#?:PnJW+OKL"C?3=g*Sh%j-uT^\WA1B3iK+OMGk!I.eZuJJ1G07mcOd>AXd86Nln<j%J[2BfFrt3f-Og2.f]qu";Gi]_5pYWQf-_!s"CY2ra1!=E+q_<.#mGT%#Bglp'qOp.H++(eK8%f'p2'62=%H*$i`oK&_;V\W@^K;BfF<Zl>+@'",]:N$Y+n?3LT2D'(CC4VS0sT?(k-iW^$Rl!rTSf;?0\/)%-1/PXQb*bX=6(X,EOh$F"9g'dYl2EA,O^iJ%V4?)C>+-mX5CU<*.UjK-kRK#$P(d>M<M6=8,EtIW>BKT`)PEr[[)pXdddB70%H0o%FfZ)==Q1lOqk.2GQX!)j_7jnuC5>r#8Qe[V#W"@[q6u!4mPqB5`>=UehrU9Rbh93A6k&;=@AN7t;Q_)[fGkTlIKuf\3n\h`XGM2d%ksM=#&OVf8*YgPc:OlGC'0&3=NLZf/aHP^Z<aj#"bTN%9I1/\QEL&T0oluEJMU!k&q2n&UbPhXYNKFE!M*q-@S.<DhnV^KQ!E>el%JJQ:$r&.J:rJ'ChbnMH$"sW7V%_:*S9]a+J;Rl3>#TW.e\WGsLo2%g1J)t[@6ja![bpl9-(at5;@.:J0)k'0lEH(0+"K]!ld&C8k%1j<EOV8SDT'm95)7\',coImluY<7Rl<0Y>L3#NZ\XrD2)Br,;an43g?q%.4ZaWgh+YsY5(-'&11le/R>6FdZ)S35'k90gu6/^q_7%^KO'XER$1r1;O%'clR"s6RboQN0BTLcm#;<'_,TC1PhIJ`\EP#^fJq*pVoP%]/851SsYTZ%X!`-pC:L9$Lg39Qp<jM0$ZED07em,%Ue\E8*%hUmAX7'uSQ8c=h-(#G)LGCJRmuQ(B=W\3erL/5ji4lDTdje@P5o;'&.nJE(/ShV)G7_6Okq_LQUX4id?JdS2.E*4PP`Q'%VX[9nI1/2ZBF$G?*)_mNJqja`J/kntb_rWJ>NY8+-`!D?Lb7Dh:h@WL3A%&CZ^t>:f>*R,aC`CkGF*.rs-S>,[TU$Fq(5T<0l3.m%R$XV7DQ7E7WGeH]FWb5uY47u_.rRQ-fF8<K)TfdH#NO3H^_@Qla*)c`IPB%O?4s^1:NaH[Vhs<8PY0@,V5BkYdS_PdLMOq@P*T!;%$J6EcWQ)'9P2s/9q`tN^;b>-t-/#Ed8Xc5Mq9+4m:X\khMSOtZ9ZGI-d/*+Mb@KtmE4?DE:;WS3UaI88SV5<I=(c'!A<N6V8cFWH%qA6(%hZB^OPt]WS50#[=od5(ur:q/,oIiu(^B%*oJB[l"Z-r1rZi4<DrVo[;H@_!nB*P]69Tk!"mDcdD$,%M*UF>%Z_"48(RieW\%,R]EZAfd;Y6^*s%V&KRf8np:XLc\MS0r0W\AfMc]NR8fRKlO3=2]aU;B[:Q?(t/jl:E6!W85/ICGJh#kRUD6-.1F:J5N?EP]$We2%O2:UM1qHUm2lsVH:'9lCc1-pg.j(\!DAN3bWm#"YaFL@B!(0VqHNBi1?LO5V$J,W47M;Z7%lMWsVWK*.o,`FWS4Z'hd@XY_H)NY"%>*f=QYi>lpY1hb?UG`76!W=7nk!8N7D6[uEWhB)9B,P'OQ:.'13Q6puibb2I')\&.R2.Ti?Pg9,MKScu9F&8%TH(`*mA/.Oq5ut"%.1093O,iP;bn6%qI^[,gRW0_^)lc0:Z4b\+^YMN=,qd*orqHq4oS1!co02pYA+YLpn*c1lYSaXn9";<R\i&lVju*9&`#,+\_R7)+%Xl7KfAdR)gXcU/#+nrdpo"Q5jX6J1TY.YGU&uJn15:sq3rh+`=*-ZRXqGg[f%Ku&%&'7,dg'UB96fkhAV-EgUa.65*:oIoHL^F74%IHGJhY/5^"'_9Y\K2`\LN'bfWZ9OPifVp@iOpi#,m@@@5QS8Y>XMUZK%ccN3<#.pjFIPF@desJ4+qE_nPO;5:VtWFt53`&g\9:eS%XJK.=51hI>J66U;)A&0$9PP9hJ7s).K1j32W;1'dM)O_mMB8C7)Vg(TV2,?$GJTWni(^id'[[J-$_$0*hlDP;](ZZ%/,&I5Yij/Z%\YA5glrHLVqi_JV.mai-]+R793uQW:pK-8_#;F(.Mi27629dcKGiI3\h8rJHhO+uqbO;\_C>pKN8*@4E7X*9N"l)[+'[b!rbN$"S%\P=KBo*jGGA5_!:BZPQ;6&d7/.\`Wba+F<++c9r`:J"DQA,d_k?T6h+'s:8s)i>KcAf]J-GGQ1_D1@S'dPpTsKG_H[IqH0t_<:/G%83CF@-[q/%LnsfTc]q,qh7nc#j94hM4n.Tah1V5#M53QnL[L%2RqG@cB,0^.o;YQpL20'@9s$6F\&RZu-4/;t:.aLh8[rA/04$YK%o1^CQ<$(%)/76f*Y<.]Hk@Xq)m<c!t#O'qk+OuBgV]Ts#=D2%Jl.3.c1gCALVd"]MD:-gW3Q\+%o7`KQ>]WOgh&:MP9bX\sR;T,7%d0.X<,d!tKF6nuYdX&J^I11s]*m&md,ZaM-8u!T,NPiG*[mN4YG!XF[.g]TT0O0O[B]]Q-MQKD*Ol?a4fXo67rt_&c`*I*[aWqWi%$6=`B\p_jPTX9j^`#IUsk)\iW\o,2>&6C5VV0Vs#Q<bnhJWtbDn27^&_edHnFfEHhQ;)((>#W]`eO"I0S])N6B+/<OQCbZS*KY=Z%qi#&d+eOoaE)aF^WZuq5ba35U0#*P0l\2&Uek2mG"Ji$h(Q\h_"TA%f/nL.Z&D^CX86QgFfFm'p4YD:f_m\3Hl#@$JRK;_W;li8+%8aBM)3HW:BPNHA[#']/pPNGMebPflL&r8D2:R:1]=<3O`.CQQkXH'_K<c;dpB*=4'+P+fCmV9Cle;7.)V6oWlZ8l1@o13'2+t7$Q%PNIu9JcaNRaWd]1gOar"5gld[(9@6JfR@ta#oSL$lKH9,W'X:,q)4&?.%h$<XS__*X5I)[09Kp"f0S7`OYe%jWRaK^/S0i*Y;@fh%9GHmt,h6fg<G*XJO@R`F(.hGb'k(*4@rmn/oH&Tt'i9k.L8p8Gk30RfSi%`I#3Ml%7;.eZG,4PYa#(TN.olD[;eY"8H$&/O$D=q0%dCB?l0\B46l"qEOK1'e87rK(1Q9/)h<9e>F'#'js^$qP?0<W@YU/_V"1f#K4a*_7gKb=j9_Q5SbO9qhE'Y-Z,"H"jlFK`;-P'?8\%6FJb5eJYF<TSc);3upU_T(Ir6a@4eAD5n#eh)SO7^kGm&Skj"Z^c'7^-k6?3N.Rd(SL:US@%8Jhp,1!Z"'2?u;LG*m/@?^&8uO0i%-G/(meZG19]fi/(s&Lt\U9Z3]R-e#'@'Hl2Z>m=?W3cS3:ZZ6dXJO909=<_L0oW=!6t_<m>Zt%Y\6dDXCmTV53HKNN7WAR/0LMRb%jfBn&AHQCd$Y_4H3?`rV'CG3],:-_f%9&W+6""bf,#`&kY<c_eX7ggFKQ'kGH5S>>I#`*G[*eQuBS7$i*$!HM.O3'_0B&o5!(kEk%UBdfVm7PG2;?UuEk>QP"^M?@pA7IAf<1IgLh]FQE1r$1jD>F888>.Fu#FVIb29f.3`C4lof:Q6@Kon?DBJIihAW2C=en\:,.[H::%(9bRB=Jn(&\f):bM$?%e-i0_eM<8dA*@3cn)L!DJYa>HWB_&KZ3/NAjs0-#W+o8WS;T9Z>@KmO=78qqL]hoS%JE1rHU`,IW,8<d-%-jnKOOD*oc%O9@@17;ah7/NJurUT;+U$b@no$LenMJgTb$cGmWS2"$HSouFP>st=ASdOJuQ"Gq5ZY)"'n;)'#;=L%!W]4T!hl/;p%Sd1-l`Bd]$Ej/tN?u7#lDc!M*MPE4G+J282H4$M^m,h'`809&e)Q_!!<i6!0@p^'PATdQeV:+d2!^u`OF>FWV7F86RC,%U^7TA>g%J6RGP_MB\3Np)6YBOP=OI6.c\!fA,()_I07)qTr`E7rp/krk-9FkoIFj1:*7*$g`k26O*QT%/[m4M/N>!6J)Kh::giCit=s-jSgu%LbeLT&*Y.q#0q;_"'5]eUF35e6>eU>GQA&[0X3Y^"7WN\:G;TBS0K5I"',gU1ILjp?d]J*6AGYC;@hl"dEJODb<i.j"pdj&?)NAp%'VA'>cMer7=3$gQNq8:[H6g9Jf47A.IeZ[:!WKT-cFZ!,S7_kd<!N=tJk"3p!/FpP"+\T[k23gY,Sp&A]%>dAP/Oh3T)/Qe#a+kJ%o_OLdfO:<",M.4ChNe@YeVlHV<,BLV>D8FCoZH-u4$/oIDai#]aKr3-4%MA14FckfU]OUe<"%"_?I[?:;:.OBmVY<UNse&t0mo'6%YS,G'm[&R'mD)P2/uutmdrpP4-2.I&Hg4.Yph#NQ'.tnLVp@eITB#3W[ea79p:693E"<>1T[Jg."VA&iFn[ohdSEA(NC'>io>-(f%SoP_2l7g'Y:V"Pl5Ep-';i^V)Jb2u7CR+KtmFGJfX]7\"fWVbV=tBBgp<d+Ako9`H7?nZae6C=/;!>$P><8.#7HWWOUPT<<FT$?L%Tr/E6)$5,tWYZk*4gI-%32a4id(H[PZUS2n[mJc"9XTTJeRJS%]H5:DrFfRJcqJA[?[NM43X/8rP7DcM=X:)po15.\`,u_G0)a;C%bt24'>AWAI(aDe.XmKZT2r>LgRO9eqh@q_/:I'7]M$K)Oip77]4?M#kA$ALg^`G%!0QK0bRjZ+SMJhUnMJl#A-fZs[nH2l4+.V@^%%BQQkK\do+2!Y(ONapS3'8%[,g6(ASOgA;j^q+,o$Ye#e&F4N9lfak*CS2TUOcE`47,E!m$=Ltc\,g^F`?o,P,(t@W<s,poZj`l>%lY'o7<W>E&k(K'"a)cOe:iL\tJ01B&DHn`^gJ;:`CqQ5_kN&47A_/S39(C+CE]]n`JSDUt,o<bl]GRNrIr+Xa5\1^`kdd&WF'l[5%emXB;i(3U!%d^-/EqfQAG]i;13eu\E8ZF-++gI#.Vla]S\g?Enb8_)$_"hCK;i+.6/YI5H==#RuO.m,6P[^6_Cb&n]572SqTdk%R%qcqK#Ce;gJ]?^Y(/TFsfSMDAZfc/.oWqtK-^XZ$EX_)$)jo"Bc"?R`o<#gAR0\?EJUk5q&.-uI(&RhALpjBCmg_9Q;jr7m-/Irn&%V"H@g'g<U$3R:O(cWS:$G(?rg$)_UUQK-G,EVf;C^%7ql8=pVK1;8#0+eXt(99h]a7i#h!$k5GLIjS)9eE+6Vl*KH*`80ScoQ#G/%bdpRl;Q/t&./?FN1V,6Xd-cqVOLu,%M'Z2%FXgjnae.K,eQK-1jmOOOrT3G`738O.OJuhE;c4Yf"Yl/=_8/?9MCYKm2m^S39'7pm%BhLI1Ed=cs4\3:/NW]+bi7`"2_oQ>cH1(G_KZo$9&iFY>?n=8+NQ+t11cqC-#IPbC74ig(>#M<<:]g]u:sM3$&D/5R<T&W`cW,-5%rK"jXkh8.&'MZlC'.KB??"pChCZ$i;&@%hgeRD%A^Q]b[N564\!U-`0f13Va19"b@T1%/l#WL&91n9']=ICL2<2E<B?AK7BqSF_*%-7LkelhnK$I(B%U!Yl7R%4M.AJ^T9uHJ3/,@A.'lI=QL+9Un?JdK`ThW"VoJ!)TR0qC&!GJ`+u^E-NuaI=OFI]=Qo#^0f+l%YtCE%FF^28YJZMCVJpV4'd`n<D67>&6-qMqAh)\t1sB5=%HonZ6,Y`G71oeB\?>tpCZ3Fp,Re-E;Y.MN;+0;2GM=ZA[80RN"O,OS#H8Q4%"1nTR<+9Wu3f.Y4RYY,kKBH:iSN9O]JAg);-*DX-5SRo^=AG:.HP\NsCLi_+i"eCf.Tl6-+#F]`Q=sZ-*[DK%Jj[OXb-RTF2SIrf%#FkHg<a-E!pTk'.4A0Z?<*7br=[QqqPHn.S7DrIKql3)J2lFiV6qA?V4k=3#&eCL&&/h<rV3`IAC6;s*!4</4F]O\=Vk);$0PV$Y%V!+(Yn*sdfBBC2IA#ClBZFr>r=r5j9Ao%P:U5BA4Ga)j16]p<,D`eL8cnTF\Jc-if3mt0-3uFJBT;3X2aB]9sfqGoTMW;!X!A,#W%l'KXB&Y>U#BMk-08@5K[,6s?E11+ApB3)E1U2aM<>lE*1DPTrFj7t(h^\R^3?%:7Ugs<`>"q@3g51_/5D)6o7aqD@Y>=hph!hd1k%f8!!7N[n!J@c[[I3%6s-':(J"8Z'ih)9A'R_#a><RZD0`:oPP^T,dLEod:]O@mNu:3JDKI/U[$-]IGKBl"H\.'baM#=fE`q]7tDj%3lO5=[VJ4WD+p\j'`_G0&<PjYR:iFq9M\HM)#bUINV0:O?piB.f)p0aL'=Za!K4:;l/u4a9Z8PlK9M)[>/9_K)k?'/9-KU3BCP+o%7FCei7gVmURWEJlZd;6'7e_VPK#G7nEgM8.GRGo$?\1n+>*ro2ds]*q?q[DB4aDg/DWoi(V(2%l/k!,J"i\Wo:*R1M:U04RMXT;"%WtM(//CjU`k<[gWEA]Zr5pS,F2MiV6-1kIV9=]<SEjB[5&3Z4LoN`GL+?*s6))645X3I"adL5R>cF^@jX<)EX+VshR$W1Pu!rYsu%Ml6gNPQpLu:Y3eQ!D#n-#%7+&Lf_:p#1>5+c7L$aLF/)b!3G%kJ<Fhb#fLB?i5eij>(^FLQP!GEG,;[fW(s:ubAFGR;O4?l.BI?a%e7.p-Osn=@o'U,Tj6nI9A8LP;<M\bg-Oa)H',(<2SKEs>4";0D4qJebH8>D+\BCXB(VEA]Z/.)fd"Cj`p6)(,oX?e&2,r01,iSk$%C*'P,=p5HLlV3TR^4iSSFH?'-Whs=j$PV1maOAT@<TD3s/<j364>5W6NjS<e9"R,,H9%qBMI2FJ&*P=S#V6YoFLVTK"7BG3:osM;%!4Jq-(sjnMV/blTN4L_o%Ce?R+3.^u)%N"l/Ir[.f?l2\O\T$e$#+lMAVlgqTQ%E.U&CYCE;ifLPQq&p)P^=j7b_rcCVdT%?A1b$%_f7@MoCre5%`cD))<thK*7fju!V`_986-Ss?d=JX[,JO3'RA^-*F[c;oaa\c'\S'CV'BI8oRJeAA;('aXT;k1[&?riIqq=%=p%)=%_JLG7'TC,[*S/KlaL9KcK'Z7[&nD!!difN3V'iJ(-(ZWu[fNQeJ%>4HCp?'tV=aPQ=2Ca:q7>h\GpK1lK)@`:rs^8nAoaE.>RUqh%EV^;Y\9e0o9gJ(!%-2i>5=gL#KFmr.:5'4])Q:Ns<<__AZVVp/9:q9];35uEBo[r=,2p)6C%<1Ra\eS-I$^!/)G6;Zha=dU4W.d&%!LV"7+eNaLRh0"-_iE&\Kd:I^"#iaWV[$^$9kOY.fr%ts-<5u:kB\`HWa\Whb7==:.LNoj\&VB+4T[;eE5]#36XI"nSRI(qTnbTD%6Q2%WFgMB\.I.<2FjoAlQn+X=j=@A_H$Xj%UQ.JDno`FAlX1HD7UL/:!GhM+".%>9(_7i-MYj0Pcu(<hQ%s`7n1RgNBCs`7=9W'I%P"V+UObMQ3(YH<iS88WYmhKes`i0dCH('#]??WRV-,#fC?Hd=8T9tOfJ_Q%$q5Q`)p<'_79$%S4Nh8FfE2j!`S!NU37"i;6ZVI0a%MR6Y[.tb!tD@e1e!;)p`[WW%,'a;]VL()EgUI.3855@BTSseOdeb0Jo:nfhjV1qIQkE.?^W[eFEn?WRoGF7jpB.qGoW8ft`G[j5;%+$%o#gMR?)W/"BQp"9^gqJt]n23:5Dq)/)qgT2[/KIG0,iB?YO?qDKg`/N/,A],s]BM-jkTd6(g;<NI`\4>"pLWer-T#[DiH`$I#%`cJQ&jrK<Bau5$u<:c,`B\q8tKR,CinSO[_f$q28Fg<O/JL<1akq8F6+PV3Ye2ZCr@,O?G\:*NSlmJDL'oapb/+>n=Jca$oq8TJe%*AAaAk1Nm08cljPL"Dg##QgpLjhjUU5^;Ac$EKs>5er=jR3Z=E7<5InK\V3rfBe\8'a<ef?Hf)R[@$eJ*cK1ZHB@hXK1,>86e@*;%7AS*j>o4s%_/:lqiK0DPa;cV;$0+u1F[)\opbMi_m<(W=.E>Y?#H@SD8NAEoI[I\gOsA0/de?f)]sE(>]hZNaDea7^5K%JS7g0IN%.<acIEVbJP8)^YX5Yi'`9>D?04e5mpcMm+pb3i7)WhL6<C'IbskRM7Nf7JYC?/8&5a_L7.Wk)'[Br)5o.fD9U^`Gp_%br<\*HI\b%^sCX9o/Qub-BM.!r1&n4YGrs53#lRn_RH[en<#b;b<^Hk+CCAp\6Qpf#2VFfi%cF<*4&36[m^,6$p34-k,W4remu']]HEN]j6U'_%["!j*3Mqa@WNaDQ8f#8N*L\^PbZ1E7,XGZd`$#e:ikImgJ$hLdYFpGaaFN;Qfb?9i%2nXoZ9:JU]oW6sG,=r,EaU-SIp+J4h2r1Z%qcofmo6!M4-X?/*"7G0A_F7V<pe\grcK*\jdOhE&s!Qo+dj=utT`%+S$J^:TPZRKo:"oVoY+/pJTdVZUqeI<\2S,Pe#i'H)K4BO:%*N&nS_(i14K7t9Z7&H6cYp-J`JHR5$a3a.S)^Iu9q03T$WF6SS?NiEWd2Y;$:bhGkk0]ZHY`aj'6TBY0GI(o;9HP;"]AI9EmlU1r%<T]RYmBBKjTd`:DkP+"M*n^!#AX)KpBjn3PArQ&PEmg-?)8]j@[@W)N$Qm4u!a)!tF;P?V`Y\Y'j.acA1Wq\UG/`,8W^`)L1g\Qt%5K!S2m7ZHu/]aMj7n'7X[Mcm?_qUlk"qPjjMba!kMluGMOe28%/Za'#mb:VW.Hdm$b$;!X]m+o[6$BHI*kAsD<%$,ZT5U2s5'!Ij%IoeWVfT'e/0BbkhKT`N:nK!B^nl6W1Om0qN-"!MFE0XN9Et:pQ0OHEt+SW*^$ThUK]8%]+/s@u4.etP/+3&=$-"!M.UHNc+-"!M.%j,?%m/,:Y0s52J0<A64K>u>B0^1tdoACk6'WkjW7<4GJE8.I(RA<Phn-"!M.A&"l=9"l)#c@.'HV;dD1;*1'@d7U7p96mZGPl/pD%9?Ci,*H6U2Z$TJMnf,)`Mko@u0ST7$nl7/'cPWrla]GJ:\;ljQ9"p%WF9!UoV;b,r24THtUI5?L6AIi:]TQWND;`?<OG3cfo#T^Q%.JXES4=+)"<L\P@n[SuLo-j9Pj$Xo0Q;'p/)s<LaiR4S+^=]>o^QPcunSu3^0.!5PHqG^:$a`kD:u-kh9^_n9P%,aD(\FG/@@k#G%P'%r7Of;t9q06$E7=.>-@ND>Vj=5r%5B)i"rE0U<?`Z]q5MFt9?+6gp(VPEC%gsTo";[ca]d".e7#>#3N0lpXJjnZ#KD9!?caibu%hkKd^cFJ$EB#ePV@p&1>h^Eg$WjfBZ7cLucO7`"0If6U7.c5OAmN:$C+.b^0FP!Ft-iTqej1k3.h;A-PI!kq_lJ4]&mMio%In4e_%YcX'Ab9/g4Z3L:S0)seOG;&trrTO1<#mDu^)dG.<^AZ4/`Hp#tH;JN!s8:iHHQtTh,Q#BF/bd^I^,THjOo"Wm5?65-(U&3DiM'Cr%T3qN@3uGCJ-NE(\5N6MfFQ^E5-t<K$$,:<iK3n@tYMA`dh:""5qtb6'r9DIDrnnU-I$^Sq:C4Gln,L^\G=C2ohgYNI^IQWM0AQ*4%%,T,/s/1P1:Wl=hp`HPhqnLR]`nc]$I!ghO.f(gcl*l/n4CS,!Inm86QapF-fbgX3AHh29hu(i[XUfo9eU`)^jA^O)qgS^!((%Kq%e1]8e?H$XS'"?QI9s8NtE3JZXp\Q'-X1n7t(NI<jo@_m%g8FT7^OG&>oAKpmm6A7)3Dno$0E/BZLOXQD^47]n:TfabGi:N@nJe\%%1L<W0r96`Oa;;ikA-H7T6S?Xh47J7"pYYtici<CWO)X+Wp?TKl_C'9"=2+ITYKn89L=E'gqpsA*1@&-..DPo_hKUl\<$0FaqidGN%pA!24rp\['5PtFm^\QDu5'd(sUTZe+p!%\YqU$Z4IJWYM++O34+9.tZhtls]IsCh[-_EVPmI@5q^Aj1:hO3c5O+6]a7issE=h;b#%-D#%=V#73:U/pG]^Kf[m[r;;sHXHa@X^>C!H/g%mm`"baYJS\mpVh2X,/!p1Mr4Dep"[a*rltGkc[YcO\X3<bgAB40r7qn?HL@'a%]9ugDpQX[LWj&l%J*9].iUp9$rq<8Ma6!0]Y+j.#79!1BI//!DqqJ<&BDqghq<cd`r8d6@s.TGj2a@2;J%2per0+mBql=XaobT`t%n#1iIaT%k@T;mbE5C`!Epl=2^+5soJrS/4HRQl&bV-gn+6TC1AJo@J9l$LaY&&7odGa?()9E"tV;'.ppo&'K>S+t[g@'AG""+U94%''ha]g8#RtP7d`A3sXo'?[V]GZ9Q(qeXn[8W;eWFlUuFX]3lWGSb2$u:'0$1I=YVgAT+\h4Q4;,EdmfKXd7dKPCDtY,>/"3_</9+%@IK<0?@VTpr97uU2o%Z@0E'/-Do<aSIWFT^G>>J'hS!fV\GQ&>]geX1Mmk'$]A'sZ>lIYc4"c$[Q.mBOj4`.tY=>PhpFi%'0A4nH%XWM-0qoa1XM][?,-)sBrY9<=anBNPho)92ijp1?=iC.q+s5:SK9%3d3O7:I+FPFKM5'^TTou/:3>1*,e4"nboqsl\o=3cWXoD3jr%j.F'\bA[<i^\rT8_LKGjeQ8=A\S(6BpZh-pO.QC/\E!U!>dE/'f`+)4*PS;<FJ1]]"(3dYfAF-Pm9R^01gg(I2GV$gYkL>AJ3S>[%]_q65qmI#c5J6[lS9Nk>mc>8"p=>is!5A6t!'$5]*<#fMe7R>KIOM2gKq"6O,iRVRT>0pbn?'?6Kc<p3>7g_qrh#g1)Z?],QbN1K%5>15.^&KjU8K>0?J+LM>:L*qfjk!f_Vjc`1SllKs"8LSR.d):P9]]3mhJI1i([i=Og-]e+oqcopn%<JAq4iU]q9G293pWu`qW_:7%qtd3,c\&:sbBNsJJbBFFoq>Ic;_F@PpS7`Pc+?lmkIm$f_IRoj\+^>h3sCD2WA8ZS\aS@:$t&qp:Jl#q^!GZ-qVe%'?bUtRk3r^u%A,i3[s8!Q'4*NfU`1Hl(L#;J+Wa5XWB5US]r2h@>gM]9h5'm3l[m']UX.Ok:DV>UOMS/r2GI`t%#R6Eqgk=n2qHlD[r7A^Y(2n`$%I.\;*rQHk-rp$%YUpiS`<k?1Hei&2GVTo%.2h(Bn7Q@V;hVe5=m-jtF(e<p?T=t)jmshVRf@OC03>WSMbAH<'D"Ybs_R=]L_su1@%?[;Jh1sG.PLC`m0^X=4<o%P77mqrWb5,Ss'_jLA\k?fa(TQp9>J,(0N/,upLcqA<G5B'Kui)BX6`>AO9++JXpg3o+X^>Aj8s8N#3%&,rdTqNHEA2ZqrcdJ8).a"NJI?Mr[Zi>96(q_,V\X6X*k'oL<4K78.@KCZ3pGk\oOD>rsa^%J/`^\n#qc[C,[lpcmPhr:cq^E9Z"%_7K5aYFJbm2/_o)^>-Hs=#9#sIsBpZ^A-PLm3ArdCX52bjC,1Y5PEr]W$gRPIsN=<k-Z:YrnrFIHMVPU"E]hDitehp4#?]?++O+(%\A=A1*o,\VO2?13s7=4fd`0VI_k*4plW`/X`G7->r9&RLh&%Y;i`H-:4p*sarn%\R48eO7Lr$^ma%,Lq1.3&H97QMmGH^m@HGq8U%hA[QM)HZ?$oA7soe%8]\mMjcM]&SSGSW18KVrYPkq_*?_gL%]Y$KLdIGHT`<iC.,Jp:mKZFf>$,F1\SYH6FK:2cgVf-WC1mi(X!*%\<;ki):#%mLb%^*rNnBF0B,T%]_JYIkPsA'`6&eg>Y3lZ43jY:Lau'pMEB+Z^PFBH:V#X^qMVkHriA*&s4ETYYN>hT8Uh=R;IjVa%B@:/*Q%XUBpRFg)&Q]T-<;2nSIh>bF,.[H<8__gL]BEnbr8aWbY+eG45JN?T5Q:Qk8;qnnrTrhls6;P8]_gZ;If.looN;.^gA_]`%2n/L*/Gt"Lis,#/IsL\'2a70,^]39Qa8*]pmsaikq4G@sk%C=$op]<9rgQ\Jq=(`jI/FnU&&.r/O5>0JnS=26n^$pJ?[;RdI\#e;%qss]p(ZD%`fm^o44h;]L\c;[?raYuSpE*[:g>cO'])3$Wrm1P(^YSq[Y8d>!a7\tH+91@c?]RFg0A_&?ds0=<Ghi#mWMMh.8n<le%$2'N(^Ir7cVQ7]VL=WA]d&MfHI$1Z2]c.lh9g^q;7AuGcW8q1heWC9j]Qj<.Y%FVtakQ9h'@?(+>KrDlRaLsW<)VLcp7;Su)HX%<%4/(V[XXD`])pJ6i7a`d!qoX%".Tbb*XkJ],RPJ5bNBLBq>2HI<k*,+'7QQ",JNVt*qs$MHQ!n@WWiN"'4^Uu_l[#V-6.f$%IeB/,%Te`'#k5;AW^\Xd`fMGe+"1(UX>E(.E^%sSpnNh\+gcSYDe4RpS]U&="D=iAN:ArW!iGi.%ZemY^f8$6#Ntm]pZYN$OmI:C]CVfY=%X3r'0WWf`k1mClipI6;ha]W[@B+:dRIGZ)O,ILkNhC#3KXmS&s@8A2BhE3gS_d5G=HTa<KB\>1=3+$C%Co@bKPiGhjFh[\:Ie3-+%?G:VYEE,Y<*[A_=HfbZ-#FJY0J*k'+ZmSgoeXGX65.PG&[s7E-H1;7U,3Z\Lhm7&$D.'e;qUD6#/#YVA9"I5:m7BnFi=D9imk-Hh%U*E^h^=O>E)"(*aBhciQn^Qp[?__B]j^kA;%96d*=tR5+#?G]W%J@#n5k@PlB[iOYc']!b]qb[oIQhc='b"d58h])rG:\1%(rK1i%3oi,YBddT$`-U4NUM2gAZC7KD9*3VkJ]?%Bp8\A(hiP>9Wte!KL%4QN9S2sDXN@_-]7-:WC>"6Gc`f2#&j;kfEoT6?j<_@_.h")f%o]ktYNg5B(?"Fllq&9"aFIu[sd_2e!G@+ZK1[2+qf3X]"hm5-r"ihOYHG;/2:/LAl"%oC#6bLls?Z"t(p8Y:.-6BXiPUhi`Y@8an%6-I0[Ti/)i\6in-DQ)td#:RjH%CNo/jG(h-"nd;fn"&;+5#/H@F6rLE&,V*-.`G6<DnM30CGM'n4pNu&a'=AAgrF?R2mdJ$Y5K4Y%7n\kHEDceu@:\N:Mt/:d$9Z-`<;43rBJ5+O:WSQ7kg^7=rJ!f,dnhQcpDWoS2UlO(^"31<U!`RupO/@O\CKsC"ZI&M!Vs95E$H'G%J<m"^L+p#%p9uk$UD`"(ftbba8fQcQl[/51-*Cu"TabjA)0`r3\<5M<.<S:?MW*>p0car8r@T*p;/]:?i8>-XA=oOEpRlA:BT$[P%O"HST_EB6Ebe7fgSltNt%Fp/XfTYIhG=2>_K>!t\'#diq@I,[`3M;eLh!BBFb"@ChfdG=)Z:/$CHNJIiSQ_^+8Sp\j@rEqD]R1s/%Z>8%Rhb_D,%5$A0n'UliYC"O=/JU1N&%-4%/Zd;^ZIc%0Gh?nia.f6<2oiG(_[1$]r;]gNq->Y#E&SJ$9]ZFnB\Mbf/pjLTFEEn0%C^i@rh,ktP2Gu,B2Gt"W*/H8),uF>_DIm<F>d&_pr]9`Xq`\60lk:%'.8odrPib0a8!/lEPZM(><gI@'TmH)RO1j]!N-dDfeIAp-%pV)mr+>ZJsbF,ZNC@%jW&pKsZ&-%CLdK-Tr*\86kl_O!%AIngno#;$cL/KC>(<'VJ:r<N)g"Mr8.[^&eFJ]E)K/V5^[L<U]V@@B6%**:CMp[.-(EOW=/s/H^ZFg(GO2>2S)kWa!6%qDoSqA,r_qYiH>qs:A<`a7igFsL/Q&.$,@1EQB>+=JZ8XrD-TNr9l1s)).(=p/]a%f,i8O*W(ZME?7%qHAS[PFRcn#9_\$OM;A\!.o[I^kag?I3M&4=:%EOpgQoiCaqN-iQbD/9?3'R:IW^/>?J@_3O58/h#'8+9npBf,%L'cR1K=DI\NGA1A\mNmN2AB?4[KgG0)l7!+m=dF<3W1n$dsdDclU_J*6Np!(SGJGB>.1B"2]Z?pHeIh\>=Xh/:iC\rDQ$4fD.LF[%=o6$@#Q'8<2A6)`J.f6fQ-Pf2JHg756X,4U6[e=_ZhCbNRr)gXM@!,J='RW7Q9Pc?Ok*=O;YE"*ZJTES"2]6K3>g242jC"qCaeq7%%7/`UmAuV5;"`O=fK:*fFj$H.O(,Gh^6ct%20;k))AnSGd1?jGpIqY+bFi8i2'N`'JG-MU'kaYDnnfdn4o]N5[dqhK\?&r9'8pkN%8\6j6FDYaQ%GH]h3+,dW)U>EIGNmhREP's`AatFoUt'oGr%h$A[VZ!q]l_fWh&FM`,kjVe##4+i$Y9'lD)g/pDUrB5$fdlR_L,ha%^#>430:a^425;"h39#IreV:>`1G2u!kZAeah9m@:Hu:m94olTDlm?@48pff^)S]Mb+.i%?h<uT[g<0L620iUjm00nad$Ds;0KL2^%&UD"G4uUS"G:@BK?qkNK(sB;\C`7:nLKk$A0-+"2UXNZ?rdC<=Ga$hTH(<gIQntn?O!)iXi2IXe4/?`f?EkWHG#VoIXNJPkVS+';%gU+srlQ2.I5sOaf;1hOr7:Z1LFRhh(d(eDC1,/`:eHtP<L4S`qW5eONS$m_Y.O-eI`OcTDNkk@N#YC48<(u1dIj<6j4lSt-Ke<lt%5=)bS;H,T0D4=/GNYYU[5,;,niK:%C#"M7:'i8ON4@k!Vd"$+d1L_Fea&7Y;!'NH0G2!]-m%)d7V&tg*!s'crJf\5TTH-@7CZu/*%nruVM0ap=`D;uh"E'5_[-Ri7+3an3dmU!P?.qtbL$>k_`X;74*K)3@I6g)#>Q]ol/rPH!=a0C0ZLN)-l88KB>YUgH`Y^`*M9C.^p%]ZV4hNFdKEWp<3<NKoB^LCCCi$cAlNMt-"s1;:$EZ,LZ+g4'*<#iD0k%\:R]!_Wbk+lO!;4R7]Y?>?rpfFVqj\2S#)[5e,hnr';+%XHAh=G-Ec5;fsX(*&4\WRZ&uR-ob/S*h@-c"BOIB9DE>5RtOd8?G\5#\;UYm_V[uR`]2bQ2u.-?;<0!k'bVA\cd6[@.C-@jC'9mi%PrqN@U<O5)\P#lUGMqU*&?+=\)bLM$bMY>b<j$l)-g7X;%^n'4dT/QPn.b:,_D.;[O3>=b"pFNe1'tB"B-4-\lL?4-io@N)Q=K1&%Yh]NSm3@A;f=n?=mBEk8McO'cN=dpabTk>FTg7aW%<O*I_NsO$]N\+e>5RhDbjYqnk$H'm8;!Pg>)V:T7ElF,U.2b+B]/a:8fA8P%F`;k$f.fKBSaMl#Xh%PC's9C;f=Id,d@OL!F1S7B"+HE<>%,Z5Xn-u,.riPqi@7_."r89s85:Ck$69rk.51(WNAVb9=J/qL).%E)%<RrL.CEn1g<Nb1ZUf$SVUih5ghNJGjNH&*02h^oGCC'3<ii/j[7XHS(F7$MPL:._LX_LE.X@R73(62!h;0aI*<f1$g%<<D7HE2#.%(nLUSZj^BmF`Bh9od-\C>!l/n$PN`r[Z,Om=B5mteQR5RorPhkXF0UBZg/H?(c4IIFJ0E:AT[ILW]*H1`osnL_.eBE<a3Q$_$mZU%[BX&CF_EM4\D8\IF;8.0F+1<!HM)92LSWfES^BF]ldY@@.aQI/C-!9\(t*(@34b[%A*>V>I(<usB1W=U=uS:meHqcQJfb9a#<o,e%,7L'G@.^n#b;PSnj\aR]!jP:LNQI._Z!!EXo7:?:Q/]2!J*`?W#14FY/fYaj57le#56nVS?jOmLB3R@3i;+r:9H+r*b+aJQGF:,l%E[VQ#h`3?\6L^o,DM$D04VH%CHR:'bn"T6UAc"=&-k5g?D4L/cp+`CT%B$hGIFsn*H5)pg_HP6EqUS8??j#h-@.l;5e@VsG(m^;_%g*W](#_[r$m+mY<<IRdam'a?8<fdMh,CTI+BJfeu9mYO8"-#*@CY/h@4^695X*<pM35<gS],cd5D(AWNEnnSPlP0dT'tpP"qC&!q%(WlJihU4ClQ+K%s!$`=Q$8h?grGBE>6hNTSVogk(/Uq'[ko8Y\#+#2_9aWN^KQ+B;Jk!fj[`,a%WAd;m.;Y*Rr,,`K_T;d/>PN&O%oHjBgWi`MUZ.$2@1Zb9tE2m;&2j>;kV#?i3D'jT)KXH].IR24mn_6oS>OD$kHJRttb&bp%X4,\fh3W!NdJ5/k,[,894^0e5G0k&P%Z'?5oF[SN'<I1Fd+\)u8cRorC:?i;3!Ep^M&?oq[*Z0T_mH^Ni_Gdb$H!&->`QrjE1o!G$gX*k^^G%j/fM;5+1Tg9b$YIMZg<eq`%_h9ZZFu0^#AY^J=Z0ptP7ISSm_LFP=M!nW\DG(>n#>EDA^Yo6#Q`PN2hClGm.AHF2Yq2iVq\5Fhp^WVG_KVLpE*V=?KF>aK2]t.o%0M<=u%<6%J$18:6/aS.<c\8\KlC/_"<<ka)EX.:'CtWL>>.3eP&>QpcB3="Apja$.C5:Qdg@3aP&mZ>Y"NRa%m;n"@"\RR_\PP1@%[q5eVf<CS\o7RtGKU/8UHJ)YU1X,RlL<>h1J0M:W3JUr`#H*7u4>St#p\?je`G^P5c4/=*7>(8cJ[#REM\(Yt0Y#-5#\V,2kj9-b%/pSXr?W:>>#d#Qg\IlE\W5*]rp(!^AD8O1.h[Ht^Vpf]?qdaB@U7L.=D5Gc.D<Xr`cEJI<I0P'efa,h@3+jh>pI:oB*u_tYUg5sP%pZVk#_+sY,R?+gDT[\1@6I(M+mTs1R'Jt*=d&t^s'VocB!KV5_N[&(#/V4=G+h/&91uZo;nLmma6W=HP'=Vad6'<!Edq:\ff^B6I%h6'om*RH<RdOeQ[#RK')-`B9RJp6)aLh.[D\9TRT'Q%A+3I(d*I=Y"-?c,&3)9%3iD%G_pn8Cs1.-M/6e%&NT_hc%0V'3OYe<UT.%0FHZb<8`;=p8>`IOJ<d,'c.](S[J_Fl7KA1>5YU!L.XRY5T#60AY>"hBJO*T6^')<["QFINtruP`<BnQ/V*V)*L\q5A3_-9N]CeS%0d_NLP?b9Pb#7mDOK,,qb%3f:O4t>S9Ng!p3=pta]]jPJ_GNI$$bQaK)@T5t.%lu,\J&<([YVS*0Q[)*L@W<fS@05a$69,tYC[UA%(ldi5*2e>N?J*WO+Ur*N4+\KTUSpFepT=E>%Tlpi7'Qah>J^IRD'"?EV[&WMc/.I0#,%nE%c=+>D_g?\h-YX*I99__KQ[Yg+H0.5%<R?%NeCNXJ*!$(nP7(Dsp7"!$2rL6_+l5Qh2@LQE1'RaKCkhsWmQ<b!3:N)i5SbTr2e5Gs@9BuI6Z>P3`9qC`%<4BrLg,mt7bT1g%[uMkM+eB(>8F]lU$:,d7?$rj?3,XSo&YKJL)P'&B)5=l^S#pkJmhN5ps'e+H/hoTpFJ""k!e>M"dF!'T&')=";"l[EM!bteXeaTe%_7eG*Drk@5OO=_/bn9(C_uKd"AWm_B68p]$?P7c]&.N&5hVfnt<tWRUeW(58+Zf[<o;6K8!LaI1;2Tm68Qh8`3<*`!L2q//@@Tb8%l_K.`EASoQ76aWN5`.4mZa?CW,>d&l`1m<DhV0dj5QT1?SkI0p5h_Q+XK5C^HGDu+E(NqJf1;#);E>;B/,Z>r\30i24)#(/4FHd>%qY7Y""45o/cpdgllN%`&7c7gYh@,P7""8L7ROAYbe]N7A6uN/iK3]E95(%6I`72F85ia'p`!/%0HICametu,;s$1qaP%=9:kh67e%A[0$U,@P@jKEEC0&W#dN5ib)DD7r'%p:p]l=U\u9(VGXjXWT#9D-7q]5SjqNje[&dFKi/qgCHpX/O7FqDR"@U2*e\.i3&+mZ4miP%j<_GaXPnOI<+ua"'aQ/g&oA+T2Q(P/GCpZe]amNFGX,lLf`PL#3>=<92?W/kLc)UUlQt:n^_g/n*9,h<#>3>c=`Hl0#LJ&*"=+W<%?8h\mf$[A(,E/9N(/^'uUhR:E!f/aK48&k$Scot1V*1#N<,WB$N^aCi)o*@fd3AZHVN9+<@0b/FA/`hS-Pd;4RUa]pWe;503+YIf%0%$`&5\dDigp"<tdEht@+p9$9)3AWKXI;%6F(AO;aLX1_4b.5/OnD]UU1&i`P!pZ&GOTja),VSC<*0/mI4X&L&E,%0`Z$BPM^0+&%hmF1!=h5^u"VF(Qg6dVnYdQon.2elM,"XBseNCbV4fgagjKnn"R0aG"BV=t!)HSZI!m!/\FcZTc3=RAi;;I*l3e460Hc:;"Sg$mZ%5If\s:)"7T;V<<'OpoMhPe.cWk+i!W)MN!A"6Noqr0i#PcR.joA7XufT]BN(8SXIs"p/+KI&SC9VHi[nP#tlIG<KYKL#anRoHfYl%L$67BiK=o!Cc@ooJ6o)&E\0Kr#3SOO^hVdc1a'e0p!aa+YZ/$-6BaciOAnP+jSdq^1H/%>7<cjq,qGLMNR3m<:;@bZH)ET1DBZWr%h-nb6.4L\=X^qao+TA^d^CI/FCbe8_&-5q9/)o+lajg[)$PJYGEkrCs3Cq4Y>=fYSSQO$]W@"m1Lj*cY9EA&^JosHq7's/q!29jg%<-ASCdW@>'6`;@g0&WRY:q.tD(-QUf?QqMbKIL3nWV]LrGs6b1rOoLlYKKVL$OupTDCfZjP];4O>gs=GBi\UFOV`0_>#hZo"(<K'%]p?p3!gE=5e_9UPV*3^kW'0$nf!R?Wq"il3P=b<4UL-32pZkE_q;s%H0g4T_=8n,2Om=_Hn<8,BcXr-35:9qdrV&':hKs@l+0aA\%7;Ba>5fi?@p3?XX]asN/0%eQm%iW=I=5(QAO:U3\T5BbjFLDL(!_Q.Z+7&/W8lI/1h+-oqMe1o1Ga5CjlsgeLkPf\;4m>>p[6+L`%&Bk]eeLe+La1<&qBYP?@iXUlUD^Ac]m\@65rBZ-FOO^[-ms=m]b/'`%bT7u-lbfVB^[oQ;+9.u3n+$2'pHS]MZi>u6J*#'&56%BJ%rUC7K55sK\J&]1EotPaXp:kjUoO#AcNufnQQR4-$&kT?S[U$hN]";cj_NK5h?n*eddoJ)tH]XlW0kV%KI9B0c)2k_n,tWkK<I.aI%,WU,mCa?<rKo$e+Cje+]JO-Phq)0g]'(85=NKDda@IHi[l_HiY5MD!Z["^7>F`(*<O=UTK_7IWtA.OXk&Ke8\%S:C`qKKauiSR6T%.LZuIS\M8`.@<T\7q,l\Kkm(ODZt<Bjd,A79K;\>Ut0)2^iuuCC;Y'(6C].JiaglV7^LAeFg`]#_NY+i<X;_f1SD]E%+%inZrE4L%RLu$ETH'E#Tp'`U01ros<Z"@j;tE_]r^Pfrl-_[/0SJ)kUi8:NBHor\g9gGT_*9A:ZV&QG8)\M_%!&aX@?r^T<*KtkP.r,RX4H=2%naP'c=6;P2o\'^1R1!Z[\>lo^klVBXIS0:Zr`,Alpqjp>Wj&cP`2SK-^/DOX<l""6CUQ+>WL>%f7/61,p1/oqBeAA`&_E#<@^Ao\%FHGXm$)uAC[RT-K;.XJt[s2PS%%(?":$_X&HeLEQA?U,V/Yp(]TU+WkF6T1f0NK>iL05>+!5`)dB32_TW>2D[i\DG\b!;7%k*QYl%.q$tmoPjVp<b@];SrN6"mH,Og^7`CVgT!e>dbMg#4-'c*4[i1Ljg5<6(Y%e<56KRj7%i_\nPHU_E/MGTHR\5JKTSO00T',E;p5^o%8m$\bOd36c8(gl"R-p*HcRNt/fMqpDHD0Mu?.q\n`RMjsKmeZ6TNU?HdAa\C<kX+EN'rY&pa?fqOJfpJO"7NI$KjgkU#\kddT<Q@%rG\c+5dW*-"m)3P.m*2Y_B8m7=*gDE_:%QRZN[[tX]Nt9k9.Q0k^S;m/._c\eObO%dA@,iU3/N:W\j!U^,$dLS1J3:N5T?hSH4Qn%FLa+[]DnFl:6CbS94XYK]Z,j9)'n/+_-'lbhB@FqanKN@!]6!lFIX=])J#)n-?&!$5b9*(RTtD7-`QZiRRDmHP,`%;KjBg6dOLl"%f,A[$\pU>[X:XNW/3_5*=Wr"o+#OpE+EOA[q/;1@6ku:g?A>MsA%^6O-^[OG)(CpDQ"okI$X$^'.9B5_;)jsh-_;)E8'+E\Bs#Ja%\MN<`*aCbV^PA;*%f`Q;bWFQ(MtE5\B07IZOY/;6]HH91UK9Z\:/S_Gr:N,..O<>LHBU9^L#g()J=n%BWnN^KL7k:3aC7`"%6,Jd%,aOr;_RQle$7*qs\l74Ij+a**N%=u6dUuQ2UjD:@`_28(1aN>NdA8FL2!edCU'n&5"B?/n"`%g[m;u5!Ludga9W)*n6LlZsE/I!4%aEq'L80&+&+j&hT^o/'@3hW.ClV7d%&mWlEI8)RaILF@YKUq1T#-SBu_h_%/98r3Qph'AZc6Bls/k*<k2R4V>OWb_V\Lh))<_g-,%Q9>MRM=jcY:9?\t"X1Z-e#-*eLgZ#2GrG=l&et]r'iJZu@HnK'YsRe*?cikI$F,4h#6-+e"=23UMhi#mO>$dqMC>87bNa1_KIZ*=%"];`X@4FoPeKM+<@\.&IK"Has!s57GSgs[a%"cLILY+mp1l6BM"O)ge@MBr--:>1A!3;Z'+<?>.;sBa?9[8e&6e:auSq5fDj'1%:%&a!Qeb9;$'UDV73jPoO!?<`aE\tBe\6XK$%+sM.I3AZ[pa7qsaFG@,=SCbaH6H$hX/Rhc*Q=f/R]Kcb@=s670gY$:!)f]J0K@%`a%^EVQk8:h!Q,%0$;o3SBjpHF%pOMWiWm]:lufH>hJY+H2:VV$EuE5JKrYeeP+nHOhdrB?'hOF3Z\1-#Z$X>WZj0H$*-eWOBA"&:/F%a-Pe*#.[Mno9Kl'_W4$okp.R"1&[!N?5\C;9)MbGZ4B!N,SF59;"g$`<P%Wkh]YO8D>7BP<!tBCVXBn<\OJUc($rq>/CI(VI7tpH%(nW1("5,_F+8HSop1:$dhk)o.>U8VdkAfaYF?"ma-d)r5FSm!*2js3WaoRcP3h(=<O>b1,.cF9?OB,L5>pOJ68Z.*P;PUf,8?*fM%K;;PZOkM9f4X)42b:<#,(1#OOm-Fm.OO^p3VT]0PZ69MEZSLXcI_LfCrQ:oW0cJH>!`bm@M*).a/P&)^(d>&Og^X+Gp].EG]KrPu%nMT(0Sj7+-2TQeVW"e/W_G<TIf;5lBA:hDr,*bK/9_VtufApq0>b@$EW"eA9LqhTji%OmN+_Zs+QD8'17^h-se??9KYGl<@RT6Gt%1s$VuKJX05ag@`@k_s:h<.XA1\-?u(OKlp'03pq2diXdZU\d='O;Z(iE!!RU6lZS#3`+T2"gX('ITQ7'3X$jl$3VjsN#1Tr2MVK&%AJ$9pM*R0#$`6hr_[ZAD".f94`R1qF67II*]-3MtBTP/GX?rs1a8j@VZ9n&j).NB%l!Q%=LKLBH#-6H&&33E9gWS'$*FoY9YubKg%!$\`c'.%3576qUV.D7DYFND%0@1Y/j!9-+s$IU\uO!J[(\W-u5SQ.+K*&0eI+rt]]5Y%c:l$FF_HF*)AD3Xs76Hg6;N^"/MEuL.j%>?K==FOh/*>Vqu@%Ojhq1T]LE!\siE$4jtmL!tn6=G_LH&s9Pa0Rh`)O@"pp>6e1HdRD:cin>T__YSpk"H'@I>+1af#5?clYS,oA%@QIYh'*_KG#4FZ?1R^WYHbgc[a5%<F6s)]A!@\k6AFZEec/@0+NRsOTG"&52Qum:5-'i%tgZ,+A@[5,i%"N*`ZN:gpfVU(F?)mu1%)_'T?jFe(;GQ>#r#ic<?CiHUq>f->07;6@/a+=$i^2.\2IRi?"MRPKeVf8(MJm7BRh?&<8ONY2Mi'N)!"EG<Ml'>-'R2<,J@:=;T%Tj>g&(27:kl8$(]@PL:anZ"m;a[-Q[Y+ocnZ49nNVF6+4iN!0Y&U<moB>a:Df-7obRtAU&HK/""`X3-TcC?^:A8$B*Y>I7`Q+To,%%^HQ&Pk=a%dS2ni&l6"fPZQE-6(Tf577gi<Ig_2X>g=>&79u\[[%/2P701QDW$+obWQfX]0.4#P8b&qVELo!MQUV?`%WVP'LWYPV%:TGAE,bJMq<6fSImsl[0d'ce3-?oKOrro>X)H.oL0jV&SETj(a-EYB`XV)=+/R)eB_2a)`#fm,kj?@RXEsbVIGtsld%"8Tq&6LR3%<rr,9Vs/5Yl0j">fIg!G!85(S0aKb6ao,T#9iEhKqM0`;GGuLXOG[lco*#gKjoVLZ9rE#uH!6U.LL_nULg/es\/0>k+?RS?%AGZM%Zj%NSeK>c;X(p6!6Ca8fSX0cU"3^7\8@oK`;G:TRVl&&t$:L!GT,aLM<%bm6h!NUs@*^AFF]T::U-USWFPH]s*u%+@*;P6!*!oZ:%XS\hj183KlEX0f@5_<",Orbt"JUe*^)Ig`D/'q8+/$:\*0QkfC/qL!kY]X@4;UD7NLd_@n%HVg8=*>l];:c^RDA?)RY#$]Y!AU8O%'M!%J=?mnM(0jFr6j$_]])oW<a[`.,eZ/6DkNjCnW[-\^G:k,kX5I*VO:/:O?u\Q#BI_Fa8>sg/6)Q>f6onm":qq[_KT[/pi6"5)%e?G=qcG=AO%c@JJLr(.37ZE6O)A,^EBZY:tJHq2)#74S31Xi7p#.?Lp@812&6,Obc8A=RK28&2niC6qpfd+umOQ$DG%1G5H_,_?k%$2KV.V*KEpj.-o?QF'QC^W8j^6A4L$YJNV''nbk&F3'b(5j$@2?lIQ,U_&`B?CAR4NrUEdb0!_GZ[c%5W15XKKE+L^aVJpK+PCKd%,#pKk#.[#-FoX=`M.EJB%-9ehWD1Bbhfq^*+D\f?AVmpT%#)OQ<)E/UH7cQK$Zf"119?L*KL8N3LT:\@=6lU.,^7ishiBc`Zt*:M%6cfYk%kn!GTo1`Ql+4sD@WFjKI@8.tF!Nqh),6$7A5(*BK_tt_dI;XN:'M(<6dD;B.!q7oE6>eCj=5Dkk7uZ3GQJj1o9+gRZmmCW%R$>R[Wljr:VjK05.MH65"sQ0R`sQ#UR2B&e868WLKuHCt&NMb2^&c@ZZL\c1Rl'>tOqfBa2F?7\Eu"TtN]1"@%*j\t?TB6FSKi?S%=*c"_Eo=9nW]ji)8Lm3O8KDnqODmde.7lhg$4L#fgi6(IUeP:9Z0`:CJ4Y[gh`0a!Ei*fUi$a_A4Ag8kol9PYCZqtUaJD-JC7@JR%_HEa],&rc@+Q[d?e4ERj*`?$pBZtNoC60\E6e86<"B[&Q8$]QfntEin+3/G_"<a3b6`$(SW5K5!]/0ej=_LLQV7n^_%!XbZi\%9U%rb/A"*6ok^#[DB+4HQYcG.8a>+,NgZ5Z@VO*"=<5"#6cg"k''l,a)iY+:/BB%XBT)43dDU)%8mHolXuiqhbJa0m=i!WV*W'^BH*;%'\`eBWe?+b1)EMU3*5#=V,DjY-F.\)dA7i#R95b)<(TYK!`Mkd]@q):0q)(7b*@45^k=Ft^*@j]7`nVL_c1^ia73+D/Qnu%CRt23%Tkel^+RqALkW<gOp(u2KXBgV2-01?/jfE,&A-%:29Q_ItBMjB0-18-&#S=M(H4S=O16Sg%e-@%:9LqKH%CnT+'hh.2_Q6KVHg@Ih%Y''Rh&s5hL-);cbe<qQ(84I>dEL<))YBepXGo^k0`_m]XQRs0r)%UY/S0/Io$#lUK&s4eX4I?ZhkJpIqKIH'*':`ng2Sg\r"=".@%ir-HK(IU)B>XN9IqL>B:!09^B%"lX@7</u"'>6jI6KAnjXl%8N5`L<#((h@Z)6@P541MBI&'/p!HC^iOL;b,77V,7[7U"3j\!/R4%d0<Y\(HXU#g,-tVqb$W$R8_UlfX6X%,+L>DUT0HZa:^;*#].J?Z*1/t;4U;dIT<5T1:Iqm@>K&?>:1^20cnpDn"s00'db%S!=@uL%lBWYcfc#kj6,h="k:i#!0gZCD;RokN(R67:?OM[0nU?XjUS(F_m/V_T,Z8DujH9NfF,"62Ahp1B-7eONONs=o]8[-'^%!Su/l^Z*%RV3^pg2EP)etAA$agY9d:@h3EZ=4kQFtH$]2+gX$OIm2t2TnG(o^<!KAs/mS0;,TXA'._F5X7GU;WJ2ed6sM[%6ut";T'h[0I\aS%gFpleP@;Z`Ea+8:QkjXa87r)oB,2VD+_4s0FNa0(&H]fOJE43).N!_5[n9cL;OMj3m#N=GK!B2t$\0R]9$gAoJViBO.8&e(dUp"@%d/]!hE>Grbc&h)H;NcSRA_:9#fq@HG%<9Js&u5s;;<Wk/Q2m9D0gY<,!@_?9;tYlke;".3:N7\>8Dg('fL1j@q'-Z@WlebL0qp@C%=r0cIgP[p6`1)S5YitJ)VbO]00M/Yu0(7T";>VeP#DbCtrJEt":<;D<'2bE:mrBaMcjs0^B&`UIkc/Gk$!7P9cuq$IV+`aE.7kM0%[\AElqD4>F2i`d21)EIT,cC_&7,0aV9_F/_"&M!SS*&HV^I+;!e''<Y[&n`H@a#.2HQ^/Hbk-j_%>cI@+p\1)q@?.`>&9%,O-Hos%%>\Z3,*SB(MCY0HUt(f>?Pc$!#-j?CeBLW]`=V3a8K<0_e-JWT5`&GE0+"$o/5E$iaU2Ef="SnF_XYkRXI0N?NA:km$/qb3s&hMk%Pn(E`k[%H8838#0D4,_X,c6/RWe/q91%6`LIVK&DDJhpIScU%-`M.G<"[LiUA@lt/brH?Al**t$dkIO2"e_^YL3`T/[tFuuisFH:%KiC+q%h%Bg+HauCgN&`f^HN*(8@2<g&0<Wn676JDU+oME-SZ!M>d[#.T[MgLD2KbHYoo1fAlL<XJMff(;#jM9knsU\3VQK,f`h'L%[37;8P:$CXkhUr_[;P4W*-V`:_jd#us&i;KHJ!j+.MmqHN`2`N.B.he>,%!+hjo5kI9q_$WbmeB-;R+=!6pVXicE[DA'2r5ij"@B%78Kk-QR!RYRU'js1D<>Rm8>r[Q05#7[44NgFrZ[4SF'1R#FX\@`07T.5S=_u)098o$'E0eK%$u);4;BFPC$q$'PSa[l7jF$i,5&m%5bmWY?''hJ@jf5DFUP?`Eo$d*^H<uh:$'KqZ5k&'=<aQ[N%?=%7;c;>R6JH9-S\,&BLM1JEYT:0@5A[\kJHInoSX5s9lhfb`EZrY%)<"E,WWph1(Ac[aa!""db<rSpPdt1M50jDGR=ZX5cAD_HLjN36-$')r+X]T:+Iu:a>fEf:2jBfo;MK^2=4kr3&>@YOcr0OrFpc/D%0N2_5!6#geIOcOAQ"m304!9jT,,FHPf@^sa+AsWV6Zq81Iq"e`qr/)2ro]5t/VpT8-8sW(A&uW1OgI!^0JDFLhiOH.bm2o/]!'Mk%,GoQ3OY;QF_"riC'mH<1T^G(hM$*rsrO:+Wl&g113CcE8-(s$(nZ'DX^^bVc#QZrkghZ855T!UkLF-6W6%8^TIIOI*-^S9a!<7s;%$gH![=a9DMP>q*"doXuXIq:CZj8X@oY/fFr%hD/3Wl-\(p#up;pT\bX]RTC]$8qSB,D>t-843^#KaHjE@,%o/4/VtU0_fr(p9$(X%oL!FXF4itR8(]d<CpJg5>X]/XW*0]c)Cl=Q35$AB#Qd0-i5<9a3DKGq##FAK%).FN(u,qEF980:%Z8(b`*cJ*`7c*0)[9dTfX;e&%bNTlI\I$.$_3ub=/d;FA!QM4+LKH![kSYNHnL@5d+YXI,+(1?'%l"oe&$]0a1Dh;d_KoVV!V$_RDB_cC!O-b(jbAa,c^9:23dulr%O+?U%5gAWX/iGh)3T\$\9_sM]r72C`lE<aA8q9B)g)Y"KUo?t"U>*ECB/"!W_Ib>^3qaV(nD4O7956aIH\fMF-C2t%+LtEQM,cg0%e3+4XNp4lTo.?pqPb4(N5d3$IXajHrR4Z+/38sM]((X_OW'ONK=SL!ACB4Ru:tQ28YtSWXG??R_k00DE@&RcaXN!b,Etd+,A%a-r%1L@W1fd52^TcQ:oSZelm,-1sf9$+rq.oVc]el04f*!6)O0Wc4$kGbNl+D`+#p^jjrDn6L>TGfK3@WKJI$"MF0@e2Vt#SY'Y]F!m>%#s1po'Jc"G,mQ9dh*am]KP;72iX*i$#8Z#N"&(nS?(O,HiBC^"T"lJOTGG_(Uafh_OqRpj:KWTHOKU3O`?WJ!,?A9Ral3o>iXlQ\%An"b(#1a@XA]jBaPW`I;kn/P&8$)TPEQrN4Eg\(s#!JR1\5H]pTH:RP1mlqV[X8#lZqu(\$\U4%kgOs?Lon0qNg$Q%W_3c/KWlNd%a(h<d;Mjig)iC!l6,`[T$,T^O'n)=b8rIWJB+e,l-=UtZD=]Pi\bc5#E0<cbTh:oP0bdh;2U:'^q>mjhj3(Q$R+T"0IRmTR1h0?q%Pd>5O2.HWRq+*(0GQb-t@_'GXYf%imEn3kWG&R&T$dqh,.G+`]7H00sG[]/r-8`lUXBTsakN,6%,.))i`m/\ASC0mN>K+i"#^)'A%/L&MPdhB`7V_H]s+JsJ_`/7>BZ^6Ld)(A%.jg9ism><ZRQ_e(kq%@/U'/i0p]/9o"m#t>4WsRJ&K,F,iIFDU.5i=R5lBZX"TfZ^A%`dnTB^u9@994%_<dc\V8asRt!f2Z[E`UVoeTZ$-++3urV.U>Fn>B-)&MH=4D%q7'/WVCj]f`48pc8!e5M<1o!Um*gh4CP;RGQP>Z%0qZg`r"(&f`']s8bJm/R`D`2P7BG!`.]]*QM`';/8L102W5+d"6YtS_b!!!DoJD:[6`cetVj!-C9CWauIm>P#=]al$Z'>jN.0YiW%:sX&]d5-e`iKcC?g,`=fqHhd9-3gb5Y]BD=N(gc+QHsr^Ut7+KIRs_H+jn>eoqj,'PP8JNdM$B>m1;(2=L/pZ0a,LPbldX5!Hi-8%0ou`u`M<qH#De3@8IWg/@WTM,koES*X=Km)FD*6<]7nYO6YuP5*u\?kp0NhbZ1PH!?L]Mp0Sk_[.WiO=<M5B,'edU1c;e^!lJ=".%F-\&u;](EF&1d9IL4T_ko-.R(UQ="AnntCh&$[#aq=''sW#,k!B4d14\/S@cLpbuU6/!ItbL71@JQXp\runrir)7%n1(tVs@'WB*%3I@23C=a)63NcjXHt'.p822S(bhOUU7`ICnl?*->h/%ZH6HJ+2nm=)-aDd,um/#YY>)NtX).Z!-/L#ijBiaPW\/i2t&R.HT;*/@S%&URHrm5TI2DVrF9/F:DX]q\h1LY/mLE6C:#Bra-aVBYoUQLtiOVDs\eC+]TuAh^Koi2?RuIVpa.lenUL6aom*Vb!W%HAZ@^P%0if%o6U&o&IN*hW=$GbS0YOb)&\9_W"u^*>TN>]Z<`R>HegCP?%@VH0br\GgUMmdU^rq)?iiZ4-sOeBH'0!g#j`k(qS<_k-8np&Q>Oju%@BRV>0W)u.F4WHTk@5+1mkKl?$7b^B%qC.*C.e"q`c6j+X,sLiUt$2)-ekJlJFRooETr7Sb8Z$b$Ht(ALk28?rc]YpQcW.lJ!Xu%%3cq3iGU4\lgdF'>lY"n5#g'5oV4ZXs9b$GK(D'Pu(^.;,;ji-RmWi4q9JJBV5-LMY@0'1_d#4a\+qa17Qh%uVEWKd]3\\-MR(@+9%a-ipBR(+B"So8#[JYT1WIcuaR4>oNJ\SNg.O5<d:Dd`"#$B-MCG3?JXglANB@^4l.bKmG)hot8]FL`OOH1V^$)S3*G("Y2>_rcD&%[k9bYrdOg)'^Ioe_-`]%at*k@(4WI*1Y?Dt4oX/\0!f$>j=f9h98$h`bkj/MQo$o)od_^C26lhH",'SmH1q7'lTfR&+>Z&8g8,-+%m/CX<%be"8S'CYV+UOKUQItP"ALWIU"T!u:9]m4sh-V4C)2mU^hd8O12X#3J<cmZj3r3*K(S0UZ#(8*pNF#\F.!^oi<k@;"9T_[Q%^FQL4(FmeIN]-+dR)$!GN?g7t.J:];4p%M.V7I_M0caL1VrrN1Q,[]nf)4*qee@BtkUd8Qp)P(Z8hC-5[gOsc<BB(:B2D3B@%=ZN%1s&27LTjsiRXlXFT5=ae]F;u:%lP"6M4`EoHGjW>)4dbn,.Ms3*u,6,s)W?7Z,TL+7JC2R_@UHqO!,o4d8lLu+dT+XX=.^WN:*'j%\N8&E(So:9kOTReY-HC4O9#KCAdmE$k4gd!ZtEa^E?Gr$?kYi\$)kppl)K/,`=l?h#FJ_m';IVn=j0s.5pgRS=N"^#+aD=^KB5cd%d_XRUE1Nn)bd+uk4-*c+&"'E;&Yn@i$-SXbaE*%WQMgs@q(a:;Z$kPIi(9DHs1id.$EKYp>MtI^-/"mG!L:Ji%#$4YW@t(dP<kca%qZD0E/Ls\7#2%7C(RXCPr)_p%Mlmkl&j(u_S2b75&cPA*$QK+;cNEEu?C+]Rh?+1!),c0hn*X^*2?S%$H9'H8XoD9+N"g[5r_r(g%0sF?Xnpf])Z=&d_CX+&dM'3:3;`tn)XBNP;Is*RJK7>m;Vmd]UU`4LMZPOJ2jFh[=AclLS-JS3]3XDg+^A@@J!2JQXmDhml!eqAX%IJ=eh?EW/%5(']TDjc"]XN`8E>PSQjm=sQpb-sEl^h=eO4/$4noXp9-1!au%`S%DtpN,0?AKs*j3tVR!IDruX5F[)rqM;>J-,?+!%j1I+)A`Pr&Xd)kp=j?Ta_N5EKCpXcV^^?!fFc:@R$;5F@gP9"gN[7#C[3\7sluC5eb6ORkA)8k"gKdEt-AEaq<6%7+T8DCr;@F3f%bNtacj&;oZZ#a6^@E>ulQTQ"c+pP_#1fOK&QEp6jpC>L.E3%=@FYN;,1>0.&;""8!hKNs#AbCX`mlT:P_!#tC^Gu&MaJr2KCrG/N%XAD-o)AlsUl?tVODWJU6cWuF?Z)eq7g.c9Eb<:[6_!X7%9V*]EdtQ0L%)b;:=f'c,JI%KCHf*R;Mbj^ReOT]qJCJL0%j2jFCi!`F%a`?JS2R^fl9h=/O'>#0L0q3e)lT0Y*mls(rc$1^sXr)-Vj0<-4UH9LH=CZ"b#`OI_KMhIJf&Q7=N\dnY's_I(<)BAGbSj-.8R0&g%3H@YsJ-$2(r-)W>Og6]JbOJgMjt`,X90?8cjF56CVeG2/-@#>;]a:Bl68Q$f:pEkJ]AT*^[Bf'9Ym]DN_no;"^rdO>(1[R_bZ\E<%qZtCj:CKWZ?subu<uEp/]B$G5_B&7aA7QG`T-B/(Akru1!6utr`lpAM9\r$)\g(3O)[`p+7O2]fF'24l%IO]-DNEN+a[fV'^!$Cu%dddFdl[gZ]1RT#b]Em&0IY_JeX%.EI/n8P0B(O[^RQm;F89!i=?A,"#2R5,3&fBCVUILO_+m?k[>U(=-$SDNk/s%g!>t/mA&0[iA%!\,K;^qNg!R.DM\l++UnPr2&,`,)Xn+5?"$@H[/:%kJn,bXK-oYmDDS1ZhAt!4%r1go]&eK)Ef>_iWT)Q?=XI=WM18#g@FrM37+U%,e/,Kb>-:HJ@FOK=uaSHRPApFHa3`[/htu=q?&h6WL3!,aD?gUd]W^'JjmlkJi,O/:Q8Fa/N<CBCM1)pF^\Xi1WW7Q"m-ZPWi!A#%/Y5>,^drT6G+kn-^drT6)Q21^2:H+jlY@>IC)F1]FfJ&SU[&p<IE&39+NZ@HHW;@.@-!dbK-CWCc(PDo(6D\^-cbUJDn;2/ClEh0%Gt%^5@_u*r,Fhp<Lb[q87?K02THCL9h[G05Q^Qo)(FGjaE]\'l?Ta[3QGGanWd-54<]WIAdtLAk4[th/(_e0O/`rdDq,X#A(kO4%%"$#9Z6uud\X:gT]oXW2A_HFmaT'C?pK]mIX2U<>KrW_*a?L^[n>QEjfJb2O4T%-5X%%qd`=!SSi4id=qZP%GqMhMLkSJP]aT'gg"%OFBQ/j3Dl_p3fs\`"e=E`s(@3g)2R]HGo16!Ci*m4?ZNtIu$!Pb^koPJjBkQd*-k<VDLeP<=`f1kJnn<302>AgJ!%3&o]JM`g@sR%^5iVo!3;\]-a+0KqVE?2/Q\b1@Pm6i=a\?_GhKP4$tVQ3ZlL3#l`m/n3ld%X+dI[A77@Z:'tRh`UJb@;C+n:d3UXqN8)0dbQij+p%N1E(0>fX8Wh!jJ=b`9dplP6&3)E9iDau\/!WcMdK1K(:la7JMB/\/GT[<de&\1b`^?=Q/7bDKr\3+E3@&DBkH"J23!T'ML8L6Hgs%nF:B:2@!#fHc/qupLW,8#QW7g))l^=0R?qO"O<o#Vh+55;i+@a?7(@u4!2;uG8*7,MVj<hJopFb8XmgTK5F6`'DZ404B>o:^Ru6V%5-l[2b8?@'8rW,'i='I/qIfS[OU%=8>AOD4!isgS\lOnI\lp6G_dA#X31MXFWK,k61PYne83!9b$,b!KEu?tj-ifA\N4L8e>OCSE%.dU$KQFos@"@cH#o#a\b!Cg/6W6qQ'(eH@,TOL-rAnA^<RhK;I(^c\+K?IQ.W47OYdcJ3?Ji@??Q:_)OQA\Ls^(t7SY;:R6G:A.&%Ym!UP$T(T@h&sTnEQ7QD_kZKbXnA.Q-=XMN]=lK<1B>WWcRHihfJA6KTM>@c`eZA72l<neHEYbsK-@S48f@`bRXTVfMlUF?MtAo[%)Rj5sXK[bsj9[DhHklns.p<AWglDc>q3KE'N8&qIJ)b^90k4e&T?HG:@Bl4=[q!*.?nQ:]N;aUR[QA=:=OU',mb5p-JS!s4b8P!(%oM\DQ(j$s*C<[tfe4#$+?'nKFhd<\eK'7_IBV`a^Q6Gqt)<SN'=K+*YQnR9,?*\F1Z$FI&A5tHp,.kWo:$3B3l,i;&DC-_bH!L3j%X"dT4J=YP4M<D2B0Y>94G-FXR^.6."@O/Q.90N!l?ks;jpiUIUj`5'j'Eh)nQPN#RhZ"ha;dn1dOJ&b2lbpkq5t61D0aK&@FK5Rs%(a[6S3-E6EaVe"fV$`T[1%f/3&!LCg;kDut/F!WpU4:@O^b\(;XVb^%%](uD3bt[L42rA4Q9319\PpgeL]i?XmX?dP2^V&n*+I+Z%UD*gVj?\*[_Wl7=6$f;0I)D1!-EG:`Z'Fs3'^j8_N7Q2ce7TiAf'df>8(<j4mqbY`o2@DPk[O-<5F#eS:L)!0.91p/]5UP@;db\(%]KA>UF[YH[bB=;hCeg:kO@<*-amjBlL(:GZjX:PSq/WUlbc9u8b*-Z?G/sV;e[cm(hc`-.Cjf?X\!8f#Sr6q&",R#qo(jpZ9!UW"%T%/'tU">"3"_s!QaSJS?ZuhjN^pMRmMAY/%m7))$i`G8(fgT\2pDA`j=1eit`P\Hu:4]D"2.55H7DS,06(Q)>?CANB3jS>p.'['H%.jPuWgP([X1M)Nkd=In4\W2+T382V4=]=Z"qW$a"=JdI8@QT<Pa@2_)3EM@2K"@QF9UYZ.L^][C#:sr=g<IWXIg8F]k*\`.0do8T%cASpG"#/m-$Y,9S!KPo1=lU.I]Y3g/k67,M9e'=F20jbXHn@&Hb@[h%#&:,P-Y"p*Fh+&LAdqiQne1Uai>nsjb@H$%R&pUoNY]#&%\ph\13^_)aU?'BKWaE\ef<sU$=KEN?X5d&[.Q7@/cZZOh^fUu$A;:And]`Fnb%Cq/6;)D`)@#*E(Q];i(u5U1AZ:VE@sLh2@)Lm$%pg38@8?;m<aIlI;JSDDge.;X-XpZa.YBU1-$:Z;aGnmb+A`Rm%5p=nbn]`k3ijpfNHGuA0l[iea)Ws/8BWdQS#E3O:Q(F!H'AI*S%grrFI:Dh;u4q'-V>nHWk$\oH4(`Q65)eR$CF19A#_0/u/GaTC)N9VG0o*VqL'XqGdr%8>^r_m:g^lV&+GE`Ph!-sQ4+YS[lF>MY&%$4[IX/hdEr9pr=/iH!Sh(c"RNJ'sZRN;f3e\j8>1EF;&8;epCf?m1.EquTa'M.JuM8J!(I+4LGd&gBfS$>9l@'?t>)9fg7LR_-L/%eurPM)Ii=[A;U@pP)s_39AH."bG8a7o1V0+6/bAt3bD<SrZP&Q0bIegI3E(#l5B:W!':=NV(-N(WYm=iF%)%Z(U."BNGkZH6aFnJ%ia!Hc0@ej,A'?s5Y2sB!%l%I44i:#r"j&a(rX%pF?nPRl`9;NHa6QHY/.n*cX+;h.QK0V"AGurN_/hF(?V]nk@W]85Tlcid2?0LB%l"a\.Q9c/5FeE3l;DagI7_]<j<=5-+'E&)+?THu1Ke,dB&m^G5\b_t>ean_G`0-&b/XT^hi+3UI]TtNbp/)HtgBH@gq,E3-k&R2U%`2;s7D^cf+ouVG?5;g]^M!f1T1ma#k&/*/4K/abdHXRIa&S#:E\X^7@`0bXGF"i`4OfQgr+tF]bY!0)VAXA#2P/F(=-CP<8RDa0G%639bB?;G*[:`6;EMI`"\=HGSaLsbYm/=fYsGj":j,0\Q[Fi?dK-Agi(/uh:oe#BX!`9;IIG0P8FUZVe3d+cb:C]`in0hbk#<f4I)%`(4nLq/i.]0pRBY#Ze`/eL-^VMH:Zh0-]Mca(&9;7F]t5Y$7dfQ8h$jb-7(EgWs=C<?ITU&]EmY!DU&D.uUA;.'7`*1A*s0*BAQt%W]mY7As#e@8Kp>?]2fOlfkkmfWhYcWJ)_df'>o*Q6qsJH=7&=W`0Q81_p<Fu8OE585V/7JWKOKj/q1,ECkS\=ghc$s9I(EN[tdI!%S#-^tXEZf687GY\qh_3]G'NIq^QPbXOIn0VB!/Jp#:0*I&EGc:h4o!;4.Eq0p.>@jHnSXkarMb);sZPf!e?]Pn%t9AFGrMC[^]#L%(JsU4*>'Od"^!pS[:],])Y#/UgHt&;kZbi)Y)Jb7H"*^P7BE:%A.`26.JQVR38Yq*2Abd.e8i3ZGl#5H)>DPLEgFUcIQP-I+jQI:%B11slnAKYSQH-h_e7ZA3)>?/&ZSH-OPDCm->)`Pj3EfnRX?9?eb0_Ah.H^t_BRIa=/kGa90;cIJ6S'?\S\<Hml@DCH;898d7ESIH%.koBCJ[H6e'2>+P0K4s?(LZf:&rW!L\jg'f;N@cR68;3,GrZ+eKVPZIXM?qBe;j_I<C^/bTb=DtYVIfuMcuedlQmSqjpSEY_mkO!%_A"8RU13Bq;jGY;ejqbuAgX4m2p*VI%]kf&c"s>%YfJcGA]C3qV%5,TG`tU8$SXT4JbA(Q$d$E*[8,ZF.iok*IW;h"A(*6"b(s-m%)G[b!+cZq/al6nWZAl"I%n9oa1=P4`1U<"CG(sm\>-DsI';P!6Ef3MZ8AHNpXgm1b\e-Lb*8e>"^70.5W&_hGWVHY$ksXc9/[MK,%0#3@*VeVM]1BM2S1f+0$=,@dcNL4%^ihu$]p8::P`,]B8T%gN<Pqj1H]ST2Ub&fHcL'nY=f>4bV>%aeBlLU_AarCr:_s+Q[EGI,J%,-[5k0_W%$eiZ^X*#E4:T#[-frlhjD/uRKbj9*SRC6W(oikm6O/`h'Z,rV9#gVXr1B"9VEoh:&fqS6RZ<`/LW,b*+k;&-oaCPXPi%BD:$m('!M$gM=_Xe$#pehD5tB\M3ukSa4AEB:<dtlWE]$fu3Dp/B"Nhitfs(-!a\+nUAAO-sXd\5D)*F,3DOd2heH(q8+uQ&l4ll%.\VP%gt6^\CL(T$=Ck\SgFWV/bSOl7hlc::aP'^Cm@'V;;d/kqFK=t1RjZusQ(3&)"7+fj2>10_Ip]%WH\.]c01pGLT;JQQ:m:!A%1\F3$oB3S[/\q`"^nO@i;)jn=acX[5-.PBo<uHN+?^@StL6t[CXIO;;h8_c:pOs=g7f8R;kCr$hgYj^A&jD=fK)Vk`!jOj`]nD"q%c^Hp;',r`B1:.l"QDYrC#=]BG7G,0..J)QC7Ui9)66%ON)M#%+@hn*O>bmA+.J'i;goc]:j'ou\pU-a87>i>!Q$Jd!4Q;TN)<VU@%1+sjoN%UG076(@)TO1IO+_%iK4c^RYSP^:KMi'r>78]4+!aEd1k&PFZC=MB[n^r!,El@.)E)+>HM12A>9D&h-GV6u2Lk^5?#ccLm%DC&Vj06Zqlb,O2`/.*W3`!`gk:d37uWL>u9:.BO0PnhhciY+_#+k5Nc7*d5]!u!nk=H7<-o.=D6]1S.K8i*&Y/+A]k?o=MO5W>d7%U-($A575'!oC]Qo0/ot<V`[d:=K2*6XKDI1G%rAWSF;Ue_T'Da<!U!e[9fH@U,'S+9_<^ArEqWtljhTURp9Ua`H/SNM4aeJb>FMe%%MklQmUB$9kpc_))D?:6'8tQMGHl<@Cu)<-omm1&gKSo]>CdSH]8>&d%<Mi5j6A8*@`!"bb4dBL&ZWN-K8m70_,c'J[oC9f@^Y$m%CA.WK6(\K'=1`rn,3PK8HFg])4M?B@essm+5.Haq\:)\N7=h-R]Ju^sX.TH5S-Cj-5Vr_tG^*@h5rohtcr>tn944g#r[Lj*n4]\I%"gZ/Kp0i5sE(]RB`AJ7`Yne'D5q0C#YUmdWUmLBJ_PY=i7]U+M+K_ZhH:,,dg$^+b*NAHMFLDjFQ;T#ImNL'lmNF-E:8AeBbMT.`%1Q%K)h9V6,WH-;A6eH%.La7+A%d#p-UgG8+1-u4.&Y5ss)?u=5UoHVYHb5s?C$uRoW.o#h(+Q"%jE(p#EuJ1N(^gMAgN;u]#tR%!%V,J%A7`aU6dZ%4N;2NAm_r9pb3_4H0d7]_NN71N:=.Kk\>,oj5dLPXs\i(/"*&o7M`mjiF2S'63\k<sAXh&t[9/u*#$6oOt/-fn.%"SCeC"ud,'f)Xi:aRjC_<nU5l=[<ug(Y!SC16cG%@&Y+IC9prjP1[$b.WlGq!W-?'*#1m68Q1(F,#TUnU:C,7P+"EHk&%Rm*/qk:%nu(/"V?<ihY%;l-L($JW?;u,;;'R4K5FIj_ImiquV:o:X="6S'Y*sM`QkJ*KEHRsT!OV<5oiY-&ejW>>+u[%EafX8J$H*F@Uf@a%%Rbph@^nh<(_:U/[X4DR8L#,sOQ^/H1`El`1/eV%n)666(Dp/8EXSD,9:aFq5#8`,Y>]Z9Ka)XaOA78qbBi^VO5'&mI!q3\"$X:S&%cB2s63G48eWe/CKj!?,n^R[^8`>'lVWRb;o.q$5&p;:&%"UL+F!oLZ!R6sZH;O`u19N1%=OkT0%esqJX7D*?3\.FK8jR,H@ZLZ)j%YnU'S(>LtoWd[i$4d,l1RY_f<5*]6#NsJ,&5h%1aXV4"<!2?''"eqp*au=0u;I"`8C3Pr;^4G5/W2E!3aq"KHmD(W>qC6h,hL>`V%$D\K[\ZQFmV'mSq7*DqO0ia=O.K<YH1J3IdDUBi;9-1$R@&_;q#+u%sV5f7m&D:3_SheR>eU$&NL'/g&kbX0IgJ6q:;HY(IJG<:O%Z:Nt?hQ:f37<XTS-@sWXZnX0E75Lut]sc=jLqX$gTdXZUKs,E.9!W!DHp%kC80&1f%[En,,AkD>;4;ePP+@m:oXQ`LQ$$Dt7e_(1%Yo?u>N4f5`2I0!pd(Y[o%Ra/p$NW,XL!#YQ<UTYg'b$<_p*\cY<4^MNU4kma+A2M)ntVVCGO'oY+GY\t,7IcP"`gOMoi)3M+4jQ?%TF2[1W]*<C].=DV41g_#h[U3IjA>IT]K!0Q:p([E?m$YVQ_@5D4"UC56)8)t:1#E6i,"K@G7G59&a<B(67jgmM0*/$cAG9MYWmm!%fsLjsk"GP0aTh+;Z2>k.!Pne9I2]U&Qb%"C6!9nF<Gapah9RQb(SC)DKQ'>sr+3bWNJ4F"0FaG1"?>P%^<1H-@S$^"@a`"qeMkIU%_gL\$b(<$K"ZGh/n/)>6cp=MKlX?[+PEZ9m+BB;QL!QJmKcOZt[sdoG9(M0Y@5JIMr7Hf:JqUoL1A(HCnWg[iGS(d-44C!<,N];>%&eH@QYZB4$C3.9MMngj[h-c*iHI!^OB(HkC,_gg!:1gKEB4^S'G@'PIL@?sQ#q=J0l.&R@&)QCEFB!5]Tp84Q_rGK7jJ2q^ee=MV%fb'$ZHtM+VpE2oKhQ;C@1n*^N.bjJG!N!6+k"&`%j:\DbOe)2R*'c;J#.KUIE"uaaYWWY$2&Hc^PgRrOAF8Y]>L7nCPd'5q;KF79%'ZA@+k9jm[JrkQTs42?#XGt.kSASNgOqPi1/ct7<lQqq:eN'YN#l"320p"\K<eIGV'OaCa\9c)DW5>,f2>.FA/C8TZZtb\/^sW5Y%>/$_7jaueU(i/RZ.gLD.UqeYaOaCg0<4.0ds"UYL.aBJ`bdFW>ls[Z@-<CZhMD9(l<S=U^+#&&?\[s/D6q,AHVOC51D?S2tIFaVu%78hQE&c8A3&ueNPWI^Nl+e]HpH$)"M$OQnaYj*lV%CIXcLtUuK3N=TYp64fG8Xa:=]5-sc"Zu$Z><5h-WYS!NS<X+@1t^$tD$O5*%#CBuLN<^$5ORn9]"*r+C7Y\:'bd/!oZc_ugee>kiK23+SqpZafU3bh<VL>_sfdF23pKs\A%^$bZ.f'7I9,&4_i5kO*%S)cZ=TmN@%,\m6"-XC790_!k0:c5g\h?Q+Ul0&b4+RVP3*nQt[P%f_Y_$Us."Ba/&d:0?6F@<$7#r%GG601P5?s-C')"-?L`f"*PQ(j(j'0<1H%)9ADs4Ld0U;JZR5$7%Y"@6tc%H+3'<d22EW<n4qLWaNa-`($7)4Ig4`KTU5L%&k[98=CZcT_5LYhf[&1c^]'9i"C*LSAYOa5gbo%%?%0t.KW/sdL4W<+mO80V5m-UL#CCYIC$_,5W1gu(_X/JBnrab,4/f2&"sWk9N].MS5u(gB(c;<?@'NYXCm6t]1L1OuBG,A3cORB7%(!R?o>7b&%g*XA^:``,d:>N=LV1SCiO-FR.nj2/MBW4&2!@#B%PN01CRkm!ckbh\`Q5$B.CL&QWk&,"V/QA?Ree(73ckT,Z?ll'[%5B<gTM5Igb#I5ZIo_[S.Oa3qkHXJ_KfeX.g)#c8:l&[?oN!uqai@[WHWf/'>V@i#X7]kkYE6#d`2fieME38jYKpU,\Ss9SB((E9Q%7-Y)I(^t.pboHg^R:!N9l4H<+ZViqf?ulhcQ=T/uL0@"79!S4Po`B*S',h@iTZs,f&Y&;Oe!(+o%p0Ehq9ELdYgP26Cb'7\Mo)jd%WW[Kl;kINcK`VLnmGF[lW&fR>H5[nVS-nQZ5i5r3KFjh8O33,r]RY$`%>B[dZ5T4M`iK[%"ctTpU1ML$5d;PYV,25+okqSA7oqP^%GtM7m<SY<2>3qsT&IpR^hmm805/a#o+]0?#@JoKu-F+)ga0[:TKPaJbYLpl`61\j#$>^8DRI.)DKh[6"j@l$:lS.c9M:rU5aI'c^%9HWETFO@4QSZ:lqOtYak=q8Uba_;AB1QEn'qrh90H8?_L"-0B=U)e3*B6qbk2+8<(_@kBi\58K6lQWWepojN#80icL+dhC[p0=S"%3F+6VJijsBO;eh<1=KXgF)*FGW(USDs)/aKLB<PHIoL/L?jCNoP=dGO?RE$LHnc-=[@7`)@NS/RJXL28)Bg&#NO`$R&b"HFnmGM-%N?:L.T4Q&4.3nK`YT`q#2Q$,TUdW:9#b<*%c0QI^UT^CM6IR0<g(\?/IqVRK"mh(7cTu1m_*l=/Z8818&k33AHOd'%?*f2n4$g:=%@R%Lgh!"K6PsGU1(lfb]l*G9S.&815-Q^+(KaWfEqE.qSmLVY,e%2@0TP:"pWmN*2"8gd/VurD;+nAIeI0=m1NNpm(cCNBFqmc#J%9ufU/>EMYKdsRlt"tW-'"4/!I8WSNq*W]eG[9q('69hq3;9ds_H\\:&S#n<1HJA9DjSGp]p#+2+K/F\ESRh*c7"dTHUhJQNUBcl\%7bD_e>dLu/6m@W$KpQK33b0>[=U;Q$0?lGW>^4:hD][K`[:b@+_Tig78cWl2n".J(7rtgcE[A>sne5*ClsZJO%:P;Lq;Z.\@:%pX%Pj&A[%F.B6ZZ6*m1DTZ"Z(I;u'X6#i0AsTDE0c3bYW(NR];FJ:9ZI:fQ\aQNXjmZMR/O*r4i)1bPGgPR42Jn2A3F%,#egA/l>e9$%Cl^#m,cZYhgT9=ia4K$NSe[>CZ='6>C-^k'NYg>\0T&dlLD1.R&3:G\blP(ZBtDjcA_QC7.Z&:eN?gKm&r]+f-GsX%pAp?``kcNp%D*#LL&gJBN)jX#Xjq8+^CsLbP57bpHO`*L&ouLaj)6Y`G1sV--'+[4DNp[nc<0-V\[MtU'WNNIT@(_%'QCnPA5D1"`Qk9YiR(Ce_%TS%q!a@n[=Zej/oTZkJ1c^*28SuoqFK5>%^O\D#:8R1Cj^o*7)`E[0?0(#9SFdu6$&>V2nlOV$CJiJr"m9QN>"F3lus)>#&S^:@7%3nT,<;`JZk(9p7FKFR82d:d"[281#BOliagL^2pc+3</*Eb]'S]'<@)7>lhi7"'ri,@h87[;(YBM`WIF[4-Vd\Zhnakp7Ha3@%:L%l5[U4KV(BSntl'aA^7MB!P&b;+)9r/n2K%@h2.ta-^Vf9(ksEj[#(dU)J$oN/3'#APfl5N*NV-/1j[5)Qsps`LqA)]K^o=>53_e:%"58WJ&]AeP1u&2%:ksIh@-e;:3.7fk?%ON#"J&;52[E+]3r2`L5_<F=ibeGta;%et8_\-^e9`)]&;`^UG\99/!?5.RPfts$F?i+H%@D>S71cpCs-a;YV7VMrQa,-X1Z6:XCBT5L8$PDP"W!aM4r4%uTTOq8(#YUbiVbn7.OA*NW2N,W.\<Kb.Sg;2ZPLeE%6E(Tb,FC:R%:iLm(aLNeJ;\:(;&j'3a>R:Q^&(,Xr'sV.KhI(T/Ftpr_$;5Js)(=$.!#_[c:FapXecbc[.Z!=.0kFIp'R:J1@`Rf>hO^[=0\Km6%YUWlMSR=agR+E(V`$,tu.]'",_\1)!N0YSUcro[(`El&j3Rh;r^5:hhLnUjl8G9aL\PHccBHa.P#OE1+1/J#5iC#&*kR[]REHEOb%M^Zk>O8Y(1BCX=+3e0Q6'],hZFDX,eVCnt\f-Y-FjeOpAIfesPV?a,Y.-d5YbF%oK^>Q4+;Rp5X[oXa<lVtkBL&'Cm!E+&!QG*Im%loG;,7o?11k)Nti&_:7h(Cb]"Rd\+#0gX,pW^@Mqb"%enF+bt&7*Y27MNoEh;fZ;7[k(G(ZS*5RhhU6sqc4@NVb"Y$S;$P:(5l;E%HDr6/3I/b^JV@$UV1_,lp'`jGg`ZK]1(JI$84k,-=>*8a2[LptMFr7enI\d2qGp:X,p`3egafJS5fab@*s3)MV1s\lR)iG>?"%o=%R'h.MM+<(q'ELXPZG3WPi?'gL$f<La.a.Wf4j_l%n)"@I`<17;84Y+24o9dEE2(Sb:huAt7"'RtHnJN&4F#i[R:-#",s&#u/0Ltk%/":&EWi^#ORa#Y7;*^GM]Q0+d;-Sn$H)rjqO;LjR"8Pih[Bh>]f?.+u'5BH@Y2c=2+%#<p_>HSfEEMmje""?%,K.1aatqQYUFCle%EJ76'0gSrsc'W6VU=A[DLuES*eLSQW[0BX>TF50p&Bd<ertZobYVK?\UM;G6L#cC27/]o9lMe-BN&2oHfRacDQ%*K=NMWKd/?bk\%Ul]>6l8Wmh!EAPT<X+JIXl=\I8\;p2J&q%4/-rbc+dToQ]ge9>*\Qd(F'C5^;/QeCO/eu_?o(L,^SU!V27&2R+N4P8l]!5BMc2#'%O9BgZ%G.%7#rP7XeX4+!0;^;)JUgK''P+6YTG[*5BYb4Wef]8leg,XE4tngBi7`f2NWN0WW9J,!MHL\3RP#u4L0i<2i;nV<OhK\M%&\<nQ+L!L`O.AVe1m2%\9FB"M,:K[E#pBPMG33K9Zi>r+N<#Ag"`GT*7\P60Q)C'R_0P5mY4)ce"PL/4OtmfNCEQR1kmTYtXS=o"%,#pDZUMD$9g+^H%+/i78<D28Q7#;iG?rPUFVD?MKOE%[jU?i`\DD$l16cS(YkAnV`UEE($<2#k8Ni'0k+P9)nU[++)+%/lu<>9FP%4O4O.92nY<@,N/]1Cbn99dY&IZrX7&3'(du=qAleWL!O*WV+1pb%2u2*s:6'OT[Bb-;cX=L7"r8NEf'e*3]^&;/[7`A3,hUg:`EV%Ttb&kl2m/E03VB'!f13jWOYc5d3A#.kYhbF_khCNh$eg-*eo.\d6*dG9qEEunq.==#0kR+BM.t#PbfV/Vd?98A5sR0-oh5\TU*aq%UDk4ZF5f@QG?l(k0YFu3Pti"F@Bm?S"?XEH)!b$$%,KSD[LPtoQ,9;V$X3ek=Cm`%FW-K?G_;30f26f##,f0'lrAcnCaVu1emaH9%_btV,%:%J'3[WE0TnI$=YAUCB=TE-a7HYXX+NmSf1k`%<0#.E;q",.;AjHpV'ic7$\r+NKi_M>DiuA,bA8=JHV[:9/)EP8KlIqs;%@&[$04#uj)4T^=NZ:'`olTs`FR:;]f&moXI[0A!H<REVT"?<+e?QKF:j;X>>lbYN?"$//uY(;t?(7NmALu&:V]oY#B'Oc\#+5I.Z%A[-HHm;]A#O]"<@"1uI1]JEN#VOP`)ZD'T+S'"";g_-=m%7',!rZF;PVUJKF\M.]a1T<?u8r,@pl#,eV>"h;:;l\+;+WF_i]$q#r%m7*2I%W@XX^[)J_Be:XB*\8&g#*K]r6)P1glbJ;)jKPZhc4"[\jO6PA$W&P9M/+lhfZ9f.?Urg#TipX(\tT<RX>0S;^n)6UN(kF6%Haj0SjriqT6O$:Q"m+*S!O47B*bVoV^l\a`X@+br+4+FdmVVM*ag)"J<rA%*>i=I\"US0-:EuC&n\dRjKs&k,"U?gqr[C)b.'W&=%J</7.VA7O>`,s.W("+_tE1XBe4[$&A"[*/LPT-=b=&!mQL#Q(SQP,JfD/hK?=TY>m3iW_+[Hqd[/=%pg1UBT.O9tt8FnGkP24oVI%gX02*)9;#76i%]EQ<'nf>TJSrZFeJShLbmMqV:SmV&&0mTSgQcOl._9H7N_n$I?B<Be4#410s`gpT5!OWLVA9&o%[_9\J#K#)s9?%jfk[kI"N5c\:UfM(%Nt'("4JI,5_jHa:$#!a)G<12<c8.EHeN-d%FJp`qYuP9tq:]4)E2XL)4heFX]Y!AZAu'$@-iT@)oRA/k-$O%10R.AR1V\h:MREq%K\a[fdSI>X!j(_9WL`4:,E+V=r1f?@PMdD?+l1.F_YqTTk5bi0Ha<\=>CUP$q_t-jWBYjL="OMiZNX^N'sKu%2dJNHKZkG(?*)@1#q9.jRE*0r:tZ+YRj11r4kNc?#mQ5;E`U*5,IS*("==>cE\;#rJGm>]Qr7Z`lUU@`\X\%8Uqn:r@]sc]YfkU3%TnW@e*=\4/$4--pJ.@=A0klKNTHPM:0KM%O;bR5gJX0cN&$`$n=B#hd=_o[lGmcRt>9CeI%U!thd"7Y-'Z7cJ0qF3Si/I8YcE-0u%GTGogLMh$W*812OJfoh&d(tUgJAGqW2M8mPmS:h\;<hR4,5sDpG4]h.!B)Cn^'gbTRmYWt=%Ta:E&ok-`NEZE&bg$.]R_+r/=$>O%%Obgr,/LU=^u]C1Ub^.t\94H%\ub\g$6O'dXr<H>l'jq3j@Lgr7EC%!5\uSac.r!a;!84o$M8c`1(Rk6-A2^k@TemXOM_CJi%XBt%3AMMW+"5-23o06)0o":PVc='2&7M!D^/I-8&D?LC3Xm(6[n%^I1D9b6@5)EW:JIps")c:C]r=is"q_%T\;nUl_DZ;VKWcp:gR+n"%&?<dd<#JFI"b7<l2hejn^u:$('0I=.lJOAt0gb>#2F@4.5Ko!Hokf]kl=,YOg,k6M*N^&!jKcYq,hE9^-#a)YMbVDD3Y#eI^K`L]%2*)Y$6giQI("GPholNg?/A>6F=iK?!gnL"QjN=*:),9[fU'`YK8q;=i::Y'5Rc&1<jYtKr=[3b::c/hm-&*uk2r[Tl(Y^&XE3uLT%mgSs.Y66eeCTOjo_'Icn@kEK_4CLUg,;4rZJ=Vph:+qFb$eb!e;c1LW?sAj-pB!>sNq)1%D5(1N`NE+G9OnrT/h4dan[sc<f3G[!%,Qub?L]s^_+g\p6R<2<6(^\u]]KSu2+RiPY3oR)oQ_bK,gDJ55O?GoPQV%lG;]2[[(&S(tjQe&A;S6JoY+$2HNusO'I<$LPN.CQc%\'h3KX%fB87\+1h`\)9Ndl7kKB+RJ),VBao;9>T?q?DTf4o.-LdP"NT@=bJ.+k&Cifp:d[;)(=@$#qlt::]<4hsZO!S/W,H6O+uj%Gceru0K$)rPBZF+iscSe[me&:eb@Y[kSg2.+kETB1,Kj%Xp@o8n&d*Q!8IY+>CMJ&L4H2m%ft'mm.M\4+p#(.)H:$\;NJ>gX/oYD%?>qXK5T!3]#ZlBIrF`sEKGM4+#X,bsm'T6(7uUR"8O0"`+6=.I.utkWmD?r2)h>f+0te$_=E+UZa#[elCm(((MHd>E(HPkOXpp2O%!lW7E'sC%m!$^_"]E>-Q]nVD?V%XOGped>LDC2i5,gBL-JJ1H,5)g-(QVe'FoJjegV%E]BH'0+aL9f=a5/d'<7O[8BM,mg%+qBVP%'m*2%'Sq6G&j_AfqNa,'.3LD,\gnX)@[ZG/>crUeck0]XWW8KNU)P@VB[NV$,'Z?"81O.;_h!NhipPmLOfHggmL/$0Q*%G!;H<la%E',\.;\gr[/_-/\9TFUH=acYLpiu9uA5/5FKG!K0/1*V5on`scoJ/\m`q?F-JV(t'K8[oV$Odg_!C1dI0;rF8IlD^Q&B,/9)#P"8%70Wb&bBn7[.$/6"Wstp=]Q%?;b]>EM#J)GL$0kNi+eu0LMEEo)H*2BFP3YCR:l(^_)5LM=5<p?m2oL*&Q9F`&%VDr#\sK1g*$D^n%:QTUTYMdVi)M@P!1"!qW>XalerGU4W:0%4/YaXXg"[qJQT^rL9%^8F42D;.-&ENo&P]hYGC\(<D$m:Ef5aT6i.E_l985#2s6idGO%VN)d`.=l0r:ej_Q\UF^7#7u`4JD<+,6-e^0U@V(DH9p+1Q^.Vh>%TB"1E(p#.27kg]muK[!Z%6'-@fj]h9R32c4sq>1#GqAW<<)+%2@rT1B%^EdbmP)Lo#[m56L"OnlUklI3WQmagVg!5Sm9$QJ;$eXC<Ql<kFK7HO9Ybscg$U=*!AE?3,+0s#:N?9U%gC1IITHf'\hag%`e%<a%T)`ERNfn*,rfp1$/6.jCd](_BfG]G6.B1lg4;eZ"6;MdBr[X?W/<3P9NIh#d56;;;e^7!-n%e%jT*E=+lA7llqDI(7%tY7%$[pSW0aIb:J)XAg%20F=2NVZ:4haj)*mPs3/512^@f653i);t<ca?t[k<p>NYMfs#aZZ&C1_lo9cV\t9QVWG(MTKh_.qK)b:.dBd%cjWa-PgH-_F;^fJWQY<+ESo?I>E`Cd$blYFDZg7.bW8hi<Bp\`7;s3iSHRCX$9NeM;?+>u37YXlg'sT+IR0F"pDQ3PH)ec`HCjYc%iS#_GYBcQOW?OEc7G1Y&D(Z=9AmH_9k-"k2H&h7ASdY,Cj"bNaJg5Q$-*`mSCCtn'OP_MiFfK\G+'C19HPs<V"d!JG($3KnFAQPZ%DgoW#*D:uWDLg6IiAqQ:,_#e4^.j"@<8HlZ?,`^ZW('pjOBT18"QDX;L`ZGr;\53^jX'5f202iHk>_-A)C9Du[gJO/[fM;&4flZK%WO=:Yj2,)=gW6C4%BaG41i'obVgu0Y<+#!d0gIR>@9*-F&$7eLb&`;C]6"-[SIT<Cf@YF^J4R^WST\!e#8#/UQkX;G;c4a[Rar)Z%3ZT=SYcM/p79-pWQ1p.?5cE_A4f^?7J>iIkWr=BDU-(P2s%?*U!P!.BB)n&97h($8F);Y;BB2C]UT;"/4</?Vl>fh??l=5afMX8f%5.Ot8hHC28a<.'_K"IqW]\]XqJB!lf6rkd[Ld+.Q#+64V+T_\<S=T:3.R.UE;5])K$#-!3qT8haAe;\uEHNTF^2MRInHT`U*=0^e%ZJIdtaeRGuU)&:ACFp\XB4lKA&acU!P_FXdE0M5nXc?uG%HJCu'DW-1MMA;VofE/]a1<Pq'\4T0^pluZbZR>QA^!E`h2SHa!pGNb%pleYJOkV%uPAM=c)(usPjY7j8UPqIFAfb"p"]/J?B@6IMm^L&lIG(:VE@a%XF/6Cd[JC;/?=7#<(I6`L,W957>:d=)ojX$TH0X*j%+9j(2eX99LaRVLf\V71V5M"=eJKcuC7`GktjuFUsN2r<JB^OuXX:E]XgU\qSkaYd>6;[90if$TX)JPV3!HR8Xd.a0K+,$d,9eeBf%J,]"OJ,\n/q9OQchgb[n?iBPCqm1eLGCTD*?i8/Us6[:FWPAGt`uk<:hu*-hrqGaIq?"D2rSRV1rsA1uIsE(+n%V$Crl;M=m=0QM%hu:OZn)rG4rq.r9gHY]Shu<2]r0ih95BcUIm)eO2H*[-JSuht6PPrHRa8^J"rMO#,P^%&Sg,Jp3>8Y<'?@S$f.t@>d^\m\1b,Z9"%Wthj+GVqm7?7c2t6\u^_K@\S]?e'j(Mm0ML#AB1l"mXE:?_Q&o=(ltEQ-=\@61Xjq1]fQ#LOOc.2>fX'q`[dufu/AplM5aPBk;dK%f)Bta/t`B%q6B5aMMs=)6>M%5;'RaZ50nrJ>[O2'`I39fQ"^n_Lr>JJ'rjFkFTRQ#IYCg%-KXs3LBY!@aG`CX-`BPBn-uM#Is7S"%ahii!B96>4r?STPW6_Zg._4IGFJ?ZtTj"1Zq1e`/QZ&SCSa1-6>:@Me)'\`SMM>@D!:&[0(a:)+O:eLD::(&`T.(-&=/>#!b,+CI%Z+iUeZB?#ekPJK?&Q$[BB^H<Ynqf-#"gXo9Gi-CiH(:>SR4Uan[C^Rk6MU[OS5X/BTF7#I:,P3![0)EtkECNfSu1U,=9SMYE,HI_%J'dH`eFL3lAF*+/T7D*V7VcAlpS*/^4s29Ef<qeI@mtgq2_'<$b.-q7E)#[b\g^<KNA@B<P5pS)NL>GmJLEh7kDF(oS\m:[fBOU-%%Q#Ae\am(lLKV.k%O"-mm&4*_0Y2>=aG]IKbgj=KZ'VCjI[K.7^LGeIoj^#Qq4quqPcBg[/sb;J$$#><&f8gJ!>XM.Q+=>''VOQe%YLT0@FZEf)WkB[-q+U2Ga[ONn=5F>3oQ8W0RXp.oK(9[hajZ3=Mdl^<VJg7q-jP[U%d80&UE7/%B'!bO?NOE,XkVP:@/L.ji?hWM%5cXPZ'HQ>qf"&ZKNl[=+k%F$VIO7F+5U?q/[<4caVl)pQHMV9:rpGYV!1A:$-DUc]59P/-,0CWbMmYAB2*X`8n6gUB01[l2KfOSX%9:gKI[sWLe12cFA&Q5mM[NloenaoZL[O:fH6D(:jr2p'h+"(U_rRS22>9;/"]WS53gHCpcN/I^:^X05P(lYi)6Qr6,*aeEtK%t>J%EXW+Jp!ZV%8-'/m^:r`e*9Eg7#88)oa%rH>*0BH@EJAW5)$m(H.'H'Mk6>JLhJR]HOQVL4o':bJ<NhRLc\V%nQ<';U4.r1bP$:#@%Z$[&tj'N.1!f0\GCQe<aXlIaWIe)oMou+R;*gp%/KN\\hr%tiN"(WE[Za.BAXF;(Q'`dKI_u&N.SE5MdcZYX<`t.2c2Y&L)FIi;6%H"sW<KM4VR;=3%#DfP%eScICpA_Q(9e3Mie)Gb^-3SN`uOmFHW@h08lppY=kZC*\'H>G.n$jLD!;8U/3IDf/2e8qc.Q].>2[:\$I%E5iJ"[S'/V2?[e%C_BWW@8+'8)hPSSHSa;j!tXKJpQ6Ni&S4SM[Z?0d_a"ZWm%a+I\_j@)W/o&*jKA>f*9JKBa:9[WbZO\Cdk.Em%9T60u;^IZ0.Hd=*VubV$Q>rCKK8#Db$!P[]ff@U2MX7,mL$[K0gR7IkVrf6:=TWGte_0mj3=eB`K3<'e%efJ2=<n3KgW'i2:--UU%oa@l5"juJ5?*Dn/m&gghDsogdb9kc4CK3;$jcT`UgI48$1G)\RlM\$#*rDr>;&JU]d[R,A;5h)q<ah'?5Cuq$GESdr!FakQ4!b+/%^Ailb+JZI#'$K-*JGRbY=MKJL-aHWj15\Mh2T.?W!_h\?#IM)WT^E'O.o46:EKq/BIRn[*5^?sZ+eVQ-GTr7;#;cYkd.G4LmI8Eo%,\2AZ-^Uqr+P@t@l?X@]fRZjC+4*3cKb8M^;qmt#d?b<]EkU/7%,)\;"#QJeb9!Ve!nsq@.oHG68rW\j][8knV6qIM:CFJ@P?r"(%"9Ps.c>H>j:p`m'0q3Y^$9o-)-3+Le_:]qAd'`tEI@Q?3Vt>pHK`Ie.Vccf%kjd>3=`CPD@#<A=(u`fhfpr-HeEkq%T63D4E15mR%YddhD8k<It:rse>lBP[B0!BYmqE%jI8n:HcI.bq4$\K"PnT-M(GHg=2<fmA]ofK4q!hia52&E.cm:;d9LJ[RTR-W8;#IJomVEn*Y%+U)Ptqlg6,!gl%bEr7IYadg^FjfCGdGOKr])_fhSjZ.ha(?Y[<kNSAfA>)8E6#%<#C)qce1ak.M-\_W+"IF.[duQlf)B)=bB+H&4%/bYcX@0$c&LkLLeP\R"RjZ)5f+1gGhXWn,)@^%4n%#EJ>oZfR-q/['@LJ=CU*?E$IR,=D,0;Hk%o7.OYV1Ih'>>V.FCd(pE"3LZc%&fGu8!LE(aJb2HUSpR9_61rE_(*"p@gGVR0[eOilVO-ODF#hK8b>T^4!DSuT[c+dtb,WiQFgr!V0_tcp_-(&Q5[,gdZ-F%@OA$-t%.2)oA/mM3iPQh8J)N_A$frLVk!B!'cN.qZ^\o:MXnF:qLn=27dh*7._3HYOI'65:g;.!kU`">D;Q(ZC*g!!n@<><cDJ$#Pr!4?8T%>u+OFnYFpB\86](m!N)"7#A!_RpHik!ieaC]rp!L<Vd)RjujIFdV'(@K,Bhid!,qMJhdH1<+T9M(O7.)E^icg=@qDbK%Rh-M4dHq%`Qos]F3"\H59f]RZpe<=='S+qa@i3`+:LoYA(c8/Wl5>TR^HB)/%lGg4]ALKOC$O1Tei@\8&U:gqXbI_OE^?j;7*9e`Un7Z-B2>,%eEIOoiK@PjpWGRU9[MAE[3Kc8U\FFVN=4!^Bp#OVeAV6HOnNs\$ah!g\%RQXP#idFs&,n,LN@hsoP,;J9T*h=X5FYIVh)3^*WDTM%cHD!k)]P<6kZY1lH-0i+C_@kG-K%mNF[B%4Tp,:CJI]RJJBYS,2#0+A%f7:cefB:,k[pdH.8>Q^a$U9Go-8VUP'^RC&g4*k!J.ih%W(T;Z[6CN1Tc^phCKUQlA.bF`Xqjt-VDO^6/RNgYeVMl,*7D'**F#!,`!K1d!?m\/e#\a!LiF0C:gA[2jbg?:Bm0PlR%p="kOK02%rYm#<g^2]ABtnCGXOZ8#$qY:B6MRTJ`D4FEJ1rF4R98m^6k1>$USF?9@0e:08_FkUj7CJkPtnYq3JpO2;ZLM$H(_piD$]F"kZ9rK%P^`\\XrQGAg@,0<HPWF<4F_Red6KWcJn-:&@OU4K"FsGPYPBRP,8"FD"=.Yh.n",GEubtD(mU%#^!\O:V)jVr_h&HtXlM94s,a93%5`?`k@OqTYXB#3d(802t51G3B`ZdZ-'*4F\KG_O5\9W3"@NjG1r4/B--&6NFo;!$"Liupo"0,HC&H0^:2U'?R)'P*KCR:]:V4,im%gS49]q3<<5NW6fEC_oE(C7Y#5G*1Oh#eBf0CLdHS/6!0daf#)T"Au]2*8-nW8'*>JWK?E%$@o`m;RuLi(+LKlqQQoT:P2)98];WC%ZG8KoYiq8<#5%=-Rqa2k52Ssm)J"CPI?pQoIk5QBbI`"ZNAH`u!&P!Ag^/MY#dD6[b39sn@neRD>WYH-6(Keu6@]7Ucd:.(dNfqB%InU1cql&+'FpK\!,Cf_#noG2lBT.Q-dVJfG8fVmu,mfAh-R`D;1)MK6W`6F\JM>5L,B/&)&pTh2HZD5O<D"]U/f<FeTM@ec"[I/T%T8<NHM[UPf6\NTd26_B$3%+?l'2q+p<0ZJdb)W"gagk?iBE2leca"f.ca03^Bi'tK0a!4I(4o@&$n-gm6Rqe[*1$d2ehj&d;[0>E%?WULh<tUnBSHJ.LaT,eW!jsTeRiP].2+!6l$Go9B6?DCelB4"ZJ?82ALb@be\ac-A19uGc-Wj6f#HA(Z;SX!a)QH=XqZ]H&)sA;f%L)Abo:d_>F.)mT56Bpb/9\.CQ)aY[Q%>\g?6'H5k8')DUNQWJ1oV<1b9I`<1[Kf3c+_V64]FAQFH%lCdJe0aDAFU_lKCX:W9NDZ-%bUXip3<FftAqc%qoY:ISH$inW"I*&0X0CGjD^qjpa8p-CZlMZEQib!P2BQU$'8/u_f[7%Jli_&i?6-ldW,`\EFdbNZ;kF4Y]6BU.%Z7`LNC.HcE5ibM<bI.Mk<Qj*9?j6aX)aLAYVe9?]1f',MN)2d>AE5'cAlG[s;g]60l30S."%$6@!4"(,+;,ud(em=$T8,&OI]'Ic%?T1T6P1PKVF7.DBnrg2<^3N=CE>bOE`:WV!b>0)mLHS)Dne6d"Nq`OWksHL.H8t43Kd\[K+kpSZolaUq)uYWQ+C3Cfc;RUr5[;G4%#\&".NdP2:&WGnH*):DN0M2@/*!^Sicbl9aDeU.5&g[N,%0;8Kii'j:W@hddHC)_9TY-X2"$fc%4L+)(7:pLjBH[k!V8S`W"/&d<%hZKhZKN-S1#_b3j,bP6q1XNl$:k6WO!$m1<<&kaZcg&'E=4bt;f>n'a1G("Tbfk#=R^lE^Xc?S9RNI?oAqI7s,:(tC+GM?GW=Y,U%eP4DTHkIP)1C<1*)1AH%3Pt5LK0KWY5GYCfNfD9hNP&;Xlk4X8gf0)@X,ZC[cL"YrWZEY&Fbn0s=n1>(7HQadRg&F9nTb+O5@CJd%+U-TQ.:r?tXC0/Q47a@="N1ead^_:-T,7`0.R"=QE3/E]`2RBp6leM_!I(0rDWf!F`0R/s-*/LWVft,?YZU84F@hL7YN`Ljq4%uL%FK,(g;2JH9GkZ';%F-Oe"mJuNUE!>E_GCD.O@<kC,U<b\51qYBWNmp4<V(<JjW%C6bMO2G`oP64J0<S6Xt)e4)1]c6m`ORohNr;)%bs;b<XNMVlEIH<h'C=Lt$`EFHj*R+qppsq9LT,NH7@(E1gK*8ERrZ6Zl#T+UWCO(>c"B\,?H3giJ66qEBKc2AmT]D26:jG14=QdO%a=9r8]"c-lq#KAs!FKG9]8m--q>GInAm;p0A^une=ImboU?tHZ8;n9_>*nCNYSaK-V6sQN.5g%+KkkWP^5`AR[I+&]q6.+#3_^qC%E%Gn0Ck6E<YlqXDpG>'1^U^F_'CaQ?Amj?q*,@/U=.Wn0E3.9rFujdHLP2Kr50bls@Q!BX#ibQ1:)]1S&nqEj6SH#A:2X6'4ul[^%b=g*\LVSL[5ho]XU=p?JX[h.YC+U,ODCmLJLf4jA_GoY(BQN7"W5h5fi>I6)GOrkhhcO<6R?%dEct]*u>_:Q#C0`\W&9D5[*G]tZ%i>cR&""H0H<L2Ok.8E0Nr16DF:kT&((k?E+!=1]:8pT1Y];Js@2^qL9*<e%*Q0D@9i[NaR=HVcs4/!,0ON/]@I^G_^1'ougGQY6^%&g2o[TI[+\1WWGC.VME/#nS:>FN,b2Z\#g1(&pQbFSSD2[QDE^N>mDGphEe$^]ni2.s7P)"k\<MI9YZfGs>KQp>2abFr]s!5fqib%LV]*\%emmh*U+P-bfCu[_AS%H`Y$%HmsbK=+fmWic!.6r]V$35V%C+/o9!@^gABX'%9VTMK\c[B$6!0;<GI2RBQc'`"K[r:(s+!N%KoQea,?miL.>n0qj)<XLjemJjJ?7s/N#JmYHgL[;'g>cYTfk+KJ"ud`QFn_'cOanQ$H<]'$%N4dpO&cb0i"K3)DUe6(sNpY?QVeS%)nX0)gO(hO$$jYQ3JnrMHLb_O`QOMm\g&kWN3.'KfXHFOk+e2P,H5:L@)ffnQ3o!A`_S$U)B'*`\H<G=o/Ef8G)hdX2[`Mb:+,5n%).=UR2#a)t(GhqU`hQ^R@2gsr#jgr(oiEPB?g0@Ko<]32@$n1TV\T/>>WW+(Y`O:XP/aR!6JI_c:3+5"C3^MsZn3RYk!i0d\)%0=%$uV#pR@P1i)lu?s)_G5J.$?Un6!96<eoQ=40#h"M%T3gl/8V6pb&rbIh[8T@irMRD1WOoZ^DPeA&KVuLG:X>48etUUU=eWJDC>+f%(k',RF`iZe,0J:*^/)bm$F!R^<N#*6W/V<C&4L?[#a_1>/p8)Z7^1r'gJCP'O`gnHM"Rbb4j+@pc)Dh6/,*BHH$#%omlR?u+gV1;%h[UqHX;OH;2WYtALL3B&"'Co",;jTNT<,(1a&qAcoiiREN'Rtb2YO]6hTC"dE@O8GWWW^k6]<bfJTT&J"?0e?mVH)Ql,MN&]XLQ`%-Xb8A)gjI8!QueNrJ8:6)VEh&Z9K&3B9(&5TTB4apg_h7?AL?81#AW-Pks*/9XU.GbP."gQ%RK6&RqjJZ<YA>cYB[XL:KVc(op)e%1OG_jg\iN@`ni2(;A[-?4`VN*YaD>(:IKpc;8[K^j@-'o!L38(Ea@'MO;scP6:7Jb%t>FT%6b^p;<@cm=\e*(T:KVi8.3n4j'K4"%EWk&i(ID%Lku"IF!ft@PE3?S'k7EOj.FmZY@[51g1Tt@pX<49bS]d-^>>qhOMmrHZ.lsJk;PbX=BeEJi9G?PgVMasbUQ_"MYClnp%S;Is,F^1UeMA7g*m<VMU4;DMDcd(R&D$T,s\5c+Jk/a0W\'3JBZg4[Q3-&DX?/_NXQj4;r')Eh2S\MX$GDT9X'E>4SKX;Eq-Z;FO%@f9"G\/:,tqL!',<E$MDIb8^Id6)"Hi.UqOU4QlL`#oluXN7)c(b8>WPTU.6-8?=B.c,JOoJn&i+tEhm[AsQNgsd4rAq5h_or5<,%kr7EiXNbLW8@cdGie237-.a`GR+Uh&qHAq4OV3+NN15@8U8SqaQCZAjZNOaq"GE.T#&C;%OWS3Ydrr`P&#/DTpbu'#C(_C.9ujga%OS,>746\mQ^L^t;=[:<UDn.DD=fCuVL9^BAS>(%H]_L#)or*n`'(N]P:hhe19H=T5R%i3`/AD]"eC_;J>$mIAQ#YP$4/hIcEG:AC%.(s>H0ubn>Df;n`-G:[e\GF1_)J^K,8[Zb^\?kUMTo(D#AEP!\Y"$+i0N-=8l#$)DYt"8ig2C_h(cCJBE]a"q;;R%0D-%X8&J[@a%[e)\"n49Y84kHOP,I.+M7/m65YBuPbaTi'7Da.)ZUAu[Hba1l%Cm"9.fcbP.W<[chqgF&E[`p5%j6F!o5$/+KL"PI='o<,64%5[Y%eOT%&7$(`LS4K`N?9.Ufh%K^[:.FU\BlG6k>'KF?8Ae^.-)l\EC\D"ugKmc=kIgp#"c6@qJJJo):DR@c?qlEee;hoJK9b,1M8%6S%/EOTr;>ahLfqB(t0R'quW8*N=:"JXQH`'iPW3Q(Gk&\I4^,lu)65&VIC>TKLIr4^ICn(I:k0.f^EJ3WE4A7l"mqWdE?m?ZLIT>rP%+!C:Hc;SP6><joL=0-=!5M9_Z)7NbnA5X=TTaJ$Wnrh>J6?U"*RBBY&7%\;H5CnGuifBL[`81sK9I6ri2>WobcYJ_%@Pn;V3?lTn%h[*\mhr@6Ll-InVG_S2,jG9uXeNYen!;27l5OK9+*)HqtFkptIBXp\_gO)C)X'RQ^rf#s*ISW<<FJQp[GngZHPl^4!&;!<DC6VK!%Mt0U_VW+557r@jbMne\TP4\gRhmZ07;.<QI!QL[(HRfXjFrqrp`@:I0Q`tJeS9X/2lH)[:Y"Z>UU`jqb<\*O;U<'\AZ$Gf*RZOOj%GV59h(Q+.g9,Y]OGu7Kd4=@d-atf9c9+6aS!)&U#mI*E4+Cb/Rg+eR5*p;DNG+hPSOT;B7rQ)e#fJn2Nd7FD*;@EptdI6WtnO[Wd%Ut3MMJAe=CG9WsgCj0ALSZMlk"4O"kq5EN5JQ?9[H&;/+0XnJ^Uf=4=r*VCa4_7%\TjWZ.n:T8-T;IR!M*4WebFj_bJpK%R;`Br!%f&>f'S+J/9"(KMZfdU!6@V+X&/`eY5=okMkpCkdc5V(qnF6A"alJEc]eFMlm5A+ET\uM7;IHRU(0To'/AU"#TAuf_uCD8ilX1E*-%fgg6dB(VgJXe&FqEDLa_'n!KN8?9?0r`hb9RB!Tkj@O",i1i%5m'n1aM02FB<Yq]S#B$W(PfV[I^6\*KSijnOI]aWtR$'@,<Sm,3%j=[BUmrg^r9N^=6mVe/EPZMCSkO2:P\#q])b2HJ]DCkJMAm,g/.5WT)_+U);Wajg]."*X$iQM\'l0%o955K(3.o-`u."PQ,&:5WY%bJ\MR@I>P8Os?Z0bmSC%c'\amddfh\T06"#j0-&^;SflC8?Z33h'9>)22\O'8c@n$Eni6b*T\>#;M!QZLM_rI\8q!6+$kAflRA;^%Z(+q]k#m:K/C.`F:-beK^N.gX^6pG<D)lJj=51%1_q7NYo"5=;@\g6L3*2YHMN^i=0^H7QbB_9)l+*tm.agf!_f^LZUeM<3)/-s'%C9)8gYE>:;k;JcR.4i[1q5K0!/Eaa^'kNq9hmZ,')FrHYWHA`A)CBQ$9$M8ji0qJNl@HO=X(A3?hC9SK^OLQMM23B$$_QGVG3*mo%SuZ%.H/$HDh=>r&a#1i=ihnDIc#Z>IG@*'8C/5_YAbDI6Xn2[rAd)_-$Xl2bW%"IE&LlQdnImf5(:B!I0CdWc=?B=K(A1cmQ[Po\%=E>#*H(s@RKCqcFA.DG\K:qBoWMdMIWpP3BZ'MGrL0[p<'<Nekh0Zc^*rWfIf!u+!^O1rdoQqg$FcU\fJ#90Y-Ao$%BQ$t;6]/t9%UM*_7H"H+mD3ih1O@7>.815',F*C;^$+kEZ5-/+)>g\_hL2WWDq?.I1V/>J3(h9BOZ(2,pQ^P(?gH1^*\Bn(jX0@&X/,)oRFRmR@%=Lm'!r31k0A+q!QNu-;$lOgKV1p4dA)dDoKg]XZRSh,fi,B9$QfTjMAOb'\$b4`KQX8VS>V\[Ul]uC#M7\/E-!F&DDq1,$.+BIG,%F.41IX1r-051pl:=4$17)pp4j([7^pK['HOQDMV,N(1V"<^a@W!Vuthq^:T4RAq-@Q)eNi`d4UK@C,um7BkeS-8*IXXR/g8rVdNP%qO!a-/ZecSIqP5%8f(C'5Mcrc>gN3@32B&nd,)3.?tL`qo)4p/MC'R@>S[;6JAI[@2QC,E6qPkn5WI)PASC:/Mp%*08o_E7%o?R/%BE.YNrqu6arnmYJs7Z3erGV_uYQ!ti][$B"rp.=JrV*eK@k1WK@*>V2#9^.K5r99K\f@mT[XG$%s%@cFUB='2'gTY>6&'4^BuNaA%+a6oYZ.]t!*4Z*''J=!4&Qt$QWpmb7h6m'9+u#)mbK(/9VBs#B</M<?\X-$kMCAhnEm=h7;&+11bQ:TRV)&8e?/=e0QmEl(R6X?n%$AN_'_j!Q+Y5j:5fP5l6>s?N5Mf3_['8B5oW_(QiJ#F/\r,i"#=bZ.K830[cB:[3889(AZOW!#_BS94G%GB+Rf+dU0-.+PFM"X_k%"&*PdMl>Z?`?S@DIn^e<%D$VBC.=O]H@g76>?Pf0.ej#jZ/eZF&#5+qo0Y$q&).h!@KP71)d7muZG:;tF5;6TlDGcCTA5b/.2[mS%EIq#k?7@d4C9T02CbkJp'sH._^MDPA'8UOJMK_^L7T"[U])fjKl(Z/F&_(ot;eoK$j9U9u=O`b>/7?RjXP;nV:rOe,Z.D6>^JeC9%<X696kFaTmb5?q6L[IU]<kKiKd.WlR`Dt\\8&-6LXJYGA6566$NLkhpA^RN&N/tV<UMEOaU,:'oYm:ta`6(%JV2eJ&,'f7'dS!el%/>7Mtbttb]"<bD+ROi22M[>Jfj8nLGC\DMi864d&BL+m/q(];Id0>n[F]_&*MIuWY\YWo;bnrWX/e\rJdOHDMeW(F!eV:[n[d8\&%8K[ci#i_sN@T*i31cq?o\HIZ@ZA'%c7#I]&Os=c3d!W$T5IfgU"Geut:Eg;\A]B\K\gJ4C!+P938Ob%s[9Ibe:,6#o[k%@a,8oSe%+QgoCeYJJ+J&`!YWJLP#QJj$jl!LENJqkcA'gNI:!=r&iC".K9U)5pm!Jm^R&.oXlV$-E'l`d@Y"V=lZ2/+9-5SdPtH//uS$Vcok%lJ!S$!GIp[8.$4XVXmqUa6aoZh<E.X(uirE,QSWW$FPDoT`>h4j]&%$ZA>^ILYTMJe8JN(rX4O)%s4`F*C,UWK'.9dj3kn8K4&@F%!"&1(S.J<B,o)6ir;bgn$Y>4/qc)plXCZd2kjH(BY(U]3UT6`_*Dm*O=@.0*HNj,:Wh:JLc&Ol(feaiELo+KK809DZSdZiSH@^;h%qZBAro.r)$*@667gX]mD-&/NgdjE'Pm4D$mXLXk5/\IL^4bGl*\jN`94qQNs.QEGamZ(MGk5e-0TdVZi89\B<P7'eWQMN2ISf$FM%Z8+o!mSD7I:tjKK4t8735tb'`dL9.'$#$mS\GI+kX2[`%AmJ_AJRYQ;#R%`lC[(4?r'U-\pb=0(<c*!da;-%O35.X2<94?q]Yc#%%"VYFZTB5o_EChW1>=:%W2]KWj**s?.kDffZ-S3EdlZ9I-Xeb0k4s&i5P?4\<?-7X]c.1\$GKR32YR7#XkSZf#af-q,b<6&k@k6%7%0<-uZ=-4%G*loa/8.Ug'Lbk2W<=5Ne`_h6@(ARs"Y\li)rhE_)@2_DO(%eq3LU]=u*`PI;i?9iQQjlS@;aD$4(t)D.UoF^i#k&;S%8Q#JjngCB!f..J1r'S6J*nMYCQ0VItCiQJ/m@['j\t;L+'GNl2FfKL!J?"Le!E&$R8#<p@c`NiNqN[YbdMBS(#b4s0$9^HkWUQ!1%fJLN@Tr24Lib3k&IccMZMP*2nq7XMG^'0LBkX2kDSrb4u3;%s[95@GUe4OZ=&Xo0jX`RV,?Tf^8Vg%B9L]@YLFS4#of8U]Wq^Bn(%,p[%YO9N0;D,:#,8Z.0;c;\>p#gN%`E`aA(ODaYekoh3md77)#6IbFblfpeTQ%$^d<aL.$6Xbg-Hkbi@j9Ogf)Y<pG't$V[N8-\3%VtRWMp*5$I+=4m#UA=1RkldY+(HFb/b;fkb[E%aBT<,78X]@jt'WhhQb8g-PR[AI]=9E#:gH7K[&Qn_3MPetMlp2G^:>;s&?F/<$%q1'*H7\G;g<jr42+PluoJL;V4K%*$X5!VVk53IE!ENea[FYBtbQ3u9-muAO=U=SciEZ91&a#$%-\H1qHF'%B`=H.F+)'pUpP!YX0%^c)N`(%LnZ(bNfA6s`3g')KRh'ks]\/":PY!5u\Wp>;Y.Z[j?XIeq%b'$4pf3.t*Ci//<NXG@)LYAk6KJm.nGmX2Ge,O+Z"5.A]1%_='IrcTru`nGAG@#/nr/d/-l8&#WN,\&JN3?79rtHs97f46tW$fL%bbX!4r$X!UaA7!AcU`6P]5<NGAVOSI`l\7&ULc0J<(*KZ\<%75URdeD)>BaVY*k2,h?U)q2QCs(pAC1b.<`F,Wb]f$Z^NlDXq-ZhYk!gR9+#$#-8M::Yr4=+!f4;F0@Wj1dHIWSm<gg)LY-<Ve:3%Bh^*,OSIl_#_[IpE;7`JWSBS9'nk9G`grA#>LS6N'fg`)>#4moEA7]?p#u1qBU9*.AW/*0]sEHDf"-1jFhRs^/QtXc1a1,Ci9a*l%[.P!$6/:5o@3:f`P:ge>/uU.506c@2=V;6Z4^;J.f,n?r;RrUiD*smoMnC8<BcP)/]_.A:M^A.KSFr#Ff<CmIU$?XFfg^:#8X0m\%H)Z+Y5"A((R!NN.bCV2U^2?sVTg0ih;*_Q=FEQYD(;VPq\H;>];RV[CWq1On"Do+/EU@sO%S46K38mk%%f,Z@j%76-O?2SMZPGmU%$H2+M"khJGgpp5(jum0^$W74`T&qbLU7NgQZUXeN/iTVYgS.ftYD-,RhlB10[;lDG%f/RKY$hMmkA?"tfk.hZPq6T)>neI1imYAH%:"1f+[cXSPEp?%$6f@ntIEpARh[MJr)uE`&\UWqQ[@*'PLqb9-Wc"nVo/3@O7GciYP1qX1`,>2FU5O+O!Tj#\%bdf/E$F-.+kQTc%;_CR:PY:DEe!@>`rUF7<ElVfI44oi_F(3l5s$i2%+OR1CEnM#7G$OJ:$;GFhqqeQNlJ`[u0/Jo$1*G*K!Fieid7u?5amEDT][Nc[%fd@o)QeV*."Jks+>OK"/`LYet?>-[kSY0K#h^hTi'tXIF[r#mo[=k1,G/pF-EAaPP9BG.@/aF)]79c/8ofF1O/i'9;F?NV6O_)m]%]e4[![c7L@7K5,RJTHq:[\6RBAoj9:=lAUuJ292D,oes/o6(pu;s9YRaj$JoL0/[l!aVIif!k?(TOV`+b&&(Vd3dA"\4_8<&E((5%+kt4=aAp)3eC6B:buPp:dS6jie5BMqs,V./?@&%(2At3.;j_YUh=G5K7S.h$R+k3G05!*:5&FTOp@XD/94RI9EofY&T7*U(XW9]e%C"#VtHNfWml7,75&Eal^Y:'!V,qWuCNq$bSN?c2A%.%HSPBVZXq-AAnX>c,QUH0'8MN?_<6UY0!:/`aO3%hT>-'dbD=3mHFOI"TG%0AH0?WW8DuUV^qI*2dVNDd>Ru60Bat?[NOTUcSeBJAO9d5Qi0qgo;S)J9%^AFsaCTloK,:83]$Na;0j3$KbA`bN7pY0aUQCX/*S$%ia?2]?J^u0R\>$aKn0YQU[V-!V?Tb3VZ@[6H@I5hoELP+A:FX%*uZYhgnuT>=J@o*N&P*]9`#&t\>Dc^(Qd2SJC=4qqo,k?R5Zjr%)?L2e+G?OfL@nU8e4LI+_YnFN/JXe(Vd53b.QG&,R_K%TNGg,7mfIq;"Fp?d'r620]dj-&`hginZU_#2OB?CN[Olol'#uK1Hh^]l%N)Iuq_MPkD=r.!#\aUN<k-0^o'*)_"8ZV+QLZPt(R]KTsA=:]pU_/65Hb-@+pNh8&B\J"LU&b?>D$$[C*T%X3$3JA.[e'X0(_k"5%Uk..1"ooqJ1U\WB>Zb\T8@jI1R+TiojpOBK?-SpD?l=<bF9r1QZ!kd:23Fu<7Z5XR+-+P$&^M1g\qK>!fX'+q8gu`fD&a]&o2r]f%>BNmMO9)IWYslUl,UdlE1NAi?`P#i#<2hsFQ%^a?oS!2!9rijRfXb[PAb&eshJ&6;#I_:3mT"<(43-(TJU?M6WYi=IQ1G`5Vu8b#%R"g9RGigSVIfN2=&LQ:@#G6:b@X!@ZNbnV!A*`#=#26cp8]221Xl!H"78lShSs#_R5TY#B_B9bZVRP#5TP4I-O_k3;(`lF@(&U=_%H$1f;6274/fHUuB5j>(5"`=2RL?rH7)+nlr(!3&Ig,<"];_N7*^KJ!IV:)f!QIG2K]_gmt-r!M%(db]mIXhK5b/,2MpF4MjT_-Vj%F>?/8f,5=$pI=&eAT!LJd/@FaM?$HWP=$u3F6,mKco*'9%COsa([=dIqihub;l8&rL7s_Ib1dk#\!(-SZ-+fINm6F7ent@EFP1#m%p8?]?"][qQIB+/&T+>,oJc>bn^peG=!g@bcYL)[7(TM[=]cj">RfnC1o6Df[+.e`!N).gfVAE]ac55])V[LJ2aN4,%f])(;]k:D5%iik#:LkaAD57"O.-.))e;:Y:p7"MJd&B3Nj=>e!uX.Aqf@Vs+TBM3a21W1a91Xp1<H;pNk=$2%Gl0SkcVP!AqGg1I"")ns4r!8BZ%8Y?pZ*cAmuY0_d@cXo-,m7cVSB\?&Q"2p)e%o=6S#gGVV-iDnV9b.sV?ao2)1u*O/YD2Gc:s5Zsr`Hsi:_,r(a1/4+!Y5cf"#lQ[%_?#9!oin7-Jf=%9hmVA1N,\Y_Rt5_oFq]?m,hn8:+eGhD3QdG/9Jd)X_$58mgj\SiJlm^m80r,;pQ*5%W8E]oG:T,q:GmN&0Y=QH%CA!$B3TLog`OENE\sGeUIB.dbFV1:U?@D9G[/h0r8,7!ZM,aQpWe,cnq"278T2hQ\?$u+DA>#[+>LATqONDs!o?s-2`$F]B:7dRb%4Bl)&cpA"b]PZFIr="G)GSag/MnoET.O[>F"G-*OKVt3BNp;\J:oH9'GB?>K!AV,P-tco\0CSJI/C`/!^%^f=R.AQ-jMDEUb<GK.%m`M:,H@;K/e;u?gKO0`;b>l%XM,h#n=*,,f2kGQN4c4u\J?2@1Z-f\K>b_C$cRP.HiP2@"::27+9]s+i=i$!DQ;'kL1$k`$W>!sZ%3s(Oplj4/!a5`ql#8ic35&,@>G]tpK6Nf`R;]ps6!+LX>#S$K?LPB0d>F8F@0Tb9uni3Q*'VM3Tpt2:@!FccM+=eS*UD=s?U9S3X%0gI@f5Nhm$gS>5(*kHW8edI2YFC.Ze'NJmY3_EW\.YXj/-2UFL0AX:[i$no=FB_tuA>T(Oi),e6W"c,gp`b=j#bhEI_GF=-h)+@/%/pWQT\1iDKA]4gm$T&KJq>M'$K?/Esii%m9+"itXT91'80arlL@tic7rru1KV4@Y6i!#59mXQ3,b5c[KK5GB,B_ec0m1',ah`rV+%4Rg`n>S&<i5e9P+:%V^VP%t(ds57n&)l_?dB`)9r)&,shYOsIYRDK$!^D*>(niI,E66&Zr4<T#;J4uPf#fNd)"*(YhmEW_.^F,\O%#Bg,gIB<<AY0bCLVG9:%gKd,tj$Ws^Z:o`]0kh4WmuLecZceWqm>L`+P/k`!o>\tu]VhHC%Z?!ZW/!2<`c3o;ZC[Kq(T&]tSWWCA%(!>lBe/)1-A1+t2,2p[sNiI%!EO_D$/qfp65j&H\?=STPDCl,oY5r4)/c<R>"om#NIm2^c!J-CZAE/QZ-$>#h9HEPRM_c#k@&?qu%-4o,s5\&kK88WrCp5!D(R_'b7Up!;&(XTI7gl>]fbU6k"J=qMtDHcQt35S.r>(222S51D=.r1nd")M06%M2)A&),:GngOB,d62^%%_m7_d>W*HLEDRMS#+ZB/J0lfm!D/:m&ER.^^!gQo&2PuHYRnLV0[@j_3EcK?!<]S$oUa4#Ca<!`CEW98=]2=3KFXj:"887S,5E>j%QM\#+[O[IiGYJAVI%ZXr=B21G^]F;*QtiJ=YlGDm76RI]"V^uSdC9Nc6a(2(9LcuQ!O6edEf/T!!b0e$'M.<m?6)[*5kDPe!2;n$%oGX>7LqA(#gQ[+Z@Zb`2_,@KKe5;+I!SOD#+B?mU$WXMc<$N]toNH`::^J+;--Q@Oi<gqC9c0^@8HW^@^V?PIi3],<+=]04cdL9G%BaV5nlc3$6ErM']Eb6!s\+I!qh?jg<$1gkX.p^=C.W(&`<k=Oe?kf?#$m:"(6(<<#::krT.8Q.'$cPRRTR3_,/8]'NWcT<ogP'ep%_[,;4+S-?NP>0]u==Q\$PA_UB5R/<s6t))M!hCobXc]g/pRf8DKF1V.O?]9W(/kfDW2+1J.oT_`>#n!%=#pmu24M7/A\E?<WP1)8%h4nC%i9I#A,angQF`Fln&j?I">?i:9'R0XQ>M<;3QlM[B*=JU;,ID&e%\c;WSF74t;N[O,PQTVpQis,<CRO2Qe4F/(DQ(D7&XFd4%*tC7A_:,3kmok`u7f<r*M1;24q_M9](^BSXJ\O+?E2)>h.4Zl<[a>Zb/Ui7@;q&Al%=kA]:X]6a;9\3dg@+2b@N`qeT#m"iP^,$R%UC=1\*gD^0C9H.R+BBIqEJ/'V0[<L]i40Pu;j`Hnoc=4RKd^[UFq$jS*#(^Z+'"Oa?KDZh>,5j<KkKdI!HE=tb3qf[@Am]O`?>AH%%1>VhI?.j9ACXn'L&)q!+Y,rK/OebsePXd8@b1>`*d*^t!5u#@f+UU!!7<ZH6,-)D&!l3s*_"B^6+fW#`iT++@#;;fmnus1jKcG0%pRFKNB*kDRGpWW&U`4X>gXS>ZnIcQ8G\r9e'uW`f=8llN@nk+HF09Kf$Hc)qKHgiQ't#@?#bbqRol);k_2q'!e'U)locT'W^q+(P%/U&Kg+QY6O,!_Bi6H,4W%"S&HUV%hOWR*ne=*=+Z_HL0+)F9n_fA-Z5C0O2>l[_A.Lt!u@3=B87%b5LBmq-6tU2$joHAn0V7sQ1A%;["X!grjKA3t(<TMZIG%p@YEh`6Sg+)Wuh<9DCEO!(8^2?'Fd_FANU^X+ETe+TJ.1Z>h*`s)mY>Ku!hHd?<=kN<_;Ee)'J0dn$:T%I<E*N#\(/OGK#pLD+.)Ue[PYq[,E'p!!H.!BTML]CN[F#c_sM=U+YRtFfi\2o$"9IZtC(6!O3I0V*]2f<i4a]ZjL4[K[EK<hV`Wg%"ckWSpU`H6'\q;a*>#^>qq?H#U),9GZaI4Cko+%7?Hs1/XIrZ?>XBB>%<HKbZ&5=hD`'lMk2TT8&8P[7lOO.n"KPt\fr'&!?bmh;%3'7dDF/+;cN$&Iu&liKC=u)P4[XOZeaZ+a_3r$_VcAK?'E(BLr#>H%U272c)3JnRqoTSjj;U=fSPgu0)OZuG;*F5mA'T'g`h$=65%+u:F@<>'7jd#Kk++Qgf1e?EsCIMGUgRt+?6)Y3Ot6IZ^3'"XrPP$MGTMlPK?2?@;&#BcR8]`Uh@JJ:Z\CQAj$lJQY>5s\n#$'L\?%POiVo)_$d2,o,(.Y8LNTM^gmo.ho$+WVBI\N2B/CD<<P?T;<gqZf)]2Ngl&`"(KO<'f?Un*B*3<Gb,,W'([7-:rGNt`[i*p1u+`k%\S3KMBGcIAW=j^43=bGl96mTf#)L+?Jh;mSIOaT?I1XU"h54f!Jk\Ybn,s=8m0YBV*tSbk+"LIE]/BtS6:=`ZQKPQs"boJI[(L8\%jU]Q);FX7[J<Aq(baeA6mbZlA1\u")(fDeb:3m!Og)WojN8ta_#c\T?jZJ6J51fV;86S,9N6HoP/j0^^NVj-L6sa1XGhJeN@3(Qg%DSZrn>7t\F3M:6"N:9rg2t#V6p7@DT"tQpSg]fITR1p?Fc5$gSQ@`SbVH"s'>'O4uplp4=R1+jF.45F2R&/`Q,8N2JGFcfm*nNp9%GQm\coaGq5GV/TAN[num)O<fEXr)R8NEB!o,#5VGT6MUJ]clk0JUm)+,TD(O<l5OW>IK'L5&,PgGY8(,>L#cMlsdb>>j7oUQ!<3$%ck_fBU5"lV],:To#^^c'[!ENHnC]Ch?d<&LM$k1<(W.F-:qA"<4?VGV>SrmcR"tIT_[*#["aB3s(V-CSU[5'97UQQ`26Hq^WfSX%%S7j[OZn5)*`GkojKA])-JgM.-=kK[;86/4^9*Ljjl#-#1UtWG6AZ8/-$(bS=>K4Mu"be^08s6,,L0$SuqUKHW=(lpHdUT@9^D56C%Grbr3K8hoanjlYJXtQ`rV+D4_._rLe$`%.f;28:0_AJFbUF1Q2;@h8;QSDCE_]f[D\dGkBM1,CKkRV-]es+"<TRY2QBn9E<+)Iki%s#'D+&1_S'[1tg]`[KeI&1/-)dNp]QX!53SM&>l:fCGg^!p8K,cjPq.!k*lV!m6%<1;mhJ4\d4=!>DY6Omd3NY.skiPV=AeIGA@+%iq!=XrX>#;1/`[;M`qG<\>+NfCp*O2.@3rJNlkO-rIig-_:DX/-g7<95/iWd/[2@/m=MI;FY:7.)o0a53NaDELZk2hdV`p1!cOg-%mj'aH3K,+>i'L?VK7OJ5+D0P#-8aa[A-IoS*ahKM_hC\k*\+<u/D)e)DFX.7^9*+?<h:(e$DE%(HC(IIL%gAk:<>@1aslWhK3;92%E*U4#V7L@=;;;AC?0bUT#M6s^3>O2W`hRYAX"!J6%eY6dh/0-7@2"W-G.Vn<F;/tj\nl1TV]h*"Z=t^[W/-iIa;e1U(a+3)YQGGf%O[Y4m:U/o/X\qZr#5AS*68+5SJ5BWk,mu**0LhAc3`R`7m!RNNH80_&?q;u(0?,j)_ndWb?JI@ceo.j:YulKNIS89NVSRW$D]-YG%oMNBTfS.@'("E[RL]\?:3YS7[Hm`G0=k9Q])8b`X^DM%+9[h,u',X/$JN5U06<H,uQJSd>L>)oAM+ig;hb$i:UX4?_)`bEP1d8p>%-O+@.Yu#%5EkAZNPSYhUXMABeb)0Q3NK?,94m-&!p-qsLghXt;)$rO<"0fq8Ksl([d7s]@,nt[EWa$n-oJo5/<Z4]&*67_);f(#Z%(o$RVH^:6XlmP1pHttSJ7<k1)F5Dkaje1+4oe'l>>.Cd@M5oO'^4n5'RFN5D"k/4Y'VO%$#O<5<V-o]E1*8$`WC-uJA!qqRE;US7%D@XF]V'QJT<8N;D`eJq#O0eMrU_?:M>Mfg?O\<`_AACNUHH&l+p>gUZ6:m8Rok]VfGr.2'<R^DE.h'US<VQCFg+NGIdAgI!RuT;:%?H,7s#0T'9/Flm.0"EkGgM1$j:`,AH#nPL./LaY.O#8DI"lg]Vmg*EfKQhf+-CnirjtUu%beh7YWgqid?cl=F@K-Z460tPlk>b9G%O,JN;&Zd<gB("lJ7X0]&2pao@YAE$M7m%\t=i)D;G*]_ZYgs/e@3i6XLqDgg1<OjEM(r!W5W<2Ue_(`a[]&5:c)@]Ol%[_0*S6/a%Mb%'Oah&SIBWae/EOmXDr)ChM**J_8ODc<^&L5X`,"su$/Z\g%Koo?P/@qV9oE,1=&ahYbPJOV7!\c+/$=flf1kBYm-gM@\q4"SB%P\^NS<7XS`&TDO,Kig376c=i"$Em]s*!3a,/<+@sPnZKp]VB-NO4kqD8&Rum5s,3<,,aY"89;5k5=oonYr5>3&<Yocroaa2eB_<g%rf8iBaSfN$aA7DoM=??hrk$N:^?6CC&Ws9XY8u%SL_5dIjD<\[<^"Q)UBb9EMUX4p,*:Qq=i_"uFq,bQL<MH[+D<pafCI!$8JhOu%ABp%S"cS.oAEHJ4;hjqsU@&\%A]j2/EVXVKXopa+_u[CS3!rL%VB/jI[b)k#F`C7jIK1r'n[OB=52%1,VnPqZ8D<\q[?32010/Rq%@j+hOJ\AK)_)g#I=9_47%C/?;?3FcObC_k'_rn-O'c'8i>qWm(c#Mq9H''8Yk0-ju'A.)U\W!fi!mA;A/N^9bJ;iT`<>6jb`2F8i%d_&]&!h*OB#bK;!6-fb9;V(RC6LbbY%@3qf;T!Je+^qHc'-`2d,pNe"q9#"XRSdnX-.7Sl7?(>@N@:>N6/]P1gF<7=V*Y`d:hr_O%3b4E+\k)=hA&)7]Bl^<>D.,s?cIWR,4o$*ud]l)/&p:_f$Mt)JZI%MCSVI$$UWisj5R#h>blV17]9d4d60NQu@Ai\u_T4hB<mT!.%Bl]+PdWFZ,:`+F_fNkI<@5ELc&Q73#!-pQZPZ_W%0BVq&Z$/!8BiSki!A\_]AuZ7TiNqKc)##oCclR=T@9gP`Z@D:\'eCQRXQ;Fc%]\J^>!.r-)K1/meQqDsIdbt*_hZ`)P&Dm]SdWAm`*eOs53K-7/Cpo].Uo=b-:),JGBNET&!rMV-Fp#'[I"Zgt,`nU-Zj=j#LJX[@%LF0tmK"q6_'D@%a)1MoC*!^o=[BWHAm`5D2jOAo/&eR!RFIiRNG'0Lo*^`KsK6@j<"iDHSD/_JniNY]"Lr>ksXc.,-Q$8tmLX=4E%C`3X&oq<oUT\"N[[#IqP@50)[2msnj-JR#I(dpmtJ[09i,iN46kd6Mj.#V'';K-[/;WMOP'*H'<7MJt6Vq,(p=<V;Lg0Ac17H(B_%__-cs2F:s$$"BhF;6bKiQ?#+L?&V$QBb5P,@ri1lWBi4`&<!m2!DTSVM$B9,iH"HaBlEja1-ZUX8Xk<MMNHbTVUUnL,9qu(lU0&4%+*jXn4=rnnZL\Y>f(T'j,+6enA-X<8%O''\\1sd;Q_8_ABb?B]*!2kbe(kV8#BA3(@j(PLRUW75]"8u^fbI+<W<)N<61Q!t%>)&n%hoXIJW(I\)[MVgpAXak\lt&>5:3#HQ)5"rI;NHGu8A*NE/!/J;&@D+5.*Kae6L?5KQ_5j=`9dnPi=j>#+S+CGZL"=$.`:3lJ0ApT%<__.OR)28L"B[Smfi2oN&Va'd_l(':Gomuh!`G6gN/?TD<@(Fl-.h\(\0=F4+KMfD@[T1eiu8h\5/9Lm7",oH",ViarEDp"![Fg4%R%ctloE\s8$.s<Kb+=K\8=*C6jbki*+J!PCi^^kP"1FRB!3D*jMH!9:GfTr]N/]8*e^OUuO9hg+7riei_1sH^9+C<lc@ekgPSgZu%ig9o2cGU7SOP.3@>\`OFWiqT$\jdb3b$]-bkh\<3Y1_1tBRer827/%65D@RVgY6F&QJD)ZG_eO?%O(<"-kS@?_tPo,-))j<$Do6!%F'[FLd:SI-CR1mR;rb95fG3d&g5):6F1trT][m9,fU7-DU3?fXM=Vse=tPf>jrMZ&4uZc'armp;Y"c8W5*DWt7`bEdf1?qneSrgY%$gshs&HY@`Mm(m98Si.9I(,C5a.C;?;^C.*.nc[jSa>./cCaFB%>ab+i52F++LCVuC>=pL5$E*%YX3"&r\O>%&.:Bmb@)=D[WjpO%Dk9[#1k]d%C/"Pa*oGW?pu@O.$$JG[NHm@[TWZ:M:=K[q+FtFOLQ9.Z5UQFl=7G\2)]o%Ve3L+(_DsdWNbPhuE]VcrHc5m<f9ljT%#o@iuQF/6#%tX=+e;Y'P7)P0)@F;`^2)'?<5;Zam@*J$Vh]"foTt`bZ?L8GT+>G^q]ctQ`*,/T/Sgk7`%,Bn+E<mH2J@cpp$s9Cn%*YTqe/=s_3AG-F8!Nh1BmE?QhTFb^)[j$]ad#,GAj]@+@1&(%'EZdU^``oXM!)4(0OaXWC%3T>W)>A:QXpio7;KsbcH0k!UO.ZY]%O0'5mrFDR3#QkcJib8(/NR.8udRD7h#id$LRBDER$p"rDDtdKfSUqRL>59>R$[&XC:/>1V7BUd.6YrF'7-"nIakh.VQj=gBF@*[p%]KhLn7]KLD2+iTgdq62.r;fd:c(d$5.Mb_c=\.AAKcnU'V6(m6r\`R,4uEsS^Pl=>(5V:YpQFk;b6YDC^CMu2,FjT"VA$n8H&t=e%T!\3bB5(@srJ%jCW#NUR)r$Nr+i\:@*pqH!!p"1:W^7^l*7!2)D=Qpg2hV5lm'TMf7d,W0BYc_qA-5+Hg=7[O)a\id42@\R#NA9j%`?N<U+ED%ua)q%JC^J'h/*`5>g!]Em7FFJmF2W4A?FRET*ms#P,qdc>4Ncn3;c^8"5iE:/n[V<IA",UIbIs!)YRDHUD!BDo/`k'5%^Q]V<:CfdkaC'N8SOI'TT3FR>_Ln@n8]&M`"b\=(Z3#gs</bFj5\q8?4VX]-1o8f$(+s8+$%go_&BZ44-%%X[=iSsc"H8FZ5VjTT%Et"0'"59p!b((>ER4GY(7d'8r7lBD^!E!TKRRdLYWW7=In-&itncjXme_C2"o.FRN-1fJs+T6$r"<45g26.(_)""VpAsJ*0&uq!=%5F^k#F,%ffkZ?PbPXf&TRIK97O-XC;<ki=?@='pUS-VC-f'*/51\cUL6>7FVIpukE)VS45`An)uf;0luD>hb_0Fm*#_oe`[gn-SN%;Mc\8e4SjobrMG2[^t!N]4aFX3I=%kae(`8AaQbR*294aXZ/^:6!QlJG(<*s!NFr8Lbtf14=^<a9K;<GYFLL#6\shVMk:L,I4140%kpVuA5"5*nGHRq?c0Ql`C%MdD,sd4\OK;ls2V$OiRVZ"-Sk"7-Z.W#Ed[1DN"i>&KXBSdF%Oc:p^/7IRcB]j^&1WV`*c;!;HD2Ed%Y9(H5V<\,]^/9<6=Ga;'4k<LS"M`aD2O@`8*qslZP+^$o8ND[j<Hp^;Mn=%K'iQ:@J*mhM9]a)6KNmm/FT`hg'mV,r;h.\#!Ka#h%NBT^pALu;[PD;YnE5/uZZ:7(lJ-!U]#KgWmH3T%#73M#j`A?e\q;;>VOV'U:rT#(^P0Fo!GX.581>''q0T_0>Mtgt9+Ebu0+N_Y=%=%OQ4j#I,:1):$F[o4`YW%.($Jm;Vm=X5-FkHf>'P:AJ=(ldY&KEYH)n,09mK_LEtWNGo#W]\o7WLs_te[([j"b`"+5\9##\F;%X%,6OVr4s4]5!9#XuEKU2*OFnqg`RNF88lIm<Msc:4i&t3F!<RIrM)A#mW$?=7S0pTfXMoG.$4"AV$ZgDOk<?&&o.WEA&Omn+HcP=;%WlnqecgRh`m(u@Vc&sJ!l:o6BDQ#0hVrS<kD;BbkNIdV%!]c%?)bPoOb!@(h\q^a><e(n."2p6M175ZVU,qUf_U/O?)=b6MDIpIr%(f^Xlb*:!Q+Dhem;)!\Qdh[c2#p=`A;(pELO4k1!SucoM/kZdC2*K+45Cp>+6m_#<5@4c%!)b9O&1a`Ao\Js!9*nBZI0Ll'JL.38%BhSIOj3!p;.Cd6bZEsj60D+H?D\LR(n>Hh?D*rD2B=4g8V1&Jq&>Jb+lYPBK[hq,]g&'f.[eS@&,_TI3dSJmT,)@EeN&]n?/Ye.N%(@#k+3qmSWi_GPuKcqS],bY,r4lRm4!_E;.J/Ac*.<Ee[oJMj*4259YKiQOcW,R.$\o,/\rTYWH0gJ@#!odGd14X+4!3qmuOA'd9%c'BUeEl><i6pC?i0/DLSKI+]Ykp[b$-F_2=#`T?tMQU9;.\`iQ?p+cQ"3/'$RkQ3N;DrO_*Y94)J6'un,^co%?:+f`7&U,qq7SV;%i=*(m+n$V'5eZFhQYKM$0s3:7R4KJH3`6aOaluA=)-9&+d=c-P8IT8e![9AOEmuEQ7MnFbJ:Y\=Rj=p]F"in')J`\3"<b(9UP?Vl%`!?\m<W4gS&\/?@)S[ff3Gr7E+@]0Uj<2iB17<8h_fEE^N6r:Ks31n2[uLTaaNdn)U7m7=ld!+/"Fs%&UN2'C!$^*%h(Q)g**80>%1V2=V.":_&cY.H+nX6PM$6]&\[h)&^hhdiLHJ#/>.XDI76&%tQN:;VB*3+gh4`a)AGdV1sO@L$_ZtE>n"R*?%,7fi#s3W(RhNt[B%Dm^6DbtVkG'L44GHAeaZ)K]'^-"CR:I.A%b!HaWGhJ6:uBW)64BO80*)W+FHJ/CKg="jj*Q(HB,&V_'nP\5M_\"Vnt!3qoKOH2Gs%^Psade#FFL!0n4RnWRs(Er`JtH!J$'5c]9qhuU20+B0n?r^a>3>_O7b/A<!'#7+0'/0G(Olh/R8LZGtf6\&i65H\N/TPX]Q$QCtQ%$aj$M5h%G+<tP`M)*6gC-3<B^dS:U9p<3bT9kf8_.N,=9lN\lBfV&.,QB*ciQ@La+aPKF[]DX9<"_b?c<aCMf7H;NkIK(2_5q#nn%pUCh<.^2!G#^IS.&BI]5o7:"5^Wo>01$Hq_Za#"NDe/Yk[#JmOe<BGFHa<YNhh/3p)[qH&K!@Ng^e=k&a(gXLViL<ZQRsFV;A2;.%)`^q^6lsCCk=9^N,eQ]+V&_X^+<G""C90e7+A7\<c[D7T+p&!a>IM%ZjrmYJI>AI_n[_5i9rlG3=%gcR)UT,GX)q9M]s@$lk>u*o%%^B7)<(XIIJrAXccjccpcXTQ%72L2:j@4fDWT$EJ+I/gGntebV2Be5EYi+.V_Y?[AYJ/\19AY^X66U=SO\aX=FI.>OI7[&cW])*L%/Yq0,#0#N'A:U03?'1[<4eo6W<'cR-F<EdDFReGYdX\nAEiT];g8ske/ML:I(?4O`>-cZW;To[u,c#od>&7>aP>q]1HM:i>cdN2#%GqhieZ]d85h)f9gbt*>Y2p&Q>p#/jr#3AGi"X$%=RUnFCY(aHXr#$YD\Ol%@%Y05+Vb@UmQW$_5hCB]a,)mti7<_.^MLotTSoH"9%"^]uINHHWG<fg64PZ]8-m^8Ke!pH']8t;9LIEBtXaD8Td+PKAj<5A6BMb[:eaNCtr^U,\=,IM8<6OKlf-2b;"$OhjJRtS;!#!;8G%p6Hh]$]sDM.tY'b<Ws4X$;bkB\*.ibmXh\TGXSXD-j%seQ5Stg20KI`fYNG$nIDB1*#+<!7megC.AZu_:^hBl7#>tV,AJVRWG[M5%E1@>k*=ALl%ri,YQXCC@":4'30PJTiabS%SMd$7g#h#>5@0F;6Ka*Ze%E$5=&@_:k7p,s5'2XhS-G6<9\Sm`()1pR_7?6A!KB>*B%gSkBF176\EPSRGI%@$YG)b$.sffjK<GN%<5fIG#]aq>0/[4cLqHBtLMXsu[k__F$o$5.:egW*l">&BsLJLuF\Og<?4>$tMS&Jk?D%l;NTL32^5@V0;qT8X'a>RLAj8r,BFuXc`Nn(+QH9cj&uqPP*3<b.rQ*2Dpts!oY\1OP+:Ps'cq?Y^nqLV$;:&%He-3.LhJ_"6=3O%@AaNsi=m2<9`\iL1l#PW-n/OSTO#MY*L$qFU:lE.#7_iDYquJk'QH*\=QnntP]d!4quMVr>,9$cr06%aUr"QPLsPX8V4[&/Z,f9)%#$>e:I&LHgE^1E;Q.4V('2C-o4\3A@;lH(G"!LC/\mY[CZJ`*27KB9:.tVKmSaX(:W0bb)%`1Ub"7914"*#b"H;NP,C.N#s*&rdG%1\,]gHtgJroIuS@5#J%>a:N:cc$s4_ZA8J"?]c%6p7(p+oW"DI2n]A_A4aOJJLNN#P8!$jpJ$MlN"SpOVL!a5J?qda:)G0M]pcHM%<U3W(^k[eUc'Miq*?DBW/0nhm@QfQdWZWP2*rQ16Bdls)(62VDD@LjqA3.MGo+X>T>f*@*5rjsT<ocH$4<PdK\ih0VJmV>u;d`*B%.LqXtBF8KD0Kq5'jsqiXpo-tT"2E+!.qF]e($3]W4*,Y`_QI)<'-sVn;+7kXs2]o7;qH$X@E@r2ctSg'ccM>p+st8PqZ_<oQ>6:[%9[?fTFAZOAeU)r5VO.dTK!3-(&X-rqD<Ii_N(SOpdu,P,g)ToTAs-,%7+9)T,)?,Qd,pi*&tb5Bg!+9"<^d)-c.N//:cI':2nM\q%+qPok[,ff3&:Z!kc$Z_:*"ER73frW\N'(ciNk-GYN("m4DrU8;_DbTIrjo-TKmc35ktHG^JCc]E*Pf^U[1u44LaFU;\V(5.)+)W<%<VT*j1^:fG=%(nMM5L`rV.B6^d;M@;*?,5Kc=7t55Ditb]YI"V^1!$lhMIkSV"Il&n^*Yt$6gE,64HO&K->cQ"]B:5B,VK1%#I%I%7Y&!,IR,l3!,'OWFKcJS!C;05E>3@0."^qjCPU7T<.TQKB-<Lg(=pO2$*cU$EA+aX&h*mUU1-='/k2+Ab9d@B'G(Jl)uFp-f,QbT%9dR]-lqks,JO/^m6\:ZM%9e>BIuE8MEn@*A#/UYC7M$b#q12Q:=u$+uIIJ-n&QF-@![oRW/Vat2+KQ:"RN/<G5Qp?EoVAKL#.SnE%=\c.i7$/FNQs!@nqB4tr]Ml*3P@Y5+2AD0cW>t^4'D;OLHEA!7=B,c_SOUDO/M'Y(D]/E^;1fZRaiJ(@"rB,>5.`5ndG6?"W^%8^%l6tj`Y??Cmebm4528(;Y,GuncVNE\Z1[Z*R"#)`YqO9hQ$pJ5HQQpDF>'kc&N=Q0c,N<@""8s-ji$W9g!i?[/,RC.q\HK50o3+#&%4/lWgWQs+B!>2YZ27+o0[RYT8qiTV62Cs`YK%!C:UQKp<aBT!26/"jI$<B^4js;ci\a9QA)3YY$P.3@MDu$g1!($!\rWOK@Yd`I9%?P)0Hhi:/<+bsT8Da.'^?_.39s-N=5Lrkg:no=j<UZ^Zpb"I;9$la0@Vd`W8"=i<5"]C#!gXC+g;L9Q]o+0]I8o6Ibp=-NkAa$Q(%%[or1?F#D,fOde3?VlU<+h%*"+!#=n8[@NJHS^%FY*iE.+:Q"cL-RjciH6@GJA,7?h*;D:,+i"`"LMRdOC:taS8Jk[#_@rSSce[>%OtIT$>&04^32pgCqC7<9kOh,IGLAkY!7;@!JWdtppb'pu\cRIOpsr:NU?*mTdpF+"'9UiQgJRZeK1+Ye@KXAK<h/BgOI]_0est`"%+G2QAm_RB6/$I'LDLHk7&u?YR'Lfk;:Do'EE`)SKl#GHg)Po_L.,9ihi+q:Ag6u2G;'qXNlh`tsR2OqURIZ=RDpGdr]N>T=q`Tg[%UL[!H##JqSao)\Ia`85G412sOCNbM5-I$$-m8%c?>VL[n#O+;UQh*Xs+,fde8\PEC'9_NKfh_b2oroj(IJhaGG[<lndW,^%?sE/@%"C<5)K^pe\m=Fj)O>c5Z,2lOt[!J#Mr*s&a.Zf6Z$B@!*8G6H"_VGr,I4Cb`(-[NebB3&Ke\b6,=L]aZKb[U?F!YNr8oc(\N*LQN%bT("FVj-delJlqtqfD[<-%1_8i],?ZAriLc:/3rGcEbJ4<>8DihK#\KMDaVYdK5!)^53QS:kF7UJV9l#1:,nQ,G`ZI/JmhfBL^#\%=A5[R.<o/B306k>!l35e+8P@i@6]:Ho7JhG+r#rD6%'U?-32S\qO&T(C+r@:hb8qt',cFHUd*??4^,_PTGLZ\05uc@e5P1G>dAp?%KY&s&W^GdHN8ku-l)DA]oGkg3Z22=l6kLIO6l-oL7pcAr:fQ%B(:bG/?&*C45outl=;Eq]r4Yd:<`NMI9'"V[8^E?S:Jn\C4[VO,%o3,+$Vks&5ekR?'cW^DSSbOf9=<Bhh'Q`A*nVHHmgNCG"aI$oCEko&&K2<u5=>DIQS:i'm9_Jg$Cnacmq;P5h)N[g:+SnnKMS6JB%7:<+Q,If<_@omOKTp6T?bo]o)_mD48#T[$%lJ:'r2ZVC=6k%O4%gWq`ZX0g;XCt<Cb=fYF<AtZm%F?`."I6YC!Q5E7XC4h"+0I`%%L)%*^\U;Pg1+Oua+cQQSQ`(Cq.G7-XYi_:29b3XhUjrfG0EpKDcS5"V1JK@I3Jbj;Ye7?X//5*DjE+*FJPhF;QE."a(W<L/,7efF%+YT!;V)9h)(A1T;gM[V[>B@WVC<1uGO?tB^+:eZq+L0F`Q\!K=9\3S'g.KmWQ$9(I%;OcXh3<O)L%5ihjn;l:PsFOL#e!9qNrjTC%$%1M*qHV;Ins@j;=B;f26uG(%YSkFY)X_>3\.V*oEQ`:fY3-HU%7"ZakLr1O\_+n;qo^S+'c22^XE2;#:I;G@JZt5qm&s=sOc@7$%PaguPj[8m2qksm)8H2QqQ:Ic2UjqVT@imd$m4*uV;X+d9^(dBh5tm#bfd5sB68)ir^GM?L%T!ib]5@[Z)&XRoL(rgNhCAAP?6=bK%Xo4N[j;`1ag;TVoBL?+d?ou]3TX'%R6j<^ck<_";*%0H/XE\MR>d&Gs%Z58=B0uNHM'F.kF(4gt,Bn^G(GlNG(=R%%Tm&If?()!j%PF;s%=[sehco%?JUb4l>f;AY2m;tt0WJ.j^6J)qCGSp:=rWN3C[&\)P<]<4Vgu`PrNRm)54$\'M6b+\p]&[H*3oK8q"0W(D1S]I7%]:ds=>5#lW0GUH.X%T$@O:%mu`RZq6&@LQ_ajH!>f,%bp/qm";:TED$R)4QU'?(^+G0,d0/7h/rrNjJ(p"1_[!(*"dd^A-m`0/@l%f%'>tCt3Wgpn.Uaj(t-1$K<`Wd3rM7%%iP=1CK:I#81KC+fT<boW9ZVhN<F*K_+H<NhraI(#-Z,&WGZ8qN5b$kU]S(>U$<H<o&sl%FG^9kKI*mF5j[Q2m87M/Z"uYa:2-@JZ:ODJ%#[ZP'1^?A:fcF:jt/#GU*ujtJ350oS(kNXY!Oq1nLbakBqrq/-\ofT2Z^JmTbXAI%,Bdcfm*nK_9erJoFpL[.=i#kD\h!5)!*']sic8%9_>0u-!2?apGWU3$G--d6-WXM*7S'HB[k4W315HEm]frT?-_S<!R:+;Ql6^D9%CL$p;Xbi,Jc+md=l60;nJApZ:W(lkA=`!r*>T\L#ZN@.qS=g,0q.b[2bih"@qSkDI"I+YFHo_YS].$-D%O0MdLh7LNe'nptltP%@%@uWdq4U0e_^%G'"eQ&c&4M&<s6T16l]*HbWH:"Y1#g0(o2GKol[AZP`U@-5?L`o:Y"<hLc.B9YK^55AF4Xct%9E,.Jq0LDWZ5TH;%gh4\aP79O&Yde.I6V2$g/iAWh/!pWGIc<<)54BF^41L*D86NNQJQV"kG01M\Nd7YNV&^Zn=ORn""NpZ7!P0lQL0jaCT1c@.,d8T,%V:+F_#1D-$$0%WV$tXl;g;j@/++.^dJg==G>SNu>Ic26V9lZ;E7'q:cR@9#XPeUZlLhtrokKmR+p1h@6mI_:1&T`gl5L8>VN.6ZH%(On@IgAnJiJs3GH.&^>.\_]G`k^nTH-oGA[qI4mIKXE1bq3tHC-JnWpr>m)ID2pPbPYJ6.(+s9ASp"@7k16!6Wns8kf'\>"%hl)3%$.Dg2+D0lq;`5cL[bN;NL^<?kb&5T!Y$,Ik<tAST'-O2KhR+IOUs]Ak=.<?[@^JM;qiQ#jj,AL*mGe=$L3X_VG>QQ;J=;fc.H>*q%S8g;BT@48Tj#S7ag2?(gC?SWSKh/1t3&-K[BafeLa*C^N,Rs&t*TWq%LiL%p4nAa/DIs9*Zq,2OB3mjo(<]AZ,\E6HQN@NMeoN5^%pLDOC5dEZF*86KA7g7GQY.6-Mf]2hK[^Iisf(0q*8qk#m+[B6(?@=Cja6i6TEeCI%)6(S\qktSL&\5NeX\>]q0.9M38')\RZunO(%W]s)YNN:A*.-%j/.KiSSgYW6l#pVbdDsP`G9Gb7@!SVGT<:+j*Ou/.[U'jNH\k`lo*e\j4(_](c_kSQeHM?IR?4mc+WEcB65[.Ip%#Zj3C\rkK2]TLkF]b*"o`_KhC&.M>t6?We4%&k=QOTGN(nq7k$!>OD\#AC`;5<p+3NsfIpgLg'[eGLIbPmiqZg\CnJipJT:=2t\W%Q`'iN"=p,RkRUJooEQc`Yn%Dr0gA#em2Te3E,"Z@!&aUZpTG.C,G1[>7Xfk)B_`(U]@SJZ&?X(?q[B<Cjoa-1:QT@$4s6k.q?3?G%G+a8=oEV>*cKGA[e(B8drs\lL7,:6tcTbn+n4uRh5JJ@;I/\l`HHdPHh8u8Go#B7!H*Z>up"/*nrVu,GrPLYq.+Wdj*=ph]'2.!0%W5Po1m9[Vh#E!(phL6^*(89uNBN\!E@d<uEbD:K7+)_FC.$Z-/IpMS/r^58ZIt]$k9jplFS)qe@daujd<ao<ZB-u0_eMR<8^TPqY%re:mRVe\#97?@6Rch43Vl[(kfX'XY$=ijS@+dFVAf>#?j4cKE5[W#3oL=R7`AqoZ4LC66up3U4M146oO$N1],[hgBVXKhFIrea#!%jU4O9fiJR_f<6$#^L+8=dnf4&q%^fQr[UIWkV!bcoO"keVmmr0X:bJi_(st"[dL91Z#ai/"=s5N2hX;h0ItWpAQZZUi*1WGUp0h%%6VpS2\el8f_G25TAj/R5FoMN:g@>V>4n$].[e,6SXbiQ;q&)N]<1"[?NelLuZ'4mM/Js>O?STW^#THWj-]@(:[aSW*"dABR(C[qD%Y8F^5`7AuUiHJJlNKNNZlq5;s.IJ]EdpeV'A=fgQY8I$2_JY-\Cr9<[nLn>B@aLAS[aP6o$i,[f1m*Z4L^i7tY%]a?@"_[6r/lAZ%0M?dXP1^Ikjm#Do'Qu)5>n^]1/W#OZVQb4uCm0QE`Y6uqX.=Af$M5"<=S/@"1+fl)E\R^!Ksf]We\nlQZJU^*R"SVYrK55?0i<%C%Oa8\IhD573_Ii3HQ-t9P/^n<e=FS=SWfWYg@A#p=]fDD*#s5[XAk\#gQCDBu7[PM@@$$g"QH,mcJ<4P#5kbCJpS,#[,\H)skqoTJ%CG8#',%3PLV'$)LH!>lI7:Gp/UtuZh'f@\`aFoPc-kOK(SQpaR$h?sV\HF@*_X;d)ZhnH4cfnsG5jY:h^auJo#IU(^6r.5Q09==>%@ccGeWM[P8FTT*t`2%oGD>$QBk"`^h>HEVsqY_eKip.%i],_oaViO2b9,>]8Z<Y=B=iSZcA?sR"(4mC/$,UlRYkn#]B6N!=SCm9*%.?/"oh93r)U+pEs98TP!%'d^A>@q9+=LnDC9K*TjeKC]?Sn%-D*mJS5LUZhfZD[cS8$9\(33hEs?_k,$CjOkPKi!S.JJf<WCW,q1%G9HdBG"]nfK<]ia8Fp%OP1G#hb6(cSfg#iT@ZSIm^5(*0#+4JnL`Nsn"5^?;E3$NWK33R@D[/oh&_jdqOf(suY$>?=<O\D#j,!B)%VmW*<3CS6A-LB;_&eSn,muDu_`5]KBWfl+;WJ%P<2XB]*Kocs7bjJE&5h/BVY]:4.O(P_Y#YiXGnY67WZQESCd&J*gg6EVV&`=kA%4H!60R0d_kqPkecbnQd8$usjOJW9=m=.!jc:.Us%p,42dk9oCB<Eq"?2S5i`R(kiO#KGu&K0XK\\UYZ:W/f_T!?+fH)`9QJ3A+dO%.T>n+m!](RGMPhA+3B9/SOB4o(tAG=of"ckXmXif<6@$0g@o#)]h?DfBBC@LF*jI"1$c4Zlg&$7m<.Q>.HsQNA`:95ga&M4*Fr7[%8^%81j:&og#hXjpYY"&erasD;r@h=00_pLBCmPHEnOlF/iB/[aH&94=Q<Y/NC#0msrY(t`E]Pi@LeYLP1^_hH8rK*O8/okL\=g4.%kZK.n9r@%%-">HQ,WZ4Pp#j8ncIQLYdZc:+As5`2j]"BY59kBh0J^m;lb/KcMk9Ul3HDjfQ_%[I1Yn9GUJ5Fh\NT*2Laf/F59@9N%q/"'^S'7UV`)b8C?;o)Hm:gn%F]NtGrLtj09@6,AJ\@YFNA]1,-adJGYi@(Bh6Ufr,,Q+GpTNdk,\kKn!\U6lQ.ISYd,/HpZUpjP%(9#R'E>4-Sep!-!Mh7>hS:Nt;JR5=X?4?0Iq5<*80$oN,=jDa=NR<:$gOUbu/"b?>07a]f@Ul9\2jQQ_?[_?8V#p_&n`1VZI-XbI%]>(3<)H'B"BB)'$G31Y[6<,)O>l.2>JSn3GN;HOkT)'2kUYc\"pb[5Dr2R?aTR`$fRDe2<4B\:M;k<S@KX.]Hb+R-'f$8U6_IT^4%E$gE]2X>9uE*u4i'&.k^>mdCCX<g68ZIMRGjM\Qbko]hT]$tk:2k0b6Qcu`dB_,/7P5nbIPSb$%FJ\Z9Vb;dJaND1NY>:YAf(6f)%cqC8<AZj^#d"^?3Hs9T&[MT]O9&:5k7YK'(*EIF'imnYc01bZASh!W-QG0iSI7r;4FNY='UV@>QE;R^t;1fH_Pe2K4(QDOoUb4P-%4`b6G@kA3CF5),4X;@aHY.]C:JX[r-h3+*0XTUlq1SE`XTbg=lN'%t`!,/K=F&bhK",]f.M\XlNm:4b!:'qGTD#hiok+XBunQ_$h%(HT67__J0Ge!2kP<($Mg[,l_=He5%!=c.]46Pn*Uf*[IJbk1>21Gro#(jYAQ43MQ19<Y^r\\D]BT74Lkh;:!YJi%04YT)RQ!:.&U%3$oC)nsb@S[b*rf[!8,sA<'9OhpQONf(&o!=e;"!q:13UcsVckG=Z+4!Y&7o\-t(^'Bo=/'*]5S?nXcJ!mcEbdj?b@$5m@;"UWe^%B2Qa)cjSWZgW@-*pDMV!"-?_6GFT/Zj-mR,oh,e2-hg<oBVfN=c#77V3!6qU2B/]@kn.1gX-Yah1:Hm,AU-A,NGREUQV+d[%CR?,%YbAs@SL(a3<\80@1XB5u)Q(5Eh747</L%`@02,c4]J-sE0#l;P,RS/i,-&!_cI*5tHVKjJkT7nFdp:Tl:1+LDoIH=#r?kP`oV(1W%9o".V.@FOh%NfoWWM'g'2$Y%sfYmD%[[f/OmgqlS1=ufT.(_fnJY'b(QXDY#QG^aO!STV`UZ6<_(HS'e.G7j`<D@)g](43V%uV>c%%biXkj^2iE__bUPhT4)6;\5:f1`WsMl*P@3%>WOmihL63YhK#;Z5kA'LU0^BP'[BkqRnF=Rktq1mUL35$>eIP'c;.rONXU\^L`rV%Y^!<K3ZZ+VghIO48@m8V\D1lHpR1`lCZZNL$_b7Q51J%fWj!,E7p0TpWe>K^EKIE&Q1-34(Ogr!,^`r,r@7%WI',+HV'5%J4AT94%9-.Kuqdf=n)+W%3\DGEkYZImd&tC?5)SAQ-QmFf//@nV]7)iQk&:D)-CQE-?>jfe1M@C#HccI1`pe6<JOo"$Q8<smmRGiq+c:0U(%`>E'F1]qXpCb0L8+Lu""Z"XYg)ZQ-#>>tb,MQmC/0YqH#S,Lf6YR?g_r&+nF`NM46TV*GA6/`j15)TTR9_Tm*YU%Ub2rB(6M9Q7L%I!a0m8O]FpDn?48m".(^D0[??>6e\qIpsh,Udo?/3K=gLld9L,JJYT8mW%lq,o*`@it,k$+)cnVdeAsi]\;u.R65#[mFkJK#%"IL%0-S>@=JKp-9*RqSOg/+,]bEF+N[WArq#!Wch1i/'@CX)(S;n@N$G63,ZW'Y$hoaWj+F1o`n[L0/Q:MQg#Uro8LM!O"<(b@WUjYda%JJlDAT,h<i0g!M(g9pWbr>6bUcg:aD)`VGo(P(ri_C_0+SQ&H;`%)QM*Z/)%r3YRTTM<.-Z+YV!NBY1_(RUGE#fJ\\[t3`=KTa$i%]oq1fJYC/A)\g=D9V@^]XZo;]lRkM6g`,BVPH3N)PHj8+CWq3$9_l6];Cmr=/!P)Q;suNH(NI]^AWL^(pf/F-*k0d2D_%f$N<t$6%7ZLsY;]gWhr&+M-p;sMKA`,ZUhd8/^_c^m<l'Q#D/2Hg9oMNt3p"\\URl_IGXfgRLk#a5MPhD.bqGjGhQf[elo2G(;Fnq<G;X4*>%\f,&a))^o?aDOQUd(XX^r0E?`Zu8ZLA;_F!YLZnFDj`e\DkAKne'mn.(&db'QN)/?h1'lGi[>qaH=Eh_VWDR)?%W.gL^_LjQU6Qe%r(kL2-TDOUXHHI(@M&"%PA9^/hLa_%mPi)tT<!]R8Vj&VBILf,q^@4FT2]`mNflTADQNMe,V2_j&"l9G#C<+V3$(ZOciJ9]>aE$H%g7>g[&cY4cJA+J(B:&-Q3/ZF\KbsnFPb?Z`\4!6QBqCOr><lMC,:B7r!%giRb^F#Q"ohD?Ch_U]+HQFl>AfHVoQ2KE\L:Oc:r.FK%]VNiG$ZnA"gC=qbTH1#Vomep.fDPElWP:dcd8P'L:.DH/h7!\n2+s^lou=eXVUOa2(ZSR)7T]P[DDLEBq2q88_At7G7B^D[8!.UV%G93'EL9q]?E&qUDXKB?E@FWo+X_8>:a,CfA9\q_I:.Z8L\#D-t.1fXM4$TP`"^OO^D)*hPep1n'Nu9U4d'5SU0JZt-lS<A,P48TZ%SR^\^$RsIme7/_#__^U`.q`86*Q-6?gTK+"*jG9aSrqonaA-NuH6EE\kUkMk7l)Y\kq:]Yku^pcm!@_VnuIr6W1F&-F3!$,Bk%\a%!L?lX;ijae.1TNK1[Y=g$XmH(]Kk>o8Z?9L+IInt^/F^7%(pC'?aha\QP&dB"2qt_4QL<j9sl[V>_)41-PPeLP!RrXEJEhkK]R31%_,#[>Vm]S/`n8J3dn1a;?K<<%-PP_JfR@=0#,X"MamG459[$'A?js^[>Ihbr;>7oJg)"qiSJ6s,Kq00[7M5+MZof2c/]?X8rJ:"G%a94>7W#]B>n:6YlK(l(kr:_im<8E#E^70[X@/^Q7CMl\?WJqAE+KKdI5sC%Uis.2K_P"kbH+GOc_p2_8=F,XE^#g\3]gWubltC!L%iPY@GNK(Hc;KZVfCi"kdJ\bWErS*`\@+^W_*42/MYZOEU,sPt3[t`GGLQ1<@[rOBmR<"NaD3>Ck&;mY5/E`@JHT:5[^]686br*Q-%7XDELZC2o0__9urMFABJb%PX^!FBlC<Vg&=A)IMhS1PsqV@Mt#YfLf8:?2!1O#Jc6aC#qBX6%;2bat>BYK8h*BB]$TckodtjMG<q%DYM8[Kir>k!&-55^BHb+"#'F[bam?\r@D@+68mEj0jMK"2^'<`?0HbYjQMt3HL=fj(eA:"QG75hK!43;[gbcYTqGH.ksU0?QaPrr%E>'J\mjC8Rq_<Ptf7bOf0([fo;K`W+GKOjW\\"lIhe(u$(iibYp$':>>79E?lT-]5$Ug31PN,co6u2I$EZFC:l,mn1od[@O/pkh(%!QKp'/`'_"NcZ'gTe`"8kq6(QA\_KB9a:7#&Ph7h\9VGeCt/p;AaRF)%a1ABc#nTNUfg^5(-fn5#&POP`H]S3cDn.lQ&@69plE8R%!m@7uCgt!FXnFk?#o)Y/1M:3\et)LUa1O.IflN3Y>e$$-:O/5kQmT/&-UT9@r4DAiT:E(R)=d,#(rIs#nu_hQRRI'QmujSNeYdc^%j-/X]W?@Lj/S:!IW8%&W%(C0nH?(dPYB&0@E\_O2\]hNAn?RBbG7r6hEoOW'Z_E/1kJH',a^l@FiE!>@\'B4[2p_/W#Z;\Rh)E_i%=XB0gM<:BSnU#sq4:*l8M6X6(p8r90egRicV*Zua"l%OP01"]>DJ.S4(uN-A&Ih!_[nLcVKi.A*n`&_@NOL\#Y4p1/([T?66ZA4N%p:]A42$I7),m46I^h&=UW=Sf+oS5+5@$"kZb)L@-2&1m+ccS<\!=!NL`s@69*b.MkLdN*C;?9W+VVh>7FA#2T6%gNLAYdV_JhTdm%!Frt`d?W;SNe[]h0r86#SlVq)k,20^@SGt?7hGV&4HOsiRcuKSic2i61IS7&H'Q1LkS-&@guAV5me&@(J11t\=aB,VA6T(lQQr'V%N3XUbp]JNj,A252La6@PBDj`L(bkUKbG-eY_EcneXhu_*adJ/`;G;'[KGU-OV.a7\FG]V]&8'6-@LBRAhp/BAeWMJaIR3tNGpuS:%mTB4koLY_q>"TK,d5NN<UfGWRWG]BH]eM-\`n;^Y6skg6ULM8\`Oa;S`gBhJF''<)-jU]LF'tg/e)]7jE>MW)4@,%ilm*J6hRNY3%<?HnjmCa)O6C3.*0(1:$kq<=3p+%aGW]m/Xo>G3#[PA3Ur@ou1>GT0?`^G<MCqRd$OQ09[_f,b`/taE*q$N_7nJH7!]kg,tEtIQ(%^OWl/1*[-"3\]V8[nL:G@+N9u'@R,imaC,MaE1iY4<'8PIR_W7cGLK:))KqlR(j#]c85+]`%^3Q]:?)*7]$P[pb>up1L1RWn(DGb%\r;bf5@A#:,BFD8.i/P&L8!eDB^^OH`6,R58e&jDS86.?:^[c[H@AHg0js%PAU;!E.:PaY<](;r+F2DAEEP%4f_)nW_dl_n(0W?Y%aHTE3A[pGhV/a`WT]'lf(5M9pCdb#=fcJ.a0G>Y([,(91SiE!o3jB/7EndOo0@1A2VP$C0KhFCK1iO"%>_:L&J^p-ML3YCBPnh'4%Tu$k%Z^h>1aCUU[dphE`0kXK3k:jo;$d)m[-G^ED'1FSfSGCq$`8J;f+iJIg!qCgYEFDk-*`q8L);*0b8a@Uu/R,rPmOW$UH'ih/%aF_tT%47eWZ_]NcS]LZKWg7m&k.)J:9SAhsE\b?;N"Vn7jND@u!LHREf!lG1-tI5jH&<?I@<-=HM<GS,>(ih.l;,WlIb;eSO$,Uj%^W63/9Kn(*63=EAWI7E8_[U'WYVLoM3]f$8?X2>WR%WPeNC9-a7Q/$KG]biQ@+,')n^^E_@=_3;f/.ihB2'@TV!iqc@!Vr0`ob*9%QsQZ#&.eRFXi,/&I[O'&PSf8RTLV!5"DfEEU*mBDe[YKm>f0(^P?1c>\BguBY:46!Ousq921tc]Sr$m5Y"mD96lMr50-_r:';Fat%]TfteFH+*Pn5m2&gJc#unm'n)j(K`+5"r)(S>dtaes4>2?Xil%P><p9+f<TB4+:r0$V'6@(h5/r$$NLdQ9H-OYsFc2'TtHj+gN!8%(L(Ji)lEYf<Jq](/bE_ta#3Od.g]ji[V5qF[]QJ]mFd(c)<-fTj["4to;/-k@N<DI![MUDHP]6q]IqZO)%1A7@Nq;u]mp_2UE/\6%Wn:GlR@Gaf9%$jq&nc/gSie5OEEqcB,[G$HPO%AgXrt8SEC#RY'At'Y!_ajUlkI-DVJVs(I;D#U@_(!\79!`1YTgD,VP@^k4rAgF%a(<6=B5',NGq2uLp"@cp@(B)H&=9N16>gh1M>Ee-h>!g;/mpd'F0QW18Wg7q7]"<T,3HU7>_'WrE\+>!!S0s<S@dp'o+K_tH=C!R%\9'cV)kp%hU$(S%l:7:VIu`!V<PjuW(`=qW&/U,,A-U_d&R&?"l''(Iio]AWg[e_ca(;5[+BG[*DI*,''uPec]Yl"]]Zeh0(O'G#%e&d\R/b+iie-EI,`T]e?#?4c0<CD8^Jn(`].LStpCjX+`\DnpZ\Ae83e:5M.B'RF<l=i`]ZFl>ojp8M61L0.Ej3M2(i<$H0m#eEQ%,M(ZS[R8!Kb[Ek0nM8#ZSi0VWeW>'=bJm!sGb;W"rI9W_Q)>j.+':+7\uJV#2$j`fQXt-Eq"t^LSK6'4d5p%:ZT.dIHcE1lLak+e%#a``JM@3eO0p98#NW\fUl#^B8i@LHc&rSp$2Y2W5r@>%olG+V:f=8Tm:$EQ^i'PYSTbq1BYMZXOUMO=b\ZnkWBj"T/fWg_b#<4"&%Q:(d*=_=a>FV+pS?rdQW1#aFFqcFHXnhF7dRFme.<8<fUcEt_7[Lca2GZkkg,M$$<-h7YLlbnRp@N?/+m/6QFIVJ7OOr![$lSWQK%jHoQm@_YWdBb.TO(l'n>;.dJ+,N7%,)Slj=96c+XG#+&O<Q\Tn5f8SIhu")`"],=RO4c2%/;dWOlker)CA_%)rT<ab1$O^ka*01"%B'KJ&%jmp%o.3t(p/R7_H00>'J6;HO@fd'M7NRjiUQQP;ZdLQ/L8(MhN#'P\(7#cf6[?VU'?7fuP:l,m9[]]<ihXS[7;F&#7qTcP%X8'#).!G?Z\E)j$<*VR]0;^q`?MUC=etsq@;T)"EWM'#3N`dtce%4QPF'1W7H](P@@t!?"l,4mdEWMKpNV1aKG<7rogfg!\Y"7Ol%m4*t;*`'Bo45)1"@na2'7sG8T>.mY<Za"#fZqIbV6Y:2m54Q"Sl2t8dfkJ2fn_f7"k8^rI$N]$"P&SC/kt'\6o@Y+,"#<5T.'HW[%gZiYQ"uFM*XR-r:FTCaY[LTK]J^(>68dB3CgOd2fC0\4`lO69i[Y@!&:A_u,Ru@HUZ#,bQhZ8S5:IXN)]5,Z#<3)*_gW(ridP8PG%V6[NIAid;$ZcO[a`gTo>Xs-JS=J0DiDIU52bdPPjd/$seg_RqiAt?Bd/;]?(9&=qG@u'":MShj3Ds:n+N)>q-ouDmulYN'`$c$q!%UK*k9M.:pcdP<K=beHHY$EKkf??m7t@&TgVnH)cO-eQO=.;LHU]h/E,V]N#7kHJAPB5Mp]m2B`aDh-LX8]GC*L(.M*6-L*/4]Li)%%MkJMIF#ot`(m8_[9m?g5#gt4`/4(o_7d&;WWIcErq*#C^;Wl@[J\Ud+;Sc3+mJ_K<CAJUf&@;n1I\Cb:MUdpKY7Ai0MVnu#rrC:%cg&IM0WWlbiuP3q'i#PT([n(J]>C^q#aXa#[c:-$I3E^OoCoJd=EugU7MD)#Zf=[oZP+G"^'V&chQC?;CaR_V3)Pob=?F74Z!ta2%`_NRm*nQdUL=o!<@?;$I)8KiDLKL&NCg/Q@YM/$:@C]gl"-D*Oe>'rt&k0Pujr`?CQ\:@6.'XOgj5"P[]WZ+k7J@)FO=Mt7SKtH]%fX\)%^FY]V-F]=$Q1uqQ9hB#P8WXB_G("#q@Ug0]%(X#,Duh:qKZE9[fEusH)oCAIrBoJ3aT/AMcgqVc@?b<"&ho&FLrJb<T2/[\%3(igj67WQS]:ODQ]#*(@Q92l=*7tC!R-=>fYb'E.=$45EZ'Ad?5UY?O*j!t4$(<YV$,%]N@OmDChI.d8bgFOlb^Gju3L@-hCf4Ro%7U/,b-Z"AU9E]cQ,r$a*5@DkO,@8"7/ME4Lq6(@?/[(7@&RM+aVV27@n?O8/+,0&F5a2qq69Di2&e_B:Q<E`8f\U0cSK$3T:U:;\%l"Ob28`0+OCMCU2P0e(nk't2;Z3enkrZfuXGa\XPd8IhFrrMbm0_/LUN^QkW6sl>_]\haN64CF1oK=@8ce_#f&W'R[VQie91-qF6%?D3DWeLSR'm41ROfII*-djr;k,p=k`bL3'U$8DN9<`H^9`/4"!,%ogKikg]%$j^i.,!-@uh#XLb.j1_2?QkkN]n[TAH%edN,#eYZ%fR+?1B4hegh3H(`A_ZDeO9Sh:'qt0o;EeG!HOh5HW!g&n:%r&l.>j*Q>Gu3F+EH$>NIV)Wd)u20DL:uEMo@i_&;A[[Wl,"ul[D-e%#9BrqHpdSToL3Es`!$mW2P!%2i$[)*84.LlP+Rj0BGF3l1Bd)qQsg5174TjU+PT=U6(`JFY[CuB5<p2L!3+K'I7mc9&CS0W]b<?D%p3IbP:5Zb1#Q7Ke"OlqGdRXq5ItZ=hC6>h<>tYn_X&qii+,6CR/N173TMpbC'Le^\pX72M:iT^$#:PC]*C=MG>*[C,V.ojfALLT:%"^#oY(t-F0<n18\STg&m.&MSh'?XNeP]Sn5$E.\/%*55,(0FEm2#k=B#K/D%@1!`N&;(/9'IlGg'r4M(W<t:$:/6>01oO,c5&ufP%%@3kd83mP)'\_$fi+e:;F]m3,7qHlF<Ed(G3M_X,m:f2]>.fAVZ3+W$7.!Ui!igMu`p3V-jG5SMCl+\`SN?!51*2oB<-5+u'<V75%LR;4S#ApW(/ERU62q3(To=b#_+L5;q#C8Y*a[]Cu!9?I;AR+aeL;R`Dn(07Y]r(D92L9Kq1%S?Q!5s:8lO"UVh*0\u1BU1=,3p<N%RSb<Gh.2D2!Q[W=S`q"6dP$iHWP-%sq#H5H\?R:?JYFnuKj]KZ?85@m<tk._=]%baSX<PE?seaEoF(AQWhfckb__"E*iIn5*SXLl%Is+*Dfi[X0%s!beParOF7XRUM$6[p^e1GhF+O^Xs90n\PjNd'&'Wb^6+A.E?QuuDGb65o3E7LXOg;UX?,^Tm)=<U?sPNq4I_/W%3%a2"o&I1EY4X#"TST2c-Mkm2XqL]$>fab-QF/P!C;L4OMZfqWn,0FZ'OhXP/C.^Of+;Vsp&*!ARlnuA6N_q]72p6dBa!)cNIf9<.9%2!77YF?hDS:#f8k4'KbsDF*&p75bsDc?bX@fbKV&BZO?YU0&#S:.Vd2NpJ"pOV.8NSHHh,R,^U5A3^hE!?/[]<?_p7M23RqK89[Z%EN4`o8<o`@dK*4LA\%_Fdhg];UrDBTHD=Jc(X^`39u\)(NAn+:NbOkC.W<0MD#r$?NkV<,fV["A/P$V%5[B^LaRSjYa_E4Hp8`,[%'`g@!5IIA+0s@B<Z(=a`n*22#U9':0T'D*0r_c`fdKO@R%u^"qH)6QBlG4US5]Lh(K30]0`(%A%1ski!,]`93MV0E3A89T1)DS5t%)%2lP=qK<f>3]"a)m`XnOV';klkoAkeEXKqP(h2ErZ,U3_HNADKL-uQY0*B>2Znjg'd.c_eC]Lt8$m.*B/Aaa!96L`X\i?#WfCe<%o!KY#!GrJBZ`3`H9HPICS&&-;9)TlcSjr>uN*fF<$l_M(/QdM"W/bVL'/>;<dm&=_;sM&1hS5_Cpb&MOc68r.9i4Vc=$HaSp'sX&%ejZ9)%GRRki"q%H!UJ*Il%6c08%04c?!B(ITIjE.Z]i-sD`7j/RTFmC7BnC\c*o1iH?O*WM#s_6-deA^g0nD:KH@QU(Xj:R1%NTk%^%3Mf<&P'.^<s'1--`o2S=F[9(h6^bg+6,)K6mD1Nn-'`h.,Qe(<[]0Y-(ZFG["I<2aL.5K#OiPk4?(?=$ku=_A0%q$ot%]K+oBE%^?(i*7((iE#Lb$@/`cg:/UVYQ1g`=MKrEO#Qo7116lg)pI`]BVVDMI0+b,Q7$,'cU&]Q5-a>,U.Fr*rH1V4=r$^ET_UX?l)^l1a@%&Uf;j6H2(D,9X/"8GtK_aTVHjk@]V'd[.g0<C@IN(PF)Z+I]N_<iuJe",<DXdKPf*?]DJ@,?ic+FFIh-4u-klD5m/e@(QR?KSm:\%Zg/Z2+gW#7QDt9_P^faoG?[R8F03h0Ca,qrk;,PYFMs'iLEh<\>$aLrl[cFD-lB=qEUkGG.Kl^<(Yrt]'S;qO*J<,4qUop$1La0>%HG<)CeieaT*`KG"TOl^QJ"`TNMX>s7FuLMM2YK`JKa]+M892@d+Of]FRT*ln,IC'rUrfDHd+5GfKT^"a"i0t"GOn^uUWEk]396'l%Beb)=r42\u/IJ8:A;;OdW+'"O4h;Cqb@#'G.!oq$#2e=mcu(WTYi)Xo!rieu!91PC"J?&F^'8b(%0YbQi'Rl\15\KZ4G\X:HE8:*%?\Fl#lr>XV5]]?9!/s[b."Mg6jtUP1MUIVCM0>7aT*rMF'4a-#B7bSh,m=QchB7BGa`^dSre$%B)e+Xh.u;^)p$<#O%:qmhHP%r&%+miN=1+GT2B9>L-icc(YK.:74$Q,m?V_HG'NURA#48TaGE=\Io*H?+Gb&%NE"Yn$++#7ohQB>=L'1d\&";343!OJfRh%E7D6jmlM%b;(VuN%h`_!-F(TET=i"Cn."-TDci=qIYN8:r?rM6jp'-Q$*t1>nB5Yh31Og?0G[?%Iert$/QmcYMBTD)[bOZ*N^*=E#o+ZqJM'O%74/ngLrl5dW<o;!b?dci(mdG`]eZ3C>XNi_P+`fu!?AqH]k,D1LaKc]Vq2QKj2bZq'1MH40?77=T-tLN)EL(6F#gK_/ksNEl52_B%Yl=D[[(/J^qL1NUQ<-G0gmo(<';*%U^(OkKr7#O93+O29IB%&'$^q>1S<eG'Yk6=(VrcbIQ<B$jT:T=.N`g&Se"c+h<<2cdG(p9r%6FbH(Y]NdX*4A7!o4a+4G23VHJ-Ak'0M]oNic^P;TQuQ3Ne4cg3)Q'(>)3!@cd&X''G5#KP81>'YsucZG!g6$6K\$VV'rfDblr:h%^g`=V1]ps6Ep7u[U(nuI#S'2O!<g<P5%\Ooma_A]]RYT%"O1q9LoLn,N,cW0$.BUkne/mIJ[rER0J;/LGp)9eaAn=?";W/#piTU7%o^3i-H"SU4=sXpl=BKgA<US75S5`pUMPI17c+8E7[2Q8g3.pE!X(BeY[s?17MMnfO]fF*ZlX5$O20oE/.-k#d8rhZDl3::J2^;rD%K`P<c^;WNDhOSfG9uhe$LlG?sNE2#nB92oR5r*sO8]ZqhSViK7=M"5O/.-Oo)jDf_It06g$WKQ9m@'`4_TQQ!Ed-QCacU/T4`h,p%W3N50gL_m,N[irF"?fG$B'!qa-"/J3]d([BHOP\ZMeuBcPVK![$o&r6&PPJaSo'*.n<K>*:lqNYS_=o-ag/jmh;O+q![pc+0.eW.%lT(`5FERS6!BN%I6]9,!L!M:cD/g*H>T7mm;K0hC'H.32[,]QS]Z3oUlKES]&=U,j,EB\9Y5*_45lp)@L^^%>kf)rBJ2:Sc?Aq-C%bF0n3<kqnXe_f@0;]X5nY6Qq=BHMmHm#TD1ah@[&L^;M3%E.fi^`qj!\-EWa"[uY/OCsp_I2;_=/6S[\K.UjS]>4FLnl4(Gpq3u8%af_?\([g<sILo!C2.50$EL,EGl\PPqNU\n72B0%oD$:-k9<T40@oNKB(i+;EZ`G*sY6+%TrR>pso3eD1![d4gg`6OMH0PjcJY>?)%P%=reT.KI^oeHtR!k&T*?!4=^63^gk*s8R</f-'G:0Q_BVcL$nBJpg9KYL?\Q+s/$Af4Z^Pn4j!e@&bR*,12S'"A*$=Vu!Uoq0X;%*/iY2!C\c'p?`^P0e.qb<7=rT0P'V1;"Q]Fm)J:0;D=tNk_k5sRggUfhLRC<;pb?P/ZBWt;@A-ABhQb*70UA:e@6AW6l$OmZGf`Y%.Al%p$;9tC-=N=L&./5B;ZFn8lU)Z4J7>5H?%6c0?#WG<*_,]e_=?[,,;Od4<h[F84%knMT[4+U`U,D0?EgCM.p\3%bq(VMm)E]s%>j-cP6TeFP0&3%Ya3>Ff2BT@d@Ku1$FT4A[QHSZ$iF]=62(3);G/F't)Qa'>K98'm(R/?^ZLmdR7GPRA0g*p2Q31lQPV]t6Vqf1@%71u&TGPEkr+0(BYl,K:0bgM;neTt<ABJT8c.,>W97bpC@W>uJ/N4"oKcL#a'r!r);[&[a8^$LpZ3JJdJ<Ib49St>#q(U>8d(hYJ0%c>N*!6TGt?>88$5$)>3&]dl_BoJ@KrfY'9QdlbY/n,L2;,-27lLbF,:b+5tlBUuiuE[$IR4^`?/Rj*9GmQH*o_nm7L03Gnpl17E3%@UQO?<>Qm@GDF0tR3m#lT7`6@9%u>DYKC9ZNc]bTph<[+3C-me!Xfq<FA9.>>K>kOm+Srh!Hq(EeGJ,F'8-CI]@_gAR1Jca;E24+%q-Co5$1m#I,AUCN2$B%lc(5\Uj@#9N'&Ml"`<O0l4HpH9[A#0]%3AEL9/HWVpZ`sJ-`,Q$iq#o8VG:Y)s1Od_F'Xhp^R1UB_9s`*%F[YT-b+kO]<f:3?$AHZN&G3i?k/ql_/bjn9C]c%#LaauISHR%RjMLa9]hqbgl%8`T9(s474'XHi85-VWM]Vh*N?cgYf(nnE`u%gq%]-(6P:Dt!F_:$*dpo2KGYEAL6dc0>6I*(VE!gXk8#bc0Nek00l\HW<e;4`4)&V@2WNt0O(YF2.BI5Se]]Oom4dg1R82!$_D9Z@h!%9IjTUUZcW8c,XXqS#6GVXH:blD$qnR*>bb*(eU&VaaKNKVh/H)J?sqaJkVhg[)XU\bsSDpPl&oJ$dZ6P53--tfpj"K%2eo4(0A)>%rr=PI[+$H>;^`f-DUE4r.Nt+D&`!UNGY=`UZs$(0LTO"JOir!l[eTr`8)?Ah7Y2.aS"ren1mi2_cUo7?/L,cSm+s22E@S8Lc04F9%T9ZGBC6(a7[#gChfi0':>5RmR-&eE:f/qk89M:HIUAKXj<r26B'dZ1V.)$]_Z\.2'm8th,U)-s)4"9^0B^QYVaU@.GmO?I0od%$D%7Ms(^GdMWefcbqr^s[.<C&<q\D4_Mu0pr*Ea7/,S#KFrcKZT#o8(sf69u7Isa5@o\?0K^%T*EkjWk91n`*gl=KeS\835C;!NI2dB%"8.>OL6EXUMfXT@KcM#Z8u+YLHE)X5$<J(k/.<=4+TWQRnED+Y6&6Vh>DShUed'Qe=6,&h=8"05N3:HnB7n2mGtTM!Si>D(+ur)i%aJ+75L"SULbEq"939/?7J2#E4PsO'klq<L\@)3/",iWbX0[fJ2CRm5k+PCqXJTLlBH!nU7bVU$PCqL>t)M(ajM071Y`"(LEe+o5#%q;0VH9ZHkJ6gWuRO\;h;J0VqQ"kdY4->1N[jZE%@D<HWWhQ\\u4Dl^u./05bbj.U]e/:Y_FrMt^,?'CU*)\JEXopV<d0&AZ/4`]e%A2CGV2j>'d>ZqPWJ_Q>.bkQYogSOA`[cLs6$t):i'7[[Am4Fa;e-QoE"I`oZ,fRba4ZFh$8Lb#tI!cNrAcp;UnC;D[:RClR=KiW2%!1J6=o<u9:ADC>k^Un8W>+!5YL0,LtYhXlG]IlK1Ft_[`NSP?3/G.Z!L6rH!X@a0sd/XQ$VAN"8CWp1%(%g,6PrT)8;A%[!'NSAd%R"0]J^/]"6K!ou8N&MJPFOf@YT75h/nYD?k,4>r=Oo(?WV:r&5Ap3/n:'H>[.?i8:4pUFTK0$<9Z3.mO:-^a+<XcUtn6ajIq#TiQ%_a7hEj@#]pcA;'@i/&;P'/NkLLtJqeB70?#@'Lib0s5Z'fq4:shAAt4$H)?pf\.EEYdIcN!9&R/Ydg%J#7*I\??+_7!*Hb]h\__j%N*=jh"A+F2kXLqeCaZ347;?>%mttdM\9qZiA<\"cZtWC02<kIS6t+-LeKkcgff"N@RfQa5D<rgYc$h/m/6%Ugb+MAMN=uM+`i5*n%[@oNW,)h3'0qlX-)^00.e`iHLPWDW7b-E:W,f!iTs.Wbu[$,Vb[uIUb1YkbB^UMX_lD4;*Mgte2A5`/!mXS_(8+JA"0LcL(8dp$$%klV(U@U;0`ncus^Ec>i?N.>8;_44/o@:5C.@BK]^)tCh%n"38&/]8N:\A\B/9`n.V3QUAm"p$!RT"h(+#acJqQsV'BlFHX'k7?:3%U*Aqmfe/rg3TZ$<&i.c=ZgOtlmM$Bf!`i%A5K,?Rcm,*Q4@SKZ?kKh;ieac>$E,m&f^HZt7Zh,%g#LLh^mZ.`aA=&.O%;&5>J_5l%!uC"M:0#W>*mt3$"f[u%9Z!ZYe5ag>N4pWtNLT]cWr<;UquffZ'cfX.b@S8h+(lFt?MT^(4!g2%k+aX("COOa4Y;g&4-CXUX"d-S%eU\NNf\SDTN>t9lUeC#.f:ZJoH<UEC]=&j$5RRo`Bc&q!FKnFgj(C8j52CXboIRn+](i;HQ8!V69IYYC;BU=&_M1b-Fr@C1`O6!e%"?`bGdE"l6Ya@7$H`o0?j%qAVK5@-"V(L(4c68E&bB./m>FFG2W_Oq#`NbPSMP/m)0H#t)l=WZ_J7R5OEo]2k$nT/k.2=9E@?KeB%>*?"?9jWgs8GPYW/^d7(3eMsRQ@3BX5@K;MVch),bor%M=3DL2B0(Za2>R+U;[24:cKIq,4-;u(,3@I,#J%jIBHA#Q2!#g-_i"YF%jt3.I`/]Jl\*M1YiE;%[+p'R\LMXMB1-BTCK#?cNRX8:BlTAmtj"f]9q^OmfET3!11HeqNI(UhF:9e4oX.UaYofHAICM7JS!1D(`%9Itr&mr9$T+07j&fT:YkJ6nu!J,U4rkO*E$.7)9:CCQ=4!['P=ht'\]_GCl+GiY`EC)Wt>,O;l2P[utEI$Cao"Xl9n80OKRH.V45%K5`G_s+N.b\QtcaqbIYe0Jj=&4a"A[\QC7,<>>oF6n^7<gD\cHdJ+2%"0o`DENOeGL2mlVa>i$,*)$B1<.lRIN8ILTN<NJVD&(_o%m1GgG5l=lkXOIL2pat>iqK<?O&G[E(n?+:e`H`&Rl5@>](N[33W?@Y[mhVuM5a9Q%:U*M3`IDodU?bf*#"Wgo)@-o2E="c>!)C%'%5d,^Z2PtYF<^Vg[@[gKtNiOo:FCIJ`&/,-;HPg`c-JDKq'(&$6L`@S;VZ<s>419!8^B%e=2p>q<dGL&BjY\1/@`%%o&2O?/ICeG1%FD!pNj>q8gLhJNg;W:Yd5HS0k2M<OlAOa2M?Un2c"2Q5TBL!"MB'(K=/Tb]9&]W6A#`)6Li.i>fABZK@gbHBO\u<Vj$h^'7j_5:X%)ucjlUAla0=?oF27kCpHDMY!9mPFeJ%<W0U)iN,J#fNek/e7kkbb&e&#1sM(Fh1%%jj5s!lF^'CIQD\^@>K#4KT!f=#"1u*0WGqB%[n="*&dOPG^V#"/7%t(,i]DTZmQF3(e74;s8d+"S3#-;3=\(pI[)BUaC$YtY]5*jVcXhn8C3jrn@>J50ObXLdc7nX7,DaM>l#BZ6%_u!!521JKH4Q@HXYBE2r[7MS8`!WH)o=ah5$PLd1bH",EKDS=I[=AI[S&ckG'bE`o[-8WOY(\@<dlT0JU(jeD"Plre,OqVtpAI_.%oJ#iGJp9N@mP=DDLb-ba#=(SL'PB9C5b'-_bKGNi;VWpTDF^Ulh?s^#5TatMETA%h96^KY1+MJsLlk3Ye_C1^Im8Ok#)H&:PF_bF%XQ#q`PT[Q%+F,Fp.j4P.RXD_Vp,Co26B(>&JQViW86!X(Zs8pt'%OKbgF\58P0"0JieO?$dN#no6OZC=SUBEFp6V1_>X7<1G8>Q<%66CJNgKQr001]i9E--$Z35DbgRegZ:1hpWn!C1`ILt^F3(q^([?Yh5X/5M*:r.n:6fYTb!%u>d`V"6b6JCao>,0Q9ZJss;E$^Wk=%[&mf*obL'F1k@-/&eGGMK5!%2>bm[;VQg#bRm%#-X;?J8VU2#R,7N0[a00ahgP7@P``di5?.QnLb?tD2Z5ZUL7.g?p@O=A*.oe',%6(#uL808.kV*mW8B`>`Xl1[(48oZ"c5aUBF:m`:)ZW=LXEb@[J;!\;rKCgsK6gf@/i@5CnWMjCuCDn[l!9eI<*-rL\\+CH6')0,=%Se[otGfhQtd6ja;--Te+?pQ2FM3smd(!u?S'oE&$Jk.b2$,g8*nQi/DH9gg]+S!B0!+XISAPE!R#bn3u+P"VJd-^9OjcTFmCMj3R%)I'Ij`Boj?)VpI?aS13IdmLR)V*9],A&SthrL-fd`;q\;s!XiHJS\#CP?*oZMa%M=r*qu;W.Mdi4W\K$aoQ6pMCl.(]UnT9V'4t9%jba%h3_B!HS=ID4+<K@4g.-`34>*gfMN.-+<=]I-A7L9sQTNWXN?]S?LSI1q@#9/W"kim>=tKuMUC]Q`AKEOd6pQ:&5:kQ]J_II%%Jdh$FaepurK_oEig$'GaD:N(\2*l>l#Gh,8+H31ja,Lf>rI"^'RgY$='_(B%$irb'L2fN_$]%Z("J*5%J4:VXG<d@4!CCaESD]2(%@E]aRp<.ur58\Lb%Z$$>Du`r\75s1F6Il0neoP40.]WZ-]`QR1#EQY49fA#&Rt.NY:6;L*'N"2/.5$ZqOQb/',7>FkP/kSf2FOKY%825L&IKkU*6'<=8>G&Y6^Cim!;.giGQg_r>8I3_K.N,LLV#unL`X]`i5k<a`5Ee5S&9a;#mWa7!F!'Y"#7/U35iR-([b]U,BbnXY%!_>%Q5`?56[&n*TmaH>h/'oMsN,2+aIICGe#OkEP1^2BO="_Q'7(+&capI'T7"/m-ZdVfn4R:8GV.-9Q>W:r`_]prB`(G:(UAG<9%>]5Z[F9=i:rn&Pe!uYt^-g^r^23A5k!t:rc/TI[2p>`E1@+h4,#G:dRkQ<<cnOnrNUq.RU&I'7?9fI7"Mu\"0K7e8r8>uaQjXt*@%7?[3S%6/49Z*OPBSi"R,g1+2SJ0#d85hl[o/4&k==i"j.9/7SSA.d:8_=)+f-o=i:#)FFIqDuQofHF:[Y6Deiq;W%6+OR[s8PE18%D^<RS>/\74R:q0hpnO+.5C\r_*?!-+1@8pUh-)^bI>fr^D7cF1bMC1$pW%r^6+(XO%9%QRZ,"[qkQ.W9qoNl.4!N2dncsKjcY+H\%/"SSlYri:',CX,k-k[)8TS.D#82#YpM9)9=MXON!-pVOWT4h&R7c,fVU`^eGhgIUi!&:-9W!+G.JYgl%+P@'s$VY=[*'@7V5YAPY%8:M(>Q5aO"",J[da.*?1?X\\a:CXo6A(MqOp]*$.5.k26Zu%JWq^dWk4AIu?<HX@(Lp=Y6[0MdE2q$@a:j5Rbrs)@;dDS9[ec)'\%&:&/hi=I-_q0AKf)AN%UolkRKJE492!nI,+K*8-`.83]Xb^"V)R#cTJQCGaO9n;pC"0*58F:2`r)j5$8mLPC12I7L9c6M_R!-S%e%GE=pFd^n`8\):=S>^=%)fBfTs?MmeVj+N]CN9BgL@*p6,`jVYhap5,h>u<sA*dm8=MQR5'!`1r7pH)@hI_:O4gdgL,fql9#\F2LP%Qhk0mgpXSW%GuU+rS+N"4>5U.8/`)ap@:qV8djOBT5\Ji3U@S9BMLKV%tp8rOsfF!%Zo:YE#mU1QE%]_q:Ka;3sLKlN3P-WgSQId%NFf^'+Oe5W/9'Q'YiQd8DDNDqm_c:^5YKKq6J@.0;P<6=P%5ho0iC88',3S5I/5r?7<Cp[/E0C(0/<YTkie4MqQnRW;g)RB]5MPa%T@K0?6>MWTg%8=B\MX/%I/lS(^KJ!gBPlq"45HbLiXkX.dX[%-(CJDV.YR`nNnD7"0&NT$2Bup,N@*nqJt!DO2-L!m;;($h_1Js(%45CHakaTRMl8Jj"-Q5@uK#6j!e0RB9#%=c>K\W3.9$8NJ)G:QR+F&ube#hTU8M<)C\c`3[DB0"^%oV0NPKVj]Z-'st+!BFu=ICOf%P/$je*MrhU@`h,U3!.58(ZTmnb#$E(apjI+F";X3>CRubG7\&q?_QTOFi`b]:lNrn+;t$gK:9ZBK\Sac(<'cPOq/*S>eNJAIX^`.%(2j67&0gDGE3Js:KqD`=+s>)'W?-`/U/raZo%lYe]+2rW!6%(i%UuO1'k6n(4Z():I"b*@H%f`(E'=PjqtRr?TjPVD671FpEr7d3%R*+"^BdY%gF'g)*<aR$<f3b69gD9AUe'J'R=/GiNQiHp\gRio*hL>IIT>#^Kq]C=dgUBDp?U&r:nuEj^rT1f^^[Jo.o?Y2Om8*a&%^n6+fO85iclg8':b1hE[os_]Ms1[@hn^jDqgE6CagHY\Ts5E&58,ENdrr5,aqd3.mrEk$MmOs#Hrok4`rqcL6rqjl7J,6(8^AI>:%J,%9T^\d8NJ,-Q,5CNCQmsb%m05j)Qpu?:Bs24<?r;6GBhL>(FQf$V3rUTZoJ,\hb!kEdnLO]'S0E1+#TDf'E?4<%~>%AI9_PrivateDataEnd